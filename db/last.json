[
    {
        "Modified": "2024-05-22T15:15:00",
        "Published": "2024-05-22T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33218",
        "impact": {},
        "last-modified": "2024-05-22T15:15:00",
        "references": [
            "https://github.com/DriverHunter/Win-Driver-EXP/tree/main/CVE-2024-33218"
        ],
        "summary": "An issue in the component AsUpIO64.sys of ASUSTeK Computer Inc ASUS USB 3.0 Boost Storage Driver 5.30.20.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests."
    },
    {
        "Modified": "2024-05-22T15:15:00",
        "Published": "2024-05-22T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33219",
        "impact": {},
        "last-modified": "2024-05-22T15:15:00",
        "references": [
            "https://github.com/DriverHunter/Win-Driver-EXP/tree/main/CVE-2024-33219"
        ],
        "summary": "An issue in the component AsIO64.sys of ASUSTeK Computer Inc ASUS SABERTOOTH X99 Driver v1.0.1.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests."
    },
    {
        "Modified": "2024-05-22T15:15:00",
        "Published": "2024-05-22T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33220",
        "impact": {},
        "last-modified": "2024-05-22T15:15:00",
        "references": [
            "https://github.com/DriverHunter/Win-Driver-EXP/tree/main/CVE-2024-33220"
        ],
        "summary": "An issue in the component AslO3_64.sys of ASUSTeK Computer Inc AISuite3 v3.03.36 3.03.36 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests."
    },
    {
        "Modified": "2024-05-22T15:15:00",
        "Published": "2024-05-22T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33221",
        "impact": {},
        "last-modified": "2024-05-22T15:15:00",
        "references": [
            "https://github.com/DriverHunter/Win-Driver-EXP/tree/main/CVE-2024-33221"
        ],
        "summary": "An issue in the component AsusBSItf.sys of ASUSTeK Computer Inc ASUS BIOS Flash Driver v3.2.12.0 allows attackers to escalate privileges and execute arbitrary code via sending crafted IOCTL requests."
    },
    {
        "Modified": "2024-05-22T15:15:00",
        "Published": "2024-05-22T15:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3926",
        "impact": {},
        "last-modified": "2024-05-22T15:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f931cf8e-01dd-4f0b-ac86-6e0654fd1597?source=cve",
            "https://plugins.trac.wordpress.org/browser/bdthemes-element-pack-lite/tags/5.6.0/modules/creative-button/widgets/creative-button.php#L648",
            "https://plugins.trac.wordpress.org/changeset/3066178"
        ],
        "summary": "The Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid & Carousel, Remote Arrows) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the custom_attributes value in widgets in all versions up to, and including, 5.6.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35475",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/carsonchan12345/OpenKM-CSRF-PoC"
        ],
        "summary": "A Cross-Site Request Forgery (CSRF) vulnerability was discovered in OpenKM Community Edition on or before version 6.3.12. The vulnerability exists in /admin/DatabaseQuery, which allows an attacker to manipulate a victim with administrative privileges to execute arbitrary SQL commands."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35550",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/17/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=rev."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35409",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/ixpqxi/CVE_LIST/blob/master/WeBid_sqli/WeBid_v1.1.2_sql_injection_vulnerability.md"
        ],
        "summary": "WeBid 1.1.2 is vulnerable to SQL Injection via admin/tax.php."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35551",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/16/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=add."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35552",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/20/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=del&dataType=logo&dataTypeCN."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35553",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/21/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=add&nohrefStr=close."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35554",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/19/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoWeb_deal.php?mudi=del&dataType=newsWeb&dataTypeCN."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35555",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/18/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/share_switch.php?mudi=switch&dataType=newsWeb&fieldName=state&fieldName2=state&tabName=infoWeb&dataID=40."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35556",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/26/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsSys_deal.php?mudi=infoSet."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35557",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/27/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/vpsApi_deal.php?mudi=rev&nohrefStr=close."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35558",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/24/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=rev&nohrefStr=close."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35559",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/22/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/infoMove_deal.php?mudi=rev&nohrefStr=close."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35560",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/25/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=del&dataType=&dataTypeCN."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35561",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://github.com/bearman113/1.md/blob/main/23/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ca_deal.php?mudi=add&nohrefStr=close."
    },
    {
        "Modified": "2024-05-22T14:30:00",
        "Published": "2024-05-22T13:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4261",
        "impact": {},
        "last-modified": "2024-05-22T14:30:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/858d8641-7455-47c2-9639-480ce4ec3540?source=cve",
            "https://plugins.trac.wordpress.org/browser/lead-form-builder/trunk/block/app.php#L24"
        ],
        "summary": "The Responsive Contact Form Builder & Lead Generation Plugin plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 1.9.1. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for authenticated attackers, with subscriber-level access and above, to execute arbitrary shortcodes."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36010",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/c56d055893cbe97848611855d1c97d0ab171eccc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Fix string truncation warnings in igb_set_fw_version\n\nCommit 1978d3ead82c (\"intel: fix string truncation warnings\")\nfixes '-Wformat-truncation=' warnings in igb_main.c by using kasprintf.\n\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:53: warning?\u2018%d\u2019 directive output may be truncated writing between 1 and 5 bytes into a region of size between 1 and 13 [-Wformat-truncation=]\n 3092 |                                  \"%d.%d, 0x%08x, %d.%d.%d\",\n      |                                                     ^~\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:34: note?directive argument in the range [0, 65535]\n 3092 |                                  \"%d.%d, 0x%08x, %d.%d.%d\",\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:34: note?directive argument in the range [0, 65535]\ndrivers/net/ethernet/intel/igb/igb_main.c:3090:25: note?\u2018snprintf\u2019 output between 23 and 43 bytes into a destination of size 32\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.\n\nFix this warning by using a larger space for adapter->fw_version,\nand then fall back and continue to use snprintf."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T12:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5196",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://vuldb.com/?id.265833",
            "https://vuldb.com/?ctiid.265833",
            "https://vuldb.com/?submit.335254",
            "https://github.com/h0e4a0r1t/h0e4a0r1t.github.io/blob/master/2024/a%2B%26%5BE4%3Flp5%3Fk9_%3D%5D/ARRIS_VAP2500-RCE-tools_command.php.pdf"
        ],
        "summary": "A vulnerability classified as critical has been found in Arris VAP2500 08.50. This affects an unknown part of the file /tools_command.php. The manipulation of the argument cmb_header/txt_command leads to command injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265833 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T10:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-475",
        "id": "CVE-2024-4153",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://huntr.com/bounties/336db0ae-fe33-44b9-ba9d-bf117e0d90c4"
        ],
        "summary": "A vulnerability in lunary-ai/lunary version 1.2.2 allows attackers to bypass user creation limits and potentially evade payment requirements. The issue arises from an undefined behavior when handling input to the API, specifically through a POST request to the /v1/users endpoint. By crafting a request with a new user's email and assigning them an 'admin' role, attackers can invite additional users beyond the set limit. This vulnerability could be exploited to add an unlimited number of users without adhering to the intended restrictions."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T11:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-93",
        "id": "CVE-2024-5193",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://vuldb.com/?id.265830",
            "https://vuldb.com/?ctiid.265830",
            "https://vuldb.com/?submit.333059",
            "https://github.com/DMCERTCE/CRLF_Tiny"
        ],
        "summary": "A vulnerability was found in Ritlabs TinyWeb Server 1.94. It has been classified as problematic. Affected is an unknown function of the component Request Handler. The manipulation with the input %0D%0A leads to crlf injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-265830 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T11:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-77",
        "id": "CVE-2024-5194",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://vuldb.com/?id.265831",
            "https://vuldb.com/?ctiid.265831",
            "https://vuldb.com/?submit.335252",
            "https://github.com/h0e4a0r1t/h0e4a0r1t.github.io/blob/master/2024/a%2B%26%5BE4%3Flp5%3Fk9_%3D%5D/ARRIS_VAP2500-RCE-assoc_table.php.pdf"
        ],
        "summary": "A vulnerability was found in Arris VAP2500 08.50. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /assoc_table.php. The manipulation of the argument id leads to command injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265831."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T11:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-77",
        "id": "CVE-2024-5195",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://vuldb.com/?id.265832",
            "https://vuldb.com/?ctiid.265832",
            "https://vuldb.com/?submit.335253",
            "https://github.com/h0e4a0r1t/h0e4a0r1t.github.io/blob/master/2024/a%2B%26%5BE4%3Flp5%3Fk9_%3D%5D/ARRIS_VAP2500-RCE-diag_s.php.pdf"
        ],
        "summary": "A vulnerability was found in Arris VAP2500 08.50. It has been rated as critical. Affected by this issue is some unknown functionality of the file /diag_s.php. The manipulation of the argument customer_info leads to command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265832."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T10:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4262",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/812cc8f1-f89e-47c4-b029-f6a3dbc55d70?source=cve",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3088562%40piotnet-addons-for-elementor&old=3048934%40piotnet-addons-for-elementor&sfp_email=&sfph_mail="
        ],
        "summary": "The Piotnet Addons For Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple widgets in all versions up to, and including, 2.4.28 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-30419",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://developer.a-blogcms.jp/blog/news/JVN-70977403.html",
            "https://jvn.jp/en/jp/JVN70977403/"
        ],
        "summary": "Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with a contributor or higher privilege who can log in to the product may execute an arbitrary script on the web browser of the user who accessed the website using the product."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31395",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://developer.a-blogcms.jp/blog/news/JVN-70977403.html",
            "https://jvn.jp/en/jp/JVN70977403/"
        ],
        "summary": "Cross-site scripting vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with an editor or higher privilege who can log in to the product may execute an arbitrary script on the web browser of the user who accessed the schedule management page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31394",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://developer.a-blogcms.jp/blog/news/JVN-70977403.html",
            "https://jvn.jp/en/jp/JVN70977403/"
        ],
        "summary": "Directory traversal vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12, Ver.3.0.x series versions prior to Ver.3.0.32, Ver.2.11.x series versions prior to Ver.2.11.61, Ver.2.10.x series versions prior to Ver.2.10.53, and Ver.2.9 and earlier versions. If this vulnerability is exploited, a user with an editor or higher privilege who can log in to the product may obtain arbitrary files on the server."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-30420",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://developer.a-blogcms.jp/blog/news/JVN-70977403.html",
            "https://jvn.jp/en/jp/JVN70977403/"
        ],
        "summary": "Server-side request forgery (SSRF) vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series versions prior to Ver.3.0.32. If this vulnerability is exploited, a user with an administrator or higher privilege who can log in to the product may obtain arbitrary files on the server and information on the internal server that is not disclosed to the public."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3611",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/50631f6c-de8b-408e-ab1f-ef74d3180e7f?source=cve",
            "https://wordpress.org/plugins/toolbar-extras/#developers"
        ],
        "summary": "The Toolbar Extras for Elementor & More \u2013 WordPress Admin Bar Enhanced plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'tbex-version' shortcode in all versions up to, and including, 1.4.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5092",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/7ab3e286-05db-430e-bbe7-bfaa31134c3c?source=cve",
            "https://plugins.trac.wordpress.org/browser/elegant-addons-for-elementor/trunk/widgets/eae-switcher.php#L516",
            "https://plugins.trac.wordpress.org/browser/elegant-addons-for-elementor/trunk/widgets/eae-slider.php#L1091",
            "https://plugins.trac.wordpress.org/browser/elegant-addons-for-elementor/trunk/widgets/eae-iconbox.php#L1667"
        ],
        "summary": "The Elegant Addons for elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Switcher, Slider, and Iconbox widgets in all versions up to, and including, 1.0.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3066",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/affa8b39-94b8-474d-9310-a93ebdb7c1b8?source=cve",
            "https://wordpress.org/plugins/elegant-addons-for-elementor/"
        ],
        "summary": "The Elegant Addons for elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 1.0.8 due to insufficient input sanitization and output escaping on user supplied tag attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4971",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/10b08a05-3561-4d05-985b-6a2339a547a7?source=cve",
            "https://wordpress.org/plugins/learnpress/#developers"
        ],
        "summary": "The LearnPress \u2013 WordPress LMS Plugin plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the \u2018id\u2019 parameter in all versions up to, and including, 4.2.6.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47440",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/66358471fa75a713fd76bc8a4bd74cb14cd50a4f",
            "https://git.kernel.org/stable/c/f043fac1133a6c5ef960a8422c0f6dd711dee462",
            "https://git.kernel.org/stable/c/fddc7f678d7fb93caa0d7bc512f968ff1e2bddbc",
            "https://git.kernel.org/stable/c/5e5494e6fc8a29c927e0478bec4a078a40da8901",
            "https://git.kernel.org/stable/c/4c2eb80fc90b05559ce6ed1b8dfb2348420b5644",
            "https://git.kernel.org/stable/c/e19c10d6e07c59c96e90fe053a72683ad8b0397e",
            "https://git.kernel.org/stable/c/322c0e53496309e634d9db7349678eaad1d25b55",
            "https://git.kernel.org/stable/c/f03dca0c9e2297c84a018e306f8a9cd534ee4287"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: encx24j600: check error in devm_regmap_init_encx24j600\n\ndevm_regmap_init may return error which caused by like out of memory,\nthis will results in null pointer dereference later when reading\nor writing register:\n\ngeneral protection fault in encx24j600_spi_probe\nKASAN: null-ptr-deref in range [0x0000000000000090-0x0000000000000097]\nCPU: 0 PID: 286 Comm: spi-encx24j600- Not tainted 5.15.0-rc2-00142-g9978db750e31-dirty #11 9c53a778c1306b1b02359f3c2bbedc0222cba652\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\nRIP: 0010:regcache_cache_bypass drivers/base/regmap/regcache.c:540\nCode: 54 41 89 f4 55 53 48 89 fb 48 83 ec 08 e8 26 94 a8 fe 48 8d bb a0 00 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 4a 03 00 00 4c 8d ab b0 00 00 00 48 8b ab a0 00\nRSP: 0018:ffffc900010476b8 EFLAGS: 00010207\nRAX: dffffc0000000000 RBX: fffffffffffffff4 RCX: 0000000000000000\nRDX: 0000000000000012 RSI: ffff888002de0000 RDI: 0000000000000094\nRBP: ffff888013c9a000 R08: 0000000000000000 R09: fffffbfff3f9cc6a\nR10: ffffc900010476e8 R11: fffffbfff3f9cc69 R12: 0000000000000001\nR13: 000000000000000a R14: ffff888013c9af54 R15: ffff888013c9ad08\nFS:  00007ffa984ab580(0000) GS:ffff88801fe00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055a6384136c8 CR3: 000000003bbe6003 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n encx24j600_spi_probe drivers/net/ethernet/microchip/encx24j600.c:459\n spi_probe drivers/spi/spi.c:397\n really_probe drivers/base/dd.c:517\n __driver_probe_device drivers/base/dd.c:751\n driver_probe_device drivers/base/dd.c:782\n __device_attach_driver drivers/base/dd.c:899\n bus_for_each_drv drivers/base/bus.c:427\n __device_attach drivers/base/dd.c:971\n bus_probe_device drivers/base/bus.c:487\n device_add drivers/base/core.c:3364\n __spi_add_device drivers/spi/spi.c:599\n spi_add_device drivers/spi/spi.c:641\n spi_new_device drivers/spi/spi.c:717\n new_device_store+0x18c/0x1f1 [spi_stub 4e02719357f1ff33f5a43d00630982840568e85e]\n dev_attr_store drivers/base/core.c:2074\n sysfs_kf_write fs/sysfs/file.c:139\n kernfs_fop_write_iter fs/kernfs/file.c:300\n new_sync_write fs/read_write.c:508 (discriminator 4)\n vfs_write fs/read_write.c:594\n ksys_write fs/read_write.c:648\n do_syscall_64 arch/x86/entry/common.c:50\n entry_SYSCALL_64_after_hwframe arch/x86/entry/entry_64.S:113\n\nAdd error check in devm_regmap_init_encx24j600 to avoid this situation."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47443",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/429054ec51e648d241a7e0b465cf44f6633334c5",
            "https://git.kernel.org/stable/c/a67d47e32c91e2b10402cb8c081774cbf08edb2e",
            "https://git.kernel.org/stable/c/b7b023e6ff567e991c31cd425b0e1d16779c938b",
            "https://git.kernel.org/stable/c/9881b0c860649f27ef2565deef011e516390f416",
            "https://git.kernel.org/stable/c/7ab488d7228a9dceb2456867f1f0919decf6efed",
            "https://git.kernel.org/stable/c/3f2960b39f22e26cf8addae93c3f5884d1c183c9",
            "https://git.kernel.org/stable/c/564249219e5b5673a8416b5181875d828c3f1e8c",
            "https://git.kernel.org/stable/c/58e7dcc9ca29c14e44267a4d0ea61e3229124907"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: digital: fix possible memory leak in digital_tg_listen_mdaa()\n\n'params' is allocated in digital_tg_listen_mdaa(), but not free when\ndigital_send_cmd() failed, which will cause memory leak. Fix it by\nfreeing 'params' if digital_send_cmd() return failed."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47442",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/74569c78aa84f8c958f1334b465bc530906ec99a",
            "https://git.kernel.org/stable/c/88c890b0b9a1fb9fcd01c61ada515e8b636c34f9",
            "https://git.kernel.org/stable/c/fcce6e5255474ca33c27dda0cdf9bf5087278873",
            "https://git.kernel.org/stable/c/071bdef36391958c89af5fa2172f691b31baa212",
            "https://git.kernel.org/stable/c/2bde4aca56db9fe25405d39ddb062531493a65db",
            "https://git.kernel.org/stable/c/50cb95487c265187289810addec5093d4fed8329",
            "https://git.kernel.org/stable/c/6432d7f1d1c3aa74cfe8f5e3afdf81b786c32e86",
            "https://git.kernel.org/stable/c/291c932fc3692e4d211a445ba8aa35663831bac7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: digital: fix possible memory leak in digital_in_send_sdd_req()\n\n'skb' is allocated in digital_in_send_sdd_req(), but not free when\ndigital_in_send_cmd() failed, which will cause memory leak. Fix it\nby freeing 'skb' if digital_in_send_cmd() return failed."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47446",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/3962d626eb3e3b23ebb2e2a61537fa764acbfe11",
            "https://git.kernel.org/stable/c/980d74e7d03ccf2eaa11d133416946bd880c7c08"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/a4xx: fix error handling in a4xx_gpu_init()\n\nThis code returns 1 on error instead of a negative error.  It leads to\nan Oops in the caller.  A second problem is that the check for\n\"if (ret != -ENODATA)\" cannot be true because \"ret\" is set to 1."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47444",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/a7b45024f66f9ec769e8dbb1a51ae83cd05929c7",
            "https://git.kernel.org/stable/c/09f3946bb452918dbfb1982add56f9ffaae393dc",
            "https://git.kernel.org/stable/c/97794170b696856483f74b47bfb6049780d2d3a0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/edid: In connector_bad_edid() cap num_of_ext by num_blocks read\n\nIn commit e11f5bd8228f (\"drm: Add support for DP 1.4 Compliance edid\ncorruption test\") the function connector_bad_edid() started assuming\nthat the memory for the EDID passed to it was big enough to hold\n`edid[0x7e] + 1` blocks of data (1 extra for the base block). It\ncompletely ignored the fact that the function was passed `num_blocks`\nwhich indicated how much memory had been allocated for the EDID.\n\nLet's fix this by adding a bounds check.\n\nThis is important for handling the case where there's an error in the\nfirst block of the EDID. In that case we will call\nconnector_bad_edid() without having re-allocated memory based on\n`edid[0x7e]`."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47452",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/90c7c58aa2bd02c65a4c63b7dfe0b16eab12cf9f",
            "https://git.kernel.org/stable/c/68a3765c659f809dcaac20030853a054646eb739"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: skip netdev events generated on netns removal\n\nsyzbot reported following (harmless) WARN:\n\n WARNING: CPU: 1 PID: 2648 at net/netfilter/core.c:468\n  nft_netdev_unregister_hooks net/netfilter/nf_tables_api.c:230 [inline]\n  nf_tables_unregister_hook include/net/netfilter/nf_tables.h:1090 [inline]\n  __nft_release_basechain+0x138/0x640 net/netfilter/nf_tables_api.c:9524\n  nft_netdev_event net/netfilter/nft_chain_filter.c:351 [inline]\n  nf_tables_netdev_event+0x521/0x8a0 net/netfilter/nft_chain_filter.c:382\n\nreproducer:\nunshare -n bash -c 'ip link add br0 type bridge; nft add table netdev t ; \\\n nft add chain netdev t ingress \\{ type filter hook ingress device \"br0\" \\\n priority 0\\; policy drop\\; \\}'\n\nProblem is that when netns device exit hooks create the UNREGISTER\nevent, the .pre_exit hook for nf_tables core has already removed the\nbase hook.  Notifier attempts to do this again.\n\nThe need to do base hook unregister unconditionally was needed in the past,\nbecause notifier was last stage where reg->dev dereference was safe.\n\nNow that nf_tables does the hook removal in .pre_exit, this isn't\nneeded anymore."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47454",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/53770a411559cf7bc0906d1df319cc533d2f4f58",
            "https://git.kernel.org/stable/c/3ea0b497a7a2fff6a4b7090310c9f52c91975934",
            "https://git.kernel.org/stable/c/787252a10d9422f3058df9a4821f389e5326c440"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/smp: do not decrement idle task preempt count in CPU offline\n\nWith PREEMPT_COUNT=y, when a CPU is offlined and then onlined again, we\nget:\n\nBUG: scheduling while atomic: swapper/1/0/0x00000000\nno locks held by swapper/1/0.\nCPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.15.0-rc2+ #100\nCall Trace:\n dump_stack_lvl+0xac/0x108\n __schedule_bug+0xac/0xe0\n __schedule+0xcf8/0x10d0\n schedule_idle+0x3c/0x70\n do_idle+0x2d8/0x4a0\n cpu_startup_entry+0x38/0x40\n start_secondary+0x2ec/0x3a0\n start_secondary_prolog+0x10/0x14\n\nThis is because powerpc's arch_cpu_idle_dead() decrements the idle task's\npreempt count, for reasons explained in commit a7c2bb8279d2 (\"powerpc:\nRe-enable preemption before cpu_die()\"), specifically \"start_secondary()\nexpects a preempt_count() of 0.\"\n\nHowever, since commit 2c669ef6979c (\"powerpc/preempt: Don't touch the idle\ntask's preempt_count during hotplug\") and commit f1a0a376ca0c (\"sched/core:\nInitialize the idle task with preemption disabled\"), that justification no\nlonger holds.\n\nThe idle task isn't supposed to re-enable preemption, so remove the\nvestigial preempt_enable() from the CPU offline path.\n\nTested with pseries and powernv in qemu, and pseries on PowerVM."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47459",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/a0e47d2833b4f65e6c799f28c6b636d36b8b936d",
            "https://git.kernel.org/stable/c/864e77771a24c877aaf53aee019f78619cbcd668",
            "https://git.kernel.org/stable/c/6e8811707e2df0c6ba920f0cad3a3bca7b42132f",
            "https://git.kernel.org/stable/c/d9d52a3ebd284882f5562c88e55991add5d01586"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: j1939_netdev_start(): fix UAF for rx_kref of j1939_priv\n\nIt will trigger UAF for rx_kref of j1939_priv as following.\n\n        cpu0                                    cpu1\nj1939_sk_bind(socket0, ndev0, ...)\nj1939_netdev_start\n                                        j1939_sk_bind(socket1, ndev0, ...)\n                                        j1939_netdev_start\nj1939_priv_set\n                                        j1939_priv_get_by_ndev_locked\nj1939_jsk_add\n.....\nj1939_netdev_stop\nkref_put_lock(&priv->rx_kref, ...)\n                                        kref_get(&priv->rx_kref, ...)\n                                        REFCOUNT_WARN(\"addition on 0;...\")\n\n====================================================\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 1 PID: 20874 at lib/refcount.c:25 refcount_warn_saturate+0x169/0x1e0\nRIP: 0010:refcount_warn_saturate+0x169/0x1e0\nCall Trace:\n j1939_netdev_start+0x68b/0x920\n j1939_sk_bind+0x426/0xeb0\n ? security_socket_bind+0x83/0xb0\n\nThe rx_kref's kref_get() and kref_put() should use j1939_netdev_lock to\nprotect."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47451",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/2a670c323055282c9b72794a491d53cef86bbeaf",
            "https://git.kernel.org/stable/c/cae7cab804c943d723d52724a3aeb07a3f4a2650",
            "https://git.kernel.org/stable/c/902c0b1887522a099aa4e1e6b4b476c2fe5dd13e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: xt_IDLETIMER: fix panic that occurs when timer_type has garbage value\n\nCurrently, when the rule related to IDLETIMER is added, idletimer_tg timer\nstructure is initialized by kmalloc on executing idletimer_tg_create\nfunction. However, in this process timer->timer_type is not defined to\na specific value. Thus, timer->timer_type has garbage value and it occurs\nkernel panic. So, this commit fixes the panic by initializing\ntimer->timer_type using kzalloc instead of kmalloc.\n\nTest commands:\n    # iptables -A OUTPUT -j IDLETIMER --timeout 1 --label test\n    $ cat /sys/class/xt_idletimer/timers/test\n      Killed\n\nSplat looks like:\n    BUG: KASAN: user-memory-access in alarm_expires_remaining+0x49/0x70\n    Read of size 8 at addr 0000002e8c7bc4c8 by task cat/917\n    CPU: 12 PID: 917 Comm: cat Not tainted 5.14.0+ #3 79940a339f71eb14fc81aee1757a20d5bf13eb0e\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n    Call Trace:\n     dump_stack_lvl+0x6e/0x9c\n     kasan_report.cold+0x112/0x117\n     ? alarm_expires_remaining+0x49/0x70\n     __asan_load8+0x86/0xb0\n     alarm_expires_remaining+0x49/0x70\n     idletimer_tg_show+0xe5/0x19b [xt_IDLETIMER 11219304af9316a21bee5ba9d58f76a6b9bccc6d]\n     dev_attr_show+0x3c/0x60\n     sysfs_kf_seq_show+0x11d/0x1f0\n     ? device_remove_bin_file+0x20/0x20\n     kernfs_seq_show+0xa4/0xb0\n     seq_read_iter+0x29c/0x750\n     kernfs_fop_read_iter+0x25a/0x2c0\n     ? __fsnotify_parent+0x3d1/0x570\n     ? iov_iter_init+0x70/0x90\n     new_sync_read+0x2a7/0x3d0\n     ? __x64_sys_llseek+0x230/0x230\n     ? rw_verify_area+0x81/0x150\n     vfs_read+0x17b/0x240\n     ksys_read+0xd9/0x180\n     ? vfs_write+0x460/0x460\n     ? do_syscall_64+0x16/0xc0\n     ? lockdep_hardirqs_on+0x79/0x120\n     __x64_sys_read+0x43/0x50\n     do_syscall_64+0x3b/0xc0\n     entry_SYSCALL_64_after_hwframe+0x44/0xae\n    RIP: 0033:0x7f0cdc819142\n    Code: c0 e9 c2 fe ff ff 50 48 8d 3d 3a ca 0a 00 e8 f5 19 02 00 0f 1f 44 00 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 <48> 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 ec 28 48 89 54 24\n    RSP: 002b:00007fff28eee5b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n    RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f0cdc819142\n    RDX: 0000000000020000 RSI: 00007f0cdc032000 RDI: 0000000000000003\n    RBP: 00007f0cdc032000 R08: 00007f0cdc031010 R09: 0000000000000000\n    R10: 0000000000000022 R11: 0000000000000246 R12: 00005607e9ee31f0\n    R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47453",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/777682e59840e24e6c5672197e6ffbcf4bff823b",
            "https://git.kernel.org/stable/c/73e30a62b19b9fbb4e6a3465c59da186630d5f2e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Avoid crash from unnecessary IDA free\n\nIn the remove path, there is an attempt to free the aux_idx IDA whether\nit was allocated or not.  This can potentially cause a crash when\nunloading the driver on systems that do not initialize support for RDMA.\nBut, this free cannot be gated by the status bit for RDMA, since it is\nallocated if the driver detects support for RDMA at probe time, but the\ndriver can enter into a state where RDMA is not supported after the IDA\nhas been allocated at probe time and this would lead to a memory leak.\n\nInitialize aux_idx to an invalid value and check for a valid value when\nunloading to determine if an IDA free is necessary."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47456",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/1c616528ba4aeb1125a06b407572ab7b56acae38",
            "https://git.kernel.org/stable/c/447d44cd2f67a20b596ede3ca3cd67086dfd9ca9",
            "https://git.kernel.org/stable/c/34914971bb3244db4ce2be44e9438a9b30c56250",
            "https://git.kernel.org/stable/c/adbda14730aacce41c0d3596415aa39ad63eafd9",
            "https://git.kernel.org/stable/c/1248582e47a9f7ce0ecd156c39fc61f8b6aa3699",
            "https://git.kernel.org/stable/c/28f28e4bc3a5e0051faa963f10b778ab38c1db69",
            "https://git.kernel.org/stable/c/0e5afdc2315b0737edcf55bede4ee1640d2d464d",
            "https://git.kernel.org/stable/c/949fe9b35570361bc6ee2652f89a0561b26eec98"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: peak_pci: peak_pci_remove(): fix UAF\n\nWhen remove the module peek_pci, referencing 'chan' again after\nreleasing 'dev' will cause UAF.\n\nFix this by releasing 'dev' later.\n\nThe following log reveals it:\n\n[   35.961814 ] BUG: KASAN: use-after-free in peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.963414 ] Read of size 8 at addr ffff888136998ee8 by task modprobe/5537\n[   35.965513 ] Call Trace:\n[   35.965718 ]  dump_stack_lvl+0xa8/0xd1\n[   35.966028 ]  print_address_description+0x87/0x3b0\n[   35.966420 ]  kasan_report+0x172/0x1c0\n[   35.966725 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.967137 ]  ? trace_irq_enable_rcuidle+0x10/0x170\n[   35.967529 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.967945 ]  __asan_report_load8_noabort+0x14/0x20\n[   35.968346 ]  peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.968752 ]  pci_device_remove+0xa9/0x250"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47458",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/ac011cb3ff7a76b3e0e6e77158ee4ba2f929e1fb",
            "https://git.kernel.org/stable/c/4b74ddcc22ee6455946e80a9c4808801f8f8561e",
            "https://git.kernel.org/stable/c/232ed9752510de4436468b653d145565669c8498",
            "https://git.kernel.org/stable/c/7623b1035ca2d17bde0f6a086ad6844a34648df1",
            "https://git.kernel.org/stable/c/d3a83576378b4c904f711598dde2c5e881c4295c",
            "https://git.kernel.org/stable/c/93be0eeea14cf39235e585c8f56df3b3859deaad",
            "https://git.kernel.org/stable/c/0e677ea5b7396f715a76b6b0ef441430e4c4b57f",
            "https://git.kernel.org/stable/c/b15fa9224e6e1239414525d8d556d824701849fc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: mount fails with buffer overflow in strlen\n\nStarting with kernel 5.11 built with CONFIG_FORTIFY_SOURCE mouting an\nocfs2 filesystem with either o2cb or pcmk cluster stack fails with the\ntrace below.  Problem seems to be that strings for cluster stack and\ncluster name are not guaranteed to be null terminated in the disk\nrepresentation, while strlcpy assumes that the source string is always\nnull terminated.  This causes a read outside of the source string\ntriggering the buffer overflow detection.\n\n  detected buffer overflow in strlen\n  ------------[ cut here ]------------\n  kernel BUG at lib/string.c:1149!\n  invalid opcode: 0000 [#1] SMP PTI\n  CPU: 1 PID: 910 Comm: mount.ocfs2 Not tainted 5.14.0-1-amd64 #1\n    Debian 5.14.6-2\n  RIP: 0010:fortify_panic+0xf/0x11\n  ...\n  Call Trace:\n   ocfs2_initialize_super.isra.0.cold+0xc/0x18 [ocfs2]\n   ocfs2_fill_super+0x359/0x19b0 [ocfs2]\n   mount_bdev+0x185/0x1b0\n   legacy_get_tree+0x27/0x40\n   vfs_get_tree+0x25/0xb0\n   path_mount+0x454/0xa20\n   __x64_sys_mount+0x103/0x140\n   do_syscall_64+0x3b/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47468",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/6f95c97e0f9d6eb39c3f2cb45e8fa4268d1b372b",
            "https://git.kernel.org/stable/c/ef269a8808cb1759245a98a7fe16fceaebad894c",
            "https://git.kernel.org/stable/c/37e4f57b22cc5ebb3f80cf0f74fdeb487f082367",
            "https://git.kernel.org/stable/c/a5b34409d3fc52114c828be4adbc30744fa3258b",
            "https://git.kernel.org/stable/c/4054b869dc263228d30a4755800b78f0f2ba0c89",
            "https://git.kernel.org/stable/c/9f591cbdbed3d7822b2bdba89b34a6d7b434317d",
            "https://git.kernel.org/stable/c/f5966ba53013149bcf94e1536644a958dd00a026",
            "https://git.kernel.org/stable/c/6510e80a0b81b5d814e3aea6297ba42f5e76f73c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nisdn: mISDN: Fix sleeping function called from invalid context\n\nThe driver can call card->isac.release() function from an atomic\ncontext.\n\nFix this by calling this function after releasing the lock.\n\nThe following log reveals it:\n\n[   44.168226 ] BUG: sleeping function called from invalid context at kernel/workqueue.c:3018\n[   44.168941 ] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 5475, name: modprobe\n[   44.169574 ] INFO: lockdep is turned off.\n[   44.169899 ] irq event stamp: 0\n[   44.170160 ] hardirqs last  enabled at (0): [<0000000000000000>] 0x0\n[   44.170627 ] hardirqs last disabled at (0): [<ffffffff814209ed>] copy_process+0x132d/0x3e00\n[   44.171240 ] softirqs last  enabled at (0): [<ffffffff81420a1a>] copy_process+0x135a/0x3e00\n[   44.171852 ] softirqs last disabled at (0): [<0000000000000000>] 0x0\n[   44.172318 ] Preemption disabled at:\n[   44.172320 ] [<ffffffffa009b0a9>] nj_release+0x69/0x500 [netjet]\n[   44.174441 ] Call Trace:\n[   44.174630 ]  dump_stack_lvl+0xa8/0xd1\n[   44.174912 ]  dump_stack+0x15/0x17\n[   44.175166 ]  ___might_sleep+0x3a2/0x510\n[   44.175459 ]  ? nj_release+0x69/0x500 [netjet]\n[   44.175791 ]  __might_sleep+0x82/0xe0\n[   44.176063 ]  ? start_flush_work+0x20/0x7b0\n[   44.176375 ]  start_flush_work+0x33/0x7b0\n[   44.176672 ]  ? trace_irq_enable_rcuidle+0x85/0x170\n[   44.177034 ]  ? kasan_quarantine_put+0xaa/0x1f0\n[   44.177372 ]  ? kasan_quarantine_put+0xaa/0x1f0\n[   44.177711 ]  __flush_work+0x11a/0x1a0\n[   44.177991 ]  ? flush_work+0x20/0x20\n[   44.178257 ]  ? lock_release+0x13c/0x8f0\n[   44.178550 ]  ? __kasan_check_write+0x14/0x20\n[   44.178872 ]  ? do_raw_spin_lock+0x148/0x360\n[   44.179187 ]  ? read_lock_is_recursive+0x20/0x20\n[   44.179530 ]  ? __kasan_check_read+0x11/0x20\n[   44.179846 ]  ? do_raw_spin_unlock+0x55/0x900\n[   44.180168 ]  ? ____kasan_slab_free+0x116/0x140\n[   44.180505 ]  ? _raw_spin_unlock_irqrestore+0x41/0x60\n[   44.180878 ]  ? skb_queue_purge+0x1a3/0x1c0\n[   44.181189 ]  ? kfree+0x13e/0x290\n[   44.181438 ]  flush_work+0x17/0x20\n[   44.181695 ]  mISDN_freedchannel+0xe8/0x100\n[   44.182006 ]  isac_release+0x210/0x260 [mISDNipac]\n[   44.182366 ]  nj_release+0xf6/0x500 [netjet]\n[   44.182685 ]  nj_remove+0x48/0x70 [netjet]\n[   44.182989 ]  pci_device_remove+0xa9/0x250"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47465",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/80bbb0bc3a0288442f7fe6fc514f4ee1cb06ccb7",
            "https://git.kernel.org/stable/c/fbd724c49bead048ae9fc1a5b7bff2fb3e54f855",
            "https://git.kernel.org/stable/c/6d077c37c4643394b1bae9682da48164fc147ea8",
            "https://git.kernel.org/stable/c/9b4416c5095c20e110c82ae602c254099b83b72f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()\n\nIn commit 10d91611f426 (\"powerpc/64s: Reimplement book3s idle code in\nC\") kvm_start_guest() became idle_kvm_start_guest(). The old code\nallocated a stack frame on the emergency stack, but didn't use the\nframe to store anything, and also didn't store anything in its caller's\nframe.\n\nidle_kvm_start_guest() on the other hand is written more like a normal C\nfunction, it creates a frame on entry, and also stores CR/LR into its\ncallers frame (per the ABI). The problem is that there is no caller\nframe on the emergency stack.\n\nThe emergency stack for a given CPU is allocated with:\n\n  paca_ptrs[i]->emergency_sp = alloc_stack(limit, i) + THREAD_SIZE;\n\nSo emergency_sp actually points to the first address above the emergency\nstack allocation for a given CPU, we must not store above it without\nfirst decrementing it to create a frame. This is different to the\nregular kernel stack, paca->kstack, which is initialised to point at an\ninitial frame that is ready to use.\n\nidle_kvm_start_guest() stores the backchain, CR and LR all of which\nwrite outside the allocation for the emergency stack. It then creates a\nstack frame and saves the non-volatile registers. Unfortunately the\nframe it creates is not large enough to fit the non-volatiles, and so\nthe saving of the non-volatile registers also writes outside the\nemergency stack allocation.\n\nThe end result is that we corrupt whatever is at 0-24 bytes, and 112-248\nbytes above the emergency stack allocation.\n\nIn practice this has gone unnoticed because the memory immediately above\nthe emergency stack happens to be used for other stack allocations,\neither another CPUs mc_emergency_sp or an IRQ stack. See the order of\ncalls to irqstack_early_init() and emergency_stack_init().\n\nThe low addresses of another stack are the top of that stack, and so are\nonly used if that stack is under extreme pressue, which essentially\nnever happens in practice - and if it did there's a high likelyhood we'd\ncrash due to that stack overflowing.\n\nStill, we shouldn't be corrupting someone else's stack, and it is purely\nluck that we aren't corrupting something else.\n\nTo fix it we save CR/LR into the caller's frame using the existing r1 on\nentry, we then create a SWITCH_FRAME_SIZE frame (which has space for\npt_regs) on the emergency stack with the backchain pointing to the\nexisting stack, and then finally we switch to the new frame on the\nemergency stack."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47460",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/560edd14de2bf9dbc0129681eeb4d5ef87cc105f",
            "https://git.kernel.org/stable/c/8e6bfb4f70168ddfd32fb6dc028ad52faaf1f32e",
            "https://git.kernel.org/stable/c/a3a089c241cd49b33a8cdd7fcb37cc87a086912a",
            "https://git.kernel.org/stable/c/b05caf023b14cbed9223bb5b48ecc7bffe38f632",
            "https://git.kernel.org/stable/c/f1b98569e81c37d7e0deada7172f8f60860c1360",
            "https://git.kernel.org/stable/c/fa9b6b6c953e3f6441ed6cf83b4c771dac2dae08",
            "https://git.kernel.org/stable/c/5314454ea3ff6fc746eaf71b9a7ceebed52888fa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption after conversion from inline format\n\nCommit 6dbf7bb55598 (\"fs: Don't invalidate page buffers in\nblock_write_full_page()\") uncovered a latent bug in ocfs2 conversion\nfrom inline inode format to a normal inode format.\n\nThe code in ocfs2_convert_inline_data_to_extents() attempts to zero out\nthe whole cluster allocated for file data by grabbing, zeroing, and\ndirtying all pages covering this cluster.  However these pages are\nbeyond i_size, thus writeback code generally ignores these dirty pages\nand no blocks were ever actually zeroed on the disk.\n\nThis oversight was fixed by commit 693c241a5f6a (\"ocfs2: No need to zero\npages past i_size.\") for standard ocfs2 write path, inline conversion\npath was apparently forgotten; the commit log also has a reasoning why\nthe zeroing actually is not needed.\n\nAfter commit 6dbf7bb55598, things became worse as writeback code stopped\ninvalidating buffers on pages beyond i_size and thus these pages end up\nwith clean PageDirty bit but with buffers attached to these pages being\nstill dirty.  So when a file is converted from inline format, then\nwriteback triggers, and then the file is grown so that these pages\nbecome valid, the invalid dirtiness state is preserved,\nmark_buffer_dirty() does nothing on these pages (buffers are already\ndirty) but page is never written back because it is clean.  So data\nwritten to these pages is lost once pages are reclaimed.\n\nSimple reproducer for the problem is:\n\n  xfs_io -f -c \"pwrite 0 2000\" -c \"pwrite 2000 2000\" -c \"fsync\" \\\n    -c \"pwrite 4000 2000\" ocfs2_file\n\nAfter unmounting and mounting the fs again, you can observe that end of\n'ocfs2_file' has lost its contents.\n\nFix the problem by not doing the pointless zeroing during conversion\nfrom inline format similarly as in the standard write path.\n\n[akpm@linux-foundation.org: fix whitespace, per Joseph]"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47462",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/9ee4e9ae98f1f262d6fae0d266cfdf3ba2c321d9",
            "https://git.kernel.org/stable/c/6d2aec9e123bb9c49cb5c7fc654f25f81e688e8c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mempolicy: do not allow illegal MPOL_F_NUMA_BALANCING | MPOL_LOCAL in mbind()\n\nsyzbot reported access to unitialized memory in mbind() [1]\n\nIssue came with commit bda420b98505 (\"numa balancing: migrate on fault\namong multiple bound nodes\")\n\nThis commit added a new bit in MPOL_MODE_FLAGS, but only checked valid\ncombination (MPOL_F_NUMA_BALANCING can only be used with MPOL_BIND) in\ndo_set_mempolicy()\n\nThis patch moves the check in sanitize_mpol_flags() so that it is also\nused by mbind()\n\n  [1]\n  BUG: KMSAN: uninit-value in __mpol_equal+0x567/0x590 mm/mempolicy.c:2260\n   __mpol_equal+0x567/0x590 mm/mempolicy.c:2260\n   mpol_equal include/linux/mempolicy.h:105 [inline]\n   vma_merge+0x4a1/0x1e60 mm/mmap.c:1190\n   mbind_range+0xcc8/0x1e80 mm/mempolicy.c:811\n   do_mbind+0xf42/0x15f0 mm/mempolicy.c:1333\n   kernel_mbind mm/mempolicy.c:1483 [inline]\n   __do_sys_mbind mm/mempolicy.c:1490 [inline]\n   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486\n   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486\n   do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\n  Uninit was created at:\n   slab_alloc_node mm/slub.c:3221 [inline]\n   slab_alloc mm/slub.c:3230 [inline]\n   kmem_cache_alloc+0x751/0xff0 mm/slub.c:3235\n   mpol_new mm/mempolicy.c:293 [inline]\n   do_mbind+0x912/0x15f0 mm/mempolicy.c:1289\n   kernel_mbind mm/mempolicy.c:1483 [inline]\n   __do_sys_mbind mm/mempolicy.c:1490 [inline]\n   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486\n   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486\n   do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n  =====================================================\n  Kernel panic - not syncing: panic_on_kmsan set ...\n  CPU: 0 PID: 15049 Comm: syz-executor.0 Tainted: G    B             5.15.0-rc2-syzkaller #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n  Call Trace:\n   __dump_stack lib/dump_stack.c:88 [inline]\n   dump_stack_lvl+0x1ff/0x28e lib/dump_stack.c:106\n   dump_stack+0x25/0x28 lib/dump_stack.c:113\n   panic+0x44f/0xdeb kernel/panic.c:232\n   kmsan_report+0x2ee/0x300 mm/kmsan/report.c:186\n   __msan_warning+0xd7/0x150 mm/kmsan/instrumentation.c:208\n   __mpol_equal+0x567/0x590 mm/mempolicy.c:2260\n   mpol_equal include/linux/mempolicy.h:105 [inline]\n   vma_merge+0x4a1/0x1e60 mm/mmap.c:1190\n   mbind_range+0xcc8/0x1e80 mm/mempolicy.c:811\n   do_mbind+0xf42/0x15f0 mm/mempolicy.c:1333\n   kernel_mbind mm/mempolicy.c:1483 [inline]\n   __do_sys_mbind mm/mempolicy.c:1490 [inline]\n   __se_sys_mbind+0x437/0xb80 mm/mempolicy.c:1486\n   __x64_sys_mbind+0x19d/0x200 mm/mempolicy.c:1486\n   do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n   do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n   entry_SYSCALL_64_after_hwframe+0x44/0xae"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47472",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/fd2400dd4f1b8bd7a309b1b424d9e0d188151b01",
            "https://git.kernel.org/stable/c/b89f4537d7fdbd0bafb6d8a66a484e0bc99871a4",
            "https://git.kernel.org/stable/c/bc5f2f3431ced08300e4cb3aff35f1da14c26433",
            "https://git.kernel.org/stable/c/2bc10dca9432fadb09e45127e258fc7127fd346d",
            "https://git.kernel.org/stable/c/4ec0f9abc512cc02fb04daa89ccf6697e80ab417",
            "https://git.kernel.org/stable/c/fdbffd95c4ce94d2197c504008eaac46b16bc5a4",
            "https://git.kernel.org/stable/c/a9831afa2dc8a18205403907c41aa4e0950ac611",
            "https://git.kernel.org/stable/c/8121d0d4fd108280f5cd7b7fe8c6592adaa37be9",
            "https://git.kernel.org/stable/c/b0feaa8376f52357bf2fd020d0c471713a859728",
            "https://git.kernel.org/stable/c/6a18d155d5b35ad50c8fac2be091212487ae58ec",
            "https://git.kernel.org/stable/c/3a0dc2e35a5d6546b1db87fe985582dadc64fe7b",
            "https://git.kernel.org/stable/c/c828115a14eacbf42042770fd68543f134e89efa",
            "https://git.kernel.org/stable/c/0c4e87ba11eb331dca2315d484d08441b8c13193",
            "https://git.kernel.org/stable/c/8ba94a7f7b9fc2a2b808ccceb99b77135deae21a",
            "https://git.kernel.org/stable/c/ab609f25d19858513919369ff3d9a63c02cd9e2e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdiobus: Fix memory leak in __mdiobus_register\n\nOnce device_register() failed, we should call put_device() to\ndecrement reference count for cleanup. Or it will cause memory\nleak.\n\nBUG: memory leak\nunreferenced object 0xffff888114032e00 (size 256):\n  comm \"kworker/1:3\", pid 2960, jiffies 4294943572 (age 15.920s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 08 2e 03 14 81 88 ff ff  ................\n    08 2e 03 14 81 88 ff ff 90 76 65 82 ff ff ff ff  .........ve.....\n  backtrace:\n    [<ffffffff8265cfab>] kmalloc include/linux/slab.h:591 [inline]\n    [<ffffffff8265cfab>] kzalloc include/linux/slab.h:721 [inline]\n    [<ffffffff8265cfab>] device_private_init drivers/base/core.c:3203 [inline]\n    [<ffffffff8265cfab>] device_add+0x89b/0xdf0 drivers/base/core.c:3253\n    [<ffffffff828dd643>] __mdiobus_register+0xc3/0x450 drivers/net/phy/mdio_bus.c:537\n    [<ffffffff828cb835>] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87\n    [<ffffffff82b92a00>] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]\n    [<ffffffff82b92a00>] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786\n    [<ffffffff82baa33f>] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745\n    [<ffffffff82c36e17>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396\n    [<ffffffff82661d17>] call_driver_probe drivers/base/dd.c:517 [inline]\n    [<ffffffff82661d17>] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596\n    [<ffffffff826620bc>] really_probe drivers/base/dd.c:558 [inline]\n    [<ffffffff826620bc>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751\n    [<ffffffff826621ba>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781\n    [<ffffffff82662a26>] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898\n    [<ffffffff8265eca7>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427\n    [<ffffffff826625a2>] __device_attach+0x122/0x260 drivers/base/dd.c:969\n    [<ffffffff82660916>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:487\n    [<ffffffff8265cd0b>] device_add+0x5fb/0xdf0 drivers/base/core.c:3359\n    [<ffffffff82c343b9>] usb_set_configuration+0x9d9/0xb90 drivers/usb/core/message.c:2170\n    [<ffffffff82c4473c>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238\n\nBUG: memory leak\nunreferenced object 0xffff888116f06900 (size 32):\n  comm \"kworker/0:2\", pid 2670, jiffies 4294944448 (age 7.160s)\n  hex dump (first 32 bytes):\n    75 73 62 2d 30 30 31 3a 30 30 33 00 00 00 00 00  usb-001:003.....\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff81484516>] kstrdup+0x36/0x70 mm/util.c:60\n    [<ffffffff814845a3>] kstrdup_const+0x53/0x80 mm/util.c:83\n    [<ffffffff82296ba2>] kvasprintf_const+0xc2/0x110 lib/kasprintf.c:48\n    [<ffffffff82358d4b>] kobject_set_name_vargs+0x3b/0xe0 lib/kobject.c:289\n    [<ffffffff826575f3>] dev_set_name+0x63/0x90 drivers/base/core.c:3147\n    [<ffffffff828dd63b>] __mdiobus_register+0xbb/0x450 drivers/net/phy/mdio_bus.c:535\n    [<ffffffff828cb835>] __devm_mdiobus_register+0x75/0xf0 drivers/net/phy/mdio_devres.c:87\n    [<ffffffff82b92a00>] ax88772_init_mdio drivers/net/usb/asix_devices.c:676 [inline]\n    [<ffffffff82b92a00>] ax88772_bind+0x330/0x480 drivers/net/usb/asix_devices.c:786\n    [<ffffffff82baa33f>] usbnet_probe+0x3ff/0xdf0 drivers/net/usb/usbnet.c:1745\n    [<ffffffff82c36e17>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396\n    [<ffffffff82661d17>] call_driver_probe drivers/base/dd.c:517 [inline]\n    [<ffffffff82661d17>] really_probe.part.0+0xe7/0x380 drivers/base/dd.c:596\n    [<ffffffff826620bc>] really_probe drivers/base/dd.c:558 [inline]\n    [<ffffffff826620bc>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:751\n    [<ffffffff826621ba>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:781\n    [<ffffffff82662a26>] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:898\n    [<ffffffff8265eca7>] bus_for_each\n---truncated---"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47467",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/bbdd158b40b66a9403391a517f24ef6613573446",
            "https://git.kernel.org/stable/c/f62314b1ced25c58b86e044fc951cd6a1ea234cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-1446",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/306b23ee-7dcb-4281-a218-21168998c4b9?source=cve",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3084635%40social-networks-auto-poster-facebook-twitter-g%2Ftrunk&old=3004433%40social-networks-auto-poster-facebook-twitter-g%2Ftrunk&sfp_email=&sfph_mail=#file17"
        ],
        "summary": "The NextScripts: Social Networks Auto-Poster plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 4.4.3. This is due to missing or incorrect nonce validation on the nxssnap-reposter page. This makes it possible for unauthenticated attackers to delete arbitrary posts or pages via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3663",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/1a4bc52d-5771-4e7b-a394-772f2a5edbd7?source=cve",
            "https://plugins.trac.wordpress.org/browser/wp-scraper/trunk/wp-scraper.php#L1426"
        ],
        "summary": "The WP Scraper plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the wp_scraper_multi_scrape_action() function in all versions up to, and including, 5.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to create arbitrary pages and posts."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47469",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/722ef19a161ce3fffb3d1b01ce2301c306639bdd",
            "https://git.kernel.org/stable/c/6098475d4cb48d821bdf453c61118c56e26294f0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: Fix deadlock when adding SPI controllers on SPI buses\n\nCurrently we have a global spi_add_lock which we take when adding new\ndevices so that we can check that we're not trying to reuse a chip\nselect that's already controlled.  This means that if the SPI device is\nitself a SPI controller and triggers the instantiation of further SPI\ndevices we trigger a deadlock as we try to register and instantiate\nthose devices while in the process of doing so for the parent controller\nand hence already holding the global spi_add_lock.  Since we only care\nabout concurrency within a single SPI bus move the lock to be per\ncontroller, avoiding the deadlock.\n\nThis can be easily triggered in the case of spi-mux."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2088",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/70724bc7-c1f4-4965-8bba-99b2ed21d34b?source=cve",
            "https://plugins.trac.wordpress.org/browser/social-networks-auto-poster-facebook-twitter-g/trunk/inc/nxs_functions_wp.php#L620",
            "https://plugins.trac.wordpress.org/changeset/3084635/social-networks-auto-poster-facebook-twitter-g/trunk/inc/nxs_functions_wp.php?contextall=1"
        ],
        "summary": "The NextScripts: Social Networks Auto-Poster plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 4.4.3 via the 'nxs_getExpSettings' function. This makes it possible for authenticated attackers, with subscriber access and above, to extract sensitive data including social network API keys and secrets."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47471",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/f40c2281d2c0674d32ba732fee45222d76495472",
            "https://git.kernel.org/stable/c/b0e6db0656ddfd8bb57303c2ef61ee1c1cc694a8",
            "https://git.kernel.org/stable/c/3cfc183052c3dbf8eae57b6c1685dab00ed3db4a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: mxsfb: Fix NULL pointer dereference crash on unload\n\nThe mxsfb->crtc.funcs may already be NULL when unloading the driver,\nin which case calling mxsfb_irq_disable() via drm_irq_uninstall() from\nmxsfb_unload() leads to NULL pointer dereference.\n\nSince all we care about is masking the IRQ and mxsfb->base is still\nvalid, just use that to clear and mask the IRQ."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32988",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://jvn.jp/en/jp/JVN83405304/"
        ],
        "summary": "'OfferBox' App for Android versions 2.0.0 to 2.3.17 and 'OfferBox' App for iOS versions 2.1.7 to 2.6.14 use a hard-coded secret key for JWT. Secret key for JWT may be retrieved if the application binary is reverse-engineered."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2163",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/1e257954-9e44-4939-8e01-efceb3c0953a?source=cve",
            "https://wordpress.org/plugins/ninja-beaver-lite-addons-for-beaver-builder/"
        ],
        "summary": "The Ninja Beaver Add-ons for Beaver Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's widgets in all versions up to, and including, 2.4.5 due to insufficient input sanitization and output escaping on user supplied attributes such as urls. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2953",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/b12c0524-d991-4f96-8646-f4203880558c?source=cve",
            "https://plugins.trac.wordpress.org/browser/luckywp-table-of-contents/tags/2.1.4/plugin/PostSettings.php#L207",
            "https://plugins.trac.wordpress.org/browser/luckywp-table-of-contents/tags/2.1.4/plugin/PostSettings.php#L209",
            "https://plugins.trac.wordpress.org/browser/luckywp-table-of-contents/tags/2.1.4/plugin/PostSettings.php#L210"
        ],
        "summary": "The LuckyWP Table of Contents plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple parameters in versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers with Contributor permissions and above to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3927",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/3a703fc4-6c61-442e-a637-515e9f501575?source=cve",
            "https://plugins.trac.wordpress.org/browser/bdthemes-element-pack-lite/trunk/modules/contact-form/module.php#L102",
            "https://plugins.trac.wordpress.org/changeset/3089154"
        ],
        "summary": "The Element Pack Elementor Addons (Header Footer, Template Library, Dynamic Grid & Carousel, Remote Arrows) plugin for WordPress is vulnerable to Form Submission Admin Email Bypass  in all versions up to, and including, 5.6.3. This is due to the plugin not properly checking for all variations of an administrators emails. This makes it possible for unauthenticated attackers to bypass the restriction using a +value when submitting the contact form."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3666",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/c4d5d58f-913a-4a26-8b2a-bfdd08033993?source=cve",
            "https://wordpress.org/plugins/opal-estate-pro/"
        ],
        "summary": "The Opal Estate Pro \u2013 Property Management and Submission plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the agent latitude and longitude parameters in all versions up to, and including, 1.7.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-6487",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/88075c15-079f-4de2-8e15-374eb7b8c77b?source=cve",
            "https://wordpress.org/plugins/luckywp-table-of-contents/"
        ],
        "summary": "The LuckyWP Table of Contents plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018Header Title' field in all versions up to and including 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31396",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://developer.a-blogcms.jp/blog/news/JVN-70977403.html",
            "https://jvn.jp/en/jp/JVN70977403/"
        ],
        "summary": "Code injection vulnerability exists in a-blog cms Ver.3.1.x series versions prior to Ver.3.1.12 and Ver.3.0.x series versions prior to Ver.3.0.32. If this vulnerability is exploited, a user with an administrator or higher privilege who can log in to the product may execute an arbitrary command on the server."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2020-35165",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000181115/dsa-2020-286-dell-bsafe-crypto-c-micro-edition-4-1-5-and-dell-bsafe-micro-edition-suite-4-6-multiple-security-vulnerabilities"
        ],
        "summary": "Dell BSAFE Crypto-C Micro Edition, versions before 4.1.5, and Dell BSAFE Micro Edition Suite, versions before 4.6, contain an Observable Timing Discrepancy Vulnerability."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2119",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/5ceb8f67-0c7a-4028-81b9-f2cdbcba1a80?source=cve",
            "https://wordpress.org/plugins/luckywp-table-of-contents/"
        ],
        "summary": "The LuckyWP Table of Contents plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the attrs parameter in all versions up to, and including, 2.1.4 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4157",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/8def156a-f2f2-4640-a1c9-c21c74e1f308?source=cve",
            "https://plugins.trac.wordpress.org/changeset/3081740/fluentform"
        ],
        "summary": "The Contact Form Plugin by Fluent Forms for Quiz, Survey, and Drag & Drop WP Form Builder plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 5.1.15 via deserialization of untrusted input in the extractDynamicValues function. This makes it possible for authenticated attackers, with contributor-level access and above, to inject a PHP Object. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code. Successful exploitation requires the attacker to have \"View Form\" and \"Manage Form\" permissions, which must be explicitly set by an administrator. However, this requirement can be bypassed when this vulnerability is chained with CVE-2024-2771."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47484",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/f1e3cd1cc80204fd02b9e9843450925a2af90dc0",
            "https://git.kernel.org/stable/c/c2d4c543f74c90f883e8ec62a31973ae8807d354"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: Fix possible null pointer dereference.\n\nThis patch fixes possible null pointer dereference in files\n\"rvu_debugfs.c\" and \"rvu_nix.c\""
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35162",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://wordpress.org/plugins/download-plugins-dashboard/",
            "https://jvn.jp/en/jp/JVN85380030/"
        ],
        "summary": "Path traversal vulnerability exists in Download Plugins and Themes from Dashboard versions prior to 1.8.6. If this vulnerability is exploited, a remote authenticated attacker with \"switch_themes\" privilege may obtain arbitrary files on the server."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47485",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/bda41654b6e0c125a624ca35d6d20beb8015b5d0",
            "https://git.kernel.org/stable/c/3f57c3f67fd93b4da86aeffea1ca32c484d054ad",
            "https://git.kernel.org/stable/c/60833707b968d5ae02a75edb7886dcd4a957cf0d",
            "https://git.kernel.org/stable/c/73d2892148aa4397a885b4f4afcfc5b27a325c42",
            "https://git.kernel.org/stable/c/0f8cdfff06829a0b0348b6debc29ff6a61967724",
            "https://git.kernel.org/stable/c/c3e17e58f571f34c51aeb17274ed02c2ed5cf780",
            "https://git.kernel.org/stable/c/0d4395477741608d123dad51def9fe50b7ebe952",
            "https://git.kernel.org/stable/c/d39bf40e55e666b5905fdbd46a0dced030ce87be"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/qib: Protect from buffer overflow in struct qib_user_sdma_pkt fields\n\nOverflowing either addrlimit or bytes_togo can allow userspace to trigger\na buffer overflow of kernel memory. Check for overflows in all the places\ndoing math on user controlled buffers."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3671",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/10ea8f3a-35d6-494e-90f6-9165320cf99c?source=cve",
            "https://wordpress.org/plugins/print-o-matic/"
        ],
        "summary": "The Print-O-Matic plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'print-me' shortcode in all versions up to, and including, 2.1.10 due to insufficient input sanitization and output escaping on user supplied attributes such as 'tag'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47474",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/e0e6a63fd97ad95fe05dfd77268a1952551e11a7",
            "https://git.kernel.org/stable/c/7cfb35db607760698d299fd1cf7402dfa8f09973",
            "https://git.kernel.org/stable/c/0866dcaa828c21bc2f94dac00e086078f11b5772",
            "https://git.kernel.org/stable/c/063f576c43d589a4c153554b681d32b3f8317c7b",
            "https://git.kernel.org/stable/c/1ae4715121a57bc6fa29fd992127b01907f2f993",
            "https://git.kernel.org/stable/c/b7fd7f3387f070215e6be341e68eb5c087eeecc0",
            "https://git.kernel.org/stable/c/7b0e356189327287d0eb98ec081bd6dd97068cd3",
            "https://git.kernel.org/stable/c/47b4636ebdbeba2044b3db937c4d2b6a4fe3d0f2",
            "https://git.kernel.org/stable/c/78cdfd62bd54af615fba9e3ca1ba35de39d3871d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: vmk80xx: fix bulk-buffer overflow\n\nThe driver is using endpoint-sized buffers but must not assume that the\ntx and rx buffers are of equal size or a malicious device could overflow\nthe slab-allocated receive buffer when doing bulk transfers."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47486",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/cac6b043cea3e120f4fccec16f7381747cbfdc0d",
            "https://git.kernel.org/stable/c/e1b80a5ebe5431caeb20f88c32d4a024777a2d41",
            "https://git.kernel.org/stable/c/27de809a3d83a6199664479ebb19712533d6fd9b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv, bpf: Fix potential NULL dereference\n\nThe bpf_jit_binary_free() function requires a non-NULL argument. When\nthe RISC-V BPF JIT fails to converge in NR_JIT_ITERATIONS steps,\njit_data->header will be NULL, which triggers a NULL\ndereference. Avoid this by checking the argument, prior calling the\nfunction."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T08:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5147",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f006bb33-d017-445b-9c02-bd848c199671?source=cve",
            "https://plugins.trac.wordpress.org/browser/wpzoom-elementor-addons/trunk/includes/wpzoom-elementor-ajax-posts-grid.php#L112",
            "https://plugins.trac.wordpress.org/browser/wpzoom-elementor-addons/trunk/includes/wpzoom-elementor-ajax-posts-grid.php#L105",
            "https://plugins.trac.wordpress.org/changeset/3090236#file6"
        ],
        "summary": "The WPZOOM Addons for Elementor (Templates, Widgets) plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.37 via the 'grid_style' parameter. This makes it possible for unauthenticated attackers to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other \u201csafe\u201d file types can be uploaded and included."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47475",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/5229159f1d052821007aff1a1beb7873eacf1a9f",
            "https://git.kernel.org/stable/c/ec85bcff4ed09260243d8f39faba99e1041718ba",
            "https://git.kernel.org/stable/c/40d2a7e278e2e7c0a5fd7e997e7eb63945bf93f7",
            "https://git.kernel.org/stable/c/7a2021b896de1ad559d33b5c5cdd20b982242088",
            "https://git.kernel.org/stable/c/199acd8c110e3ae62833c24f632b0bb1c9f012a9",
            "https://git.kernel.org/stable/c/33d7a470730dfe7c9bfc8da84575cf2cedd60d00",
            "https://git.kernel.org/stable/c/278484ae93297b1bb1ce755f9d3b6d95a48c7d47",
            "https://git.kernel.org/stable/c/06ac746d57e6d32b062e220415c607b7e2e0fa50",
            "https://git.kernel.org/stable/c/a23461c47482fc232ffc9b819539d1f837adf2b1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: vmk80xx: fix transfer-buffer overflows\n\nThe driver uses endpoint-sized USB transfer buffers but up until\nrecently had no sanity checks on the sizes.\n\nCommit e1f13c879a7c (\"staging: comedi: check validity of wMaxPacketSize\nof usb endpoints found\") inadvertently fixed NULL-pointer dereferences\nwhen accessing the transfer buffers in case a malicious device has a\nzero wMaxPacketSize.\n\nMake sure to allocate buffers large enough to handle also the other\naccesses that are done without a size check (e.g. byte 18 in\nvmk80xx_cnt_insn_read() for the VMK8061_MODEL) to avoid writing beyond\nthe buffers, for example, when doing descriptor fuzzing.\n\nThe original driver was for a low-speed device with 8-byte buffers.\nSupport was later added for a device that uses bulk transfers and is\npresumably a full-speed device with a maximum 64-byte wMaxPacketSize."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47487",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/eb3b6805e3e9d98b2507201fd061a231988ce623",
            "https://git.kernel.org/stable/c/d3ed72495a59fbfb9377450c8dfe94389a6509a7",
            "https://git.kernel.org/stable/c/5afa7898ab7a0ec9c28556a91df714bf3c2f725e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix out of bounds write\n\nSize can be any value and is user controlled resulting in overwriting the\n40 byte array wr_buf with an arbitrary length of data from buf."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47435",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/9fb7cd5c7fef0f1c982e3cd27745a0dec260eaed",
            "https://git.kernel.org/stable/c/d35aef9c60d310eff3eaddacce301efe877e2b7c",
            "https://git.kernel.org/stable/c/9e07272cca2ed76f7f6073f4444b1143828c8d87",
            "https://git.kernel.org/stable/c/ad1393b92e5059218d055bfec8f4946d85ad04c4",
            "https://git.kernel.org/stable/c/d29c78d3f9c5d2604548c1065bf1ec212728ea61",
            "https://git.kernel.org/stable/c/6e506f07c5b561d673dd0b0d8f7f420cc48024fb",
            "https://git.kernel.org/stable/c/d208b89401e073de986dc891037c5a668f5d5d95"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm: fix mempool NULL pointer race when completing IO\n\ndm_io_dec_pending() calls end_io_acct() first and will then dec md\nin-flight pending count. But if a task is swapping DM table at same\ntime this can result in a crash due to mempool->elements being NULL:\n\ntask1                             task2\ndo_resume\n ->do_suspend\n  ->dm_wait_for_completion\n                                  bio_endio\n\t\t\t\t   ->clone_endio\n\t\t\t\t    ->dm_io_dec_pending\n\t\t\t\t     ->end_io_acct\n\t\t\t\t      ->wakeup task1\n ->dm_swap_table\n  ->__bind\n   ->__bind_mempools\n    ->bioset_exit\n     ->mempool_exit\n                                     ->free_io\n\n[ 67.330330] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000000\n......\n[ 67.330494] pstate: 80400085 (Nzcv daIf +PAN -UAO)\n[ 67.330510] pc : mempool_free+0x70/0xa0\n[ 67.330515] lr : mempool_free+0x4c/0xa0\n[ 67.330520] sp : ffffff8008013b20\n[ 67.330524] x29: ffffff8008013b20 x28: 0000000000000004\n[ 67.330530] x27: ffffffa8c2ff40a0 x26: 00000000ffff1cc8\n[ 67.330535] x25: 0000000000000000 x24: ffffffdada34c800\n[ 67.330541] x23: 0000000000000000 x22: ffffffdada34c800\n[ 67.330547] x21: 00000000ffff1cc8 x20: ffffffd9a1304d80\n[ 67.330552] x19: ffffffdada34c970 x18: 000000b312625d9c\n[ 67.330558] x17: 00000000002dcfbf x16: 00000000000006dd\n[ 67.330563] x15: 000000000093b41e x14: 0000000000000010\n[ 67.330569] x13: 0000000000007f7a x12: 0000000034155555\n[ 67.330574] x11: 0000000000000001 x10: 0000000000000001\n[ 67.330579] x9 : 0000000000000000 x8 : 0000000000000000\n[ 67.330585] x7 : 0000000000000000 x6 : ffffff80148b5c1a\n[ 67.330590] x5 : ffffff8008013ae0 x4 : 0000000000000001\n[ 67.330596] x3 : ffffff80080139c8 x2 : ffffff801083bab8\n[ 67.330601] x1 : 0000000000000000 x0 : ffffffdada34c970\n[ 67.330609] Call trace:\n[ 67.330616] mempool_free+0x70/0xa0\n[ 67.330627] bio_put+0xf8/0x110\n[ 67.330638] dec_pending+0x13c/0x230\n[ 67.330644] clone_endio+0x90/0x180\n[ 67.330649] bio_endio+0x198/0x1b8\n[ 67.330655] dec_pending+0x190/0x230\n[ 67.330660] clone_endio+0x90/0x180\n[ 67.330665] bio_endio+0x198/0x1b8\n[ 67.330673] blk_update_request+0x214/0x428\n[ 67.330683] scsi_end_request+0x2c/0x300\n[ 67.330688] scsi_io_completion+0xa0/0x710\n[ 67.330695] scsi_finish_command+0xd8/0x110\n[ 67.330700] scsi_softirq_done+0x114/0x148\n[ 67.330708] blk_done_softirq+0x74/0xd0\n[ 67.330716] __do_softirq+0x18c/0x374\n[ 67.330724] irq_exit+0xb4/0xb8\n[ 67.330732] __handle_domain_irq+0x84/0xc0\n[ 67.330737] gic_handle_irq+0x148/0x1b0\n[ 67.330744] el1_irq+0xe8/0x190\n[ 67.330753] lpm_cpuidle_enter+0x4f8/0x538\n[ 67.330759] cpuidle_enter_state+0x1fc/0x398\n[ 67.330764] cpuidle_enter+0x18/0x20\n[ 67.330772] do_idle+0x1b4/0x290\n[ 67.330778] cpu_startup_entry+0x20/0x28\n[ 67.330786] secondary_start_kernel+0x160/0x170\n\nFix this by:\n1) Establishing pointers to 'struct dm_io' members in\ndm_io_dec_pending() so that they may be passed into end_io_acct()\n_after_ free_io() is called.\n2) Moving end_io_acct() after free_io()."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4443",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/982fb304-08d6-4195-97a3-f18e94295492?source=cve",
            "https://plugins.trac.wordpress.org/browser/business-directory-plugin/trunk/includes/fields/class-fieldtypes-select.php#L110",
            "https://plugins.trac.wordpress.org/changeset/3089626/"
        ],
        "summary": "The Business Directory Plugin \u2013 Easy Listing Directories for WordPress plugin for WordPress is vulnerable to time-based SQL Injection via the \u2018listingfields\u2019 parameter in all versions up to, and including, 6.4.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47476",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/58478143771b20ab219937b1c30a706590a59224",
            "https://git.kernel.org/stable/c/aa39738423503825625853b643b9e99d11c23816",
            "https://git.kernel.org/stable/c/df7b1238f3b599a0b9284249772cdfd1ea83a632",
            "https://git.kernel.org/stable/c/bc51111bf6e8e7b6cc94b133e4c291273a16acd1",
            "https://git.kernel.org/stable/c/b0156b7c9649d8f55a2ce3d3258509f1b2a181c3",
            "https://git.kernel.org/stable/c/ef143dc0c3defe56730ecd3a9de7b3e1d7e557c1",
            "https://git.kernel.org/stable/c/4a9d43cb5d5f39fa39fc1da438517004cc95f7ea",
            "https://git.kernel.org/stable/c/d6a727a681a39ae4f73081a9bedb45d14f95bdd1",
            "https://git.kernel.org/stable/c/907767da8f3a925b060c740e0b5c92ea7dbec440"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: ni_usb6501: fix NULL-deref in command paths\n\nThe driver uses endpoint-sized USB transfer buffers but had no sanity\nchecks on the sizes. This can lead to zero-size-pointer dereferences or\noverflowed transfer buffers in ni6501_port_command() and\nni6501_counter_command() if a (malicious) device has smaller max-packet\nsizes than expected (or when doing descriptor fuzz testing).\n\nAdd the missing sanity checks to probe()."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47495",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/b9eba0a4a527e04d712f0e0401e5391ef124b33e",
            "https://git.kernel.org/stable/c/524f333e98138d909a0a0c574a9ff6737dce2767",
            "https://git.kernel.org/stable/c/74b3b27cf9fecce00cd8918b7882fd81191d0aa4",
            "https://git.kernel.org/stable/c/002d82227c0abe29118cf80f7e2f396b22d448ed",
            "https://git.kernel.org/stable/c/492140e45d2bf27c1014243f8616a9b612144e20",
            "https://git.kernel.org/stable/c/693ecbe8f799405f8775719deedb1f76265d375a",
            "https://git.kernel.org/stable/c/7e8b6a4f18edee070213cb6a77118e8a412253c5",
            "https://git.kernel.org/stable/c/397430b50a363d8b7bdda00522123f82df6adc5e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: sanity check for maxpacket\n\nmaxpacket of 0 makes no sense and oopses as we need to divide\nby it. Give up.\n\nV2: fixed typo in log and stylistic issues"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47477",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/a6af69768d5cb4b2528946d53be5fa19ade37723",
            "https://git.kernel.org/stable/c/365a346cda82f51d835c49136a00a9df8a78c7f2",
            "https://git.kernel.org/stable/c/8a52bc480992c7c9da3ebfea456af731f50a4b97",
            "https://git.kernel.org/stable/c/39ea61037ae78f14fa121228dd962ea3280eacf3",
            "https://git.kernel.org/stable/c/3efb7af8ac437085b6c776e5b54830b149d86efe",
            "https://git.kernel.org/stable/c/786f5b03450454557ff858a8bead5d7c0cbf78d6",
            "https://git.kernel.org/stable/c/3ac273d154d634e2034508a14db82a95d7ad12ed",
            "https://git.kernel.org/stable/c/20cebb8b620dc987e55ddc46801de986e081757e",
            "https://git.kernel.org/stable/c/536de747bc48262225889a533db6650731ab25d3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: dt9812: fix DMA buffers on stack\n\nUSB transfer buffers are typically mapped for DMA and must not be\nallocated on the stack or transfers will fail.\n\nAllocate proper transfer buffers in the various command helpers and\nreturn an error on short transfers instead of acting on random stack\ndata.\n\nNote that this also fixes a stack info leak on systems where DMA is not\nused as 32 bytes are always sent to the device regardless of how short\nthe command is."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47436",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/5ed60a430fb5f3d93e7fef66264daef466b4d10c",
            "https://git.kernel.org/stable/c/e923bce31ffefe4f60edfc6b84f62d4a858f3676",
            "https://git.kernel.org/stable/c/9ab5d539bc975b8dcde86eca1b58d836b657732e",
            "https://git.kernel.org/stable/c/9d89e287116796bf987cc48f5c8632ef3048f8eb",
            "https://git.kernel.org/stable/c/ff9249aab39820be11b6975a10d94253b7d426fc",
            "https://git.kernel.org/stable/c/c2115b2b16421d93d4993f3fe4c520e91d6fe801"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: musb: dsps: Fix the probe error path\n\nCommit 7c75bde329d7 (\"usb: musb: musb_dsps: request_irq() after\ninitializing musb\") has inverted the calls to\ndsps_setup_optional_vbus_irq() and dsps_create_musb_pdev() without\nupdating correctly the error path. dsps_create_musb_pdev() allocates and\nregisters a new platform device which must be unregistered and freed\nwith platform_device_unregister(), and this is missing upon\ndsps_setup_optional_vbus_irq() error.\n\nWhile on the master branch it seems not to trigger any issue, I observed\na kernel crash because of a NULL pointer dereference with a v5.10.70\nstable kernel where the patch mentioned above was backported. With this\nkernel version, -EPROBE_DEFER is returned the first time\ndsps_setup_optional_vbus_irq() is called which triggers the probe to\nerror out without unregistering the platform device. Unfortunately, on\nthe Beagle Bone Black Wireless, the platform device still living in the\nsystem is being used by the USB Ethernet gadget driver, which during the\nboot phase triggers the crash.\n\nMy limited knowledge of the musb world prevents me to revert this commit\nwhich was sent to silence a robot warning which, as far as I understand,\ndoes not make sense. The goal of this patch was to prevent an IRQ to\nfire before the platform device being registered. I think this cannot\never happen due to the fact that enabling the interrupts is done by the\n->enable() callback of the platform musb device, and this platform\ndevice must be already registered in order for the core or any other\nuser to use this callback.\n\nHence, I decided to fix the error path, which might prevent future\nerrors on mainline kernels while also fixing older ones."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47478",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/156ce5bb6cc43a80a743810199defb1dc3f55b7f",
            "https://git.kernel.org/stable/c/9ec33a9b8790c212cc926a88c5e2105f97f3f57e",
            "https://git.kernel.org/stable/c/afbd40f425227e661d991757e11cc4db024e761f",
            "https://git.kernel.org/stable/c/b0ddff8d68f2e43857a84dce54c3deab181c8ae1",
            "https://git.kernel.org/stable/c/6e80e9314f8bb52d9eabe1907698718ff01120f5",
            "https://git.kernel.org/stable/c/86d4aedcbc69c0f84551fb70f953c24e396de2d7",
            "https://git.kernel.org/stable/c/b2fa1f52d22c5455217b294629346ad23a744945",
            "https://git.kernel.org/stable/c/e7fb722586a2936b37bdff096c095c30ca06404d",
            "https://git.kernel.org/stable/c/e96a1866b40570b5950cda8602c2819189c62a48"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nisofs: Fix out of bound access for corrupted isofs image\n\nWhen isofs image is suitably corrupted isofs_read_inode() can read data\nbeyond the end of buffer. Sanity-check the directory entry length before\nusing it."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47498",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/8ca9745efe3528feb06ca4e117188038eea2d351",
            "https://git.kernel.org/stable/c/b4459b11e84092658fa195a2587aff3b9637f0e7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm rq: don't queue request to blk-mq during DM suspend\n\nDM uses blk-mq's quiesce/unquiesce to stop/start device mapper queue.\n\nBut blk-mq's unquiesce may come from outside events, such as elevator\nswitch, updating nr_requests or others, and request may come during\nsuspend, so simply ask for blk-mq to requeue it.\n\nFixes one kernel panic issue when running updating nr_requests and\ndm-mpath suspend/resume stress test."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47439",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/f2e1de075018cf71bcd7d628e9f759cb8540b0c3",
            "https://git.kernel.org/stable/c/383239a33cf29ebee9ce0d4e0e5c900b77a16148",
            "https://git.kernel.org/stable/c/ef1100ef20f29aec4e62abeccdb5bdbebba1e378"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: microchip: Added the condition for scheduling ksz_mib_read_work\n\nWhen the ksz module is installed and removed using rmmod, kernel crashes\nwith null pointer dereferrence error. During rmmod, ksz_switch_remove\nfunction tries to cancel the mib_read_workqueue using\ncancel_delayed_work_sync routine and unregister switch from dsa.\n\nDuring dsa_unregister_switch it calls ksz_mac_link_down, which in turn\nreschedules the workqueue since mib_interval is non-zero.\nDue to which queue executed after mib_interval and it tries to access\ndp->slave. But the slave is unregistered in the ksz_switch_remove\nfunction. Hence kernel crashes.\n\nTo avoid this crash, before canceling the workqueue, resetted the\nmib_interval to 0.\n\nv1 -> v2:\n-Removed the if condition in ksz_mib_read_work"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2036",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/3eff4992-dbd4-4b9b-872e-1670ce7dab9d?source=cve",
            "https://wordpress.org/plugins/apply-online/"
        ],
        "summary": "The ApplyOnline \u2013 Application Form Builder and Manager plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the aol_modal_box AJAX action in all versions up to, and including, 2.6. This makes it possible for authenticated attackers, with subscriber access or higher, to view Application submissions."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47479",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/c430094541a80575259a94ff879063ef01473506",
            "https://git.kernel.org/stable/c/befd23bd3b17f1a3f9c943a8580b47444c7c63ed",
            "https://git.kernel.org/stable/c/a65c9afe9f2f55b7a7fb4a25ab654cd4139683a4",
            "https://git.kernel.org/stable/c/c052cc1a069c3e575619cf64ec427eb41176ca70"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: rtl8712: fix use-after-free in rtl8712_dl_fw\n\nSyzbot reported use-after-free in rtl8712_dl_fw(). The problem was in\nrace condition between r871xu_dev_remove() ->ndo_open() callback.\n\nIt's easy to see from crash log, that driver accesses released firmware\nin ->ndo_open() callback. It may happen, since driver was releasing\nfirmware _before_ unregistering netdev. Fix it by moving\nunregister_netdev() before cleaning up resources.\n\nCall Trace:\n...\n rtl871x_open_fw drivers/staging/rtl8712/hal_init.c:83 [inline]\n rtl8712_dl_fw+0xd95/0xe10 drivers/staging/rtl8712/hal_init.c:170\n rtl8712_hal_init drivers/staging/rtl8712/hal_init.c:330 [inline]\n rtl871x_hal_init+0xae/0x180 drivers/staging/rtl8712/hal_init.c:394\n netdev_open+0xe6/0x6c0 drivers/staging/rtl8712/os_intfs.c:380\n __dev_open+0x2bc/0x4d0 net/core/dev.c:1484\n\nFreed by task 1306:\n...\n release_firmware+0x1b/0x30 drivers/base/firmware_loader/main.c:1053\n r871xu_dev_remove+0xcc/0x2c0 drivers/staging/rtl8712/usb_intf.c:599\n usb_unbind_interface+0x1d8/0x8d0 drivers/usb/core/driver.c:458"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3495",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/17dcacaf-0e2a-4bef-b944-fb7e43d25777?source=cve",
            "https://plugins.trac.wordpress.org/browser/country-state-city-auto-dropdown/trunk/includes/ajax-actions.php#L8",
            "https://plugins.trac.wordpress.org/browser/country-state-city-auto-dropdown/trunk/includes/ajax-actions.php#L22",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3089374%40country-state-city-auto-dropdown%2Ftrunk&old=3068802%40country-state-city-auto-dropdown%2Ftrunk&sfp_email=&sfph_mail="
        ],
        "summary": "The Country State City Dropdown CF7 plugin for WordPress is vulnerable to SQL Injection via the \u2018cnt\u2019 and 'sid' parameters in versions up to, and including, 2.7.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47480",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/1105573d964f7b78734348466b01f5f6ba8a1813",
            "https://git.kernel.org/stable/c/8e4814a461787e15a31d322d9efbe0d4f6822428",
            "https://git.kernel.org/stable/c/61a0faa89f21861d1f8d059123b5c285a5d9ffee",
            "https://git.kernel.org/stable/c/c2df161f69fb1c67f63adbd193368b47f511edc0",
            "https://git.kernel.org/stable/c/1ce287eff9f23181d5644db787f472463a61f68b",
            "https://git.kernel.org/stable/c/7b57c38d12aed1b5d92f74748bed25e0d041729f",
            "https://git.kernel.org/stable/c/f30822c0b4c35ec86187ab055263943dc71a6836",
            "https://git.kernel.org/stable/c/f2b85040acec9a928b4eb1b57a989324e8e38d3f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Put LLD module refcnt after SCSI device is released\n\nSCSI host release is triggered when SCSI device is freed. We have to make\nsure that the low-level device driver module won't be unloaded before SCSI\nhost instance is released because shost->hostt is required in the release\nhandler.\n\nMake sure to put LLD module refcnt after SCSI device is released.\n\nFixes a kernel panic of 'BUG: unable to handle page fault for address'\nreported by Changhui and Yi."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4362",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/b7926ec6-3441-4062-93b2-6c2120c9f406?source=cve",
            "https://plugins.trac.wordpress.org/browser/so-widgets-bundle/trunk/base/inc/shortcode.php#L27",
            "https://plugins.trac.wordpress.org/changeset/3088997/so-widgets-bundle/trunk/base/inc/shortcode.php"
        ],
        "summary": "The SiteOrigin Widgets Bundle plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'siteorigin_widget' shortcode in all versions up to, and including, 1.60.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4896",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/103dea33-0c30-460e-80e4-fead18928a62?source=cve",
            "https://plugins.trac.wordpress.org/browser/wpb-elementor-addons/trunk/templates/videos_grid.php#L323",
            "https://plugins.trac.wordpress.org/changeset/3088737/#file26"
        ],
        "summary": "The WPB Elementor Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018url\u2019 parameter in all versions up to, and including, 1.0.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T06:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31340",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://play.google.com/store/apps/details?id=com.tplink.tether",
            "https://play.google.com/store/apps/details?id=com.tplink.iot",
            "https://jvn.jp/en/jp/JVN29471697/"
        ],
        "summary": "TP-Link Tether versions prior to 4.5.13 and TP-Link Tapo versions prior to 3.3.6 do not properly validate certificates, which may allow a remote unauthenticated attacker to eavesdrop on an encrypted communication via a man-in-the-middle attack."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5025",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f147641a-f430-4743-901e-539373dc10b7?source=cve",
            "https://memberpress.com/change-log/"
        ],
        "summary": "The Memberpress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018arglist\u2019 parameter in all versions up to, and including, 1.11.29 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47441",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/ae0993739e14a102d506aa09e11b0065f3144f10",
            "https://git.kernel.org/stable/c/e59d839743b50cb1d3f42a786bea48cc5621d254",
            "https://git.kernel.org/stable/c/df8e58716afb3bee2b59de66b1ba1033f2e26303",
            "https://git.kernel.org/stable/c/332fdf951df8b870e3da86b122ae304e2aabe88c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: thermal: Fix out-of-bounds memory accesses\n\nCurrently, mlxsw allows cooling states to be set above the maximum\ncooling state supported by the driver:\n\n # cat /sys/class/thermal/thermal_zone2/cdev0/type\n mlxsw_fan\n # cat /sys/class/thermal/thermal_zone2/cdev0/max_state\n 10\n # echo 18 > /sys/class/thermal/thermal_zone2/cdev0/cur_state\n # echo $?\n 0\n\nThis results in out-of-bounds memory accesses when thermal state\ntransition statistics are enabled (CONFIG_THERMAL_STATISTICS=y), as the\ntransition table is accessed with a too large index (state) [1].\n\nAccording to the thermal maintainer, it is the responsibility of the\ndriver to reject such operations [2].\n\nTherefore, return an error when the state to be set exceeds the maximum\ncooling state supported by the driver.\n\nTo avoid dead code, as suggested by the thermal maintainer [3],\npartially revert commit a421ce088ac8 (\"mlxsw: core: Extend cooling\ndevice with cooling levels\") that tried to interpret these invalid\ncooling states (above the maximum) in a special way. The cooling levels\narray is not removed in order to prevent the fans going below 20% PWM,\nwhich would cause them to get stuck at 0% PWM.\n\n[1]\nBUG: KASAN: slab-out-of-bounds in thermal_cooling_device_stats_update+0x271/0x290\nRead of size 4 at addr ffff8881052f7bf8 by task kworker/0:0/5\n\nCPU: 0 PID: 5 Comm: kworker/0:0 Not tainted 5.15.0-rc3-custom-45935-gce1adf704b14 #122\nHardware name: Mellanox Technologies Ltd. \"MSN2410-CB2FO\"/\"SA000874\", BIOS 4.6.5 03/08/2016\nWorkqueue: events_freezable_power_ thermal_zone_device_check\nCall Trace:\n dump_stack_lvl+0x8b/0xb3\n print_address_description.constprop.0+0x1f/0x140\n kasan_report.cold+0x7f/0x11b\n thermal_cooling_device_stats_update+0x271/0x290\n __thermal_cdev_update+0x15e/0x4e0\n thermal_cdev_update+0x9f/0xe0\n step_wise_throttle+0x770/0xee0\n thermal_zone_device_update+0x3f6/0xdf0\n process_one_work+0xa42/0x1770\n worker_thread+0x62f/0x13e0\n kthread+0x3ee/0x4e0\n ret_from_fork+0x1f/0x30\n\nAllocated by task 1:\n kasan_save_stack+0x1b/0x40\n __kasan_kmalloc+0x7c/0x90\n thermal_cooling_device_setup_sysfs+0x153/0x2c0\n __thermal_cooling_device_register.part.0+0x25b/0x9c0\n thermal_cooling_device_register+0xb3/0x100\n mlxsw_thermal_init+0x5c5/0x7e0\n __mlxsw_core_bus_device_register+0xcb3/0x19c0\n mlxsw_core_bus_device_register+0x56/0xb0\n mlxsw_pci_probe+0x54f/0x710\n local_pci_probe+0xc6/0x170\n pci_device_probe+0x2b2/0x4d0\n really_probe+0x293/0xd10\n __driver_probe_device+0x2af/0x440\n driver_probe_device+0x51/0x1e0\n __driver_attach+0x21b/0x530\n bus_for_each_dev+0x14c/0x1d0\n bus_add_driver+0x3ac/0x650\n driver_register+0x241/0x3d0\n mlxsw_sp_module_init+0xa2/0x174\n do_one_initcall+0xee/0x5f0\n kernel_init_freeable+0x45a/0x4de\n kernel_init+0x1f/0x210\n ret_from_fork+0x1f/0x30\n\nThe buggy address belongs to the object at ffff8881052f7800\n which belongs to the cache kmalloc-1k of size 1024\nThe buggy address is located 1016 bytes inside of\n 1024-byte region [ffff8881052f7800, ffff8881052f7c00)\nThe buggy address belongs to the page:\npage:0000000052355272 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1052f0\nhead:0000000052355272 order:3 compound_mapcount:0 compound_pincount:0\nflags: 0x200000000010200(slab|head|node=0|zone=2)\nraw: 0200000000010200 ffffea0005034800 0000000300000003 ffff888100041dc0\nraw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881052f7a80: 00 00 00 00 00 00 04 fc fc fc fc fc fc fc fc fc\n ffff8881052f7b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n>ffff8881052f7b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                                                                ^\n ffff8881052f7c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff8881052f7c80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n\n[2] https://lore.kernel.org/linux-pm/9aca37cb-1629-5c67-\n---truncated---"
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5031",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/80064e3b-6996-49eb-a475-0ffe0e894f9e?source=cve",
            "https://memberpress.com/change-log/"
        ],
        "summary": "The Memberpress plugin for WordPress is vulnerable to Blind Server-Side Request Forgery in all versions up to, and including, 1.11.29 via the 'mepr-user-file' shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4980",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/6054a885-e67a-4731-93ea-64d7f90d9ea8?source=cve",
            "https://plugins.trac.wordpress.org/browser/wpkoi-templates-for-elementor/trunk/elements/elements/advanced-heading/advanced-heading.php#L626",
            "https://plugins.trac.wordpress.org/browser/wpkoi-templates-for-elementor/trunk/elements/elements/qr-code/qr-code.php#L110",
            "https://plugins.trac.wordpress.org/browser/wpkoi-templates-for-elementor/trunk/elements/elements/darkmode/darkmode.php#L291",
            "https://plugins.trac.wordpress.org/changeset/3088306/"
        ],
        "summary": "The WPKoi Templates for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via 'id', 'mixColor', 'backgroundColor', 'saveInCookies', and 'autoMatchOsTheme' parameters in all versions up to, and including, 2.5.9 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47481",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/5f6995295f65d1ee6f36d466d26afd98eb797afe",
            "https://git.kernel.org/stable/c/5508546631a0f555d7088203dec2614e41b5106e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Initialize the ODP xarray when creating an ODP MR\n\nNormally the zero fill would hide the missing initialization, but an\nerrant set to desc_size in reg_create() causes a crash:\n\n  BUG: unable to handle page fault for address: 0000000800000000\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP PTI\n  CPU: 5 PID: 890 Comm: ib_write_bw Not tainted 5.15.0-rc4+ #47\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n  RIP: 0010:mlx5_ib_dereg_mr+0x14/0x3b0 [mlx5_ib]\n  Code: 48 63 cd 4c 89 f7 48 89 0c 24 e8 37 30 03 e1 48 8b 0c 24 eb a0 90 0f 1f 44 00 00 41 56 41 55 41 54 55 53 48 89 fb 48 83 ec 30 <48> 8b 2f 65 48 8b 04 25 28 00 00 00 48 89 44 24 28 31 c0 8b 87 c8\n  RSP: 0018:ffff88811afa3a60 EFLAGS: 00010286\n  RAX: 000000000000001c RBX: 0000000800000000 RCX: 0000000000000000\n  RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000800000000\n  RBP: 0000000800000000 R08: 0000000000000000 R09: c0000000fffff7ff\n  R10: ffff88811afa38f8 R11: ffff88811afa38f0 R12: ffffffffa02c7ac0\n  R13: 0000000000000000 R14: ffff88811afa3cd8 R15: ffff88810772fa00\n  FS:  00007f47b9080740(0000) GS:ffff88852cd40000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000800000000 CR3: 000000010761e003 CR4: 0000000000370ea0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   mlx5_ib_free_odp_mr+0x95/0xc0 [mlx5_ib]\n   mlx5_ib_dereg_mr+0x128/0x3b0 [mlx5_ib]\n   ib_dereg_mr_user+0x45/0xb0 [ib_core]\n   ? xas_load+0x8/0x80\n   destroy_hw_idr_uobject+0x1a/0x50 [ib_uverbs]\n   uverbs_destroy_uobject+0x2f/0x150 [ib_uverbs]\n   uobj_destroy+0x3c/0x70 [ib_uverbs]\n   ib_uverbs_cmd_verbs+0x467/0xb00 [ib_uverbs]\n   ? uverbs_finalize_object+0x60/0x60 [ib_uverbs]\n   ? ttwu_queue_wakelist+0xa9/0xe0\n   ? pty_write+0x85/0x90\n   ? file_tty_write.isra.33+0x214/0x330\n   ? process_echoes+0x60/0x60\n   ib_uverbs_ioctl+0xa7/0x110 [ib_uverbs]\n   __x64_sys_ioctl+0x10d/0x8e0\n   ? vfs_write+0x17f/0x260\n   do_syscall_64+0x3c/0x80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nAdd the missing xarray initialization and remove the desc_size set."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47447",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/d59e44e7821a8f2bb6f2e846b9167397a5f01608",
            "https://git.kernel.org/stable/c/3eda901995371d390ef82d0b6462f4ea8efbcfdf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/a3xx: fix error handling in a3xx_gpu_init()\n\nThese error paths returned 1 on failure, instead of a negative error\ncode.  This would lead to an Oops in the caller.  A second problem is\nthat the check for \"if (ret != -ENODATA)\" did not work because \"ret\" was\nset to 1."
    },
    {
        "Modified": "2024-05-22T12:46:00",
        "Published": "2024-05-22T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47433",
        "impact": {},
        "last-modified": "2024-05-22T12:46:00",
        "references": [
            "https://git.kernel.org/stable/c/0e32a2b85c7d92ece86c17dfef390c5ed79c6378",
            "https://git.kernel.org/stable/c/0e309e1152fc34ef75991d9d69b165dbf75bf26c",
            "https://git.kernel.org/stable/c/4afb912f439c4bc4e6a4f3e7547f2e69e354108f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix abort logic in btrfs_replace_file_extents\n\nError injection testing uncovered a case where we'd end up with a\ncorrupt file system with a missing extent in the middle of a file.  This\noccurs because the if statement to decide if we should abort is wrong.\n\nThe only way we would abort in this case is if we got a ret !=\n-EOPNOTSUPP and we called from the file clone code.  However the\nprealloc code uses this path too.  Instead we need to abort if there is\nan error, and the only error we _don't_ abort on is -EOPNOTSUPP and only\nif we came from the clone file code."
    }
]