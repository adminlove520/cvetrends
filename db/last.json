[
    {
        "Modified": "2024-09-27T13:58:00",
        "Published": "2024-09-14T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2023-3410",
        "impact": {},
        "last-modified": "2024-09-27T13:58:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/ba5e93a2-8f42-4747-86fa-297ba709be8f?source=cve",
            "https://bricksbuilder.io/",
            "https://bricksbuilder.io/release/bricks-1-10-2/"
        ],
        "summary": "The Bricks theme for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018customTag' attribute in versions up to, and including, 1.10.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with access to the Bricks Builder (admin-only by default), to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This becomes more of an issue when Bricks Builder access is granted to lower-privileged users."
    },
    {
        "Modified": "2024-09-27T13:54:00",
        "Published": "2024-09-14T13:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-6482",
        "impact": {},
        "last-modified": "2024-09-27T13:54:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/de7cde2c-142c-4004-9302-be335265d87d?source=cve",
            "https://plugins.trac.wordpress.org/browser/login-with-phone-number/trunk/login-with-phonenumber.php#L3803",
            "https://plugins.trac.wordpress.org/changeset/3129185/"
        ],
        "summary": "The Login with phone number plugin for WordPress is vulnerable to privilege escalation in all versions up to, and including, 1.7.49. This is due to a lack of validation and missing capability check on user-supplied data in the 'lwp_update_password_action' function. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update their role to any other role, including Administrator. The vulnerability was partially patched in version 1.7.40. The login with phone number pro plugin was required to exploit the vulnerability in versions 1.7.40 - 1.7.49."
    },
    {
        "Modified": "2024-09-27T13:53:00",
        "Published": "2024-09-21T09:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8680",
        "impact": {},
        "last-modified": "2024-09-27T13:53:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/aa464547-0380-4b91-a5ea-0cd9a66da7a7?source=cve",
            "https://github.com/ibericode/mailchimp-for-wordpress/blob/main/includes/views/parts/lists-overview-details.php",
            "https://plugins.trac.wordpress.org/browser/mailchimp-for-wp/trunk/includes/views/parts/lists-overview-details.php",
            "https://github.com/ibericode/mailchimp-for-wordpress/commit/60c6bfc260a7974f791af1d4ad4a032a3e0bdd3c",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3153075%40mailchimp-for-wp%2Ftrunk&old=3149806%40mailchimp-for-wp%2Ftrunk&sfp_email=&sfph_mail="
        ],
        "summary": "The MC4WP: Mailchimp for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 4.9.16 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."
    },
    {
        "Modified": "2024-09-27T13:49:00",
        "Published": "2024-09-23T21:15:00",
        "access": {},
        "assigner": "product-cna@github.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8770",
        "impact": {},
        "last-modified": "2024-09-27T13:49:00",
        "references": [
            "https://docs.github.com/en/enterprise-server@3.14/admin/release-notes#3.14.1",
            "https://docs.github.com/en/enterprise-server@3.13/admin/release-notes#3.13.4",
            "https://docs.github.com/en/enterprise-server@3.12/admin/release-notes#3.12.9",
            "https://docs.github.com/en/enterprise-server@3.11/admin/release-notes#3.11.15",
            "https://docs.github.com/en/enterprise-server@3.10/admin/release-notes#3.10.17"
        ],
        "summary": "A Cross-Site Scripting (XSS) vulnerability was identified in the repository transfer feature of GitHub Enterprise Server, which allows attackers to steal sensitive user information via social engineering.\u00a0This vulnerability affected all versions of GitHub Enterprise Server and was fixed in version 3.10.17, 3.11.15, 3.12.9, 3.13.4, and 3.14.1.\u00a0This vulnerability was reported via the GitHub Bug Bounty program."
    },
    {
        "Modified": "2024-09-27T13:48:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8664",
        "impact": {},
        "last-modified": "2024-09-27T13:48:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/70c1ee04-cfb1-4819-95ab-497e814da16f?source=cve",
            "https://plugins.trac.wordpress.org/browser/wp-test-email/tags/1.1.7/wp-test-email.php#L189",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3150538%40wp-test-email&new=3150538%40wp-test-email&sfp_email=&sfph_mail="
        ],
        "summary": "The WP Test Email plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.1.7. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-09-27T13:46:00",
        "Published": "2024-09-23T22:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2018-20072",
        "impact": {},
        "last-modified": "2024-09-27T13:46:00",
        "references": [
            "https://issues.chromium.org/issues/40093560"
        ],
        "summary": "Insufficient data validation in PDF in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to perform out of bounds memory access via a crafted PDF file. (Chromium security severity: Low)"
    },
    {
        "Modified": "2024-09-27T13:45:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-7888",
        "impact": {},
        "last-modified": "2024-09-27T13:45:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/494d2e69-0759-419a-a603-e8870c157e49?source=cve",
            "https://plugins.trac.wordpress.org/browser/classified-listing/tags/3.1.6/app/Controllers/Ajax/FormBuilderAdminAjax.php",
            "https://plugins.trac.wordpress.org/changeset/3150743/classified-listing/trunk/app/Controllers/Ajax/FormBuilderAdminAjax.php"
        ],
        "summary": "The Classified Listing \u2013 Classified ads & Business Directory Plugin plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on several functions like export_forms(), import_forms(), update_fb_options(), and many more in all versions up to, and including, 3.1.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to modify forms and various other settings."
    },
    {
        "Modified": "2024-09-27T13:25:00",
        "Published": "2024-08-21T21:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-94",
        "id": "CVE-2024-6386",
        "impact": {},
        "last-modified": "2024-09-27T13:25:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f7fc91cc-e529-4362-8269-bf7ee0766e1e?source=cve",
            "https://wpml.org/",
            "https://sec.stealthcopter.com/wpml-rce-via-twig-ssti/"
        ],
        "summary": "The WPML plugin for WordPress is vulnerable to Remote Code Execution in all versions up to, and including, 4.6.12 via the Twig Server-Side Template Injection. This is due to missing input validation and sanitization on the render function. This makes it possible for authenticated attackers, with Contributor-level access and above, to execute code on the server."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46814",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/916083054670060023d3f8a8ace895d710e268f4",
            "https://git.kernel.org/stable/c/fe63daf7b10253b0faaa60c55d6153cd276927aa",
            "https://git.kernel.org/stable/c/0147505f08220c89b3a9c90eb608191276e263a8",
            "https://git.kernel.org/stable/c/cb63090a17d3abb87f132851fa3711281249b7d2",
            "https://git.kernel.org/stable/c/6590643c5de74098d27933b7d224d5ac065d7755",
            "https://git.kernel.org/stable/c/fa71face755e27dc44bc296416ebdf2c67163316"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check msg_id before processing transcation\n\n[WHY & HOW]\nHDCP_MESSAGE_ID_INVALID (-1) is not a valid msg_id nor is it a valid\narray index, and it needs checking before used.\n\nThis fixes 4 OVERRUN issues reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46812",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3300a039caf850376bc3416c808cd8879da412bb",
            "https://git.kernel.org/stable/c/8406158a546441b73f0b216aedacbf9a1e5748fb",
            "https://git.kernel.org/stable/c/ee9d6df6d9172917d9ddbd948bb882652d5ecd29",
            "https://git.kernel.org/stable/c/a54f7e866cc73a4cb71b8b24bb568ba35c8969df"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip inactive planes within ModeSupportAndSystemConfiguration\n\n[Why]\nCoverity reports Memory - illegal accesses.\n\n[How]\nSkip inactive planes."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46816",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/36c39a8dcce210649f2f45f252abaa09fcc1ae87",
            "https://git.kernel.org/stable/c/cf8b16857db702ceb8d52f9219a4613363e2b1cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links\n\n[Why]\nCoverity report OVERRUN warning. There are\nonly max_links elements within dc->links. link\ncount could up to AMDGPU_DM_MAX_DISPLAY_INDEX 31.\n\n[How]\nMake sure link count less than max_links."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46816",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/36c39a8dcce210649f2f45f252abaa09fcc1ae87",
            "https://git.kernel.org/stable/c/cf8b16857db702ceb8d52f9219a4613363e2b1cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links\n\n[Why]\nCoverity report OVERRUN warning. There are\nonly max_links elements within dc->links. link\ncount could up to AMDGPU_DM_MAX_DISPLAY_INDEX 31.\n\n[How]\nMake sure link count less than max_links."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46821",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/60f4a4bc3329e5cb8c4df0cc961f0d5ffd96e22d",
            "https://git.kernel.org/stable/c/4711b1347cb9f0c3083da6d87c624d75f9bd1d50",
            "https://git.kernel.org/stable/c/06a3810010b525b9958424e344f0c25b09e128fa",
            "https://git.kernel.org/stable/c/c8c19ebf7c0b202a6a2d37a52ca112432723db5f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Fix negative array index read\n\nAvoid using the negative values\nfor clk_idex as an index into an array pptable->DpmDescriptor.\n\nV2: fix clk_index return check (Tim Huang)"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46824",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/89827a4de802765b1ebb401fc1e73a90108c7520",
            "https://git.kernel.org/stable/c/a11dda723c6493bb1853bbc61c093377f96e2d47"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Require drivers to supply the cache_invalidate_user ops\n\nIf drivers don't do this then iommufd will oops invalidation ioctls with\nsomething like:\n\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  Mem abort info:\n    ESR = 0x0000000086000004\n    EC = 0x21: IABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x04: level 0 translation fault\n  user pgtable: 4k pages, 48-bit VAs, pgdp=0000000101059000\n  [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n  Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP\n  Modules linked in:\n  CPU: 2 PID: 371 Comm: qemu-system-aar Not tainted 6.8.0-rc7-gde77230ac23a #9\n  Hardware name: linux,dummy-virt (DT)\n  pstate: 81400809 (Nzcv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=-c)\n  pc : 0x0\n  lr : iommufd_hwpt_invalidate+0xa4/0x204\n  sp : ffff800080f3bcc0\n  x29: ffff800080f3bcf0 x28: ffff0000c369b300 x27: 0000000000000000\n  x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n  x23: 0000000000000000 x22: 00000000c1e334a0 x21: ffff0000c1e334a0\n  x20: ffff800080f3bd38 x19: ffff800080f3bd58 x18: 0000000000000000\n  x17: 0000000000000000 x16: 0000000000000000 x15: 0000ffff8240d6d8\n  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n  x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n  x8 : 0000001000000002 x7 : 0000fffeac1ec950 x6 : 0000000000000000\n  x5 : ffff800080f3bd78 x4 : 0000000000000003 x3 : 0000000000000002\n  x2 : 0000000000000000 x1 : ffff800080f3bcc8 x0 : ffff0000c6034d80\n  Call trace:\n   0x0\n   iommufd_fops_ioctl+0x154/0x274\n   __arm64_sys_ioctl+0xac/0xf0\n   invoke_syscall+0x48/0x110\n   el0_svc_common.constprop.0+0x40/0xe0\n   do_el0_svc+0x1c/0x28\n   el0_svc+0x34/0xb4\n   el0t_64_sync_handler+0x120/0x12c\n   el0t_64_sync+0x190/0x194\n\nAll existing drivers implement this op for nesting, this is mostly a\nbisection aid."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46824",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/89827a4de802765b1ebb401fc1e73a90108c7520",
            "https://git.kernel.org/stable/c/a11dda723c6493bb1853bbc61c093377f96e2d47"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Require drivers to supply the cache_invalidate_user ops\n\nIf drivers don't do this then iommufd will oops invalidation ioctls with\nsomething like:\n\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  Mem abort info:\n    ESR = 0x0000000086000004\n    EC = 0x21: IABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x04: level 0 translation fault\n  user pgtable: 4k pages, 48-bit VAs, pgdp=0000000101059000\n  [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n  Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP\n  Modules linked in:\n  CPU: 2 PID: 371 Comm: qemu-system-aar Not tainted 6.8.0-rc7-gde77230ac23a #9\n  Hardware name: linux,dummy-virt (DT)\n  pstate: 81400809 (Nzcv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=-c)\n  pc : 0x0\n  lr : iommufd_hwpt_invalidate+0xa4/0x204\n  sp : ffff800080f3bcc0\n  x29: ffff800080f3bcf0 x28: ffff0000c369b300 x27: 0000000000000000\n  x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n  x23: 0000000000000000 x22: 00000000c1e334a0 x21: ffff0000c1e334a0\n  x20: ffff800080f3bd38 x19: ffff800080f3bd58 x18: 0000000000000000\n  x17: 0000000000000000 x16: 0000000000000000 x15: 0000ffff8240d6d8\n  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n  x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n  x8 : 0000001000000002 x7 : 0000fffeac1ec950 x6 : 0000000000000000\n  x5 : ffff800080f3bd78 x4 : 0000000000000003 x3 : 0000000000000002\n  x2 : 0000000000000000 x1 : ffff800080f3bcc8 x0 : ffff0000c6034d80\n  Call trace:\n   0x0\n   iommufd_fops_ioctl+0x154/0x274\n   __arm64_sys_ioctl+0xac/0xf0\n   invoke_syscall+0x48/0x110\n   el0_svc_common.constprop.0+0x40/0xe0\n   do_el0_svc+0x1c/0x28\n   el0_svc+0x34/0xb4\n   el0t_64_sync_handler+0x120/0x12c\n   el0t_64_sync+0x190/0x194\n\nAll existing drivers implement this op for nesting, this is mostly a\nbisection aid."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46828",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4a4eeefa514db570be025ab46d779af180e2c9bb",
            "https://git.kernel.org/stable/c/7725152b54d295b7da5e34c2f419539b30d017bd",
            "https://git.kernel.org/stable/c/cde71a5677971f4f1b69b25e854891dbe78066a4",
            "https://git.kernel.org/stable/c/549e407569e08459d16122341d332cb508024094",
            "https://git.kernel.org/stable/c/d4a9039a7b3d8005b90c7b1a55a306444f0e5447",
            "https://git.kernel.org/stable/c/d7c01c0714c04431b5e18cf17a9ea68a553d1c3c",
            "https://git.kernel.org/stable/c/546ea84d07e3e324644025e2aae2d12ea4c5896e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: sch_cake: fix bulk flow accounting logic for host fairness\n\nIn sch_cake, we keep track of the count of active bulk flows per host,\nwhen running in dst/src host fairness mode, which is used as the\nround-robin weight when iterating through flows. The count of active\nbulk flows is updated whenever a flow changes state.\n\nThis has a peculiar interaction with the hash collision handling: when a\nhash collision occurs (after the set-associative hashing), the state of\nthe hash bucket is simply updated to match the new packet that collided,\nand if host fairness is enabled, that also means assigning new per-host\nstate to the flow. For this reason, the bulk flow counters of the\nhost(s) assigned to the flow are decremented, before new state is\nassigned (and the counters, which may not belong to the same host\nanymore, are incremented again).\n\nBack when this code was introduced, the host fairness mode was always\nenabled, so the decrement was unconditional. When the configuration\nflags were introduced the *increment* was made conditional, but\nthe *decrement* was not. Which of course can lead to a spurious\ndecrement (and associated wrap-around to U16_MAX).\n\nAFAICT, when host fairness is disabled, the decrement and wrap-around\nhappens as soon as a hash collision occurs (which is not that common in\nitself, due to the set-associative hashing). However, in most cases this\nis harmless, as the value is only used when host fairness mode is\nenabled. So in order to trigger an array overflow, sch_cake has to first\nbe configured with host fairness disabled, and while running in this\nmode, a hash collision has to occur to cause the overflow. Then, the\nqdisc has to be reconfigured to enable host fairness, which leads to the\narray out-of-bounds because the wrapped-around value is retained and\nused as an array index. It seems that syzbot managed to trigger this,\nwhich is quite impressive in its own right.\n\nThis patch fixes the issue by introducing the same conditional check on\ndecrement as is used on increment.\n\nThe original bug predates the upstreaming of cake, but the commit listed\nin the Fixes tag touched that code, meaning that this patch won't apply\nbefore that."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46828",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4a4eeefa514db570be025ab46d779af180e2c9bb",
            "https://git.kernel.org/stable/c/7725152b54d295b7da5e34c2f419539b30d017bd",
            "https://git.kernel.org/stable/c/cde71a5677971f4f1b69b25e854891dbe78066a4",
            "https://git.kernel.org/stable/c/549e407569e08459d16122341d332cb508024094",
            "https://git.kernel.org/stable/c/d4a9039a7b3d8005b90c7b1a55a306444f0e5447",
            "https://git.kernel.org/stable/c/d7c01c0714c04431b5e18cf17a9ea68a553d1c3c",
            "https://git.kernel.org/stable/c/546ea84d07e3e324644025e2aae2d12ea4c5896e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: sch_cake: fix bulk flow accounting logic for host fairness\n\nIn sch_cake, we keep track of the count of active bulk flows per host,\nwhen running in dst/src host fairness mode, which is used as the\nround-robin weight when iterating through flows. The count of active\nbulk flows is updated whenever a flow changes state.\n\nThis has a peculiar interaction with the hash collision handling: when a\nhash collision occurs (after the set-associative hashing), the state of\nthe hash bucket is simply updated to match the new packet that collided,\nand if host fairness is enabled, that also means assigning new per-host\nstate to the flow. For this reason, the bulk flow counters of the\nhost(s) assigned to the flow are decremented, before new state is\nassigned (and the counters, which may not belong to the same host\nanymore, are incremented again).\n\nBack when this code was introduced, the host fairness mode was always\nenabled, so the decrement was unconditional. When the configuration\nflags were introduced the *increment* was made conditional, but\nthe *decrement* was not. Which of course can lead to a spurious\ndecrement (and associated wrap-around to U16_MAX).\n\nAFAICT, when host fairness is disabled, the decrement and wrap-around\nhappens as soon as a hash collision occurs (which is not that common in\nitself, due to the set-associative hashing). However, in most cases this\nis harmless, as the value is only used when host fairness mode is\nenabled. So in order to trigger an array overflow, sch_cake has to first\nbe configured with host fairness disabled, and while running in this\nmode, a hash collision has to occur to cause the overflow. Then, the\nqdisc has to be reconfigured to enable host fairness, which leads to the\narray out-of-bounds because the wrapped-around value is retained and\nused as an array index. It seems that syzbot managed to trigger this,\nwhich is quite impressive in its own right.\n\nThis patch fixes the issue by introducing the same conditional check on\ndecrement as is used on increment.\n\nThe original bug predates the upstreaming of cake, but the commit listed\nin the Fixes tag touched that code, meaning that this patch won't apply\nbefore that."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46831",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b0804c286ccfcf5f5c004d5bf8a54c0508b5e86b",
            "https://git.kernel.org/stable/c/f7fe95f40c85311c98913fe6ae2c56adb7f767a7",
            "https://git.kernel.org/stable/c/a3c1e45156ad39f225cd7ddae0f81230a3b1e657"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: microchip: vcap: Fix use-after-free error in kunit test\n\nThis is a clear use-after-free error. We remove it, and rely on checking\nthe return code of vcap_del_rule."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46831",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b0804c286ccfcf5f5c004d5bf8a54c0508b5e86b",
            "https://git.kernel.org/stable/c/f7fe95f40c85311c98913fe6ae2c56adb7f767a7",
            "https://git.kernel.org/stable/c/a3c1e45156ad39f225cd7ddae0f81230a3b1e657"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: microchip: vcap: Fix use-after-free error in kunit test\n\nThis is a clear use-after-free error. We remove it, and rely on checking\nthe return code of vcap_del_rule."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46835",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d40c2c3dd0395fe7fdc19bd96551e87251426d66",
            "https://git.kernel.org/stable/c/8bc7b3ce33e64c74211ed17aec823fc4e523426a",
            "https://git.kernel.org/stable/c/c2056c7a840f0dbf293bc3b0d91826d001668fb0",
            "https://git.kernel.org/stable/c/bdbdc7cecd00305dc844a361f9883d3a21022027"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix smatch static checker warning\n\nadev->gfx.imu.funcs could be NULL"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46835",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d40c2c3dd0395fe7fdc19bd96551e87251426d66",
            "https://git.kernel.org/stable/c/8bc7b3ce33e64c74211ed17aec823fc4e523426a",
            "https://git.kernel.org/stable/c/c2056c7a840f0dbf293bc3b0d91826d001668fb0",
            "https://git.kernel.org/stable/c/bdbdc7cecd00305dc844a361f9883d3a21022027"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix smatch static checker warning\n\nadev->gfx.imu.funcs could be NULL"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46837",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/33eb0344e186a2bcc257c6c5a6e65c1cb42adb4a",
            "https://git.kernel.org/stable/c/5f7762042f8a5377bd8a32844db353c0311a7369"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panthor: Restrict high priorities on group_create\n\nWe were allowing any users to create a high priority group without any\npermission checks. As a result, this was allowing possible denial of\nservice.\n\nWe now only allow the DRM master or users with the CAP_SYS_NICE\ncapability to set higher priorities than PANTHOR_GROUP_PRIORITY_MEDIUM.\n\nAs the sole user of that uAPI lives in Mesa and hardcode a value of\nMEDIUM [1], this should be safe to do.\n\nAdditionally, as those checks are performed at the ioctl level,\npanthor_group_create now only check for priority level validity.\n\n[1]https://gitlab.freedesktop.org/mesa/mesa/-/blob/f390835074bdf162a63deb0311d1a6de527f9f89/src/gallium/drivers/panfrost/pan_csf.c#L1038"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46837",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/33eb0344e186a2bcc257c6c5a6e65c1cb42adb4a",
            "https://git.kernel.org/stable/c/5f7762042f8a5377bd8a32844db353c0311a7369"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panthor: Restrict high priorities on group_create\n\nWe were allowing any users to create a high priority group without any\npermission checks. As a result, this was allowing possible denial of\nservice.\n\nWe now only allow the DRM master or users with the CAP_SYS_NICE\ncapability to set higher priorities than PANTHOR_GROUP_PRIORITY_MEDIUM.\n\nAs the sole user of that uAPI lives in Mesa and hardcode a value of\nMEDIUM [1], this should be safe to do.\n\nAdditionally, as those checks are performed at the ioctl level,\npanthor_group_create now only check for priority level validity.\n\n[1]https://gitlab.freedesktop.org/mesa/mesa/-/blob/f390835074bdf162a63deb0311d1a6de527f9f89/src/gallium/drivers/panfrost/pan_csf.c#L1038"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46838",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4a594acc12d5954cdc71d4450a386748bf3d136a",
            "https://git.kernel.org/stable/c/db978287e908d48b209e374b00d847b2d785e0a9",
            "https://git.kernel.org/stable/c/4828d207dc5161dc7ddf9a4f6dcfd80c7dd7d20a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: don't BUG_ON() if khugepaged yanks our page table\n\nSince khugepaged was changed to allow retracting page tables in file\nmappings without holding the mmap lock, these BUG_ON()s are wrong - get\nrid of them.\n\nWe could also remove the preceding \"if (unlikely(...))\" block, but then we\ncould reach pte_offset_map_lock() with transhuge pages not just for file\nmappings but also for anonymous mappings - which would probably be fine\nbut I think is not necessarily expected."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46802",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/356fcce9cdbfe338a275e9e1836adfdd7f5c52a9",
            "https://git.kernel.org/stable/c/154a50bf4221a6a6ccf88d565b8184da7c40a2dd",
            "https://git.kernel.org/stable/c/6bf920193ba1853bad780bba565a789246d9003c",
            "https://git.kernel.org/stable/c/26c56049cc4f1705b498df013949427692a4b0d5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: added NULL check at start of dc_validate_stream\n\n[Why]\nprevent invalid memory access\n\n[How]\ncheck if dc and stream are NULL"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46441",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://github.com/kacins/YPay/issues/4"
        ],
        "summary": "An arbitrary file upload vulnerability in YPay 1.2.0 allows attackers to execute arbitrary code via a ZIP archive to themePutFile in app/common/util/Upload.php (called from app/admin/controller/ypay/Home.php). The file extension of an uncompressed file is not checked."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46839",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9d08fce64dd77f42e2361a4818dbc4b50f3c7dad",
            "https://git.kernel.org/stable/c/a2abd35e7dc55bf9ed01e2b3481fa78e086d3bf4",
            "https://git.kernel.org/stable/c/241bce1c757d0587721512296952e6bba69631ed",
            "https://git.kernel.org/stable/c/da5f374103a1e0881bbd35847dc57b04ac155eb0",
            "https://git.kernel.org/stable/c/98f887f820c993e05a12e8aa816c80b8661d4c87"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nworkqueue: Improve scalability of workqueue watchdog touch\n\nOn a ~2000 CPU powerpc system, hard lockups have been observed in the\nworkqueue code when stop_machine runs (in this case due to CPU hotplug).\nThis is due to lots of CPUs spinning in multi_cpu_stop, calling\ntouch_nmi_watchdog() which ends up calling wq_watchdog_touch().\nwq_watchdog_touch() writes to the global variable wq_watchdog_touched,\nand that can find itself in the same cacheline as other important\nworkqueue data, which slows down operations to the point of lockups.\n\nIn the case of the following abridged trace, worker_pool_idr was in\nthe hot line, causing the lockups to always appear at idr_find.\n\n  watchdog: CPU 1125 self-detected hard LOCKUP @ idr_find\n  Call Trace:\n  get_work_pool\n  __queue_work\n  call_timer_fn\n  run_timer_softirq\n  __do_softirq\n  do_softirq_own_stack\n  irq_exit\n  timer_interrupt\n  decrementer_common_virt\n  * interrupt: 900 (timer) at multi_cpu_stop\n  multi_cpu_stop\n  cpu_stopper_thread\n  smpboot_thread_fn\n  kthread\n\nFix this by having wq_watchdog_touch() only write to the line if the\nlast time a touch was recorded exceeds 1/4 of the watchdog threshold."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46839",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9d08fce64dd77f42e2361a4818dbc4b50f3c7dad",
            "https://git.kernel.org/stable/c/a2abd35e7dc55bf9ed01e2b3481fa78e086d3bf4",
            "https://git.kernel.org/stable/c/241bce1c757d0587721512296952e6bba69631ed",
            "https://git.kernel.org/stable/c/da5f374103a1e0881bbd35847dc57b04ac155eb0",
            "https://git.kernel.org/stable/c/98f887f820c993e05a12e8aa816c80b8661d4c87"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nworkqueue: Improve scalability of workqueue watchdog touch\n\nOn a ~2000 CPU powerpc system, hard lockups have been observed in the\nworkqueue code when stop_machine runs (in this case due to CPU hotplug).\nThis is due to lots of CPUs spinning in multi_cpu_stop, calling\ntouch_nmi_watchdog() which ends up calling wq_watchdog_touch().\nwq_watchdog_touch() writes to the global variable wq_watchdog_touched,\nand that can find itself in the same cacheline as other important\nworkqueue data, which slows down operations to the point of lockups.\n\nIn the case of the following abridged trace, worker_pool_idr was in\nthe hot line, causing the lockups to always appear at idr_find.\n\n  watchdog: CPU 1125 self-detected hard LOCKUP @ idr_find\n  Call Trace:\n  get_work_pool\n  __queue_work\n  call_timer_fn\n  run_timer_softirq\n  __do_softirq\n  do_softirq_own_stack\n  irq_exit\n  timer_interrupt\n  decrementer_common_virt\n  * interrupt: 900 (timer) at multi_cpu_stop\n  multi_cpu_stop\n  cpu_stopper_thread\n  smpboot_thread_fn\n  kthread\n\nFix this by having wq_watchdog_touch() only write to the line if the\nlast time a touch was recorded exceeds 1/4 of the watchdog threshold."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46804",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2a63c90c7a90ab2bd23deebc2814fc5b52abf6d2",
            "https://git.kernel.org/stable/c/0ee4387c5a4b57ec733c3fb4365188d5979cd9c7",
            "https://git.kernel.org/stable/c/f338f99f6a04d03c802087d82a83561cbd5bdc99",
            "https://git.kernel.org/stable/c/8b5ccf3d011969417be653b5a145c72dbd30472c",
            "https://git.kernel.org/stable/c/a3b5ee22a9d3a30045191da5678ca8451ebaea30",
            "https://git.kernel.org/stable/c/4e70c0f5251c25885c31ee84a31f99a01f7cf50e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add array index check for hdcp ddc access\n\n[Why]\nCoverity reports OVERRUN warning. Do not check if array\nindex valid.\n\n[How]\nCheck msg_id valid and valid array index."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46841",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/704c359b4093a2af650a20eaa030c435d7c30f91",
            "https://git.kernel.org/stable/c/a580fb2c3479d993556e1c31b237c9e5be4944a3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't BUG_ON on ENOMEM from btrfs_lookup_extent_info() in walk_down_proc()\n\nWe handle errors here properly, ENOMEM isn't fatal, return the error."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46841",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/704c359b4093a2af650a20eaa030c435d7c30f91",
            "https://git.kernel.org/stable/c/a580fb2c3479d993556e1c31b237c9e5be4944a3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't BUG_ON on ENOMEM from btrfs_lookup_extent_info() in walk_down_proc()\n\nWe handle errors here properly, ENOMEM isn't fatal, return the error."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46803",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e6ea3b8fe398915338147fe54dd2db8155fdafd8",
            "https://git.kernel.org/stable/c/820dcbd38a77bd5fdc4236d521c1c122841227d0",
            "https://git.kernel.org/stable/c/547033b593063eb85bfdf9b25a5f1b8fd1911be2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Check debug trap enable before write dbg_ev_file\n\nIn interrupt context, write dbg_ev_file will be run by work queue. It\nwill cause write dbg_ev_file execution after debug_trap_disable, which\nwill cause NULL pointer access.\nv2: cancel work \"debug_event_workarea\" before set dbg_ev_file as NULL."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46807",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e55e3904ffeaff81715256a711b1a61f4ad5258a",
            "https://git.kernel.org/stable/c/2be1eb6304d9623ba21dd6f3e68ffb753a759635",
            "https://git.kernel.org/stable/c/4dfec5f5501a27e0a0da00e136d65ef9011ded4c",
            "https://git.kernel.org/stable/c/e8765364d4f3aaf88c7abe0a4fc99089d059ab49",
            "https://git.kernel.org/stable/c/6cd2b872643bb29bba01a8ac739138db7bd79007"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/amdgpu: Check tbo resource pointer\n\nValidate tbo resource pointer, skip if NULL"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46806",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d116bb921e8b104f45d1f30a473ea99ef4262b9a",
            "https://git.kernel.org/stable/c/a01618adcba78c6bd6c4557a4a5e32f58b658cd1",
            "https://git.kernel.org/stable/c/1a00f2ac82d6bc6689388c7edcd2a4bd82664f3c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix the warning division or modulo by zero\n\nChecks the partition mode and returns an error for an invalid mode."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46805",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f20d1d5cbb39802f68be24458861094f3e66f356",
            "https://git.kernel.org/stable/c/01cd55b971131b07b7ff8d622fa93bb4f8be07df",
            "https://git.kernel.org/stable/c/4ab720b6aa1ef5e71db1e534b5b45c80ac4ec58a",
            "https://git.kernel.org/stable/c/d3f927ef0607b3c8c3f79ab6d9a4ebead3e35f4c",
            "https://git.kernel.org/stable/c/1940708ccf5aff76de4e0b399f99267c93a89193"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix the waring dereferencing hive\n\nCheck the amdgpu_hive_info *hive that maybe is NULL."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46808",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ca0b0b0a22306f2e51105ac48f4a09c2fbbb504e",
            "https://git.kernel.org/stable/c/5524fa301ba649f8cf00848f91468e0ba7e4f24c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add missing NULL pointer check within dpcd_extend_address_range\n\n[Why & How]\nASSERT if return NULL from kcalloc."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46842",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/bba47fe3b038cca3d3ebd799665ce69d6d273b58",
            "https://git.kernel.org/stable/c/ede596b1434b57c0b3fd5c02b326efe5c54f6e48"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Handle mailbox timeouts in lpfc_get_sfp_info\n\nThe MBX_TIMEOUT return code is not handled in lpfc_get_sfp_info and the\nroutine unconditionally frees submitted mailbox commands regardless of\nreturn status.  The issue is that for MBX_TIMEOUT cases, when firmware\nreturns SFP information at a later time, that same mailbox memory region\nreferences previously freed memory in its cmpl routine.\n\nFix by adding checks for the MBX_TIMEOUT return code.  During mailbox\nresource cleanup, check the mbox flag to make sure that the wait did not\ntimeout.  If the MBOX_WAKE flag is not set, then do not free the resources\nbecause it will be freed when firmware completes the mailbox at a later\ntime in its cmpl routine.\n\nAlso, increase the timeout from 30 to 60 seconds to accommodate boot\nscripts requiring longer timeouts."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46842",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/bba47fe3b038cca3d3ebd799665ce69d6d273b58",
            "https://git.kernel.org/stable/c/ede596b1434b57c0b3fd5c02b326efe5c54f6e48"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Handle mailbox timeouts in lpfc_get_sfp_info\n\nThe MBX_TIMEOUT return code is not handled in lpfc_get_sfp_info and the\nroutine unconditionally frees submitted mailbox commands regardless of\nreturn status.  The issue is that for MBX_TIMEOUT cases, when firmware\nreturns SFP information at a later time, that same mailbox memory region\nreferences previously freed memory in its cmpl routine.\n\nFix by adding checks for the MBX_TIMEOUT return code.  During mailbox\nresource cleanup, check the mbox flag to make sure that the wait did not\ntimeout.  If the MBOX_WAKE flag is not set, then do not free the resources\nbecause it will be freed when firmware completes the mailbox at a later\ntime in its cmpl routine.\n\nAlso, increase the timeout from 30 to 60 seconds to accommodate boot\nscripts requiring longer timeouts."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46809",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e50bec62acaeec03afc6fa5dfb2426e52d049cf5",
            "https://git.kernel.org/stable/c/e46b70a7cfed71cb84e985c785c39c16df5c28cb",
            "https://git.kernel.org/stable/c/8b0ddf19cca2a352b2a7e01d99d3ba949a99c84c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check BIOS images before it is used\n\nBIOS images may fail to load and null checks are added before they are\nused.\n\nThis fixes 6 NULL_RETURNS issues reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46810",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/adc5674c23b8191e596ed0dbaa9600265ac896a8",
            "https://git.kernel.org/stable/c/e1b121f21bbc56a6ae035aa5b77daac62bfb9be5",
            "https://git.kernel.org/stable/c/9d567126474e68f959b2c2543c375f3bb32e948a",
            "https://git.kernel.org/stable/c/1fb13693953737783b424aa4712f0a27a9eaf5a8",
            "https://git.kernel.org/stable/c/162e48cb1d84c2c966b649b8ac5c9d4f75f6d44f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: tc358767: Check if fully initialized before signalling HPD event via IRQ\n\nMake sure the connector is fully initialized before signalling any\nHPD events via drm_kms_helper_hotplug_event(), otherwise this may\nlead to NULL pointer dereference."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46843",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2f49e05d6b58d660f035a75ff96b77071b4bd5ed",
            "https://git.kernel.org/stable/c/3844586e9bd9845140e1078f1e61896b576ac536",
            "https://git.kernel.org/stable/c/7cbff570dbe8907e23bba06f6414899a0fbb2fcc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Remove SCSI host only if added\n\nIf host tries to remove ufshcd driver from a UFS device it would cause a\nkernel panic if ufshcd_async_scan fails during ufshcd_probe_hba before\nadding a SCSI host with scsi_add_host and MCQ is enabled since SCSI host\nhas been defered after MCQ configuration introduced by commit 0cab4023ec7b\n(\"scsi: ufs: core: Defer adding host to SCSI if MCQ is supported\").\n\nTo guarantee that SCSI host is removed only if it has been added, set the\nscsi_host_added flag to true after adding a SCSI host and check whether it\nis set or not before removing it."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46811",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4003bac784380fed1f94f197350567eaa73a409d",
            "https://git.kernel.org/stable/c/aba188d6f4ebaf52acf13f204db2bd2c22072504",
            "https://git.kernel.org/stable/c/188fd1616ec43033cedbe343b6579e9921e2d898"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix index may exceed array range within fpu_update_bw_bounding_box\n\n[Why]\nCoverity reports OVERRUN warning. soc.num_states could\nbe 40. But array range of bw_params->clk_table.entries is 8.\n\n[How]\nAssert if soc.num_states greater than 8."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46843",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2f49e05d6b58d660f035a75ff96b77071b4bd5ed",
            "https://git.kernel.org/stable/c/3844586e9bd9845140e1078f1e61896b576ac536",
            "https://git.kernel.org/stable/c/7cbff570dbe8907e23bba06f6414899a0fbb2fcc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Remove SCSI host only if added\n\nIf host tries to remove ufshcd driver from a UFS device it would cause a\nkernel panic if ufshcd_async_scan fails during ufshcd_probe_hba before\nadding a SCSI host with scsi_add_host and MCQ is enabled since SCSI host\nhas been defered after MCQ configuration introduced by commit 0cab4023ec7b\n(\"scsi: ufs: core: Defer adding host to SCSI if MCQ is supported\").\n\nTo guarantee that SCSI host is removed only if it has been added, set the\nscsi_host_added flag to true after adding a SCSI host and check whether it\nis set or not before removing it."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46811",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4003bac784380fed1f94f197350567eaa73a409d",
            "https://git.kernel.org/stable/c/aba188d6f4ebaf52acf13f204db2bd2c22072504",
            "https://git.kernel.org/stable/c/188fd1616ec43033cedbe343b6579e9921e2d898"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix index may exceed array range within fpu_update_bw_bounding_box\n\n[Why]\nCoverity reports OVERRUN warning. soc.num_states could\nbe 40. But array range of bw_params->clk_table.entries is 8.\n\n[How]\nAssert if soc.num_states greater than 8."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46813",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ac04759b4a002969cf0f1384f1b8bb2001cfa782",
            "https://git.kernel.org/stable/c/8aa2864044b9d13e95fe224f32e808afbf79ecdf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check link_index before accessing dc->links[]\n\n[WHY & HOW]\ndc->links[] has max size of MAX_LINKS and NULL is return when trying to\naccess with out-of-bound index.\n\nThis fixes 3 OVERRUN and 1 RESOURCE_LEAK issues reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46844",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3bedb7ce080690d0d6172db790790c1219bcbdd5",
            "https://git.kernel.org/stable/c/96301fdc2d533a196197c055af875fe33d47ef84",
            "https://git.kernel.org/stable/c/c8944d449fda9f58c03bd99649b2df09948fc874",
            "https://git.kernel.org/stable/c/43f782c27907f306c664b6614fd6f264ac32cce6",
            "https://git.kernel.org/stable/c/289979d64573f43df1d0e6bc6435de63a0d69cdf",
            "https://git.kernel.org/stable/c/ec5b47a370177d79ae7773858042c107e21f8ecc",
            "https://git.kernel.org/stable/c/fc843d3837ebcb1c16d3768ef3eb55e25d5331f2",
            "https://git.kernel.org/stable/c/824ac4a5edd3f7494ab1996826c4f47f8ef0f63d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\num: line: always fill *error_out in setup_one_line()\n\nThe pointer isn't initialized by callers, but I have\nencountered cases where it's still printed; initialize\nit in all possible cases in setup_one_line()."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46813",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ac04759b4a002969cf0f1384f1b8bb2001cfa782",
            "https://git.kernel.org/stable/c/8aa2864044b9d13e95fe224f32e808afbf79ecdf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check link_index before accessing dc->links[]\n\n[WHY & HOW]\ndc->links[] has max size of MAX_LINKS and NULL is return when trying to\naccess with out-of-bound index.\n\nThis fixes 3 OVERRUN and 1 RESOURCE_LEAK issues reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46845",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8c72f0b2c45f21cb8b00fc37f79f632d7e46c2ed",
            "https://git.kernel.org/stable/c/8a9d0d405159e9c796ddf771f7cff691c1a2bc1e",
            "https://git.kernel.org/stable/c/e6a53481da292d970d1edf0d8831121d1c5e2f0d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/timerlat: Only clear timer if a kthread exists\n\nThe timerlat tracer can use user space threads to check for osnoise and\ntimer latency. If the program using this is killed via a SIGTERM, the\nthreads are shutdown one at a time and another tracing instance can start\nup resetting the threads before they are fully closed. That causes the\nhrtimer assigned to the kthread to be shutdown and freed twice when the\ndying thread finally closes the file descriptors, causing a use-after-free\nbug.\n\nOnly cancel the hrtimer if the associated thread is still around. Also add\nthe interface_lock around the resetting of the tlat_var->kthread.\n\nNote, this is just a quick fix that can be backported to stable. A real\nfix is to have a better synchronization between the shutdown of old\nthreads and the starting of new ones."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46815",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a72d4996409569027b4609414a14a87679b12267",
            "https://git.kernel.org/stable/c/7c47dd2e92341f2989ab73dbed07f8894593ad7b",
            "https://git.kernel.org/stable/c/c4a7f7c0062fe2c73f70bb7e335199e25bd71492",
            "https://git.kernel.org/stable/c/b36e9b3104c4ba0f2f5dd083dcf6159cb316c996",
            "https://git.kernel.org/stable/c/21f9cb44f8c60bf6c26487d428b1a09ad3e8aebf",
            "https://git.kernel.org/stable/c/6a4a08e45e614cfa7a56498cdfaeb7fae2f07fa0",
            "https://git.kernel.org/stable/c/b38a4815f79b87efb196cd5121579fc51e29a7fb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check num_valid_sets before accessing reader_wm_sets[]\n\n[WHY & HOW]\nnum_valid_sets needs to be checked to avoid a negative index when\naccessing reader_wm_sets[num_valid_sets - 1].\n\nThis fixes an OVERRUN issue reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46818",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8520fdc8ecc38f240a8e9e7af89cca6739c3e790",
            "https://git.kernel.org/stable/c/40c2e8bc117cab8bca8814735f28a8b121654a84",
            "https://git.kernel.org/stable/c/0184cca30cad74d88f5c875d4e26999e26325700",
            "https://git.kernel.org/stable/c/276e3fd93e3beb5894eb1cc8480f9f417d51524d",
            "https://git.kernel.org/stable/c/08e7755f754e3d2cef7d3a7da538d33526bd6f7c",
            "https://git.kernel.org/stable/c/3d4198ab612ad48f73383ad3bb5663e6f0cdf406",
            "https://git.kernel.org/stable/c/2a5626eeb3b5eec7a36886f9556113dd93ec8ed6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check gpio_id before used as array index\n\n[WHY & HOW]\nGPIO_ID_UNKNOWN (-1) is not a valid value for array index and therefore\nshould be checked in advance.\n\nThis fixes 5 OVERRUN issues reported by Coverity."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46817",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d619b91d3c4af60ac422f1763ce53d721fb91262",
            "https://git.kernel.org/stable/c/754321ed63f0a4a31252ca72e0bd89a9e1888018",
            "https://git.kernel.org/stable/c/21bbb39863f10f5fb4bf772d15b07d5d13590e9d",
            "https://git.kernel.org/stable/c/28b515c458aa9c92bfcb99884c94713a5f471cea",
            "https://git.kernel.org/stable/c/94cb77700fa4ae6200486bfa0ba2ac547534afd2",
            "https://git.kernel.org/stable/c/d398c74c881dee695f6eb6138c9891644e1c3d9d",
            "https://git.kernel.org/stable/c/84723eb6068c50610c5c0893980d230d7afa2105"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when stream nums greater than 6\n\n[Why]\nCoverity reports OVERRUN warning. Should abort amdgpu_dm\ninitialize.\n\n[How]\nReturn failure to amdgpu_dm_init."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46845",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8c72f0b2c45f21cb8b00fc37f79f632d7e46c2ed",
            "https://git.kernel.org/stable/c/8a9d0d405159e9c796ddf771f7cff691c1a2bc1e",
            "https://git.kernel.org/stable/c/e6a53481da292d970d1edf0d8831121d1c5e2f0d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/timerlat: Only clear timer if a kthread exists\n\nThe timerlat tracer can use user space threads to check for osnoise and\ntimer latency. If the program using this is killed via a SIGTERM, the\nthreads are shutdown one at a time and another tracing instance can start\nup resetting the threads before they are fully closed. That causes the\nhrtimer assigned to the kthread to be shutdown and freed twice when the\ndying thread finally closes the file descriptors, causing a use-after-free\nbug.\n\nOnly cancel the hrtimer if the associated thread is still around. Also add\nthe interface_lock around the resetting of the tlat_var->kthread.\n\nNote, this is just a quick fix that can be backported to stable. A real\nfix is to have a better synchronization between the shutdown of old\nthreads and the starting of new ones."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46817",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d619b91d3c4af60ac422f1763ce53d721fb91262",
            "https://git.kernel.org/stable/c/754321ed63f0a4a31252ca72e0bd89a9e1888018",
            "https://git.kernel.org/stable/c/21bbb39863f10f5fb4bf772d15b07d5d13590e9d",
            "https://git.kernel.org/stable/c/28b515c458aa9c92bfcb99884c94713a5f471cea",
            "https://git.kernel.org/stable/c/94cb77700fa4ae6200486bfa0ba2ac547534afd2",
            "https://git.kernel.org/stable/c/d398c74c881dee695f6eb6138c9891644e1c3d9d",
            "https://git.kernel.org/stable/c/84723eb6068c50610c5c0893980d230d7afa2105"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when stream nums greater than 6\n\n[Why]\nCoverity reports OVERRUN warning. Should abort amdgpu_dm\ninitialize.\n\n[How]\nReturn failure to amdgpu_dm_init."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46820",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aa92264ba6fd4fb570002f69762634221316e7ae",
            "https://git.kernel.org/stable/c/10fe1a79cd1bff3048e13120e93c02f8ecd05e9d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/vcn: remove irq disabling in vcn 5 suspend\n\nWe do not directly enable/disable VCN IRQ in vcn 5.0.0.\nAnd we do not handle the IRQ state as well. So the calls to\ndisable IRQ and set state are removed. This effectively gets\nrid of the warining of\n      \"WARN_ON(!amdgpu_irq_enabled(adev, src, type))\"\nin amdgpu_irq_put()."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46819",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/614564a5b28983de53b23a358ebe6c483a2aa21e",
            "https://git.kernel.org/stable/c/d04ded1e73f1dcf19a71ec8b9cda3faa7acd8828",
            "https://git.kernel.org/stable/c/70e8ec21fcb8c51446899d3bfe416b31adfa3661",
            "https://git.kernel.org/stable/c/7d265772e44d403071a2b573eac0db60250b1c21",
            "https://git.kernel.org/stable/c/130c2dc75c8c40acc3c96ededea6af80e03c14b8",
            "https://git.kernel.org/stable/c/d190b459b2a4304307c3468ed97477b808381011"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: the warning dereferencing obj for nbio_v7_4\n\nif ras_manager obj null, don't print NBIO err data"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46846",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/14f970a8d03d882b15b97beb83bd84ac8ba6298c",
            "https://git.kernel.org/stable/c/d034bff62faea1a2219e0d2f3d17263265f24087",
            "https://git.kernel.org/stable/c/0efbad8445fbba7896402500a1473450a299a08a",
            "https://git.kernel.org/stable/c/be721b451affbecc4ba4eaac3b71cdbdcade1b1b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: rockchip: Resolve unbalanced runtime PM / system PM handling\n\nCommit e882575efc77 (\"spi: rockchip: Suspend and resume the bus during\nNOIRQ_SYSTEM_SLEEP_PM ops\") stopped respecting runtime PM status and\nsimply disabled clocks unconditionally when suspending the system. This\ncauses problems when the device is already runtime suspended when we go\nto sleep -- in which case we double-disable clocks and produce a\nWARNing.\n\nSwitch back to pm_runtime_force_{suspend,resume}(), because that still\nseems like the right thing to do, and the aforementioned commit makes no\nexplanation why it stopped using it.\n\nAlso, refactor some of the resume() error handling, because it's not\nactually a good idea to re-disable clocks on failure."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46847",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1b2770e27d6d952f491bb362b657e5b2713c3efd",
            "https://git.kernel.org/stable/c/6cf74e0e5e3ab5d5c9defb4c73dad54d52224671",
            "https://git.kernel.org/stable/c/3e3de7947c751509027d26b679ecd243bc9db255"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: ensure vmap_block is initialised before adding to queue\n\nCommit 8c61291fd850 (\"mm: fix incorrect vbq reference in\npurge_fragmented_block\") extended the 'vmap_block' structure to contain a\n'cpu' field which is set at allocation time to the id of the initialising\nCPU.\n\nWhen a new 'vmap_block' is being instantiated by new_vmap_block(), the\npartially initialised structure is added to the local 'vmap_block_queue'\nxarray before the 'cpu' field has been initialised.  If another CPU is\nconcurrently walking the xarray (e.g.  via vm_unmap_aliases()), then it\nmay perform an out-of-bounds access to the remote queue thanks to an\nuninitialised index.\n\nThis has been observed as UBSAN errors in Android:\n\n | Internal error: UBSAN: array index out of bounds: 00000000f2005512 [#1] PREEMPT SMP\n |\n | Call trace:\n |  purge_fragmented_block+0x204/0x21c\n |  _vm_unmap_aliases+0x170/0x378\n |  vm_unmap_aliases+0x1c/0x28\n |  change_memory_common+0x1dc/0x26c\n |  set_memory_ro+0x18/0x24\n |  module_enable_ro+0x98/0x238\n |  do_init_module+0x1b0/0x310\n\nMove the initialisation of 'vb->cpu' in new_vmap_block() ahead of the\naddition to the xarray."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46822",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f57769ff6fa7f97f1296965f20e8a2bb3ee9fd0f",
            "https://git.kernel.org/stable/c/4c3b21204abb4fa3ab310fbbb5cf7f0e85f3a1bc",
            "https://git.kernel.org/stable/c/945be49f4e832a9184c313fdf8917475438a795b",
            "https://git.kernel.org/stable/c/40cae0df42e5e7f7a1c0f32deed9c4027c1ba94e",
            "https://git.kernel.org/stable/c/62ca6d3a905b4c40cd942f3cc645a6718f8bc7e7",
            "https://git.kernel.org/stable/c/bc7fbb37e3d2df59336eadbd6a56be632e3c7df7",
            "https://git.kernel.org/stable/c/2488444274c70038eb6b686cba5f1ce48ebb9cdd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: acpi: Harden get_cpu_for_acpi_id() against missing CPU entry\n\nIn a review discussion of the changes to support vCPU hotplug where\na check was added on the GICC being enabled if was online, it was\nnoted that there is need to map back to the cpu and use that to index\ninto a cpumask. As such, a valid ID is needed.\n\nIf an MPIDR check fails in acpi_map_gic_cpu_interface() it is possible\nfor the entry in cpu_madt_gicc[cpu] == NULL.  This function would\nthen cause a NULL pointer dereference.   Whilst a path to trigger\nthis has not been established, harden this caller against the\npossibility."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46823",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d1207f07decc66546a7fa463d2f335a856c986ef",
            "https://git.kernel.org/stable/c/92e9bac18124682c4b99ede9ee3bcdd68f121e92"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit/overflow: Fix UB in overflow_allocation_test\n\nThe 'device_name' array doesn't exist out of the\n'overflow_allocation_test' function scope. However, it is being used as\na driver name when calling 'kunit_driver_create' from\n'kunit_device_register'. It produces the kernel panic with KASAN\nenabled.\n\nSince this variable is used in one place only, remove it and pass the\ndevice name into kunit_device_register directly as an ascii string."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46825",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/415f3634d53c7fb4cf07d2f5a0be7f2e15e6da33",
            "https://git.kernel.org/stable/c/3cca098c91391b3fa48142bfda57048b985c87f6",
            "https://git.kernel.org/stable/c/9215152677d4b321801a92b06f6d5248b2b4465f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: use IWL_FW_CHECK for link ID check\n\nThe lookup function iwl_mvm_rcu_fw_link_id_to_link_conf() is\nnormally called with input from the firmware, so it should use\nIWL_FW_CHECK() instead of WARN_ON()."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46850",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/42850927656a540428e58d370b3c1599a617bac7",
            "https://git.kernel.org/stable/c/e835d5144f5ef78e4f8828c63e2f0d61144f283a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Avoid race between dcn35_set_drr() and dc_state_destruct()\n\ndc_state_destruct() nulls the resource context of the DC state. The pipe\ncontext passed to dcn35_set_drr() is a member of this resource context.\n\nIf dc_state_destruct() is called parallel to the IRQ processing (which\ncalls dcn35_set_drr() at some point), we can end up using already nulled\nfunction callback fields of struct stream_resource.\n\nThe logic in dcn35_set_drr() already tries to avoid this, by checking tg\nagainst NULL. But if the nulling happens exactly after the NULL check and\nbefore the next access, then we get a race.\n\nAvoid this by copying tg first to a local variable, and then use this\nvariable for all the operations. This should work, as long as nobody\nfrees the resource pool where the timing generators live.\n\n(cherry picked from commit 0607a50c004798a96e62c089a4c34c220179dcb5)"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46848",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/15210b7c8caff4929f25d049ef8404557f8ae468",
            "https://git.kernel.org/stable/c/0eaf812aa1506704f3b78be87036860e5d0fe81d",
            "https://git.kernel.org/stable/c/8717dc35c0e5896f4110f4b3882f7ff787a5f73d",
            "https://git.kernel.org/stable/c/25dfc9e357af8aed1ca79b318a73f2c59c1f0b2b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel: Limit the period on Haswell\n\nRunning the ltp test cve-2015-3290 concurrently reports the following\nwarnings.\n\nperfevents: irq loop stuck!\n  WARNING: CPU: 31 PID: 32438 at arch/x86/events/intel/core.c:3174\n  intel_pmu_handle_irq+0x285/0x370\n  Call Trace:\n   <NMI>\n   ? __warn+0xa4/0x220\n   ? intel_pmu_handle_irq+0x285/0x370\n   ? __report_bug+0x123/0x130\n   ? intel_pmu_handle_irq+0x285/0x370\n   ? __report_bug+0x123/0x130\n   ? intel_pmu_handle_irq+0x285/0x370\n   ? report_bug+0x3e/0xa0\n   ? handle_bug+0x3c/0x70\n   ? exc_invalid_op+0x18/0x50\n   ? asm_exc_invalid_op+0x1a/0x20\n   ? irq_work_claim+0x1e/0x40\n   ? intel_pmu_handle_irq+0x285/0x370\n   perf_event_nmi_handler+0x3d/0x60\n   nmi_handle+0x104/0x330\n\nThanks to Thomas Gleixner's analysis, the issue is caused by the low\ninitial period (1) of the frequency estimation algorithm, which triggers\nthe defects of the HW, specifically erratum HSW11 and HSW143. (For the\ndetails, please refer https://lore.kernel.org/lkml/87plq9l5d2.ffs@tglx/)\n\nThe HSW11 requires a period larger than 100 for the INST_RETIRED.ALL\nevent, but the initial period in the freq mode is 1. The erratum is the\nsame as the BDM11, which has been supported in the kernel. A minimum\nperiod of 128 is enforced as well on HSW.\n\nHSW143 is regarding that the fixed counter 1 may overcount 32 with the\nHyper-Threading is enabled. However, based on the test, the hardware\nhas more issues than it tells. Besides the fixed counter 1, the message\n'interrupt took too long' can be observed on any counter which was armed\nwith a period < 32 and two events expired in the same NMI. A minimum\nperiod of 32 is enforced for the rest of the events.\nThe recommended workaround code of the HSW143 is not implemented.\nBecause it only addresses the issue for the fixed counter. It brings\nextra overhead through extra MSR writing. No related overcounting issue\nhas been reported so far."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46826",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1f81d51141a234ad0a3874b4d185dc27a521cd27",
            "https://git.kernel.org/stable/c/53f17409abf61f66b6f05aff795e938e5ba811d1",
            "https://git.kernel.org/stable/c/1cf8cd80903073440b6ea055811d04edd24fe4f7",
            "https://git.kernel.org/stable/c/2a97388a807b6ab5538aa8f8537b2463c6988bd2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nELF: fix kernel.randomize_va_space double read\n\nELF loader uses \"randomize_va_space\" twice. It is sysctl and can change\nat any moment, so 2 loads could see 2 different values in theory with\nunpredictable consequences.\n\nIssue exactly one load for consistent value across one exec."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46827",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/838c2cfdb6be7d7d8c06c711edf893eb34ca2e7c",
            "https://git.kernel.org/stable/c/25a15f80253a7c8776e4e4880d797d20ec864154",
            "https://git.kernel.org/stable/c/db163a463bb93cd3e37e1e7b10b9726fb6f95857"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix firmware crash due to invalid peer nss\n\nCurrently, if the access point receives an association\nrequest containing an Extended HE Capabilities Information\nElement with an invalid MCS-NSS, it triggers a firmware\ncrash.\n\nThis issue arises when EHT-PHY capabilities shows support\nfor a bandwidth and MCS-NSS set for that particular\nbandwidth is filled by zeros and due to this, driver obtains\npeer_nss as 0 and sending this value to firmware causes\ncrash.\n\nAddress this issue by implementing a validation step for\nthe peer_nss value before passing it to the firmware. If\nthe value is greater than zero, proceed with forwarding\nit to the firmware. However, if the value is invalid,\nreject the association request to prevent potential\nfirmware crashes.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46849",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e1a199ec31617242e1a0ea8f312341e682d0c037",
            "https://git.kernel.org/stable/c/e43364f578cdc2f8083abbc0cb743ea55e827c29",
            "https://git.kernel.org/stable/c/7d318166bf55e9029d56997c3b134f4ac2ae2607",
            "https://git.kernel.org/stable/c/4f9a71435953f941969a4f017e2357db62d85a86"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: meson: axg-card: fix 'use-after-free'\n\nBuffer 'card->dai_link' is reallocated in 'meson_card_reallocate_links()',\nso move 'pad' pointer initialization after this function when memory is\nalready reallocated.\n\nKasan bug report:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in axg_card_add_link+0x76c/0x9bc\nRead of size 8 at addr ffff000000e8b260 by task modprobe/356\n\nCPU: 0 PID: 356 Comm: modprobe Tainted: G O 6.9.12-sdkernel #1\nCall trace:\n dump_backtrace+0x94/0xec\n show_stack+0x18/0x24\n dump_stack_lvl+0x78/0x90\n print_report+0xfc/0x5c0\n kasan_report+0xb8/0xfc\n __asan_load8+0x9c/0xb8\n axg_card_add_link+0x76c/0x9bc [snd_soc_meson_axg_sound_card]\n meson_card_probe+0x344/0x3b8 [snd_soc_meson_card_utils]\n platform_probe+0x8c/0xf4\n really_probe+0x110/0x39c\n __driver_probe_device+0xb8/0x18c\n driver_probe_device+0x108/0x1d8\n __driver_attach+0xd0/0x25c\n bus_for_each_dev+0xe0/0x154\n driver_attach+0x34/0x44\n bus_add_driver+0x134/0x294\n driver_register+0xa8/0x1e8\n __platform_driver_register+0x44/0x54\n axg_card_pdrv_init+0x20/0x1000 [snd_soc_meson_axg_sound_card]\n do_one_initcall+0xdc/0x25c\n do_init_module+0x10c/0x334\n load_module+0x24c4/0x26cc\n init_module_from_file+0xd4/0x128\n __arm64_sys_finit_module+0x1f4/0x41c\n invoke_syscall+0x60/0x188\n el0_svc_common.constprop.0+0x78/0x13c\n do_el0_svc+0x30/0x40\n el0_svc+0x38/0x78\n el0t_64_sync_handler+0x100/0x12c\n el0t_64_sync+0x190/0x194"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46829",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/432efdbe7da5ecfcbc0c2180cfdbab1441752a38",
            "https://git.kernel.org/stable/c/6a976e9a47e8e5b326de671811561cab12e6fb1f",
            "https://git.kernel.org/stable/c/1401da1486dc1cdbef6025fd74a3977df3a3e5d0",
            "https://git.kernel.org/stable/c/93f44655472d9cd418293d328f9d141ca234ad83",
            "https://git.kernel.org/stable/c/a92d81c9efec9280681c27a2c0a963fd0f1338e0",
            "https://git.kernel.org/stable/c/85f03ca98e07cd0786738b56ae73740bce0ac27f",
            "https://git.kernel.org/stable/c/f13b5afc5c4889569d84c3011ce449f61fccfb28",
            "https://git.kernel.org/stable/c/d33d26036a0274b472299d7dcdaa5fb34329f91b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtmutex: Drop rt_mutex::wait_lock before scheduling\n\nrt_mutex_handle_deadlock() is called with rt_mutex::wait_lock held.  In the\ngood case it returns with the lock held and in the deadlock case it emits a\nwarning and goes into an endless scheduling loop with the lock held, which\ntriggers the 'scheduling in atomic' warning.\n\nUnlock rt_mutex::wait_lock in the dead lock case before issuing the warning\nand dropping into the schedule for ever loop.\n\n[ tglx: Moved unlock before the WARN(), removed the pointless comment,\n  \tmassaged changelog, added Fixes tag ]"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46851",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b6ce047a81f508f5c60756db8dfb5ff486e4dad0",
            "https://git.kernel.org/stable/c/a7aeb03888b92304e2fc7d4d1c242f54a312561b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Avoid race between dcn10_set_drr() and dc_state_destruct()\n\ndc_state_destruct() nulls the resource context of the DC state. The pipe\ncontext passed to dcn10_set_drr() is a member of this resource context.\n\nIf dc_state_destruct() is called parallel to the IRQ processing (which\ncalls dcn10_set_drr() at some point), we can end up using already nulled\nfunction callback fields of struct stream_resource.\n\nThe logic in dcn10_set_drr() already tries to avoid this, by checking tg\nagainst NULL. But if the nulling happens exactly after the NULL check and\nbefore the next access, then we get a race.\n\nAvoid this by copying tg first to a local variable, and then use this\nvariable for all the operations. This should work, as long as nobody\nfrees the resource pool where the timing generators live.\n\n(cherry picked from commit a3cc326a43bdc48fbdf53443e1027a03e309b643)"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46852",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/84175dc5b2c932266a50c04e5ce342c30f817a2f",
            "https://git.kernel.org/stable/c/eb7fc8b65cea22f9038c52398c8b22849e9620ea",
            "https://git.kernel.org/stable/c/e79050882b857c37634baedbdcf7c2047c24cbff",
            "https://git.kernel.org/stable/c/ea5ff5d351b520524019f7ff7f9ce418de2dad87"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf: heaps: Fix off-by-one in CMA heap fault handler\n\nUntil VM_DONTEXPAND was added in commit 1c1914d6e8c6 (\"dma-buf: heaps:\nDon't track CMA dma-buf pages under RssFile\") it was possible to obtain\na mapping larger than the buffer size via mremap and bypass the overflow\ncheck in dma_buf_mmap_internal. When using such a mapping to attempt to\nfault past the end of the buffer, the CMA heap fault handler also checks\nthe fault offset against the buffer size, but gets the boundary wrong by\n1. Fix the boundary check so that we don't read off the end of the pages\narray and insert an arbitrary page in the mapping."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46830",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fa297c33faefe51e10244e8a378837fca4963228",
            "https://git.kernel.org/stable/c/939375737b5a0b1bf9b1e75129054e11bc9ca65e",
            "https://git.kernel.org/stable/c/ecdbe8ac86fb5538ccc623a41f88ec96c7168ab9",
            "https://git.kernel.org/stable/c/4bcdd831d9d01e0fb64faea50732b59b2ee88da1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Acquire kvm->srcu when handling KVM_SET_VCPU_EVENTS\n\nGrab kvm->srcu when processing KVM_SET_VCPU_EVENTS, as KVM will forcibly\nleave nested VMX/SVM if SMM mode is being toggled, and leaving nested VMX\nreads guest memory.\n\nNote, kvm_vcpu_ioctl_x86_set_vcpu_events() can also be called from KVM_RUN\nvia sync_regs(), which already holds SRCU.  I.e. trying to precisely use\nkvm_vcpu_srcu_read_lock() around the problematic SMM code would cause\nproblems.  Acquiring SRCU isn't all that expensive, so for simplicity,\ngrab it unconditionally for KVM_SET_VCPU_EVENTS.\n\n =============================\n WARNING: suspicious RCU usage\n 6.10.0-rc7-332d2c1d713e-next-vm #552 Not tainted\n -----------------------------\n include/linux/kvm_host.h:1027 suspicious rcu_dereference_check() usage!\n\n other info that might help us debug this:\n\n rcu_scheduler_active = 2, debug_locks = 1\n 1 lock held by repro/1071:\n  #0: ffff88811e424430 (&vcpu->mutex){+.+.}-{3:3}, at: kvm_vcpu_ioctl+0x7d/0x970 [kvm]\n\n stack backtrace:\n CPU: 15 PID: 1071 Comm: repro Not tainted 6.10.0-rc7-332d2c1d713e-next-vm #552\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x7f/0x90\n  lockdep_rcu_suspicious+0x13f/0x1a0\n  kvm_vcpu_gfn_to_memslot+0x168/0x190 [kvm]\n  kvm_vcpu_read_guest+0x3e/0x90 [kvm]\n  nested_vmx_load_msr+0x6b/0x1d0 [kvm_intel]\n  load_vmcs12_host_state+0x432/0xb40 [kvm_intel]\n  vmx_leave_nested+0x30/0x40 [kvm_intel]\n  kvm_vcpu_ioctl_x86_set_vcpu_events+0x15d/0x2b0 [kvm]\n  kvm_arch_vcpu_ioctl+0x1107/0x1750 [kvm]\n  ? mark_held_locks+0x49/0x70\n  ? kvm_vcpu_ioctl+0x7d/0x970 [kvm]\n  ? kvm_vcpu_ioctl+0x497/0x970 [kvm]\n  kvm_vcpu_ioctl+0x497/0x970 [kvm]\n  ? lock_acquire+0xba/0x2d0\n  ? find_held_lock+0x2b/0x80\n  ? do_user_addr_fault+0x40c/0x6f0\n  ? lock_release+0xb7/0x270\n  __x64_sys_ioctl+0x82/0xb0\n  do_syscall_64+0x6c/0x170\n  entry_SYSCALL_64_after_hwframe+0x4b/0x53\n RIP: 0033:0x7ff11eb1b539\n  </TASK>"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46832",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d3ff0f98a52f0aafe35aa314d1c442f4318be3db",
            "https://git.kernel.org/stable/c/e6cd871627abbb459d0ff6521d6bb9cf9d9f7522",
            "https://git.kernel.org/stable/c/b1d2051373bfc65371ce4ac8911ed984d0178c98",
            "https://git.kernel.org/stable/c/32ee0520159f1e8c2d6597c19690df452c528f30",
            "https://git.kernel.org/stable/c/189d3ed3b25beee26ffe2abed278208bece13f52",
            "https://git.kernel.org/stable/c/50f2b98dc83de7809a5c5bf0ccf9af2e75c37c13"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nMIPS: cevt-r4k: Don't call get_c0_compare_int if timer irq is installed\n\nThis avoids warning:\n\n[    0.118053] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:283\n\nCaused by get_c0_compare_int on secondary CPU.\n\nWe also skipped saving IRQ number to struct clock_event_device *cd as\nit's never used by clockevent core, as per comments it's only meant\nfor \"non CPU local devices\"."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46833",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c33a9806dc806bcb4a31dc71fb06979219181ad4",
            "https://git.kernel.org/stable/c/86db7bfb06704ef17340eeae71c832f21cfce35c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: void array out of bound when loop tnl_num\n\nWhen query reg inf of SSU, it loops tnl_num times. However, tnl_num comes\nfrom hardware and the length of array is a fixed value. To void array out\nof bound, make sure the loop time is not greater than the length of array"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46834",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/101737d8b88dbd4be6010bac398fe810f1950036",
            "https://git.kernel.org/stable/c/2899d58462ba868287d6ff3acad3675e7adf934f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: fail closed if we can't get max channel used in indirection tables\n\nCommit 0d1b7d6c9274 (\"bnxt: fix crashes when reducing ring count with\nactive RSS contexts\") proves that allowing indirection table to contain\nchannels with out of bounds IDs may lead to crashes. Currently the\nmax channel check in the core gets skipped if driver can't fetch\nthe indirection table or when we can't allocate memory.\n\nBoth of those conditions should be extremely rare but if they do\nhappen we should try to be safe and fail the channel change."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46836",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/31bd4fab49c0adc6228848357c1b1df9395858af",
            "https://git.kernel.org/stable/c/b2a50ffdd1a079869a62198a8d1441355c513c7c",
            "https://git.kernel.org/stable/c/6fe9ca2ca389114c8da66e534c18273497843e8a",
            "https://git.kernel.org/stable/c/ee0d382feb44ec0f445e2ad63786cd7f3f6a8199"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: aspeed_udc: validate endpoint index for ast udc\n\nWe should verify the bound of the array to assure that host\nmay not manipulate the index to point past endpoint array.\n\nFound by static analysis."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46853",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/09af8b0ba70072be831f3ec459f4063d570f9e24",
            "https://git.kernel.org/stable/c/af9ca9ca3e44f48b2a191e100d452fbf850c3d87",
            "https://git.kernel.org/stable/c/d1a1dfcec77c57b1181da93d11a3db1bc4eefa97",
            "https://git.kernel.org/stable/c/2a8787c1cdc7be24fdd8953ecd1a8743a1006235"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: nxp-fspi: fix the KASAN report out-of-bounds bug\n\nChange the memcpy length to fix the out-of-bounds issue when writing the\ndata that is not 4 byte aligned to TX FIFO.\n\nTo reproduce the issue, write 3 bytes data to NOR chip.\n\ndd if=3b of=/dev/mtd0\n[   36.926103] ==================================================================\n[   36.933409] BUG: KASAN: slab-out-of-bounds in nxp_fspi_exec_op+0x26ec/0x2838\n[   36.940514] Read of size 4 at addr ffff00081037c2a0 by task dd/455\n[   36.946721]\n[   36.948235] CPU: 3 UID: 0 PID: 455 Comm: dd Not tainted 6.11.0-rc5-gc7b0e37c8434 #1070\n[   36.956185] Hardware name: Freescale i.MX8QM MEK (DT)\n[   36.961260] Call trace:\n[   36.963723]  dump_backtrace+0x90/0xe8\n[   36.967414]  show_stack+0x18/0x24\n[   36.970749]  dump_stack_lvl+0x78/0x90\n[   36.974451]  print_report+0x114/0x5cc\n[   36.978151]  kasan_report+0xa4/0xf0\n[   36.981670]  __asan_report_load_n_noabort+0x1c/0x28\n[   36.986587]  nxp_fspi_exec_op+0x26ec/0x2838\n[   36.990800]  spi_mem_exec_op+0x8ec/0xd30\n[   36.994762]  spi_mem_no_dirmap_read+0x190/0x1e0\n[   36.999323]  spi_mem_dirmap_write+0x238/0x32c\n[   37.003710]  spi_nor_write_data+0x220/0x374\n[   37.007932]  spi_nor_write+0x110/0x2e8\n[   37.011711]  mtd_write_oob_std+0x154/0x1f0\n[   37.015838]  mtd_write_oob+0x104/0x1d0\n[   37.019617]  mtd_write+0xb8/0x12c\n[   37.022953]  mtdchar_write+0x224/0x47c\n[   37.026732]  vfs_write+0x1e4/0x8c8\n[   37.030163]  ksys_write+0xec/0x1d0\n[   37.033586]  __arm64_sys_write+0x6c/0x9c\n[   37.037539]  invoke_syscall+0x6c/0x258\n[   37.041327]  el0_svc_common.constprop.0+0x160/0x22c\n[   37.046244]  do_el0_svc+0x44/0x5c\n[   37.049589]  el0_svc+0x38/0x78\n[   37.052681]  el0t_64_sync_handler+0x13c/0x158\n[   37.057077]  el0t_64_sync+0x190/0x194\n[   37.060775]\n[   37.062274] Allocated by task 455:\n[   37.065701]  kasan_save_stack+0x2c/0x54\n[   37.069570]  kasan_save_track+0x20/0x3c\n[   37.073438]  kasan_save_alloc_info+0x40/0x54\n[   37.077736]  __kasan_kmalloc+0xa0/0xb8\n[   37.081515]  __kmalloc_noprof+0x158/0x2f8\n[   37.085563]  mtd_kmalloc_up_to+0x120/0x154\n[   37.089690]  mtdchar_write+0x130/0x47c\n[   37.093469]  vfs_write+0x1e4/0x8c8\n[   37.096901]  ksys_write+0xec/0x1d0\n[   37.100332]  __arm64_sys_write+0x6c/0x9c\n[   37.104287]  invoke_syscall+0x6c/0x258\n[   37.108064]  el0_svc_common.constprop.0+0x160/0x22c\n[   37.112972]  do_el0_svc+0x44/0x5c\n[   37.116319]  el0_svc+0x38/0x78\n[   37.119401]  el0t_64_sync_handler+0x13c/0x158\n[   37.123788]  el0t_64_sync+0x190/0x194\n[   37.127474]\n[   37.128977] The buggy address belongs to the object at ffff00081037c2a0\n[   37.128977]  which belongs to the cache kmalloc-8 of size 8\n[   37.141177] The buggy address is located 0 bytes inside of\n[   37.141177]  allocated 3-byte region [ffff00081037c2a0, ffff00081037c2a3)\n[   37.153465]\n[   37.154971] The buggy address belongs to the physical page:\n[   37.160559] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x89037c\n[   37.168596] flags: 0xbfffe0000000000(node=0|zone=2|lastcpupid=0x1ffff)\n[   37.175149] page_type: 0xfdffffff(slab)\n[   37.179021] raw: 0bfffe0000000000 ffff000800002500 dead000000000122 0000000000000000\n[   37.186788] raw: 0000000000000000 0000000080800080 00000001fdffffff 0000000000000000\n[   37.194553] page dumped because: kasan: bad access detected\n[   37.200144]\n[   37.201647] Memory state around the buggy address:\n[   37.206460]  ffff00081037c180: fa fc fc fc fa fc fc fc fa fc fc fc fa fc fc fc\n[   37.213701]  ffff00081037c200: fa fc fc fc 05 fc fc fc 03 fc fc fc 02 fc fc fc\n[   37.220946] >ffff00081037c280: 06 fc fc fc 03 fc fc fc fc fc fc fc fc fc fc fc\n[   37.228186]                                ^\n[   37.232473]  ffff00081037c300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   37.239718]  ffff00081037c380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   37.246962] ==============================================================\n---truncated---"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46840",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c847b28a799733b04574060ab9d00f215970627d",
            "https://git.kernel.org/stable/c/71291aa7246645ef622621934d2067400380645e",
            "https://git.kernel.org/stable/c/c60676b81fab456b672796830f6d8057058f029c",
            "https://git.kernel.org/stable/c/728d4d045b628e006b48a448f3326a7194c88d32",
            "https://git.kernel.org/stable/c/9cc887ac24b7a0598f4042ae9af6b9a33072f75b",
            "https://git.kernel.org/stable/c/7d1df13bf078ffebfedd361d714ff6cee1ff01b9",
            "https://git.kernel.org/stable/c/03804641ec2d0da4fa088ad21c88e703d151ce16",
            "https://git.kernel.org/stable/c/b8ccef048354074a548f108e51d0557d6adfd3a3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: clean up our handling of refs == 0 in snapshot delete\n\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46854",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f43190e33224c49e1c7ebbc25923ff400d87ec00",
            "https://git.kernel.org/stable/c/34fcac26216ce17886af3eb392355b459367af1a",
            "https://git.kernel.org/stable/c/ce8eabc912fe9b9a62be1a5c6af5ad2196e90fc2",
            "https://git.kernel.org/stable/c/cbd7ec083413c6a2e0c326d49e24ec7d12c7a9e0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dpaa: Pad packets to ETH_ZLEN\n\nWhen sending packets under 60 bytes, up to three bytes of the buffer\nfollowing the data may be leaked. Avoid this by extending all packets to\nETH_ZLEN, ensuring nothing is leaked in the padding. This bug can be\nreproduced by running\n\n\t$ ping -s 11 destination"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46855",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/33c2258bf8cb17fba9e58b111d4c4f4cf43a4896",
            "https://git.kernel.org/stable/c/83e6fb59040e8964888afcaa5612cc1243736715",
            "https://git.kernel.org/stable/c/1f68e097e20d3c695281a9c6433acc37be47fe11",
            "https://git.kernel.org/stable/c/8b26ff7af8c32cb4148b3e147c52f9e4c695209c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_socket: fix sk refcount leaks\n\nWe must put 'sk' reference before returning."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46856",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/67b61e2f4c9c5df97a9a2ef7a1fe35eae00531f4",
            "https://git.kernel.org/stable/c/3f62ea572b3e8e3f10c39a9cb4f04ca9ae5f2952"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: dp83822: Fix NULL pointer dereference on DP83825 devices\n\nThe probe() function is only used for DP83822 and DP83826 PHY,\nleaving the private data pointer uninitialized for the DP83825 models\nwhich causes a NULL pointer dereference in the recently introduced/changed\nfunctions dp8382x_config_init() and dp83822_set_wol().\n\nAdd the dp8382x_probe() function, so all PHY models will have a valid\nprivate data pointer to fix this issue and also prevent similar issues\nin the future."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46857",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/52c4beb79e095e0631b5cac46ed48a2aefe51985",
            "https://git.kernel.org/stable/c/65feee671e37f3b6eda0b6af28f204b5bcf7fa50",
            "https://git.kernel.org/stable/c/505ae01f75f839b54329164bbfecf24cc1361b31",
            "https://git.kernel.org/stable/c/b1d305abef4640af1b4f1b4774d513cd81b10cfc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix bridge mode operations when there are no VFs\n\nCurrently, trying to set the bridge mode attribute when numvfs=0 leads to a\ncrash:\n\nbridge link set dev eth2 hwmode vepa\n\n[  168.967392] BUG: kernel NULL pointer dereference, address: 0000000000000030\n[...]\n[  168.969989] RIP: 0010:mlx5_add_flow_rules+0x1f/0x300 [mlx5_core]\n[...]\n[  168.976037] Call Trace:\n[  168.976188]  <TASK>\n[  168.978620]  _mlx5_eswitch_set_vepa_locked+0x113/0x230 [mlx5_core]\n[  168.979074]  mlx5_eswitch_set_vepa+0x7f/0xa0 [mlx5_core]\n[  168.979471]  rtnl_bridge_setlink+0xe9/0x1f0\n[  168.979714]  rtnetlink_rcv_msg+0x159/0x400\n[  168.980451]  netlink_rcv_skb+0x54/0x100\n[  168.980675]  netlink_unicast+0x241/0x360\n[  168.980918]  netlink_sendmsg+0x1f6/0x430\n[  168.981162]  ____sys_sendmsg+0x3bb/0x3f0\n[  168.982155]  ___sys_sendmsg+0x88/0xd0\n[  168.985036]  __sys_sendmsg+0x59/0xa0\n[  168.985477]  do_syscall_64+0x79/0x150\n[  168.987273]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  168.987773] RIP: 0033:0x7f8f7950f917\n\n(esw->fdb_table.legacy.vepa_fdb is null)\n\nThe bridge mode is only relevant when there are multiple functions per\nport. Therefore, prevent setting and getting this setting when there are no\nVFs.\n\nNote that after this change, there are no settings to change on the PF\ninterface using `bridge link` when there are no VFs, so the interface no\nlonger appears in the `bridge link` output."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46858",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/67409b358500c71632116356a0b065f112d7b707",
            "https://git.kernel.org/stable/c/6452b162549c7f9ef54655d3fb9977b9192e6e5b",
            "https://git.kernel.org/stable/c/12134a652b0a10064844ea235173e70246eba6dc",
            "https://git.kernel.org/stable/c/b4cd80b0338945a94972ac3ed54f8338d2da2076"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: Fix uaf in __timer_delete_sync\n\nThere are two paths to access mptcp_pm_del_add_timer, result in a race\ncondition:\n\n     CPU1\t\t\t\tCPU2\n     ====                               ====\n     net_rx_action\n     napi_poll                          netlink_sendmsg\n     __napi_poll                        netlink_unicast\n     process_backlog                    netlink_unicast_kernel\n     __netif_receive_skb                genl_rcv\n     __netif_receive_skb_one_core       netlink_rcv_skb\n     NF_HOOK                            genl_rcv_msg\n     ip_local_deliver_finish            genl_family_rcv_msg\n     ip_protocol_deliver_rcu            genl_family_rcv_msg_doit\n     tcp_v4_rcv                         mptcp_pm_nl_flush_addrs_doit\n     tcp_v4_do_rcv                      mptcp_nl_remove_addrs_list\n     tcp_rcv_established                mptcp_pm_remove_addrs_and_subflows\n     tcp_data_queue                     remove_anno_list_by_saddr\n     mptcp_incoming_options             mptcp_pm_del_add_timer\n     mptcp_pm_del_add_timer             kfree(entry)\n\nIn remove_anno_list_by_saddr(running on CPU2), after leaving the critical\nzone protected by \"pm.lock\", the entry will be released, which leads to the\noccurrence of uaf in the mptcp_pm_del_add_timer(running on CPU1).\n\nKeeping a reference to add_timer inside the lock, and calling\nsk_stop_timer_sync() with this reference, instead of \"entry->add_timer\".\n\nMove list_del(&entry->list) to mptcp_pm_del_add_timer and inside the pm lock,\ndo not directly access any members of the entry outside the pm lock, which\ncan avoid similar \"entry->x\" uaf."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46859",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9291fadbd2720a869b1d2fcf82305648e2e62a16",
            "https://git.kernel.org/stable/c/6821a82616f60aa72c5909b3e252ad97fb9f7e2a",
            "https://git.kernel.org/stable/c/b38c19783286a71693c2194ed1b36665168c09c4",
            "https://git.kernel.org/stable/c/f52e98d16e9bd7dd2b3aef8e38db5cbc9899d6a4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: panasonic-laptop: Fix SINF array out of bounds accesses\n\nThe panasonic laptop code in various places uses the SINF array with index\nvalues of 0 - SINF_CUR_BRIGHT(0x0d) without checking that the SINF array\nis big enough.\n\nNot all panasonic laptops have this many SINF array entries, for example\nthe Toughbook CF-18 model only has 10 SINF array entries. So it only\nsupports the AC+DC brightness entries and mute.\n\nCheck that the SINF array has a minimum size which covers all AC+DC\nbrightness entries and refuse to load if the SINF array is smaller.\n\nFor higher SINF indexes hide the sysfs attributes when the SINF array\ndoes not contain an entry for that attribute, avoiding show()/store()\naccessing the array out of bounds and add bounds checking to the probe()\nand resume() code accessing these."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46860",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4bfee9346d8c17d928ef6da2b8bffab88fa2a553",
            "https://git.kernel.org/stable/c/8d92bafd4c67efb692f722d73a07412b5f88c6d6",
            "https://git.kernel.org/stable/c/479ffee68d59c599f8aed8fa2dcc8e13e7bd13c3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7921: fix NULL pointer access in mt7921_ipv6_addr_change\n\nWhen disabling wifi mt7921_ipv6_addr_change() is called as a notifier.\nAt this point mvif->phy is already NULL so we cannot use it here."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46861",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4d1cfa3afb8627435744ecdc6d8b58bc72ee0f4c",
            "https://git.kernel.org/stable/c/08ca800b0cd56d5e26722f68b18bbbf6840bf44b",
            "https://git.kernel.org/stable/c/74efed51e0a4d62f998f806c307778b47fc73395"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: ipheth: do not stop RX on failing RX callback\n\nRX callbacks can fail for multiple reasons:\n\n* Payload too short\n* Payload formatted incorrecly (e.g. bad NCM framing)\n* Lack of memory\n\nNone of these should cause the driver to seize up.\n\nMake such failures non-critical and continue processing further\nincoming URBs."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46862",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/01281a9e8275946aa725db0919769b8d35af3a11",
            "https://git.kernel.org/stable/c/bf6d7a44a144aa9c476dee83c23faf3151181bab"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: soc-acpi-intel-mtl-match: add missing empty item\n\nThere is no links_num in struct snd_soc_acpi_mach {}, and we test\n!link->num_adr as a condition to end the loop in hda_sdw_machine_select().\nSo an empty item in struct snd_soc_acpi_link_adr array is required."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46863",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8eb57389d8ad91c67bf844f5aae4caef74b9091b",
            "https://git.kernel.org/stable/c/c4246f1fe9f24f8dcd97887ed67d8fcfd91f4796"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: soc-acpi-intel-lnl-match: add missing empty item\n\nThere is no links_num in struct snd_soc_acpi_mach {}, and we test\n!link->num_adr as a condition to end the loop in hda_sdw_machine_select().\nSo an empty item in struct snd_soc_acpi_link_adr array is required."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46864",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2ae1beb3ab4f28868cc5d1541d05e1fbee3ad825",
            "https://git.kernel.org/stable/c/d6f018a3b49d0a94ddbd0e479c2af6b19724e434",
            "https://git.kernel.org/stable/c/b9af6418279c4cf73ca073f8ea024992b38be8ab"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/hyperv: fix kexec crash due to VP assist page corruption\n\ncommit 9636be85cc5b (\"x86/hyperv: Fix hyperv_pcpu_input_arg handling when\nCPUs go online/offline\") introduces a new cpuhp state for hyperv\ninitialization.\n\ncpuhp_setup_state() returns the state number if state is\nCPUHP_AP_ONLINE_DYN or CPUHP_BP_PREPARE_DYN and 0 for all other states.\nFor the hyperv case, since a new cpuhp state was introduced it would\nreturn 0. However, in hv_machine_shutdown(), the cpuhp_remove_state() call\nis conditioned upon \"hyperv_init_cpuhp > 0\". This will never be true and\nso hv_cpu_die() won't be called on all CPUs. This means the VP assist page\nwon't be reset. When the kexec kernel tries to setup the VP assist page\nagain, the hypervisor corrupts the memory region of the old VP assist page\ncausing a panic in case the kexec kernel is using that memory elsewhere.\nThis was originally fixed in commit dfe94d4086e4 (\"x86/hyperv: Fix kexec\npanic/hang issues\").\n\nGet rid of hyperv_init_cpuhp entirely since we are no longer using a\ndynamic cpuhp state and use CPUHP_AP_HYPERV_ONLINE directly with\ncpuhp_remove_state()."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46865",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5d537b8d900514509622ce92330b70d2e581d409",
            "https://git.kernel.org/stable/c/7ae890ee19479eeeb87724cca8430b5cb3660c74",
            "https://git.kernel.org/stable/c/aca06c617c83295f0caa486ad608fbef7bdc11e8",
            "https://git.kernel.org/stable/c/4c8002277167125078e6b9b90137bdf443ebaa08"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfou: fix initialization of grc\n\nThe grc must be initialize first. There can be a condition where if\nfou is NULL, goto out will be executed and grc would be used\nuninitialized."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46866",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/abc8feacacf8fae10eecf6fea7865e8c1fee419c",
            "https://git.kernel.org/stable/c/94c4aa266111262c96c98f822d1bccc494786fee"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/client: add missing bo locking in show_meminfo()\n\nbo_meminfo() wants to inspect bo state like tt and the ttm resource,\nhowever this state can change at any point leading to stuff like NPD and\nUAF, if the bo lock is not held. Grab the bo lock when calling\nbo_meminfo(), ensuring we drop any spinlocks first. In the case of\nobject_idr we now also need to hold a ref.\n\nv2 (MattB)\n  - Also add xe_bo_assert_held()\n\n(cherry picked from commit 4f63d712fa104c3ebefcb289d1e733e86d8698c7)"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46867",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9d3de463e23bfb1ff1567a32b099b1b3e5286a48",
            "https://git.kernel.org/stable/c/9bd7ff293fc84792514aeafa06c5a17f05cb5f4b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/client: fix deadlock in show_meminfo()\n\nThere is a real deadlock as well as sleeping in atomic() bug in here, if\nthe bo put happens to be the last ref, since bo destruction wants to\ngrab the same spinlock and sleeping locks.  Fix that by dropping the ref\nusing xe_bo_put_deferred(), and moving the final commit outside of the\nlock. Dropping the lock around the put is tricky since the bo can go\nout of scope and delete itself from the list, making it difficult to\nnavigate to the next list entry.\n\n(cherry picked from commit 0083b8e6f11d7662283a267d4ce7c966812ffd8a)"
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46868",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8c6a5a1fc02ad1d62d06897ab330693d4d27cd03",
            "https://git.kernel.org/stable/c/db213b0cfe3268d8b1d382b3bcc999c687a2567f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()\n\nIf the __qcuefi pointer is not set, then in the original code, we would\nhold onto the lock.  That means that if we tried to set it later, then\nit would cause a deadlock.  Drop the lock on the error path.  That's\nwhat all the callers are expecting."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-9281",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://vuldb.com/?id.278663",
            "https://vuldb.com/?ctiid.278663",
            "https://vuldb.com/?submit.411164",
            "https://github.com/bg5sbk/MiniCMS/issues/51"
        ],
        "summary": "A vulnerability was found in bg5sbk MiniCMS up to 1.11 and classified as problematic. This issue affects some unknown processing of the file post-edit.php. The manipulation leads to cross-site request forgery. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The initial researcher advisory mentions confusing version and file name information. The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T13:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-9282",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://vuldb.com/?id.278664",
            "https://vuldb.com/?ctiid.278664",
            "https://vuldb.com/?submit.411165",
            "https://github.com/bg5sbk/MiniCMS/issues/52"
        ],
        "summary": "A vulnerability was found in bg5sbk MiniCMS 1.11. It has been classified as problematic. Affected is an unknown function of the file page-edit.php. The manipulation leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The initial researcher advisory mentions confusing version and file name information. The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-27T07:15:00",
        "access": {},
        "assigner": "patrick@puiterwijk.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-9029",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://bugzilla.redhat.com/show_bug.cgi?id=2313704",
            "https://sourceforge.net/p/freeimage/bugs/351/"
        ],
        "summary": "A flaw was found in the freeimage library. Processing a crafted image can cause a buffer over-read of 1 byte in the read_iptc_profile function in the Source/Metadata/IPTC.cpp file because the size of the profile is not being sanitized, causing a crash in the application linked to the library, resulting in a denial of service."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-09-26T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41605",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "In Foxit PDF Reader before 2024.3, and PDF Editor before 2024.3 and 13.x before 13.1.4, an attacker can replace an update file with a Trojan horse via side loading, because the update service lacks integrity validation for the updater. Attacker-controlled code may thus be executed."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-08-22T03:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-7384",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/0c747bc9-582c-4b9f-85a4-469c446d50f5?source=cve",
            "https://plugins.trac.wordpress.org/browser/acymailing/trunk/back/libraries/wordpress/file.php#L47",
            "https://wordpress.org/plugins/acymailing/#developers",
            "https://www.acymailing.com/changelog/",
            "https://plugins.trac.wordpress.org/changeset?old_path=%2Facymailing&old=3118953&new_path=%2Facymailing&new=3137644&sfp_email=&sfph_mail=",
            "https://plugins.trac.wordpress.org/changeset/3137644/"
        ],
        "summary": "The AcyMailing \u2013 An Ultimate Newsletter Plugin and Marketing Automation Solution for WordPress plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the acym_extractArchive function in all versions up to, and including, 9.7.2. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible."
    },
    {
        "Modified": "2024-09-27T13:15:00",
        "Published": "2024-01-18T16:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2024-0607",
        "impact": {},
        "last-modified": "2024-09-27T13:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-0607",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2258635",
            "https://github.com/torvalds/linux/commit/c301f0981fdd3fd1ffac6836b423c4d7a8e0eb63"
        ],
        "summary": "A flaw was found in the Netfilter subsystem in the Linux kernel. The issue is in the nft_byteorder_eval() function, where the code iterates through a loop and writes to the `dst` array. On each iteration, 8 bytes are written, but `dst` is an array of u32, so each element only has space for 4 bytes. That means every iteration overwrites part of the previous element corrupting this array of u32. This flaw allows a local user to cause a denial of service or potentially break NetFilter functionality."
    },
    {
        "Modified": "2024-09-27T13:05:00",
        "Published": "2024-08-23T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-7258",
        "impact": {},
        "last-modified": "2024-09-27T13:05:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/ffd6e18d-9173-4911-af64-5d54c6d2e052?source=cve",
            "https://plugins.trac.wordpress.org/browser/wp-product-feed-manager/trunk/includes/data/js/wppfm_ajaxdatahandling.js#L537",
            "https://plugins.trac.wordpress.org/browser/wp-product-feed-manager/trunk/includes/data/js/wppfm_ajaxdatahandling.js#L546",
            "https://plugins.trac.wordpress.org/browser/wp-product-feed-manager/trunk/includes/data/js/wppfm_ajaxdatahandling.js#L575",
            "https://plugins.trac.wordpress.org/changeset/3137475/"
        ],
        "summary": "The WooCommerce Google Feed Manager plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the 'wppfm_removeFeedFile' function in all versions up to, and including, 2.8.0. This makes it possible for authenticated attackers, with Contributor-level access and above, to delete arbitrary files on the server, which can easily lead to remote code execution when the right file is deleted (such as wp-config.php)."
    },
    {
        "Modified": "2024-09-27T12:58:00",
        "Published": "2024-09-24T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-8432",
        "impact": {},
        "last-modified": "2024-09-27T12:58:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/23b33b77-2e72-4959-bdce-646e968f2a73?source=cve",
            "https://plugins.trac.wordpress.org/browser/webba-booking-lite/tags/5.0.48/includes/class-wbk-request-manager.php#L1986",
            "https://plugins.trac.wordpress.org/changeset/3152926/webba-booking-lite/trunk/includes/class-wbk-request-manager.php"
        ],
        "summary": "The Appointment & Event Booking Calendar Plugin \u2013 Webba Booking plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the save_appearance() function in all versions up to, and including, 5.0.48. This makes it possible for authenticated attackers, with Subscriber-level access and above, to modify the booking form's CSS."
    },
    {
        "Modified": "2024-09-27T12:57:00",
        "Published": "2024-09-24T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8544",
        "impact": {},
        "last-modified": "2024-09-27T12:57:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/fc4f4a78-7224-4f58-a103-7ad4df0eb36e?source=cve",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3151635%40facebook-conversion-pixel&new=3151635%40facebook-conversion-pixel&sfp_email=&sfph_mail=",
            "https://plugins.trac.wordpress.org/browser/facebook-conversion-pixel/trunk/includes/notices/notices.php?rev=2918763#L81"
        ],
        "summary": "The Pixel Cat \u2013 Conversion Pixel Manager plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 3.0.5. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-09-27T12:56:00",
        "Published": "2024-09-24T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8657",
        "impact": {},
        "last-modified": "2024-09-27T12:56:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/2a295969-454a-47fb-bc35-4e84db38c887?source=cve",
            "https://plugins.trac.wordpress.org/browser/garden-gnome-package/tags/2.2.9/include/ggpackage.php#L310",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3154566%40garden-gnome-package&new=3154566%40garden-gnome-package&sfp_email=&sfph_mail="
        ],
        "summary": "The Garden Gnome Package plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's ggpkg shortcode in all versions up to, and including, 2.2.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    }
]