[
    {
        "Modified": "2024-08-19T09:15:00",
        "Published": "2024-08-19T09:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42675",
        "impact": {},
        "last-modified": "2024-08-19T09:15:00",
        "references": [],
        "summary": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none."
    },
    {
        "Modified": "2024-08-19T08:15:00",
        "Published": "2024-08-19T07:15:00",
        "access": {},
        "assigner": "security@open-xchange.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25582",
        "impact": {},
        "last-modified": "2024-08-19T08:15:00",
        "references": [
            "https://documentation.open-xchange.com/appsuite/security/advisories/csaf/2024/oxas-adv-2024-0003.json",
            "https://software.open-xchange.com/products/appsuite/doc/Release_Notes_for_Patch_Release_6277_7.10.6_2024-05-06.pdf"
        ],
        "summary": "Module savepoints could be abused to inject references to malicious code delivered through the same domain. Attackers could perform malicious API requests or extract information from the users account. Exploiting this vulnerability requires temporary access to an account or successful social engineering to make a user follow a prepared link to a malicious account. Please deploy the provided updates and patch releases. The savepoint module path has been restricted to modules that provide the feature, excluding any arbitrary or non-existing modules. No publicly available exploits are known."
    },
    {
        "Modified": "2024-08-19T06:15:00",
        "Published": "2024-08-19T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6330",
        "impact": {},
        "last-modified": "2024-08-19T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/95b532e0-1ffb-421e-b9c0-de03f89491d7/"
        ],
        "summary": "The GEO my WP WordPress plugin before 4.5.0.2 does not prevent unauthenticated attackers from including arbitrary files in PHP's execution context, which leads to Remote Code Execution."
    },
    {
        "Modified": "2024-08-19T06:15:00",
        "Published": "2024-08-19T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6451",
        "impact": {},
        "last-modified": "2024-08-19T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/fc06d413-a227-470c-a5b7-cdab57aeab34/"
        ],
        "summary": "AI Engine < 2.4.3 is susceptible to remote-code-execution (RCE) via Log Poisoning. The AI Engine WordPress plugin before 2.5.1 fails to validate the file extension of \"logs_path\", allowing Administrators to change log filetypes from .log to .php."
    },
    {
        "Modified": "2024-08-19T06:15:00",
        "Published": "2024-08-19T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6843",
        "impact": {},
        "last-modified": "2024-08-19T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/9a5cb440-065a-445a-9a09-55bd5f782e85/"
        ],
        "summary": "The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not sanitise and escape user inputs, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks against admins"
    },
    {
        "Modified": "2024-08-19T06:15:00",
        "Published": "2024-06-11T15:16:00",
        "access": {},
        "assigner": "psirt@fortinet.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-23111",
        "impact": {},
        "last-modified": "2024-08-19T06:15:00",
        "references": [
            "https://fortiguard.fortinet.com/psirt/FG-IR-23-471"
        ],
        "summary": "An improper neutralization of input during web page Generation ('Cross-site Scripting') vulnerability [CWE-79] in FortiOS version 7.4.3 and below, 7.2 all versions, 7.0 all versions and FortiProxy version 7.4.2 and below, 7.2 all versions, 7.0 all versions reboot page may allow a remote privileged attacker with super-admin access to execute JavaScript code via crafted HTTP GET requests."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43828",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/181e63cd595c688194e07332f9944b3a63193de2",
            "https://git.kernel.org/stable/c/c6e67df64783e99a657ef2b8c834ba2bf54c539c",
            "https://git.kernel.org/stable/c/81f819c537d29932e4b9267f02411cbc8b355178",
            "https://git.kernel.org/stable/c/907c3fe532253a6ef4eb9c4d67efb71fab58c706",
            "https://git.kernel.org/stable/c/5ed0496e383cb6de120e56991385dce70bbb87c1",
            "https://git.kernel.org/stable/c/0619f7750f2b178a1309808832ab20d85e0ad121"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix infinite loop when replaying fast_commit\n\nWhen doing fast_commit replay an infinite loop may occur due to an\nuninitialized extent_status struct.  ext4_ext_determine_insert_hole() does\nnot detect the replay and calls ext4_es_find_extent_range(), which will\nreturn immediately without initializing the 'es' variable.\n\nBecause 'es' contains garbage, an integer overflow may happen causing an\ninfinite loop in this function, easily reproducible using fstest generic/039.\n\nThis commit fixes this issue by unconditionally initializing the structure\nin function ext4_es_find_extent_range().\n\nThanks to Zhang Yi, for figuring out the real problem!"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43829",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f28b353c0c6c7831a70ccca881bf2db5e6785cdd",
            "https://git.kernel.org/stable/c/4b1f303bdeceac049e56e4b20eb5280bd9e02f4f",
            "https://git.kernel.org/stable/c/d4c57354a06cb4a77998ff8aa40af89eee30e07b",
            "https://git.kernel.org/stable/c/7bd09a2db0f617377027a2bb0b9179e6959edff3",
            "https://git.kernel.org/stable/c/62ef8d7816c8e4a6088275553818b9afc0ffaa03",
            "https://git.kernel.org/stable/c/4e87f592a46bb804d8f833da6ce702ae4b55053f",
            "https://git.kernel.org/stable/c/3efe34f95b1ac8c138a46b14ce75956db0d6ee7c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/qxl: Add check for drm_cvt_mode\n\nAdd check for the return value of drm_cvt_mode() and return the error if\nit fails in order to avoid NULL pointer dereference."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43830",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/734ba6437e80dfc780e9ee9d95f912392d12b5ea",
            "https://git.kernel.org/stable/c/cb8aa9d2a4c8a15d6a43ccf901ef3d094aa60374",
            "https://git.kernel.org/stable/c/0788a6f3523d3686a9eed5ea1e6fcce6841277b2",
            "https://git.kernel.org/stable/c/c0dc9adf9474ecb7106e60e5472577375aedaed3",
            "https://git.kernel.org/stable/c/c3b7a650c8717aa89df318364609c86cbc040156",
            "https://git.kernel.org/stable/c/d1415125b701ef13370e2761f691ec632a5eb93a",
            "https://git.kernel.org/stable/c/09c1583f0e10c918855d6e7540a79461a353e5d6",
            "https://git.kernel.org/stable/c/3fb6a9d67cfd812a547ac73ec02e1077c26c640d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nleds: trigger: Unregister sysfs attributes before calling deactivate()\n\nTriggers which have trigger specific sysfs attributes typically store\nrelated data in trigger-data allocated by the activate() callback and\nfreed by the deactivate() callback.\n\nCalling device_remove_groups() after calling deactivate() leaves a window\nwhere the sysfs attributes show/store functions could be called after\ndeactivation and then operate on the just freed trigger-data.\n\nMove the device_remove_groups() call to before deactivate() to close\nthis race window.\n\nThis also makes the deactivation path properly do things in reverse order\nof the activation path which calls the activate() callback before calling\ndevice_add_groups()."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43834",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3fc1be360b99baeea15cdee3cf94252cd3a72d26",
            "https://git.kernel.org/stable/c/bf0ce5aa5f2525ed1b921ba36de96e458e77f482",
            "https://git.kernel.org/stable/c/12144069209eec7f2090ce9afa15acdcc2c2a537",
            "https://git.kernel.org/stable/c/59a931c5b732ca5fc2ca727f5a72aeabaafa85ec",
            "https://git.kernel.org/stable/c/be9d08ff102df3ac4f66e826ea935cf3af63a4bd",
            "https://git.kernel.org/stable/c/6c390ef198aa69795427a5cb5fd7cb4bc7e6cd7a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxdp: fix invalid wait context of page_pool_destroy()\n\nIf the driver uses a page pool, it creates a page pool with\npage_pool_create().\nThe reference count of page pool is 1 as default.\nA page pool will be destroyed only when a reference count reaches 0.\npage_pool_destroy() is used to destroy page pool, it decreases a\nreference count.\nWhen a page pool is destroyed, ->disconnect() is called, which is\nmem_allocator_disconnect().\nThis function internally acquires mutex_lock().\n\nIf the driver uses XDP, it registers a memory model with\nxdp_rxq_info_reg_mem_model().\nThe xdp_rxq_info_reg_mem_model() internally increases a page pool\nreference count if a memory model is a page pool.\nNow the reference count is 2.\n\nTo destroy a page pool, the driver should call both page_pool_destroy()\nand xdp_unreg_mem_model().\nThe xdp_unreg_mem_model() internally calls page_pool_destroy().\nOnly page_pool_destroy() decreases a reference count.\n\nIf a driver calls page_pool_destroy() then xdp_unreg_mem_model(), we\nwill face an invalid wait context warning.\nBecause xdp_unreg_mem_model() calls page_pool_destroy() with\nrcu_read_lock().\nThe page_pool_destroy() internally acquires mutex_lock().\n\nSplat looks like:\n=============================\n[ BUG: Invalid wait context ]\n6.10.0-rc6+ #4 Tainted: G W\n-----------------------------\nethtool/1806 is trying to lock:\nffffffff90387b90 (mem_id_lock){+.+.}-{4:4}, at: mem_allocator_disconnect+0x73/0x150\nother info that might help us debug this:\ncontext-{5:5}\n3 locks held by ethtool/1806:\nstack backtrace:\nCPU: 0 PID: 1806 Comm: ethtool Tainted: G W 6.10.0-rc6+ #4 f916f41f172891c800f2fed\nHardware name: ASUS System Product Name/PRIME Z690-P D4, BIOS 0603 11/01/2021\nCall Trace:\n<TASK>\ndump_stack_lvl+0x7e/0xc0\n__lock_acquire+0x1681/0x4de0\n? _printk+0x64/0xe0\n? __pfx_mark_lock.part.0+0x10/0x10\n? __pfx___lock_acquire+0x10/0x10\nlock_acquire+0x1b3/0x580\n? mem_allocator_disconnect+0x73/0x150\n? __wake_up_klogd.part.0+0x16/0xc0\n? __pfx_lock_acquire+0x10/0x10\n? dump_stack_lvl+0x91/0xc0\n__mutex_lock+0x15c/0x1690\n? mem_allocator_disconnect+0x73/0x150\n? __pfx_prb_read_valid+0x10/0x10\n? mem_allocator_disconnect+0x73/0x150\n? __pfx_llist_add_batch+0x10/0x10\n? console_unlock+0x193/0x1b0\n? lockdep_hardirqs_on+0xbe/0x140\n? __pfx___mutex_lock+0x10/0x10\n? tick_nohz_tick_stopped+0x16/0x90\n? __irq_work_queue_local+0x1e5/0x330\n? irq_work_queue+0x39/0x50\n? __wake_up_klogd.part.0+0x79/0xc0\n? mem_allocator_disconnect+0x73/0x150\nmem_allocator_disconnect+0x73/0x150\n? __pfx_mem_allocator_disconnect+0x10/0x10\n? mark_held_locks+0xa5/0xf0\n? rcu_is_watching+0x11/0xb0\npage_pool_release+0x36e/0x6d0\npage_pool_destroy+0xd7/0x440\nxdp_unreg_mem_model+0x1a7/0x2a0\n? __pfx_xdp_unreg_mem_model+0x10/0x10\n? kfree+0x125/0x370\n? bnxt_free_ring.isra.0+0x2eb/0x500\n? bnxt_free_mem+0x5ac/0x2500\nxdp_rxq_info_unreg+0x4a/0xd0\nbnxt_free_mem+0x1356/0x2500\nbnxt_close_nic+0xf0/0x3b0\n? __pfx_bnxt_close_nic+0x10/0x10\n? ethnl_parse_bit+0x2c6/0x6d0\n? __pfx___nla_validate_parse+0x10/0x10\n? __pfx_ethnl_parse_bit+0x10/0x10\nbnxt_set_features+0x2a8/0x3e0\n__netdev_update_features+0x4dc/0x1370\n? ethnl_parse_bitset+0x4ff/0x750\n? __pfx_ethnl_parse_bitset+0x10/0x10\n? __pfx___netdev_update_features+0x10/0x10\n? mark_held_locks+0xa5/0xf0\n? _raw_spin_unlock_irqrestore+0x42/0x70\n? __pm_runtime_resume+0x7d/0x110\nethnl_set_features+0x32d/0xa20\n\nTo fix this problem, it uses rhashtable_lookup_fast() instead of\nrhashtable_lookup() with rcu_read_lock().\nUsing xa without rcu_read_lock() here is safe.\nxa is freed by __xdp_mem_allocator_rcu_free() and this is called by\ncall_rcu() of mem_xa_remove().\nThe mem_xa_remove() is called by page_pool_destroy() if a reference\ncount reaches 0.\nThe xa is already protected by the reference count mechanism well in the\ncontrol plane.\nSo removing rcu_read_lock() for page_pool_destroy() is safe."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43839",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ab748dd10d8742561f2980fea08ffb4f0cacfdef",
            "https://git.kernel.org/stable/c/b0ff0cd0847b03c0a0abe20cfa900eabcfcb9e43",
            "https://git.kernel.org/stable/c/e0f48f51d55fb187400e9787192eda09fa200ff5",
            "https://git.kernel.org/stable/c/c9741a03dc8e491e57b95fba0058ab46b7e506da",
            "https://git.kernel.org/stable/c/f121740f69eda4da2de9a20a6687a13593e72540",
            "https://git.kernel.org/stable/c/c90b1cd7758fd4839909e838ae195d19f8065d76",
            "https://git.kernel.org/stable/c/6ce46045f9b90d952602e2c0b8886cfadf860bf1",
            "https://git.kernel.org/stable/c/6d20c4044ab4d0e6a99aa35853e66f0aed5589e3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbna: adjust 'name' buf size of bna_tcb and bna_ccb structures\n\nTo have enough space to write all possible sprintf() args. Currently\n'name' size is 16, but the first '%s' specifier may already need at\nleast 16 characters, since 'bnad->netdev->name' is used there.\n\nFor '%d' specifiers, assume that they require:\n * 1 char for 'tx_id + tx_info->tcb[i]->id' sum, BNAD_MAX_TXQ_PER_TX is 8\n * 2 chars for 'rx_id + rx_info->rx_ctrl[i].ccb->id', BNAD_MAX_RXP_PER_RX\n   is 16\n\nAnd replace sprintf with snprintf.\n\nDetected using the static analysis tool - Svace."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43841",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d3cc85a10abc8eae48988336cdd3689ab92581b3",
            "https://git.kernel.org/stable/c/36e92b5edc8e0daa18e9325674313802ce3fbc29",
            "https://git.kernel.org/stable/c/416d3c1538df005195721a200b0371d39636e05d",
            "https://git.kernel.org/stable/c/b5d14b0c6716fad7f0c94ac6e1d6f60a49f985c7",
            "https://git.kernel.org/stable/c/994fc2164a03200c3bf42fb45b3d49d9d6d33a4d",
            "https://git.kernel.org/stable/c/05c4488a0e446c6ccde9f22b573950665e1cd414",
            "https://git.kernel.org/stable/c/93e898a264b4e0a475552ba9f99a016eb43ef942"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: virt_wifi: avoid reporting connection success with wrong SSID\n\nWhen user issues a connection with a different SSID than the one\nvirt_wifi has advertised, the __cfg80211_connect_result() will\ntrigger the warning: WARN_ON(bss_not_found).\n\nThe issue is because the connection code in virt_wifi does not\ncheck the SSID from user space (it only checks the BSSID), and\nvirt_wifi will call cfg80211_connect_result() with WLAN_STATUS_SUCCESS\neven if the SSID is different from the one virt_wifi has advertised.\nEventually cfg80211 won't be able to find the cfg80211_bss and generate\nthe warning.\n\nFixed it by checking the SSID (from user space) in the connection code."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43846",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5adc61d29bbb461d7f7c2b48dceaa90ecd182eb7",
            "https://git.kernel.org/stable/c/1936fa05a180834c3b52e0439a6bddc07814d3eb",
            "https://git.kernel.org/stable/c/499f742fed42e74f1321f4b12ca196a66a2b49fc",
            "https://git.kernel.org/stable/c/b4a3a89fffcdf09702b1f161b914e52abca1894d",
            "https://git.kernel.org/stable/c/8161263362154cbebfbf4808097b956a6a8cb98a",
            "https://git.kernel.org/stable/c/22ae17a267f4812861f0c644186c3421ff97dbfc",
            "https://git.kernel.org/stable/c/565213e005557eb6cc4e42189d26eb300e02f170"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib: objagg: Fix general protection fault\n\nThe library supports aggregation of objects into other objects only if\nthe parent object does not have a parent itself. That is, nesting is not\nsupported.\n\nAggregation happens in two cases: Without and with hints, where hints\nare a pre-computed recommendation on how to aggregate the provided\nobjects.\n\nNesting is not possible in the first case due to a check that prevents\nit, but in the second case there is no check because the assumption is\nthat nesting cannot happen when creating objects based on hints. The\nviolation of this assumption leads to various warnings and eventually to\na general protection fault [1].\n\nBefore fixing the root cause, error out when nesting happens and warn.\n\n[1]\ngeneral protection fault, probably for non-canonical address 0xdead000000000d90: 0000 [#1] PREEMPT SMP PTI\nCPU: 1 PID: 1083 Comm: kworker/1:9 Tainted: G        W          6.9.0-rc6-custom-gd9b4f1cca7fb #7\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_sp_acl_erp_bf_insert+0x25/0x80\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_atcam_entry_add+0x256/0x3c0\n mlxsw_sp_acl_tcam_entry_create+0x5e/0xa0\n mlxsw_sp_acl_tcam_vchunk_migrate_one+0x16b/0x270\n mlxsw_sp_acl_tcam_vregion_rehash_work+0xbe/0x510\n process_one_work+0x151/0x370\n worker_thread+0x2cb/0x3e0\n kthread+0xd0/0x100\n ret_from_fork+0x34/0x50\n ret_from_fork_asm+0x1a/0x30\n </TASK>"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43849",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/475a77fb3f0e1d527f56c60b79f5879661df5b80",
            "https://git.kernel.org/stable/c/3e815626d73e05152a8142f6e44aecc4133e6e08",
            "https://git.kernel.org/stable/c/8543269567e2fb3d976a8255c5e348aed14f98bc",
            "https://git.kernel.org/stable/c/107924c14e3ddd85119ca43c26a4ee1056fa9b84",
            "https://git.kernel.org/stable/c/eab05737ee22216250fe20d27f5a596da5ea6eb7",
            "https://git.kernel.org/stable/c/d0870c4847e77a49c2f91bb2a8e0fa3c1f8dea5c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: pdr: protect locator_addr with the main mutex\n\nIf the service locator server is restarted fast enough, the PDR can\nrewrite locator_addr fields concurrently. Protect them by placing\nmodification of those fields under the main pdr->lock."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43854",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d418313bd8f55c079a7da12651951b489a638ac1",
            "https://git.kernel.org/stable/c/23a19655fb56f241e592041156dfb1c6d04da644",
            "https://git.kernel.org/stable/c/ebc0e91ba76dc6544fff9f5b66408b1982806a00",
            "https://git.kernel.org/stable/c/899ee2c3829c5ac14bfc7d3c4a5846c0b709b78f",
            "https://git.kernel.org/stable/c/cf6b45ea7a8df0f61bded1dc4a8561ac6ad143d2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: initialize integrity buffer to zero before writing it to media\n\nMetadata added by bio_integrity_prep is using plain kmalloc, which leads\nto random kernel memory being written media.  For PI metadata this is\nlimited to the app tag that isn't used by kernel generated metadata,\nbut for non-PI metadata the entire buffer leaks kernel memory.\n\nFix this by adding the __GFP_ZERO flag to allocations for writes."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43856",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f993a4baf6b622232e4c190d34c220179e5d61eb",
            "https://git.kernel.org/stable/c/1fe97f68fce1ba24bf823bfb0eb0956003473130",
            "https://git.kernel.org/stable/c/22094f5f52e7bc16c5bf9613365049383650b02e",
            "https://git.kernel.org/stable/c/28e8b7406d3a1f5329a03aa25a43aa28e087cb20",
            "https://git.kernel.org/stable/c/fe2d246080f035e0af5793cb79067ba125e4fb63",
            "https://git.kernel.org/stable/c/2f7bbdc744f2e7051d1cb47c8e082162df1923c9",
            "https://git.kernel.org/stable/c/257193083e8f43907e99ea633820fc2b3bcd24c7",
            "https://git.kernel.org/stable/c/87b34c8c94e29fa01d744e5147697f592998d954"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma: fix call order in dmam_free_coherent\n\ndmam_free_coherent() frees a DMA allocation, which makes the\nfreed vaddr available for reuse, then calls devres_destroy()\nto remove and free the data structure used to track the DMA\nallocation. Between the two calls, it is possible for a\nconcurrent task to make an allocation with the same vaddr\nand add it to the devres list.\n\nIf this happens, there will be two entries in the devres list\nwith the same vaddr and devres_destroy() can free the wrong\nentry, triggering the WARN_ON() in dmam_match.\n\nFix by destroying the devres entry before freeing the DMA\nallocation.\n\n  kokonut //net/encryption\n    http://sponge2/b9145fe6-0f72-4325-ac2f-a84d81075b03"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43858",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8d8f9a477de0d7962342eedf2a599215b7c63d28",
            "https://git.kernel.org/stable/c/ff14eadc278663cac69d57d3ca7fb2f394e1f8a7",
            "https://git.kernel.org/stable/c/6aa6892a90a5a7fabffe5692ab9f06a7a46c6e42",
            "https://git.kernel.org/stable/c/f73f969b2eb39ad8056f6c7f3a295fa2f85e313a",
            "https://git.kernel.org/stable/c/55b732c8b09b41148eaab2fa8e31b0af47671e00",
            "https://git.kernel.org/stable/c/9b3a4345957f5372041bc4f59de322f62653e862",
            "https://git.kernel.org/stable/c/538a27c8048f081a5ddd286f886eb986fbbc7f80",
            "https://git.kernel.org/stable/c/63f7fdf733add82f126ea00e2e48f6eba15ac4b9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix array-index-out-of-bounds in diFree"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43860",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9a17cf8b2ce483fa75258bc2cdcf628f24bcf5f8",
            "https://git.kernel.org/stable/c/6c9ea3547fad252fe9ae5d3ed7e066e2085bf3a2",
            "https://git.kernel.org/stable/c/c877a5f5268d4ab8224b9c9fbce3d746e4e72bc9",
            "https://git.kernel.org/stable/c/2fa26ca8b786888673689ccc9da6094150939982",
            "https://git.kernel.org/stable/c/6884fd0283e0831be153fb8d82d9eda8a55acaaa",
            "https://git.kernel.org/stable/c/84beb7738459cac0ff9f8a7c4654b8ff82a702c0",
            "https://git.kernel.org/stable/c/6b50462b473fdccdc0dfad73001147e40ff19a66",
            "https://git.kernel.org/stable/c/4e13b7c23988c0a13fdca92e94296a3bc2ff9f21"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: imx_rproc: Skip over memory region when node value is NULL\n\nIn imx_rproc_addr_init() \"nph = of_count_phandle_with_args()\" just counts\nnumber of phandles. But phandles may be empty. So of_parse_phandle() in\nthe parsing loop (0 < a < nph) may return NULL which is later dereferenced.\nAdjust this issue by adding NULL-return check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n[Fixed title to fit within the prescribed 70-75 charcters]"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43817",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5b1997487a3f3373b0f580c8a20b56c1b64b0775",
            "https://git.kernel.org/stable/c/90d41ebe0cd4635f6410471efc1dd71b33e894cf",
            "https://git.kernel.org/stable/c/e9164903b8b303c34723177b02fe91e49e3c4cd7",
            "https://git.kernel.org/stable/c/e269d79c7d35aa3808b1f3c1737d63dab504ddc8",
            "https://git.kernel.org/stable/c/27874ca77bd2b05a3779c7b3a5c75d8dd7f0b40f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: missing check virtio\n\nTwo missing check in virtio_net_hdr_to_skb() allowed syzbot\nto crash kernels again\n\n1. After the skb_segment function the buffer may become non-linear\n(nr_frags != 0), but since the SKBTX_SHARED_FRAG flag is not set anywhere\nthe __skb_linearize function will not be executed, then the buffer will\nremain non-linear. Then the condition (offset >= skb_headlen(skb))\nbecomes true, which causes WARN_ON_ONCE in skb_checksum_help.\n\n2. The struct sk_buff and struct virtio_net_hdr members must be\nmathematically related.\n(gso_size) must be greater than (needed) otherwise WARN_ON_ONCE.\n(remainder) must be greater than (needed) otherwise WARN_ON_ONCE.\n(remainder) may be 0 if division is without remainder.\n\noffset+2 (4191) > skb_headlen() (1116)\nWARNING: CPU: 1 PID: 5084 at net/core/dev.c:3303 skb_checksum_help+0x5e2/0x740 net/core/dev.c:3303\nModules linked in:\nCPU: 1 PID: 5084 Comm: syz-executor336 Not tainted 6.7.0-rc3-syzkaller-00014-gdf60cee26a2e #0\nHardware name: Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023\nRIP: 0010:skb_checksum_help+0x5e2/0x740 net/core/dev.c:3303\nCode: 89 e8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 52 01 00 00 44 89 e2 2b 53 74 4c 89 ee 48 c7 c7 40 57 e9 8b e8 af 8f dd f8 90 <0f> 0b 90 90 e9 87 fe ff ff e8 40 0f 6e f9 e9 4b fa ff ff 48 89 ef\nRSP: 0018:ffffc90003a9f338 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff888025125780 RCX: ffffffff814db209\nRDX: ffff888015393b80 RSI: ffffffff814db216 RDI: 0000000000000001\nRBP: ffff8880251257f4 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: 000000000000045c\nR13: 000000000000105f R14: ffff8880251257f0 R15: 000000000000105d\nFS:  0000555555c24380(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000002000f000 CR3: 0000000023151000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ip_do_fragment+0xa1b/0x18b0 net/ipv4/ip_output.c:777\n ip_fragment.constprop.0+0x161/0x230 net/ipv4/ip_output.c:584\n ip_finish_output_gso net/ipv4/ip_output.c:286 [inline]\n __ip_finish_output net/ipv4/ip_output.c:308 [inline]\n __ip_finish_output+0x49c/0x650 net/ipv4/ip_output.c:295\n ip_finish_output+0x31/0x310 net/ipv4/ip_output.c:323\n NF_HOOK_COND include/linux/netfilter.h:303 [inline]\n ip_output+0x13b/0x2a0 net/ipv4/ip_output.c:433\n dst_output include/net/dst.h:451 [inline]\n ip_local_out+0xaf/0x1a0 net/ipv4/ip_output.c:129\n iptunnel_xmit+0x5b4/0x9b0 net/ipv4/ip_tunnel_core.c:82\n ipip6_tunnel_xmit net/ipv6/sit.c:1034 [inline]\n sit_tunnel_xmit+0xed2/0x28f0 net/ipv6/sit.c:1076\n __netdev_start_xmit include/linux/netdevice.h:4940 [inline]\n netdev_start_xmit include/linux/netdevice.h:4954 [inline]\n xmit_one net/core/dev.c:3545 [inline]\n dev_hard_start_xmit+0x13d/0x6d0 net/core/dev.c:3561\n __dev_queue_xmit+0x7c1/0x3d60 net/core/dev.c:4346\n dev_queue_xmit include/linux/netdevice.h:3134 [inline]\n packet_xmit+0x257/0x380 net/packet/af_packet.c:276\n packet_snd net/packet/af_packet.c:3087 [inline]\n packet_sendmsg+0x24ca/0x5240 net/packet/af_packet.c:3119\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0xd5/0x180 net/socket.c:745\n __sys_sendto+0x255/0x340 net/socket.c:2190\n __do_sys_sendto net/socket.c:2202 [inline]\n __se_sys_sendto net/socket.c:2198 [inline]\n __x64_sys_sendto+0xe0/0x1b0 net/socket.c:2198\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x40/0x110 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52889",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ead2ad1d9f045f26fdce3ef1644913b3a6cd38f2",
            "https://git.kernel.org/stable/c/6c920754f62cefc63fccdc38a062c7c3452e2961",
            "https://git.kernel.org/stable/c/46c17ead5b7389e22e7dc9903fd0ba865d05bda2",
            "https://git.kernel.org/stable/c/fce09ea314505a52f2436397608fa0a5d0934fb1",
            "https://git.kernel.org/stable/c/0abe35bc48d4ec80424b1f4b3560c0e082cbd5c1",
            "https://git.kernel.org/stable/c/347dcb84a4874b5fb375092c08d8cc4069b94f81",
            "https://git.kernel.org/stable/c/290a6b88e8c19b6636ed1acc733d1458206f7697"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: Fix null pointer deref when receiving skb during sock creation\n\nThe panic below is observed when receiving ICMP packets with secmark set\nwhile an ICMP raw socket is being created. SK_CTX(sk)->label is updated\nin apparmor_socket_post_create(), but the packet is delivered to the\nsocket before that, causing the null pointer dereference.\nDrop the packet if label context is not set.\n\n    BUG: kernel NULL pointer dereference, address: 000000000000004c\n    #PF: supervisor read access in kernel mode\n    #PF: error_code(0x0000) - not-present page\n    PGD 0 P4D 0\n    Oops: 0000 [#1] PREEMPT SMP NOPTI\n    CPU: 0 PID: 407 Comm: a.out Not tainted 6.4.12-arch1-1 #1 3e6fa2753a2d75925c34ecb78e22e85a65d083df\n    Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/28/2020\n    RIP: 0010:aa_label_next_confined+0xb/0x40\n    Code: 00 00 48 89 ef e8 d5 25 0c 00 e9 66 ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 89 f0 <8b> 77 4c 39 c6 7e 1f 48 63 d0 48 8d 14 d7 eb 0b 83 c0 01 48 83 c2\n    RSP: 0018:ffffa92940003b08 EFLAGS: 00010246\n    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000000000000e\n    RDX: ffffa92940003be8 RSI: 0000000000000000 RDI: 0000000000000000\n    RBP: ffff8b57471e7800 R08: ffff8b574c642400 R09: 0000000000000002\n    R10: ffffffffbd820eeb R11: ffffffffbeb7ff00 R12: ffff8b574c642400\n    R13: 0000000000000001 R14: 0000000000000001 R15: 0000000000000000\n    FS:  00007fb092ea7640(0000) GS:ffff8b577bc00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 000000000000004c CR3: 00000001020f2005 CR4: 00000000007706f0\n    PKRU: 55555554\n    Call Trace:\n     <IRQ>\n     ? __die+0x23/0x70\n     ? page_fault_oops+0x171/0x4e0\n     ? exc_page_fault+0x7f/0x180\n     ? asm_exc_page_fault+0x26/0x30\n     ? aa_label_next_confined+0xb/0x40\n     apparmor_secmark_check+0xec/0x330\n     security_sock_rcv_skb+0x35/0x50\n     sk_filter_trim_cap+0x47/0x250\n     sock_queue_rcv_skb_reason+0x20/0x60\n     raw_rcv+0x13c/0x210\n     raw_local_deliver+0x1f3/0x250\n     ip_protocol_deliver_rcu+0x4f/0x2f0\n     ip_local_deliver_finish+0x76/0xa0\n     __netif_receive_skb_one_core+0x89/0xa0\n     netif_receive_skb+0x119/0x170\n     ? __netdev_alloc_skb+0x3d/0x140\n     vmxnet3_rq_rx_complete+0xb23/0x1010 [vmxnet3 56a84f9c97178c57a43a24ec073b45a9d6f01f3a]\n     vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3 56a84f9c97178c57a43a24ec073b45a9d6f01f3a]\n     __napi_poll+0x28/0x1b0\n     net_rx_action+0x2a4/0x380\n     __do_softirq+0xd1/0x2c8\n     __irq_exit_rcu+0xbb/0xf0\n     common_interrupt+0x86/0xa0\n     </IRQ>\n     <TASK>\n     asm_common_interrupt+0x26/0x40\n    RIP: 0010:apparmor_socket_post_create+0xb/0x200\n    Code: 08 48 85 ff 75 a1 eb b1 0f 1f 80 00 00 00 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 41 54 <55> 48 89 fd 53 45 85 c0 0f 84 b2 00 00 00 48 8b 1d 80 56 3f 02 48\n    RSP: 0018:ffffa92940ce7e50 EFLAGS: 00000286\n    RAX: ffffffffbc756440 RBX: 0000000000000000 RCX: 0000000000000001\n    RDX: 0000000000000003 RSI: 0000000000000002 RDI: ffff8b574eaab740\n    RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000\n    R10: ffff8b57444cec70 R11: 0000000000000000 R12: 0000000000000003\n    R13: 0000000000000002 R14: ffff8b574eaab740 R15: ffffffffbd8e4748\n     ? __pfx_apparmor_socket_post_create+0x10/0x10\n     security_socket_post_create+0x4b/0x80\n     __sock_create+0x176/0x1f0\n     __sys_socket+0x89/0x100\n     __x64_sys_socket+0x17/0x20\n     do_syscall_64+0x5d/0x90\n     ? do_syscall_64+0x6c/0x90\n     ? do_syscall_64+0x6c/0x90\n     ? do_syscall_64+0x6c/0x90\n     entry_SYSCALL_64_after_hwframe+0x72/0xdc"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42285",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/dc8074b8901caabb97c2d353abd6b4e7fa5a59a5",
            "https://git.kernel.org/stable/c/ff5bbbdee08287d75d72e65b72a2b76d9637892a",
            "https://git.kernel.org/stable/c/ee39384ee787e86e9db4efb843818ef0ea9cb8ae",
            "https://git.kernel.org/stable/c/aee2424246f9f1dadc33faa78990c1e2eb7826e4",
            "https://git.kernel.org/stable/c/d91d253c87fd1efece521ff2612078a35af673c6",
            "https://git.kernel.org/stable/c/7f25f296fc9bd0435be14e89bf657cd615a23574",
            "https://git.kernel.org/stable/c/94ee7ff99b87435ec63211f632918dc7f44dac79",
            "https://git.kernel.org/stable/c/557d035fe88d78dd51664f4dc0e1896c04c97cf6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/iwcm: Fix a use-after-free related to destroying CM IDs\n\niw_conn_req_handler() associates a new struct rdma_id_private (conn_id) with\nan existing struct iw_cm_id (cm_id) as follows:\n\n        conn_id->cm_id.iw = cm_id;\n        cm_id->context = conn_id;\n        cm_id->cm_handler = cma_iw_handler;\n\nrdma_destroy_id() frees both the cm_id and the struct rdma_id_private. Make\nsure that cm_work_handler() does not trigger a use-after-free by only\nfreeing of the struct rdma_id_private after all pending work has finished."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42299",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b90ceffdc975502bc085ce8e79c6adeff05f9521",
            "https://git.kernel.org/stable/c/2cac0df3324b5e287d8020bc0708f7d2dec88a6f",
            "https://git.kernel.org/stable/c/0a4ae2644e2a3b3b219aad9639fb2b0691d08420",
            "https://git.kernel.org/stable/c/2fef55d8f78383c8e6d6d4c014b9597375132696",
            "https://git.kernel.org/stable/c/0484adcb5fbcadd9ba0fd4485c42630f72e97da9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/ntfs3: Update log->page_{mask,bits} if log->page_size changed\n\nIf an NTFS file system is mounted to another system with different\nPAGE_SIZE from the original system, log->page_size will change in\nlog_replay(), but log->page_{mask,bits} don't change correspondingly.\nThis will cause a panic because \"u32 bytes = log->page_size - page_off\"\nwill get a negative value in the later read_log_page()."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42301",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7f4da759092a1a6ce35fb085182d02de8cc4cc84",
            "https://git.kernel.org/stable/c/b579ea3516c371ecf59d073772bc45dfd28c8a0e",
            "https://git.kernel.org/stable/c/7789a1d6792af410aa9b39a1eb237ed24fa2170a",
            "https://git.kernel.org/stable/c/ab11dac93d2d568d151b1918d7b84c2d02bacbd5",
            "https://git.kernel.org/stable/c/166a0bddcc27de41fe13f861c8348e8e53e988c8",
            "https://git.kernel.org/stable/c/47b3dce100778001cd76f7e9188944b5cb27a76d",
            "https://git.kernel.org/stable/c/a44f88f7576bc1916d8d6293f5c62fbe7cbe03e0",
            "https://git.kernel.org/stable/c/c719b393374d3763e64900ee19aaed767d5a08d6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndev/parport: fix the array out-of-bounds risk\n\nFixed array out-of-bounds issues caused by sprintf\nby replacing it with snprintf for safer data copying,\nensuring the destination buffer is not overflowed.\n\nBelow is the stack trace I encountered during the actual issue:\n\n[ 66.575408s] [pid:5118,cpu4,QThread,4]Kernel panic - not syncing: stack-protector:\nKernel stack is corrupted in: do_hardware_base_addr+0xcc/0xd0 [parport]\n[ 66.575408s] [pid:5118,cpu4,QThread,5]CPU: 4 PID: 5118 Comm:\nQThread Tainted: G S W O 5.10.97-arm64-desktop #7100.57021.2\n[ 66.575439s] [pid:5118,cpu4,QThread,6]TGID: 5087 Comm: EFileApp\n[ 66.575439s] [pid:5118,cpu4,QThread,7]Hardware name: HUAWEI HUAWEI QingYun\nPGUX-W515x-B081/SP1PANGUXM, BIOS 1.00.07 04/29/2024\n[ 66.575439s] [pid:5118,cpu4,QThread,8]Call trace:\n[ 66.575469s] [pid:5118,cpu4,QThread,9] dump_backtrace+0x0/0x1c0\n[ 66.575469s] [pid:5118,cpu4,QThread,0] show_stack+0x14/0x20\n[ 66.575469s] [pid:5118,cpu4,QThread,1] dump_stack+0xd4/0x10c\n[ 66.575500s] [pid:5118,cpu4,QThread,2] panic+0x1d8/0x3bc\n[ 66.575500s] [pid:5118,cpu4,QThread,3] __stack_chk_fail+0x2c/0x38\n[ 66.575500s] [pid:5118,cpu4,QThread,4] do_hardware_base_addr+0xcc/0xd0 [parport]"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42302",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f63df70b439bb8331358a306541893bf415bf1da",
            "https://git.kernel.org/stable/c/2cc8973bdc4d6c928ebe38b88090a2cdfe81f42f",
            "https://git.kernel.org/stable/c/b16f3ea1db47a6766a9f1169244cf1fc287a7c62",
            "https://git.kernel.org/stable/c/11a1f4bc47362700fcbde717292158873fb847ed",
            "https://git.kernel.org/stable/c/c52f9e1a9eb40f13993142c331a6cfd334d4b91d",
            "https://git.kernel.org/stable/c/2c111413f38ca5cf87557cab89f6d82b0e3433e7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/DPC: Fix use-after-free on concurrent DPC and hot-removal\n\nKeith reports a use-after-free when a DPC event occurs concurrently to\nhot-removal of the same portion of the hierarchy:\n\nThe dpc_handler() awaits readiness of the secondary bus below the\nDownstream Port where the DPC event occurred.  To do so, it polls the\nconfig space of the first child device on the secondary bus.  If that\nchild device is concurrently removed, accesses to its struct pci_dev\ncause the kernel to oops.\n\nThat's because pci_bridge_wait_for_secondary_bus() neglects to hold a\nreference on the child device.  Before v6.3, the function was only\ncalled on resume from system sleep or on runtime resume.  Holding a\nreference wasn't necessary back then because the pciehp IRQ thread\ncould never run concurrently.  (On resume from system sleep, IRQs are\nnot enabled until after the resume_noirq phase.  And runtime resume is\nalways awaited before a PCI device is removed.)\n\nHowever starting with v6.3, pci_bridge_wait_for_secondary_bus() is also\ncalled on a DPC event.  Commit 53b54ad074de (\"PCI/DPC: Await readiness\nof secondary bus after reset\"), which introduced that, failed to\nappreciate that pci_bridge_wait_for_secondary_bus() now needs to hold a\nreference on the child device because dpc_handler() and pciehp may\nindeed run concurrently.  The commit was backported to v5.10+ stable\nkernels, so that's the oldest one affected.\n\nAdd the missing reference acquisition.\n\nAbridged stack trace:\n\n  BUG: unable to handle page fault for address: 00000000091400c0\n  CPU: 15 PID: 2464 Comm: irq/53-pcie-dpc 6.9.0\n  RIP: pci_bus_read_config_dword+0x17/0x50\n  pci_dev_wait()\n  pci_bridge_wait_for_secondary_bus()\n  dpc_reset_link()\n  pcie_do_recovery()\n  dpc_handler()"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42304",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b609753cbbd38f8c0affd4956c0af178348523ac",
            "https://git.kernel.org/stable/c/c3893d9de8ee153baac56d127d844103488133b5",
            "https://git.kernel.org/stable/c/299bc6ffa57e04e74c6cce866d6c0741fb4897a1",
            "https://git.kernel.org/stable/c/f9ca51596bbfd0f9c386dd1c613c394c78d9e5e6",
            "https://git.kernel.org/stable/c/d81d7e347d1f1f48a5634607d39eb90c161c8afe",
            "https://git.kernel.org/stable/c/e02f9941e8c011aa3eafa799def6a134ce06bcfa",
            "https://git.kernel.org/stable/c/de2a011a13a46468a6e8259db58b1b62071fe136",
            "https://git.kernel.org/stable/c/9771e3d8365ae1dd5e8846a204cb9af14e3e656a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: make sure the first directory block is not a hole\n\nThe syzbot constructs a directory that has no dirblock but is non-inline,\ni.e. the first directory block is a hole. And no errors are reported when\ncreating files in this directory in the following flow.\n\n    ext4_mknod\n     ...\n      ext4_add_entry\n        // Read block 0\n        ext4_read_dirblock(dir, block, DIRENT)\n          bh = ext4_bread(NULL, inode, block, 0)\n          if (!bh && (type == INDEX || type == DIRENT_HTREE))\n          // The first directory block is a hole\n          // But type == DIRENT, so no error is reported.\n\nAfter that, we get a directory block without '.' and '..' but with a valid\ndentry. This may cause some code that relies on dot or dotdot (such as\nmake_indexed_dir()) to crash.\n\nTherefore when ext4_read_dirblock() finds that the first directory block\nis a hole report that the filesystem is corrupted and return an error to\navoid loading corrupted data from disk causing something bad."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42305",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/abb411ac991810c0bcbe51c2e76d2502bf611b5c",
            "https://git.kernel.org/stable/c/9d241b7a39af192d1bb422714a458982c7cc67a2",
            "https://git.kernel.org/stable/c/cdd345321699042ece4a9d2e70754d2397d378c5",
            "https://git.kernel.org/stable/c/50ea741def587a64e08879ce6c6a30131f7111e7",
            "https://git.kernel.org/stable/c/b80575ffa98b5bb3a5d4d392bfe4c2e03e9557db",
            "https://git.kernel.org/stable/c/19e13b4d7f0303186fcc891aba8d0de7c8fdbda8",
            "https://git.kernel.org/stable/c/42d420517072028fb0eb852c358056b7717ba5aa",
            "https://git.kernel.org/stable/c/8afe06ed3be7a874b3cd82ef5f8959aca8d6429a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: check dot and dotdot of dx_root before making dir indexed\n\nSyzbot reports a issue as follows:\n============================================\nBUG: unable to handle page fault for address: ffffed11022e24fe\nPGD 23ffee067 P4D 23ffee067 PUD 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 PID: 5079 Comm: syz-executor306 Not tainted 6.10.0-rc5-g55027e689933 #0\nCall Trace:\n <TASK>\n make_indexed_dir+0xdaf/0x13c0 fs/ext4/namei.c:2341\n ext4_add_entry+0x222a/0x25d0 fs/ext4/namei.c:2451\n ext4_rename fs/ext4/namei.c:3936 [inline]\n ext4_rename2+0x26e5/0x4370 fs/ext4/namei.c:4214\n[...]\n============================================\n\nThe immediate cause of this problem is that there is only one valid dentry\nfor the block to be split during do_split, so split==0 results in out of\nbounds accesses to the map triggering the issue.\n\n    do_split\n      unsigned split\n      dx_make_map\n       count = 1\n      split = count/2 = 0;\n      continued = hash2 == map[split - 1].hash;\n       ---> map[4294967295]\n\nThe maximum length of a filename is 255 and the minimum block size is 1024,\nso it is always guaranteed that the number of entries is greater than or\nequal to 2 when do_split() is called.\n\nBut syzbot's crafted image has no dot and dotdot in dir, and the dentry\ndistribution in dirblock is as follows:\n\n  bus     dentry1          hole           dentry2           free\n|xx--|xx-------------|...............|xx-------------|...............|\n0   12 (8+248)=256  268     256     524 (8+256)=264 788     236     1024\n\nSo when renaming dentry1 increases its name_len length by 1, neither hole\nnor free is sufficient to hold the new dentry, and make_indexed_dir() is\ncalled.\n\nIn make_indexed_dir() it is assumed that the first two entries of the\ndirblock must be dot and dotdot, so bus and dentry1 are left in dx_root\nbecause they are treated as dot and dotdot, and only dentry2 is moved\nto the new leaf block. That's why count is equal to 1.\n\nTherefore add the ext4_check_dx_root() helper function to add more sanity\nchecks to dot and dotdot before starting the conversion to avoid the above\nissue."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42306",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/271cab2ca00652bc984e269cf1208699a1e09cdd",
            "https://git.kernel.org/stable/c/57053b3bcf3403b80db6f65aba284d7dfe7326af",
            "https://git.kernel.org/stable/c/8ca170c39eca7cad6e0cfeb24e351d8f8eddcd65",
            "https://git.kernel.org/stable/c/a90d4471146de21745980cba51ce88e7926bcc4f",
            "https://git.kernel.org/stable/c/cae9e59cc41683408b70b9ab569f8654866ba914",
            "https://git.kernel.org/stable/c/2199e157a465aaf98294d3932797ecd7fce942d5",
            "https://git.kernel.org/stable/c/6a43e3c210df6c5f00570f4be49a897677dbcb64"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Avoid using corrupted block bitmap buffer\n\nWhen the filesystem block bitmap is corrupted, we detect the corruption\nwhile loading the bitmap and fail the allocation with error. However the\nnext allocation from the same bitmap will notice the bitmap buffer is\nalready loaded and tries to allocate from the bitmap with mixed results\n(depending on the exact nature of the bitmap corruption). Fix the\nproblem by using BH_verified bit to indicate whether the bitmap is valid\nor not."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42308",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f068494430d15b5fc551ac928de9dac7e5e27602",
            "https://git.kernel.org/stable/c/4ccd37085976ea5d3c499b1e6d0b3f4deaf2cd5a",
            "https://git.kernel.org/stable/c/185616085b12e651cdfd11ef00d1449f54552d89",
            "https://git.kernel.org/stable/c/4ab68e168ae1695f7c04fae98930740aaf7c50fa",
            "https://git.kernel.org/stable/c/71dbf95359347c2ecc5a6dfc02783fcfccb2e9fb",
            "https://git.kernel.org/stable/c/9ce89824ff04d261fc855e0ca6e6025251d9fa40",
            "https://git.kernel.org/stable/c/6b5ed0648213e9355cc78f4a264d9afe8536d692"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check for NULL pointer\n\n[why & how]\nNeed to make sure plane_state is initialized\nbefore accessing its members.\n\n(cherry picked from commit 295d91cbc700651782a60572f83c24861607b648)"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42309",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f70ffeca546452d1acd3a70ada56ecb2f3e7f811",
            "https://git.kernel.org/stable/c/46d2ef272957879cbe30a884574320e7f7d78692",
            "https://git.kernel.org/stable/c/475a5b3b7c8edf6e583a9eb59cf28ea770602e14",
            "https://git.kernel.org/stable/c/2df7aac81070987b0f052985856aa325a38debf6",
            "https://git.kernel.org/stable/c/13b5f3ee94bdbdc4b5f40582aab62977905aedee",
            "https://git.kernel.org/stable/c/d6ad202f73f8edba0cbc0065aa57a79ffe8fdcdc",
            "https://git.kernel.org/stable/c/6735d02ead7dd3adf74eb8b70aebd09e0ce78ec9",
            "https://git.kernel.org/stable/c/7e52c62ff029f95005915c0a11863b5fb5185c8c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/gma500: fix null pointer dereference in psb_intel_lvds_get_modes\n\nIn psb_intel_lvds_get_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42310",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e74eb5e8089427c8c49e0dd5067e5f39ce3a4d56",
            "https://git.kernel.org/stable/c/2d209b2f862f6b8bff549ede541590a8d119da23",
            "https://git.kernel.org/stable/c/977ee4fe895e1729cd36cc26916bbb10084713d6",
            "https://git.kernel.org/stable/c/cb520c3f366c77e8d69e4e2e2781a8ce48d98e79",
            "https://git.kernel.org/stable/c/f392c36cebf4c1d6997a4cc2c0f205254acef42a",
            "https://git.kernel.org/stable/c/a658ae2173ab74667c009e2550455e6de5b33ddc",
            "https://git.kernel.org/stable/c/b6ac46a00188cde50ffba233e6efb366354a1de5",
            "https://git.kernel.org/stable/c/08f45102c81ad8bc9f85f7a25e9f64e128edb87d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/gma500: fix null pointer dereference in cdv_intel_lvds_get_modes\n\nIn cdv_intel_lvds_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference on\nfailure of drm_mode_duplicate(). Add a check to avoid npd."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42311",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/58d83fc160505a7009c39dec64effaac5129b971",
            "https://git.kernel.org/stable/c/9c4e40b9b731220f9464975e49da75496e3865c4",
            "https://git.kernel.org/stable/c/d3493d6f0dfb1ab5225b62faa77732983f2187a1",
            "https://git.kernel.org/stable/c/26a2ed107929a855155429b11e1293b83e6b2a8b",
            "https://git.kernel.org/stable/c/f7316b2b2f11cf0c6de917beee8d3de728be24db",
            "https://git.kernel.org/stable/c/4a52861cd76e79f1a593beb23d096523eb9732c2",
            "https://git.kernel.org/stable/c/10f7163bfb5f8b4e0c9c05a939f20b8540e33c65",
            "https://git.kernel.org/stable/c/d55aae5c1730d6b70d5d8eaff00113cd34772ea3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nhfs: fix to initialize fields of hfs_inode_info after hfs_alloc_inode()\n\nSyzbot reports uninitialized value access issue as below:\n\nloop0: detected capacity change from 0 to 64\n=====================================================\nBUG: KMSAN: uninit-value in hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c:30\n hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c:30\n d_revalidate fs/namei.c:862 [inline]\n lookup_fast+0x89e/0x8e0 fs/namei.c:1649\n walk_component fs/namei.c:2001 [inline]\n link_path_walk+0x817/0x1480 fs/namei.c:2332\n path_lookupat+0xd9/0x6f0 fs/namei.c:2485\n filename_lookup+0x22e/0x740 fs/namei.c:2515\n user_path_at_empty+0x8b/0x390 fs/namei.c:2924\n user_path_at include/linux/namei.h:57 [inline]\n do_mount fs/namespace.c:3689 [inline]\n __do_sys_mount fs/namespace.c:3898 [inline]\n __se_sys_mount+0x66b/0x810 fs/namespace.c:3875\n __x64_sys_mount+0xe4/0x140 fs/namespace.c:3875\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nBUG: KMSAN: uninit-value in hfs_ext_read_extent fs/hfs/extent.c:196 [inline]\nBUG: KMSAN: uninit-value in hfs_get_block+0x92d/0x1620 fs/hfs/extent.c:366\n hfs_ext_read_extent fs/hfs/extent.c:196 [inline]\n hfs_get_block+0x92d/0x1620 fs/hfs/extent.c:366\n block_read_full_folio+0x4ff/0x11b0 fs/buffer.c:2271\n hfs_read_folio+0x55/0x60 fs/hfs/inode.c:39\n filemap_read_folio+0x148/0x4f0 mm/filemap.c:2426\n do_read_cache_folio+0x7c8/0xd90 mm/filemap.c:3553\n do_read_cache_page mm/filemap.c:3595 [inline]\n read_cache_page+0xfb/0x2f0 mm/filemap.c:3604\n read_mapping_page include/linux/pagemap.h:755 [inline]\n hfs_btree_open+0x928/0x1ae0 fs/hfs/btree.c:78\n hfs_mdb_get+0x260c/0x3000 fs/hfs/mdb.c:204\n hfs_fill_super+0x1fb1/0x2790 fs/hfs/super.c:406\n mount_bdev+0x628/0x920 fs/super.c:1359\n hfs_mount+0xcd/0xe0 fs/hfs/super.c:456\n legacy_get_tree+0x167/0x2e0 fs/fs_context.c:610\n vfs_get_tree+0xdc/0x5d0 fs/super.c:1489\n do_new_mount+0x7a9/0x16f0 fs/namespace.c:3145\n path_mount+0xf98/0x26a0 fs/namespace.c:3475\n do_mount fs/namespace.c:3488 [inline]\n __do_sys_mount fs/namespace.c:3697 [inline]\n __se_sys_mount+0x919/0x9e0 fs/namespace.c:3674\n __ia32_sys_mount+0x15b/0x1b0 fs/namespace.c:3674\n do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]\n __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178\n do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246\n entry_SYSENTER_compat_after_hwframe+0x70/0x82\n\nUninit was created at:\n __alloc_pages+0x9a6/0xe00 mm/page_alloc.c:4590\n __alloc_pages_node include/linux/gfp.h:238 [inline]\n alloc_pages_node include/linux/gfp.h:261 [inline]\n alloc_slab_page mm/slub.c:2190 [inline]\n allocate_slab mm/slub.c:2354 [inline]\n new_slab+0x2d7/0x1400 mm/slub.c:2407\n ___slab_alloc+0x16b5/0x3970 mm/slub.c:3540\n __slab_alloc mm/slub.c:3625 [inline]\n __slab_alloc_node mm/slub.c:3678 [inline]\n slab_alloc_node mm/slub.c:3850 [inline]\n kmem_cache_alloc_lru+0x64d/0xb30 mm/slub.c:3879\n alloc_inode_sb include/linux/fs.h:3018 [inline]\n hfs_alloc_inode+0x5a/0xc0 fs/hfs/super.c:165\n alloc_inode+0x83/0x440 fs/inode.c:260\n new_inode_pseudo fs/inode.c:1005 [inline]\n new_inode+0x38/0x4f0 fs/inode.c:1031\n hfs_new_inode+0x61/0x1010 fs/hfs/inode.c:186\n hfs_mkdir+0x54/0x250 fs/hfs/dir.c:228\n vfs_mkdir+0x49a/0x700 fs/namei.c:4126\n do_mkdirat+0x529/0x810 fs/namei.c:4149\n __do_sys_mkdirat fs/namei.c:4164 [inline]\n __se_sys_mkdirat fs/namei.c:4162 [inline]\n __x64_sys_mkdirat+0xc8/0x120 fs/namei.c:4162\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nIt missed to initialize .tz_secondswest, .cached_start and .cached_blocks\nfields in struct hfs_inode_info after hfs_alloc_inode(), fix it."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42312",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1deae34db9f4f8e0e03f891be2e2e15c15c8ac05",
            "https://git.kernel.org/stable/c/ffde3af4b29bf97d62d82e1d45275587e10a991a",
            "https://git.kernel.org/stable/c/c7e2f43d182f5dde473389dbb39f16c9f0d64536",
            "https://git.kernel.org/stable/c/98ca62ba9e2be5863c7d069f84f7166b45a5b2f4",
            "https://git.kernel.org/stable/c/b2591c89a6e2858796111138c38fcb6851aa1955",
            "https://git.kernel.org/stable/c/34a86adea1f2b3c3f9d864c8cce09dca644601ab"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: always initialize i_uid/i_gid\n\nAlways initialize i_uid/i_gid inside the sysfs core so set_ownership()\ncan safely skip setting them.\n\nCommit 5ec27ec735ba (\"fs/proc/proc_sysctl.c: fix the default values of\ni_uid/i_gid on /proc/sys inodes.\") added defaults for i_uid/i_gid when\nset_ownership() was not implemented. It also missed adjusting\nnet_ctl_set_ownership() to use the same default values in case the\ncomputation of a better value failed."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42313",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/da55685247f409bf7f976cc66ba2104df75d8dad",
            "https://git.kernel.org/stable/c/66fa52edd32cdbb675f0803b3c4da10ea19b6635",
            "https://git.kernel.org/stable/c/6a96041659e834dc0b172dda4b2df512d63920c2",
            "https://git.kernel.org/stable/c/a0157b5aa34eb43ec4c5510f9c260bbb03be937e",
            "https://git.kernel.org/stable/c/ad8cf035baf29467158e0550c7a42b7bb43d1db6",
            "https://git.kernel.org/stable/c/72aff311194c8ceda934f24fd6f250b8827d7567",
            "https://git.kernel.org/stable/c/4c9d235630d35db762b85a4149bbb0be9d504c36",
            "https://git.kernel.org/stable/c/f8e9a63b982a8345470c225679af4ba86e4a7282"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: fix use after free in vdec_close\n\nThere appears to be a possible use after free with vdec_close().\nThe firmware will add buffer release work to the work queue through\nHFI callbacks as a normal part of decoding. Randomly closing the\ndecoder device from userspace during normal decoding can incur\na read after free for inst.\n\nFix it by cancelling the work in vdec_close."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42318",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0d74fd54db0bd0c0c224bef0da8fc95ea9c9f36c",
            "https://git.kernel.org/stable/c/16896914bace82d7811c62f3b6d5320132384f49",
            "https://git.kernel.org/stable/c/b14cc2cf313bd29056fadbc8ecd7f957cf5791ff",
            "https://git.kernel.org/stable/c/39705a6c29f8a2b93cf5b99528a55366c50014d1",
            "https://lore.kernel.org/all/20240817.shahka3Ee1iy@digikod.net/",
            "https://www.openwall.com/lists/oss-security/2024/08/17/2",
            "https://bugs.chromium.org/p/project-zero/issues/detail?id=2566",
            "https://git.kernel.org/stable/c/916c648323fa53b89eedb34a0988ddaf01406117"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nlandlock: Don't lose track of restrictions on cred_transfer\n\nWhen a process' cred struct is replaced, this _almost_ always invokes\nthe cred_prepare LSM hook; but in one special case (when\nKEYCTL_SESSION_TO_PARENT updates the parent's credentials), the\ncred_transfer LSM hook is used instead.  Landlock only implements the\ncred_prepare hook, not cred_transfer, so KEYCTL_SESSION_TO_PARENT causes\nall information on Landlock restrictions to be lost.\n\nThis basically means that a process with the ability to use the fork()\nand keyctl() syscalls can get rid of all Landlock restrictions on\nitself.\n\nFix it by adding a cred_transfer hook that does the same thing as the\nexisting cred_prepare hook. (Implemented by having hook_cred_prepare()\ncall hook_cred_transfer() so that the two functions are less likely to\naccidentally diverge in the future.)"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42265",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5db999fff545b924b24c9afd368ef5c17279b176",
            "https://git.kernel.org/stable/c/da72e783afd27d9f487836b2e6738146c0edd149",
            "https://git.kernel.org/stable/c/1171ceccabfd596ca370c5d2cbb47d110c3f2fe1",
            "https://git.kernel.org/stable/c/8aa37bde1a7b645816cda8b80df4753ecf172bf1",
            "https://git.kernel.org/stable/c/ed42e8ff509d2a61c6642d1825032072dab79f26",
            "https://git.kernel.org/stable/c/41a6c31df77bd8e050136b0a200b537da9e1084a",
            "https://git.kernel.org/stable/c/08775b3d6ed117cf4518754ec7300ee42b6a5368",
            "https://git.kernel.org/stable/c/3f480493550b6a23d3a65d095d6569d4a7f56a0f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nprotect the fetch of ->fd[fd] in do_dup2() from mispredictions\n\nboth callers have verified that fd is not greater than ->max_fds;\nhowever, misprediction might end up with\n        tofree = fdt->fd[fd];\nbeing speculatively executed.  That's wrong for the same reasons\nwhy it's wrong in close_fd()/file_close_fd_locked(); the same\nsolution applies - array_index_nospec(fd, fdt->max_fds) could differ\nfrom fd only in case of speculative execution on mispredicted path."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42267",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d7ccf2ca772bfe33e2c53ef80fa20d2d87eb6144",
            "https://git.kernel.org/stable/c/917f598209f3f5e4ab175d5079d8aeb523e58b1f",
            "https://git.kernel.org/stable/c/d4e7db757e2d7f4c407a007e92c98477eab215d2",
            "https://git.kernel.org/stable/c/0c710050c47d45eb77b28c271cddefc5c785cb40",
            "https://git.kernel.org/stable/c/59be4a167782d68e21068a761b90b01fadc09146",
            "https://git.kernel.org/stable/c/20dbdebc5580cd472a310d56a6e252275ee4c864"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv/mm: Add handling for VM_FAULT_SIGSEGV in mm_fault_error()\n\nHandle VM_FAULT_SIGSEGV in the page fault path so that we correctly\nkill the process and we don't BUG() the kernel."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42269",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/91b6df6611b7edb28676c4f63f90c56c30d3e601",
            "https://git.kernel.org/stable/c/e85b9b6a87be4cb3710082038b677e97f2389003",
            "https://git.kernel.org/stable/c/87dba44e9471b79b255d0736858a897332db9226",
            "https://git.kernel.org/stable/c/c22921df777de5606f1047b1345b8d22ef1c0b34",
            "https://git.kernel.org/stable/c/419ee6274c5153b89c4393c1946faa4c3cad4f9e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: iptables: Fix potential null-ptr-deref in ip6table_nat_table_init().\n\nip6table_nat_table_init() accesses net->gen->ptr[ip6table_nat_net_ops.id],\nbut the function is exposed to user space before the entry is allocated\nvia register_pernet_subsys().\n\nLet's call register_pernet_subsys() before xt_register_template()."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42270",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/95590a4929027769af35b153645c0ab6fd22b29b",
            "https://git.kernel.org/stable/c/70014b73d7539fcbb6b4ff5f37368d7241d8e626",
            "https://git.kernel.org/stable/c/08ed888b69a22647153fe2bec55b7cd0a46102cc",
            "https://git.kernel.org/stable/c/5830aa863981d43560748aa93589c0695191d95d",
            "https://git.kernel.org/stable/c/b98ddb65fa1674b0e6b52de8af9103b63f51b643"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: iptables: Fix null-ptr-deref in iptable_nat_table_init().\n\nWe had a report that iptables-restore sometimes triggered null-ptr-deref\nat boot time. [0]\n\nThe problem is that iptable_nat_table_init() is exposed to user space\nbefore the kernel fully initialises netns.\n\nIn the small race window, a user could call iptable_nat_table_init()\nthat accesses net_generic(net, iptable_nat_net_id), which is available\nonly after registering iptable_nat_net_ops.\n\nLet's call register_pernet_subsys() before xt_register_template().\n\n[0]:\nbpfilter: Loaded bpfilter_umh pid 11702\nStarted bpfilter\nBUG: kernel NULL pointer dereference, address: 0000000000000013\n PF: supervisor write access in kernel mode\n PF: error_code(0x0002) - not-present page\nPGD 0 P4D 0\nPREEMPT SMP NOPTI\nCPU: 2 PID: 11879 Comm: iptables-restor Not tainted 6.1.92-99.174.amzn2023.x86_64 #1\nHardware name: Amazon EC2 c6i.4xlarge/, BIOS 1.0 10/16/2017\nRIP: 0010:iptable_nat_table_init (net/ipv4/netfilter/iptable_nat.c:87 net/ipv4/netfilter/iptable_nat.c:121) iptable_nat\nCode: 10 4c 89 f6 48 89 ef e8 0b 19 bb ff 41 89 c4 85 c0 75 38 41 83 c7 01 49 83 c6 28 41 83 ff 04 75 dc 48 8b 44 24 08 48 8b 0c 24 <48> 89 08 4c 89 ef e8 a2 3b a2 cf 48 83 c4 10 44 89 e0 5b 5d 41 5c\nRSP: 0018:ffffbef902843cd0 EFLAGS: 00010246\nRAX: 0000000000000013 RBX: ffff9f4b052caa20 RCX: ffff9f4b20988d80\nRDX: 0000000000000000 RSI: 0000000000000064 RDI: ffffffffc04201c0\nRBP: ffff9f4b29394000 R08: ffff9f4b07f77258 R09: ffff9f4b07f77240\nR10: 0000000000000000 R11: ffff9f4b09635388 R12: 0000000000000000\nR13: ffff9f4b1a3c6c00 R14: ffff9f4b20988e20 R15: 0000000000000004\nFS:  00007f6284340000(0000) GS:ffff9f51fe280000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000013 CR3: 00000001d10a6005 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)\n ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)\n ? xt_find_table_lock (net/netfilter/x_tables.c:1259)\n ? __die_body.cold (arch/x86/kernel/dumpstack.c:478 arch/x86/kernel/dumpstack.c:420)\n ? page_fault_oops (arch/x86/mm/fault.c:727)\n ? exc_page_fault (./arch/x86/include/asm/irqflags.h:40 ./arch/x86/include/asm/irqflags.h:75 arch/x86/mm/fault.c:1470 arch/x86/mm/fault.c:1518)\n ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:570)\n ? iptable_nat_table_init (net/ipv4/netfilter/iptable_nat.c:87 net/ipv4/netfilter/iptable_nat.c:121) iptable_nat\n xt_find_table_lock (net/netfilter/x_tables.c:1259)\n xt_request_find_table_lock (net/netfilter/x_tables.c:1287)\n get_info (net/ipv4/netfilter/ip_tables.c:965)\n ? security_capable (security/security.c:809 (discriminator 13))\n ? ns_capable (kernel/capability.c:376 kernel/capability.c:397)\n ? do_ipt_get_ctl (net/ipv4/netfilter/ip_tables.c:1656)\n ? bpfilter_send_req (net/bpfilter/bpfilter_kern.c:52) bpfilter\n nf_getsockopt (net/netfilter/nf_sockopt.c:116)\n ip_getsockopt (net/ipv4/ip_sockglue.c:1827)\n __sys_getsockopt (net/socket.c:2327)\n __x64_sys_getsockopt (net/socket.c:2342 net/socket.c:2339 net/socket.c:2339)\n do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:81)\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:121)\nRIP: 0033:0x7f62844685ee\nCode: 48 8b 0d 45 28 0f 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 37 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 0a c3 66 0f 1f 84 00 00 00 00 00 48 8b 15 09\nRSP: 002b:00007ffd1f83d638 EFLAGS: 00000246 ORIG_RAX: 0000000000000037\nRAX: ffffffffffffffda RBX: 00007ffd1f83d680 RCX: 00007f62844685ee\nRDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000004\nRBP: 0000000000000004 R08: 00007ffd1f83d670 R09: 0000558798ffa2a0\nR10: 00007ffd1f83d680 R11: 0000000000000246 R12: 00007ffd1f83e3b2\nR13: 00007f6284\n---truncated---"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42271",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8b424c9e44111c5a76f41c6b741f8d4c4179d876",
            "https://git.kernel.org/stable/c/01437282fd3904810603f3dc98d2cac6b8b6fc84",
            "https://git.kernel.org/stable/c/69620522c48ce8215e5eb55ffbab8cafee8f407d",
            "https://git.kernel.org/stable/c/f558120cd709682b739207b48cf7479fd9568431",
            "https://git.kernel.org/stable/c/84f40b46787ecb67c7ad08a5bb1376141fa10c01",
            "https://git.kernel.org/stable/c/37652fbef9809411cea55ea5fa1a170e299efcd0",
            "https://git.kernel.org/stable/c/c65f72eec60a34ace031426e04e9aff8e5f04895",
            "https://git.kernel.org/stable/c/ac758e1f663fe9bc64f6b47212a2aa18697524f5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/iucv: fix use after free in iucv_sock_close()\n\niucv_sever_path() is called from process context and from bh context.\niucv->path is used as indicator whether somebody else is taking care of\nsevering the path (or it is already removed / never existed).\nThis needs to be done with atomic compare and swap, otherwise there is a\nsmall window where iucv_sock_close() will try to work with a path that has\nalready been severed and freed by iucv_callback_connrej() called by\niucv_tasklet_fn().\n\nExample:\n[452744.123844] Call Trace:\n[452744.123845] ([<0000001e87f03880>] 0x1e87f03880)\n[452744.123966]  [<00000000d593001e>] iucv_path_sever+0x96/0x138\n[452744.124330]  [<000003ff801ddbca>] iucv_sever_path+0xc2/0xd0 [af_iucv]\n[452744.124336]  [<000003ff801e01b6>] iucv_sock_close+0xa6/0x310 [af_iucv]\n[452744.124341]  [<000003ff801e08cc>] iucv_sock_release+0x3c/0xd0 [af_iucv]\n[452744.124345]  [<00000000d574794e>] __sock_release+0x5e/0xe8\n[452744.124815]  [<00000000d5747a0c>] sock_close+0x34/0x48\n[452744.124820]  [<00000000d5421642>] __fput+0xba/0x268\n[452744.124826]  [<00000000d51b382c>] task_work_run+0xbc/0xf0\n[452744.124832]  [<00000000d5145710>] do_notify_resume+0x88/0x90\n[452744.124841]  [<00000000d5978096>] system_call+0xe2/0x2c8\n[452744.125319] Last Breaking-Event-Address:\n[452744.125321]  [<00000000d5930018>] iucv_path_sever+0x90/0x138\n[452744.125324]\n[452744.125325] Kernel panic - not syncing: Fatal exception in interrupt\n\nNote that bh_lock_sock() is not serializing the tasklet context against\nprocess context, because the check for sock_owned_by_user() and\ncorresponding handling is missing.\n\nIdeas for a future clean-up patch:\nA) Correct usage of bh_lock_sock() in tasklet context, as described in\nRe-enqueue, if needed. This may require adding return values to the\ntasklet functions and thus changes to all users of iucv.\n\nB) Change iucv tasklet into worker and use only lock_sock() in af_iucv."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42272",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d06daf0ad645d9225a3ff6958dd82e1f3988fa64",
            "https://git.kernel.org/stable/c/d7cc186d0973afce0e1237c37f7512c01981fb79",
            "https://git.kernel.org/stable/c/3a5b68869dbe14f1157c6a24ac71923db060eeab",
            "https://git.kernel.org/stable/c/2191a54f63225b548fd8346be3611c3219a24738",
            "https://git.kernel.org/stable/c/7c03ab555eb1ba26c77fd7c25bdf44a0ac23edee",
            "https://git.kernel.org/stable/c/3ddefcb8f75e312535e2e7d5fef9932019ba60f2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: act_ct: take care of padding in struct zones_ht_key\n\nBlamed commit increased lookup key size from 2 bytes to 16 bytes,\nbecause zones_ht_key got a struct net pointer.\n\nMake sure rhashtable_lookup() is not using the padding bytes\nwhich are not initialized.\n\n BUG: KMSAN: uninit-value in rht_ptr_rcu include/linux/rhashtable.h:376 [inline]\n BUG: KMSAN: uninit-value in __rhashtable_lookup include/linux/rhashtable.h:607 [inline]\n BUG: KMSAN: uninit-value in rhashtable_lookup include/linux/rhashtable.h:646 [inline]\n BUG: KMSAN: uninit-value in rhashtable_lookup_fast include/linux/rhashtable.h:672 [inline]\n BUG: KMSAN: uninit-value in tcf_ct_flow_table_get+0x611/0x2260 net/sched/act_ct.c:329\n  rht_ptr_rcu include/linux/rhashtable.h:376 [inline]\n  __rhashtable_lookup include/linux/rhashtable.h:607 [inline]\n  rhashtable_lookup include/linux/rhashtable.h:646 [inline]\n  rhashtable_lookup_fast include/linux/rhashtable.h:672 [inline]\n  tcf_ct_flow_table_get+0x611/0x2260 net/sched/act_ct.c:329\n  tcf_ct_init+0xa67/0x2890 net/sched/act_ct.c:1408\n  tcf_action_init_1+0x6cc/0xb30 net/sched/act_api.c:1425\n  tcf_action_init+0x458/0xf00 net/sched/act_api.c:1488\n  tcf_action_add net/sched/act_api.c:2061 [inline]\n  tc_ctl_action+0x4be/0x19d0 net/sched/act_api.c:2118\n  rtnetlink_rcv_msg+0x12fc/0x1410 net/core/rtnetlink.c:6647\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2550\n  rtnetlink_rcv+0x34/0x40 net/core/rtnetlink.c:6665\n  netlink_unicast_kernel net/netlink/af_netlink.c:1331 [inline]\n  netlink_unicast+0xf52/0x1260 net/netlink/af_netlink.c:1357\n  netlink_sendmsg+0x10da/0x11e0 net/netlink/af_netlink.c:1901\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  ____sys_sendmsg+0x877/0xb60 net/socket.c:2597\n  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2651\n  __sys_sendmsg net/socket.c:2680 [inline]\n  __do_sys_sendmsg net/socket.c:2689 [inline]\n  __se_sys_sendmsg net/socket.c:2687 [inline]\n  __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2687\n  x64_sys_call+0x2dd6/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:47\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nLocal variable key created at:\n  tcf_ct_flow_table_get+0x4a/0x2260 net/sched/act_ct.c:324\n  tcf_ct_init+0xa67/0x2890 net/sched/act_ct.c:1408"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42274",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b239a37d68e8bc59f9516444da222841e3b13ba9",
            "https://git.kernel.org/stable/c/f5043e69aeb2786f32e84132817a007a6430aa7d",
            "https://git.kernel.org/stable/c/36c255db5a25edd42d1aca48e38b8e95ee5fd9ef",
            "https://git.kernel.org/stable/c/3dab73ab925a51ab05543b491bf17463a48ca323",
            "https://git.kernel.org/stable/c/7c07220cf634002f93a87ca2252a32766850f2d1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"ALSA: firewire-lib: operate for period elapse event in process context\"\n\nCommit 7ba5ca32fe6e (\"ALSA: firewire-lib: operate for period elapse event\nin process context\") removed the process context workqueue from\namdtp_domain_stream_pcm_pointer() and update_pcm_pointers() to remove\nits overhead.\n\nWith RME Fireface 800, this lead to a regression since\nKernels 5.14.0, causing an AB/BA deadlock competition for the\nsubstream lock with eventual system freeze under ALSA operation:\n\nthread 0:\n    * (lock A) acquire substream lock by\n\tsnd_pcm_stream_lock_irq() in\n\tsnd_pcm_status64()\n    * (lock B) wait for tasklet to finish by calling\n    \ttasklet_unlock_spin_wait() in\n\ttasklet_disable_in_atomic() in\n\tohci_flush_iso_completions() of ohci.c\n\nthread 1:\n    * (lock B) enter tasklet\n    * (lock A) attempt to acquire substream lock,\n    \twaiting for it to be released:\n\tsnd_pcm_stream_lock_irqsave() in\n    \tsnd_pcm_period_elapsed() in\n\tupdate_pcm_pointers() in\n\tprocess_ctx_payloads() in\n\tprocess_rx_packets() of amdtp-stream.c\n\n? tasklet_unlock_spin_wait\n </NMI>\n <TASK>\nohci_flush_iso_completions firewire_ohci\namdtp_domain_stream_pcm_pointer snd_firewire_lib\nsnd_pcm_update_hw_ptr0 snd_pcm\nsnd_pcm_status64 snd_pcm\n\n? native_queued_spin_lock_slowpath\n </NMI>\n <IRQ>\n_raw_spin_lock_irqsave\nsnd_pcm_period_elapsed snd_pcm\nprocess_rx_packets snd_firewire_lib\nirq_target_callback snd_firewire_lib\nhandle_it_packet firewire_ohci\ncontext_tasklet firewire_ohci\n\nRestore the process context work queue to prevent deadlock\nAB/BA deadlock competition for ALSA substream lock of\nsnd_pcm_stream_lock_irq() in snd_pcm_status64()\nand snd_pcm_stream_lock_irqsave() in snd_pcm_period_elapsed().\n\nrevert commit 7ba5ca32fe6e (\"ALSA: firewire-lib: operate for period\nelapse event in process context\")\n\nReplace inline description to prevent future deadlock."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42276",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d135c3352f7c947a922da93c8e763ee6bc208b64",
            "https://git.kernel.org/stable/c/77848b379e9f85a08048a2c8b3b4a7e8396f5f83",
            "https://git.kernel.org/stable/c/70100fe721840bf6d8e5abd25b8bffe4d2e049b7",
            "https://git.kernel.org/stable/c/c31fad1470389666ac7169fe43aa65bf5b7e2cfd",
            "https://git.kernel.org/stable/c/3f8ec1d6b0ebd8268307d52be8301973fa5a01ec",
            "https://git.kernel.org/stable/c/be23ae63080e0bf9e246ab20207200bca6585eba",
            "https://git.kernel.org/stable/c/7cc1f4cd90a00b6191cb8cda2d1302fdce59361c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-pci: add missing condition check for existence of mapped data\n\nnvme_map_data() is called when request has physical segments, hence\nthe nvme_unmap_data() should have same condition to avoid dereference."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42277",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/dfe90030a0cfa26dca4cb6510de28920e5ad22fb",
            "https://git.kernel.org/stable/c/b62841e49a2b7938f6fdeaaf93fb57e4eb880bdb",
            "https://git.kernel.org/stable/c/d5fe884ce28c5005f8582c35333c195a168f841c",
            "https://git.kernel.org/stable/c/630482ee0653decf9e2482ac6181897eb6cde5b8",
            "https://git.kernel.org/stable/c/8c79ceb4ecf823e6ec10fee6febb0fca3de79922"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu: sprd: Avoid NULL deref in sprd_iommu_hw_en\n\nIn sprd_iommu_cleanup() before calling function sprd_iommu_hw_en()\ndom->sdev is equal to NULL, which leads to null dereference.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42280",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4d8b642985ae24f4b3656438eb8489834a17bb80",
            "https://git.kernel.org/stable/c/ddc79556641ee070d36be0de4a1f0a16a71f1fc7",
            "https://git.kernel.org/stable/c/7e4a539bca7d8d20f2c5d93c18cce8ef77cd78e0",
            "https://git.kernel.org/stable/c/61ab751451f5ebd0b98e02276a44e23a10110402",
            "https://git.kernel.org/stable/c/70db2c84631f50e02e6b32b543700699dd395803",
            "https://git.kernel.org/stable/c/d3e4d4a98c5629ccdcb762a0ff6c82ba9738a0c3",
            "https://git.kernel.org/stable/c/9460ac3dd1ae033bc2b021a458fb535a0c36ddb2",
            "https://git.kernel.org/stable/c/8f4030277dfb9dbe04fd78566b19931097c9d629"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: Fix a use after free in hfcmulti_tx()\n\nDon't dereference *sp after calling dev_kfree_skb(*sp)."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42281",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/11ec79f5c7f74261874744039bc1551023edd6b2",
            "https://git.kernel.org/stable/c/c3496314c53e7e82ddb544c825defc3e8c0e45cf",
            "https://git.kernel.org/stable/c/ec4eea14d75f7b0491194dd413f540dd19b8c733",
            "https://git.kernel.org/stable/c/fa5ef655615a01533035c6139248c5b33aa27028",
            "https://git.kernel.org/stable/c/a689f5eb13a90f892a088865478b3cd39f53d5dc",
            "https://git.kernel.org/stable/c/dda518dea60d556a2d171c0122ca7d9fdb7d473a",
            "https://git.kernel.org/stable/c/f6bb8c90cab97a3e03f8d30e3069efe6a742e0be"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix a segment issue when downgrading gso_size\n\nLinearize the skb when downgrading gso_size because it may trigger a\nBUG_ON() later when the skb is segmented as described in [1,2]."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42283",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1377de719652d868f5317ba8398b7e74c5f0430b",
            "https://git.kernel.org/stable/c/7704460acd7f5d35eb07c52500987dc9b95313fb",
            "https://git.kernel.org/stable/c/a13d3864b76ac87085ec530b2ff8e37482a63a96",
            "https://git.kernel.org/stable/c/6d745cd0e9720282cd291d36b9db528aea18add2",
            "https://git.kernel.org/stable/c/fd06cb4a5fc7bda3dea31712618a62af72a1c6cb",
            "https://git.kernel.org/stable/c/5cc4d71dda2dd4f1520f40e634a527022e48ccd8",
            "https://git.kernel.org/stable/c/9e8f558a3afe99ce51a642ce0d3637ddc2b5d5d0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nexthop: Initialize all fields in dumped nexthops\n\nstruct nexthop_grp contains two reserved fields that are not initialized by\nnla_put_nh_group(), and carry garbage. This can be observed e.g. with\nstrace (edited for clarity):\n\n    # ip nexthop add id 1 dev lo\n    # ip nexthop add id 101 group 1\n    # strace -e recvmsg ip nexthop get id 101\n    ...\n    recvmsg(... [{nla_len=12, nla_type=NHA_GROUP},\n                 [{id=1, weight=0, resvd1=0x69, resvd2=0x67}]] ...) = 52\n\nThe fields are reserved and therefore not currently used. But as they are, they\nleak kernel memory, and the fact they are not just zero complicates repurposing\nof the fields for new ends. Initialize the full structure."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42284",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/728734352743a78b4c5a7285b282127696a4a813",
            "https://git.kernel.org/stable/c/76ddf84a52f0d8ec3f5db6ccce08faf202a17d28",
            "https://git.kernel.org/stable/c/2abe350db1aa599eeebc6892237d0bce0f1de62a",
            "https://git.kernel.org/stable/c/fa96c6baef1b5385e2f0c0677b32b3839e716076",
            "https://git.kernel.org/stable/c/7ec3335dd89c8d169e9650e4bac64fde71fdf15b",
            "https://git.kernel.org/stable/c/253405541be2f15ffebdeac2f4cf4b7e9144d12f",
            "https://git.kernel.org/stable/c/aa38bf74899de07cf70b50cd17f8ad45fb6654c8",
            "https://git.kernel.org/stable/c/5eea127675450583680c8170358bcba43227bd69"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Return non-zero value from tipc_udp_addr2str() on error\n\ntipc_udp_addr2str() should return non-zero value if the UDP media\naddress is invalid. Otherwise, a buffer overflow access can occur in\ntipc_media_addr_printf(). Fix this by returning 1 on an invalid UDP\nmedia address."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42286",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7cec2c3bfe84539c415f5e16f989228eba1d2f1e",
            "https://git.kernel.org/stable/c/f6be298cc1042f24d521197af29c7c4eb95af4d5",
            "https://git.kernel.org/stable/c/3eac973eb5cb2b874b3918f924798afc5affd46b",
            "https://git.kernel.org/stable/c/eb1d4ce2609584eeb7694866f34d4b213caa3af9",
            "https://git.kernel.org/stable/c/549aac9655320c9b245a24271b204668c5d40430",
            "https://git.kernel.org/stable/c/e1f010844443c389bc552884ac5cfa47de34d54c",
            "https://git.kernel.org/stable/c/a3ab508a4853a9f5ae25a7816a4889f09938f63c",
            "https://git.kernel.org/stable/c/cde43031df533751b4ead37d173922feee2f550f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: validate nvme_local_port correctly\n\nThe driver load failed with error message,\n\nqla2xxx [0000:04:00.0]-ffff:0: register_localport failed: ret=ffffffef\n\nand with a kernel crash,\n\n\tBUG: unable to handle kernel NULL pointer dereference at 0000000000000070\n\tWorkqueue: events_unbound qla_register_fcport_fn [qla2xxx]\n\tRIP: 0010:nvme_fc_register_remoteport+0x16/0x430 [nvme_fc]\n\tRSP: 0018:ffffaaa040eb3d98 EFLAGS: 00010282\n\tRAX: 0000000000000000 RBX: ffff9dfb46b78c00 RCX: 0000000000000000\n\tRDX: ffff9dfb46b78da8 RSI: ffffaaa040eb3e08 RDI: 0000000000000000\n\tRBP: ffff9dfb612a0a58 R08: ffffffffaf1d6270 R09: 3a34303a30303030\n\tR10: 34303a303030305b R11: 2078787832616c71 R12: ffff9dfb46b78dd4\n\tR13: ffff9dfb46b78c24 R14: ffff9dfb41525300 R15: ffff9dfb46b78da8\n\tFS:  0000000000000000(0000) GS:ffff9dfc67c00000(0000) knlGS:0000000000000000\n\tCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n\tCR2: 0000000000000070 CR3: 000000018da10004 CR4: 00000000000206f0\n\tCall Trace:\n\tqla_nvme_register_remote+0xeb/0x1f0 [qla2xxx]\n\t? qla2x00_dfs_create_rport+0x231/0x270 [qla2xxx]\n\tqla2x00_update_fcport+0x2a1/0x3c0 [qla2xxx]\n\tqla_register_fcport_fn+0x54/0xc0 [qla2xxx]\n\nExit the qla_nvme_register_remote() function when qla_nvme_register_hba()\nfails and correctly validate nvme_local_port."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42287",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/814f4a53cc86f7ea8b501bfb1723f24fd29ef5ee",
            "https://git.kernel.org/stable/c/314efe3f87949a568f512f05df20bf47b81cf232",
            "https://git.kernel.org/stable/c/36fdc5319c4d0ec8b8938ec4769764098a246bfb",
            "https://git.kernel.org/stable/c/4475afa2646d3fec176fc4d011d3879b26cb26e3",
            "https://git.kernel.org/stable/c/af46649304b0c9cede4ccfc2be2561ce8ed6a2ea",
            "https://git.kernel.org/stable/c/57ba7563712227647f82a92547e82c96cd350553",
            "https://git.kernel.org/stable/c/9117337b04d789bd08fdd9854a40bec2815cd3f6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Complete command early within lock\n\nA crash was observed while performing NPIV and FW reset,\n\n BUG: kernel NULL pointer dereference, address: 000000000000001c\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 1 PREEMPT_RT SMP NOPTI\n RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0\n RSP: 0018:ffffc90026f47b88 EFLAGS: 00010246\n RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000002\n RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8881041130d0\n RBP: ffff8881041130d0 R08: 0000000000000000 R09: 0000000000000034\n R10: ffffc90026f47c48 R11: 0000000000000031 R12: 0000000000000000\n R13: 0000000000000000 R14: ffff8881565e4a20 R15: 0000000000000000\n FS: 00007f4c69ed3d00(0000) GS:ffff889faac80000(0000) knlGS:0000000000000000\n CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000000000000001c CR3: 0000000288a50002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n <TASK>\n ? __die_body+0x1a/0x60\n ? page_fault_oops+0x16f/0x4a0\n ? do_user_addr_fault+0x174/0x7f0\n ? exc_page_fault+0x69/0x1a0\n ? asm_exc_page_fault+0x22/0x30\n ? dma_direct_unmap_sg+0x51/0x1e0\n ? preempt_count_sub+0x96/0xe0\n qla2xxx_qpair_sp_free_dma+0x29f/0x3b0 [qla2xxx]\n qla2xxx_qpair_sp_compl+0x60/0x80 [qla2xxx]\n __qla2x00_abort_all_cmds+0xa2/0x450 [qla2xxx]\n\nThe command completion was done early while aborting the commands in driver\nunload path but outside lock to avoid the WARN_ON condition of performing\ndma_free_attr within the lock. However this caused race condition while\ncommand completion via multiple paths causing system crash.\n\nHence complete the command early in unload path but within the lock to\navoid race condition."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42288",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2a15b59a2c5afac89696e44acf5bbfc0599c6c5e",
            "https://git.kernel.org/stable/c/571d7f2a08836698c2fb0d792236424575b9829b",
            "https://git.kernel.org/stable/c/8192c533e89d9fb69b2490398939236b78cda79b",
            "https://git.kernel.org/stable/c/c03d740152f78e86945a75b2ad541bf972fab92a",
            "https://git.kernel.org/stable/c/dae67169cb35a37ecccf60cfcd6bf93a1f4f5efb",
            "https://git.kernel.org/stable/c/87db8d7b7520e99de71791260989f06f9c94953d",
            "https://git.kernel.org/stable/c/b0302ffc74123b6a99d7d1896fcd9b2e4072d9ce"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix for possible memory corruption\n\nInit Control Block is dereferenced incorrectly.  Correctly dereference ICB"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42289",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d28a2075bb530489715a3b011e1dd8765ba20313",
            "https://git.kernel.org/stable/c/87c25fcb95aafabb6a4914239f4ab41b07a4f9b7",
            "https://git.kernel.org/stable/c/b35d6d5a2f38605cddea7d5c64cded894fbe8ede",
            "https://git.kernel.org/stable/c/76f480d7c717368f29a3870f7d64471ce0ff8fb2",
            "https://git.kernel.org/stable/c/086489256696eb774654a5410e86381c346356fe",
            "https://git.kernel.org/stable/c/171ac4b495f9473bc134356a00095b47e6409e52",
            "https://git.kernel.org/stable/c/e5ed6a26ffdec0c91cf0b6138afbd675c00ad5fc",
            "https://git.kernel.org/stable/c/b12c54e51ba83c1fbc619d35083d7872e42ecdef"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: During vport delete send async logout explicitly\n\nDuring vport delete, it is observed that during unload we hit a crash\nbecause of stale entries in outstanding command array.  For all these stale\nI/O entries, eh_abort was issued and aborted (fast_fail_io = 2009h) but\nI/Os could not complete while vport delete is in process of deleting.\n\n  BUG: kernel NULL pointer dereference, address: 000000000000001c\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] PREEMPT SMP NOPTI\n  Workqueue: qla2xxx_wq qla_do_work [qla2xxx]\n  RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0\n  RSP: 0018:ffffa1e1e150fc68 EFLAGS: 00010046\n  RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000001\n  RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8ce208a7a0d0\n  RBP: ffff8ce208a7a0d0 R08: 0000000000000000 R09: ffff8ce378aac9c8\n  R10: ffff8ce378aac8a0 R11: ffffa1e1e150f9d8 R12: 0000000000000000\n  R13: 0000000000000000 R14: ffff8ce378aac9c8 R15: 0000000000000000\n  FS:  0000000000000000(0000) GS:ffff8d217f000000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 000000000000001c CR3: 0000002089acc000 CR4: 0000000000350ee0\n  Call Trace:\n  <TASK>\n  qla2xxx_qpair_sp_free_dma+0x417/0x4e0\n  ? qla2xxx_qpair_sp_compl+0x10d/0x1a0\n  ? qla2x00_status_entry+0x768/0x2830\n  ? newidle_balance+0x2f0/0x430\n  ? dequeue_entity+0x100/0x3c0\n  ? qla24xx_process_response_queue+0x6a1/0x19e0\n  ? __schedule+0x2d5/0x1140\n  ? qla_do_work+0x47/0x60\n  ? process_one_work+0x267/0x440\n  ? process_one_work+0x440/0x440\n  ? worker_thread+0x2d/0x3d0\n  ? process_one_work+0x440/0x440\n  ? kthread+0x156/0x180\n  ? set_kthread_struct+0x50/0x50\n  ? ret_from_fork+0x22/0x30\n  </TASK>\n\nSend out async logout explicitly for all the ports during vport delete."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42290",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/58c56735facb225a5c46fa4b8bbbe7f31d1cb894",
            "https://git.kernel.org/stable/c/21bd3f9e7f924cd2fc892a484e7a50c7e1847565",
            "https://git.kernel.org/stable/c/f8ae38f1dfe652779c7c613facbc257cec00ac44",
            "https://git.kernel.org/stable/c/33b1c47d1fc0b5f06a393bb915db85baacba18ea",
            "https://git.kernel.org/stable/c/a590e8dea3df2639921f874d763be961dd74e8f9",
            "https://git.kernel.org/stable/c/3a2884a44e5cda192df1b28e9925661f79f599a1",
            "https://git.kernel.org/stable/c/fa1803401e1c360efe6342fb41d161cc51748a11"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip/imx-irqsteer: Handle runtime power management correctly\n\nThe power domain is automatically activated from clk_prepare(). However, on\ncertain platforms like i.MX8QM and i.MX8QXP, the power-on handling invokes\nsleeping functions, which triggers the 'scheduling while atomic' bug in the\ncontext switch path during device probing:\n\n BUG: scheduling while atomic: kworker/u13:1/48/0x00000002\n Call trace:\n  __schedule_bug+0x54/0x6c\n  __schedule+0x7f0/0xa94\n  schedule+0x5c/0xc4\n  schedule_preempt_disabled+0x24/0x40\n  __mutex_lock.constprop.0+0x2c0/0x540\n  __mutex_lock_slowpath+0x14/0x20\n  mutex_lock+0x48/0x54\n  clk_prepare_lock+0x44/0xa0\n  clk_prepare+0x20/0x44\n  imx_irqsteer_resume+0x28/0xe0\n  pm_generic_runtime_resume+0x2c/0x44\n  __genpd_runtime_resume+0x30/0x80\n  genpd_runtime_resume+0xc8/0x2c0\n  __rpm_callback+0x48/0x1d8\n  rpm_callback+0x6c/0x78\n  rpm_resume+0x490/0x6b4\n  __pm_runtime_resume+0x50/0x94\n  irq_chip_pm_get+0x2c/0xa0\n  __irq_do_set_handler+0x178/0x24c\n  irq_set_chained_handler_and_data+0x60/0xa4\n  mxc_gpio_probe+0x160/0x4b0\n\nCure this by implementing the irq_bus_lock/sync_unlock() interrupt chip\ncallbacks and handle power management in them as they are invoked from\nnon-atomic context.\n\n[ tglx: Rewrote change log, added Fixes tag ]"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42292",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/68d63ace80b76395e7935687ecdb86421adc2168",
            "https://git.kernel.org/stable/c/57fe01d3d04276875c7e3a6dc763517fc05b8762",
            "https://git.kernel.org/stable/c/d4663536754defff75ff1eca0aaebc41da165a8d",
            "https://git.kernel.org/stable/c/dd6e9894b451e7c85cceb8e9dc5432679a70e7dc",
            "https://git.kernel.org/stable/c/81a15d28f32af01493ae8c5457e0d55314a4167d",
            "https://git.kernel.org/stable/c/b59a5e86a3934f1b6a5bd1368902dbc79bdecc90",
            "https://git.kernel.org/stable/c/648d5490460d38436640da0812bf7f6351c150d2",
            "https://git.kernel.org/stable/c/c5ee8adc8d98a49703320d13878ba2b923b142f5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkobject_uevent: Fix OOB access within zap_modalias_env()\n\nzap_modalias_env() wrongly calculates size of memory block to move, so\nwill cause OOB memory access issue if variable MODALIAS is not the last\none within its @env parameter, fixed by correcting size to memmove."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42295",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/012be828a118bf496e666ef1fc47fc0e7358ada2",
            "https://git.kernel.org/stable/c/be56dfc9be0604291267c07b0e27a69a6bda4899",
            "https://git.kernel.org/stable/c/366c3f688dd0288cbe38af1d3a886b5c62372e4a",
            "https://git.kernel.org/stable/c/4811f7af6090e8f5a398fbdd766f903ef6c0d787",
            "https://git.kernel.org/stable/c/19cce46238ffe3546e44b9c74057103ff8b24c62",
            "https://git.kernel.org/stable/c/02b87e6334a38c65eef49848d3f1ac422f0b2a44",
            "https://git.kernel.org/stable/c/5f0a6800b8aec1b453c7fe4c44fcaac5ffe9d52e",
            "https://git.kernel.org/stable/c/e34191cce3ee63dfa5fb241904aaf2a042d5b6d8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: handle inconsistent state in nilfs_btnode_create_block()\n\nSyzbot reported that a buffer state inconsistency was detected in\nnilfs_btnode_create_block(), triggering a kernel bug.\n\nIt is not appropriate to treat this inconsistency as a bug; it can occur\nif the argument block address (the buffer index of the newly created\nblock) is a virtual block number and has been reallocated due to\ncorruption of the bitmap used to manage its allocation state.\n\nSo, modify nilfs_btnode_create_block() and its callers to treat it as a\npossible filesystem error, rather than triggering a kernel bug."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42296",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/47a8ddcdcaccd9b891db4574795e46a33a121ac2",
            "https://git.kernel.org/stable/c/077f0e24b27c4b44841593c7edbd1993be9eecb5",
            "https://git.kernel.org/stable/c/1e7725814361c8c008d131db195cef8274ff26b8",
            "https://git.kernel.org/stable/c/a8eb3de28e7a365690c61161e7a07a4fc7c60bbf",
            "https://git.kernel.org/stable/c/70f5ef5f33c333cfb286116fa3af74ac9bc84f1b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix return value of f2fs_convert_inline_inode()\n\nIf device is readonly, make f2fs_convert_inline_inode()\nreturn EROFS instead of zero, otherwise it may trigger\npanic during writeback of inline inode's dirty page as\nbelow:\n\n f2fs_write_single_data_page+0xbb6/0x1e90 fs/f2fs/data.c:2888\n f2fs_write_cache_pages fs/f2fs/data.c:3187 [inline]\n __f2fs_write_data_pages fs/f2fs/data.c:3342 [inline]\n f2fs_write_data_pages+0x1efe/0x3a90 fs/f2fs/data.c:3369\n do_writepages+0x359/0x870 mm/page-writeback.c:2634\n filemap_fdatawrite_wbc+0x125/0x180 mm/filemap.c:397\n __filemap_fdatawrite_range mm/filemap.c:430 [inline]\n file_write_and_wait_range+0x1aa/0x290 mm/filemap.c:788\n f2fs_do_sync_file+0x68a/0x1ae0 fs/f2fs/file.c:276\n generic_write_sync include/linux/fs.h:2806 [inline]\n f2fs_file_write_iter+0x7bd/0x24e0 fs/f2fs/file.c:4977\n call_write_iter include/linux/fs.h:2114 [inline]\n new_sync_write fs/read_write.c:497 [inline]\n vfs_write+0xa72/0xc90 fs/read_write.c:590\n ksys_write+0x1a0/0x2c0 fs/read_write.c:643\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-17T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42297",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9ce8135accf103f7333af472709125878704fdd4",
            "https://git.kernel.org/stable/c/e62ff092a42f4a1bae3b310cf46673b4f3aac3b5",
            "https://git.kernel.org/stable/c/2434344559f6743efb3ac15d11af9a0db9543bd3",
            "https://git.kernel.org/stable/c/192b8fb8d1c8ca3c87366ebbef599fa80bb626b8",
            "https://git.kernel.org/stable/c/2d2916516577f2239b3377d9e8d12da5e6ccdfcf",
            "https://git.kernel.org/stable/c/54162974aea37a8cae00742470a78c7f6bd6f915",
            "https://git.kernel.org/stable/c/54bc4e88447e385c4d4ffa85d93e0dce628fcfa6",
            "https://git.kernel.org/stable/c/ec56571b4b146a1cfbedab49d5fcaf19fe8bf4f1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to don't dirty inode for readonly filesystem\n\nsyzbot reports f2fs bug as below:\n\nkernel BUG at fs/f2fs/inode.c:933!\nRIP: 0010:f2fs_evict_inode+0x1576/0x1590 fs/f2fs/inode.c:933\nCall Trace:\n evict+0x2a4/0x620 fs/inode.c:664\n dispose_list fs/inode.c:697 [inline]\n evict_inodes+0x5f8/0x690 fs/inode.c:747\n generic_shutdown_super+0x9d/0x2c0 fs/super.c:675\n kill_block_super+0x44/0x90 fs/super.c:1667\n kill_f2fs_super+0x303/0x3b0 fs/f2fs/super.c:4894\n deactivate_locked_super+0xc1/0x130 fs/super.c:484\n cleanup_mnt+0x426/0x4c0 fs/namespace.c:1256\n task_work_run+0x24a/0x300 kernel/task_work.c:180\n ptrace_notify+0x2cd/0x380 kernel/signal.c:2399\n ptrace_report_syscall include/linux/ptrace.h:411 [inline]\n ptrace_report_syscall_exit include/linux/ptrace.h:473 [inline]\n syscall_exit_work kernel/entry/common.c:251 [inline]\n syscall_exit_to_user_mode_prepare kernel/entry/common.c:278 [inline]\n __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]\n syscall_exit_to_user_mode+0x15c/0x280 kernel/entry/common.c:296\n do_syscall_64+0x50/0x110 arch/x86/entry/common.c:88\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nThe root cause is:\n- do_sys_open\n - f2fs_lookup\n  - __f2fs_find_entry\n   - f2fs_i_depth_write\n    - f2fs_mark_inode_dirty_sync\n     - f2fs_dirty_inode\n      - set_inode_flag(inode, FI_DIRTY_INODE)\n\n- umount\n - kill_f2fs_super\n  - kill_block_super\n   - generic_shutdown_super\n    - sync_filesystem\n    : sb is readonly, skip sync_filesystem()\n    - evict_inodes\n     - iput\n      - f2fs_evict_inode\n       - f2fs_bug_on(sbi, is_inode_flag_set(inode, FI_DIRTY_INODE))\n       : trigger kernel panic\n\nWhen we try to repair i_current_depth in readonly filesystem, let's\nskip dirty inode to avoid panic in later f2fs_evict_inode()."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-08-14T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42259",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4b09513ce93b3dcb590baaaff2ce96f2d098312d",
            "https://git.kernel.org/stable/c/ead9289a51ea82eb5b27029fcf4c34b2dd60cf06",
            "https://git.kernel.org/stable/c/8bdd9ef7e9b1b2a73e394712b72b22055e0e26c3",
            "https://git.kernel.org/stable/c/3e06073d24807f04b4694108a8474decb7b99e60",
            "https://git.kernel.org/stable/c/a256d019eaf044864c7e50312f0a65b323c24f39",
            "https://git.kernel.org/stable/c/50111a8098fb9ade621eeff82228a997d42732ab",
            "https://git.kernel.org/stable/c/911f8055f175c82775d0fd8cedcd0b75413f4ba7",
            "https://git.kernel.org/stable/c/e8a68aa842d3f8dd04a46b9d632e5f67fde1da9b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gem: Fix Virtual Memory mapping boundaries calculation\n\nCalculating the size of the mapped area as the lesser value\nbetween the requested size and the actual size does not consider\nthe partial mapping offset. This can cause page fault access.\n\nFix the calculation of the starting and ending addresses, the\ntotal size is now deduced from the difference between the end and\nstart addresses.\n\nAdditionally, the calculations have been rewritten in a clearer\nand more understandable form.\n\n[Joonas: Add Requires: tag]\nRequires: 60a2066c5005 (\"drm/i915/gem: Adjust vma offset for framebuffer mmap offset\")\n(cherry picked from commit 97b6784753da06d9d40232328efc5c5367e53417)"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-30T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42114",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e87c2f098f52aa2fe20258a5bb1738d6a74e9ed7",
            "https://git.kernel.org/stable/c/d1cba2ea8121e7fdbe1328cea782876b1dd80993",
            "https://git.kernel.org/stable/c/80ac0cc9c0bef984e29637b1efa93d7214b42f53",
            "https://git.kernel.org/stable/c/33ac5a4eb3d4bea2146658f1b6d1fa86d62d2b22",
            "https://git.kernel.org/stable/c/3fc06f6d142d2840735543216a60d0a8c345bdec",
            "https://git.kernel.org/stable/c/8a3ac7fb36962c34698f884bd697938054ff2afa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: restrict NL80211_ATTR_TXQ_QUANTUM values\n\nsyzbot is able to trigger softlockups, setting NL80211_ATTR_TXQ_QUANTUM\nto 2^31.\n\nWe had a similar issue in sch_fq, fixed with commit\nd9e15a273306 (\"pkt_sched: fq: do not accept silly TCA_FQ_QUANTUM\")\n\nwatchdog: BUG: soft lockup - CPU#1 stuck for 26s! [kworker/1:0:24]\nModules linked in:\nirq event stamp: 131135\n hardirqs last  enabled at (131134): [<ffff80008ae8778c>] __exit_to_kernel_mode arch/arm64/kernel/entry-common.c:85 [inline]\n hardirqs last  enabled at (131134): [<ffff80008ae8778c>] exit_to_kernel_mode+0xdc/0x10c arch/arm64/kernel/entry-common.c:95\n hardirqs last disabled at (131135): [<ffff80008ae85378>] __el1_irq arch/arm64/kernel/entry-common.c:533 [inline]\n hardirqs last disabled at (131135): [<ffff80008ae85378>] el1_interrupt+0x24/0x68 arch/arm64/kernel/entry-common.c:551\n softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_hh_init net/core/neighbour.c:1538 [inline]\n softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_resolve_output+0x268/0x658 net/core/neighbour.c:1553\n softirqs last disabled at (125896): [<ffff80008904166c>] local_bh_disable+0x10/0x34 include/linux/bottom_half.h:19\nCPU: 1 PID: 24 Comm: kworker/1:0 Not tainted 6.9.0-rc7-syzkaller-gfda5695d692c #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nWorkqueue: mld mld_ifc_work\npstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __list_del include/linux/list.h:195 [inline]\n pc : __list_del_entry include/linux/list.h:218 [inline]\n pc : list_move_tail include/linux/list.h:310 [inline]\n pc : fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n pc : ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854\n lr : __list_del_entry include/linux/list.h:218 [inline]\n lr : list_move_tail include/linux/list.h:310 [inline]\n lr : fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n lr : ieee80211_tx_dequeue+0x67c/0x3b4c net/mac80211/tx.c:3854\nsp : ffff800093d36700\nx29: ffff800093d36a60 x28: ffff800093d36960 x27: dfff800000000000\nx26: ffff0000d800ad50 x25: ffff0000d800abe0 x24: ffff0000d800abf0\nx23: ffff0000e0032468 x22: ffff0000e00324d4 x21: ffff0000d800abf0\nx20: ffff0000d800abf8 x19: ffff0000d800abf0 x18: ffff800093d363c0\nx17: 000000000000d476 x16: ffff8000805519dc x15: ffff7000127a6cc8\nx14: 1ffff000127a6cc8 x13: 0000000000000004 x12: ffffffffffffffff\nx11: ffff7000127a6cc8 x10: 0000000000ff0100 x9 : 0000000000000000\nx8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000\nx5 : ffff80009287aa08 x4 : 0000000000000008 x3 : ffff80008034c7fc\nx2 : ffff0000e0032468 x1 : 00000000da0e46b8 x0 : ffff0000e0032470\nCall trace:\n  __list_del include/linux/list.h:195 [inline]\n  __list_del_entry include/linux/list.h:218 [inline]\n  list_move_tail include/linux/list.h:310 [inline]\n  fq_tin_dequeue include/net/fq_impl.h:112 [inline]\n  ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854\n  wake_tx_push_queue net/mac80211/util.c:294 [inline]\n  ieee80211_handle_wake_tx_queue+0x118/0x274 net/mac80211/util.c:315\n  drv_wake_tx_queue net/mac80211/driver-ops.h:1350 [inline]\n  schedule_and_wake_txq net/mac80211/driver-ops.h:1357 [inline]\n  ieee80211_queue_skb+0x18e8/0x2244 net/mac80211/tx.c:1664\n  ieee80211_tx+0x260/0x400 net/mac80211/tx.c:1966\n  ieee80211_xmit+0x278/0x354 net/mac80211/tx.c:2062\n  __ieee80211_subif_start_xmit+0xab8/0x122c net/mac80211/tx.c:4338\n  ieee80211_subif_start_xmit+0xe0/0x438 net/mac80211/tx.c:4532\n  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]\n  netdev_start_xmit include/linux/netdevice.h:4917 [inline]\n  xmit_one net/core/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x27c/0x938 net/core/dev.c:3547\n  __dev_queue_xmit+0x1678/0x33fc net/core/dev.c:4341\n  dev_queue_xmit include/linux/netdevice.h:3091 [inline]\n  neigh_resolve_output+0x558/0x658 net/core/neighbour.c:1563\n  neigh_output include/net/neighbour.h:542 [inline]\n  ip6_fini\n---truncated---"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-30T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42126",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8d3f83dfb23674540c827a8d65fba20aa300b252",
            "https://git.kernel.org/stable/c/0f37946c62c48a907625348cbc720a7a0c547d1e",
            "https://git.kernel.org/stable/c/2c78c9411e685dbc9eac8c2845111b03501975b8",
            "https://git.kernel.org/stable/c/0db880fc865ffb522141ced4bfa66c12ab1fbb70",
            "https://git.kernel.org/stable/c/fb6675db04c4b79883373edc578d5df7bbc84848",
            "https://git.kernel.org/stable/c/e2afb26615adf6c3ceaaa7732aa839bcd587a057"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc: Avoid nmi_enter/nmi_exit in real mode interrupt.\n\nnmi_enter()/nmi_exit() touches per cpu variables which can lead to kernel\ncrash when invoked during real mode interrupt handling (e.g. early HMI/MCE\ninterrupt handler) if percpu allocation comes from vmalloc area.\n\nEarly HMI/MCE handlers are called through DEFINE_INTERRUPT_HANDLER_NMI()\nwrapper which invokes nmi_enter/nmi_exit calls. We don't see any issue when\npercpu allocation is from the embedded first chunk. However with\nCONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK enabled there are chances where percpu\nallocation can come from the vmalloc area.\n\nWith kernel command line \"percpu_alloc=page\" we can force percpu allocation\nto come from vmalloc area and can see kernel crash in machine_check_early:\n\n[    1.215714] NIP [c000000000e49eb4] rcu_nmi_enter+0x24/0x110\n[    1.215717] LR [c0000000000461a0] machine_check_early+0xf0/0x2c0\n[    1.215719] --- interrupt: 200\n[    1.215720] [c000000fffd73180] [0000000000000000] 0x0 (unreliable)\n[    1.215722] [c000000fffd731b0] [0000000000000000] 0x0\n[    1.215724] [c000000fffd73210] [c000000000008364] machine_check_early_common+0x134/0x1f8\n\nFix this by avoiding use of nmi_enter()/nmi_exit() in real mode if percpu\nfirst chunk is not embedded."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-30T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42131",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7a49389771ae7666f4dc3426e2a4594bf23ae290",
            "https://git.kernel.org/stable/c/a25e8536184516b55ef89ab91dd2eea429de28d2",
            "https://git.kernel.org/stable/c/c83ed422c24f0d4b264f89291d4fabe285f80dbc",
            "https://git.kernel.org/stable/c/bd16a7ee339aef3ee4c90cb23902afb6af379ea0",
            "https://git.kernel.org/stable/c/8e0b5e7f2895eccef5c2a0018b589266f90c4805",
            "https://git.kernel.org/stable/c/385d838df280eba6c8680f9777bfa0d0bfe7e8b2",
            "https://git.kernel.org/stable/c/2b2d2b8766db028bd827af34075f221ae9e9efff",
            "https://git.kernel.org/stable/c/4d3817b64eda07491bdd86a234629fe0764fb42a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: avoid overflows in dirty throttling logic\n\nThe dirty throttling logic is interspersed with assumptions that dirty\nlimits in PAGE_SIZE units fit into 32-bit (so that various multiplications\nfit into 64-bits).  If limits end up being larger, we will hit overflows,\npossible divisions by 0 etc.  Fix these problems by never allowing so\nlarge dirty limits as they have dubious practical value anyway.  For\ndirty_bytes / dirty_background_bytes interfaces we can just refuse to set\nso large limits.  For dirty_ratio / dirty_background_ratio it isn't so\nsimple as the dirty limit is computed from the amount of available memory\nwhich can change due to memory hotplug etc.  So when converting dirty\nlimits from ratios to numbers of pages, we just don't allow the result to\nexceed UINT_MAX.\n\nThis is root-only triggerable problem which occurs when the operator\nsets dirty limits to >16 TB."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41042",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae",
            "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c",
            "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe",
            "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0",
            "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f",
            "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24",
            "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b",
            "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace)."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40972",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/111103907234bffd0a34fba070ad9367de058752",
            "https://git.kernel.org/stable/c/0a46ef234756dca04623b7591e8ebb3440622f0b",
            "https://git.kernel.org/stable/c/737fb7853acd5bc8984f6f42e4bfba3334be8ae1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: do not create EA inode under buffer lock\n\next4_xattr_set_entry() creates new EA inodes while holding buffer lock\non the external xattr block. This is problematic as it nests all the\nallocation locking (which acquires locks on other buffers) under the\nbuffer lock. This can even deadlock when the filesystem is corrupted and\ne.g. quota file is setup to contain xattr block as data block. Move the\nallocation of EA inode out of ext4_xattr_set_entry() into the callers."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-07-05T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-770",
        "id": "CVE-2024-39472",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/45cf976008ddef4a9c9a30310c9b4fb2a9a6602a",
            "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f",
            "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5",
            "https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36915",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/29dc0ea979d433dd3c26abc8fa971550bdc05107",
            "https://git.kernel.org/stable/c/7a87441c9651ba37842f4809224aca13a554a26f",
            "https://git.kernel.org/stable/c/0f106133203021533cb753e80d75896f4ad222f8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n\nsyzbot reported unsafe calls to copy_from_sockptr() [1]\n\nUse copy_safe_from_sockptr() instead.\n\n[1]\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\nRead of size 4 at addr ffff88801caa1ec3 by task syz-executor459/5078\n\nCPU: 0 PID: 5078 Comm: syz-executor459 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n <TASK>\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\n  do_sock_setsockopt+0x3b1/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfd/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7f7fac07fd89\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff660eb788 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f7fac07fd89\nRDX: 0000000000000000 RSI: 0000000000000118 RDI: 0000000000000004\nRBP: 0000000000000000 R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020000a80 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35966",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c3f787a3eafe519c93df9abbb0ca5145861c8d0f",
            "https://git.kernel.org/stable/c/a97de7bff13b1cc825c1b1344eaed8d6c2d3e695",
            "https://git.kernel.org/stable/c/4ea65e2095e9bd151d0469328dd7fc2858feb546"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude/linux/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude/linux/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet/bluetooth/rfcomm/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70\nnet/bluetooth/rfcomm/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064"
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-05-14T15:12:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27397",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/383182db8d58c4237772ba0764cded4938a235c3",
            "https://git.kernel.org/stable/c/7395dfacfff65e9938ac0889dafa1ab01e987d15",
            "https://git.kernel.org/stable/c/b45176b869673417ace338b87cf9cdb66e2eeb01",
            "https://git.kernel.org/stable/c/f8dfda798650241c1692058713ca4fef8e429061",
            "https://git.kernel.org/stable/c/eaf1a29ea5d7dba8e84e9e9f3b3f47d0cd540bfe",
            "https://git.kernel.org/stable/c/7b17de2a71e56c10335b565cc7ad238e6d984379",
            "https://git.kernel.org/stable/c/0d40e8cb1d1f56a994cdd2e015af622fdca9ed4d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: use timestamp to check for set element timeout\n\nAdd a timestamp field at the beginning of the transaction, store it\nin the nftables per-netns area.\n\nUpdate set backend .insert, .deactivate and sync gc path to use the\ntimestamp, this avoids that an element expires while control plane\ntransaction is still unfinished.\n\n.lookup and .update, which are used from packet path, still use the\ncurrent time to check if the element has expired. And .get path and dump\nalso since this runs lockless under rcu read size lock. Then, there is\nasync gc which also needs to check the current time since it runs\nasynchronously from a workqueue."
    },
    {
        "Modified": "2024-08-19T05:15:00",
        "Published": "2024-02-21T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-362",
        "id": "CVE-2024-26585",
        "impact": {},
        "last-modified": "2024-08-19T05:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e01e3934a1b2d122919f73bc6ddbe1cdafc4bbdb",
            "https://git.kernel.org/stable/c/6db22d6c7a6dc914b12c0469b94eb639b6a8a146",
            "https://git.kernel.org/stable/c/e327ed60bff4a991cd7a709c47c4f0c5b4a4fd57",
            "https://git.kernel.org/stable/c/196f198ca6fce04ba6ce262f5a0e4d567d7d219d",
            "https://git.kernel.org/stable/c/dd32621f19243f89ce830919496a5dcc2158aa33"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between tx work scheduling and socket close\n\nSimilarly to previous commit, the submitting thread (recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete().\nReorder scheduling the work before calling complete().\nThis seems more logical in the first place, as it's\nthe inverse order of what the submitting thread will do."
    },
    {
        "Modified": "2024-08-19T04:15:00",
        "Published": "2024-08-19T04:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44083",
        "impact": {},
        "last-modified": "2024-08-19T04:15:00",
        "references": [
            "https://github.com/Azvanzed/IdaMeme"
        ],
        "summary": "ida64.dll in Hex-Rays IDA Pro through 8.4 crashes when there is a section that has many jumps linked, and the final jump corresponds to the payload from where the actual entry point will be invoked. NOTE: in many use cases, this is an inconvenience but not a security issue."
    },
    {
        "Modified": "2024-08-19T03:15:00",
        "Published": "2024-08-19T03:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44073",
        "impact": {},
        "last-modified": "2024-08-19T03:15:00",
        "references": [
            "https://github.com/rust-bitcoin/rust-miniscript/pull/712",
            "https://github.com/rust-bitcoin/rust-miniscript/pull/704",
            "https://github.com/rust-bitcoin/rust-miniscript/compare/11.2.0...12.2.0"
        ],
        "summary": "The Miniscript (aka rust-miniscript) library before 12.2.0 for Rust allows stack consumption because it does not properly track tree depth."
    },
    {
        "Modified": "2024-08-19T03:15:00",
        "Published": "2024-08-19T03:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44076",
        "impact": {},
        "last-modified": "2024-08-19T03:15:00",
        "references": [
            "https://github.com/microcks/microcks/issues/1212",
            "https://github.com/microcks/microcks/compare/1.9.1-fix-1...1.10.0"
        ],
        "summary": "In Microcks before 1.10.0, the POST /api/import and POST /api/export endpoints allow non-administrator access."
    },
    {
        "Modified": "2024-08-19T03:15:00",
        "Published": "2024-08-19T03:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-7921",
        "impact": {},
        "last-modified": "2024-08-19T03:15:00",
        "references": [
            "https://vuldb.com/?id.275071",
            "https://vuldb.com/?ctiid.275071",
            "https://vuldb.com/?submit.387126",
            "https://wiki.shikangsi.com/post/share/7d5eb025-1c30-44b4-b609-61938f6d6c05"
        ],
        "summary": "A vulnerability has been found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file /report/ParkOutRecord/GetDataList. The manipulation leads to improper access controls. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-08-19T02:15:00",
        "Published": "2024-08-19T02:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44069",
        "impact": {},
        "last-modified": "2024-08-19T02:15:00",
        "references": [
            "https://github.com/pi-hole/web/pull/3077",
            "https://www.kiyell.com/The-Harmless-Pihole-Bug/"
        ],
        "summary": "Pi-hole before 6 allows unauthenticated admin/api.php?setTempUnit= calls to change the temperature units of the web dashboard. NOTE: the supplier reportedly does \"not consider the bug a security issue\" but the specific motivation for letting arbitrary persons change the value (Celsius, Fahrenheit, or Kelvin), seen by the device owner, is unclear."
    },
    {
        "Modified": "2024-08-19T02:15:00",
        "Published": "2024-08-19T02:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44070",
        "impact": {},
        "last-modified": "2024-08-19T02:15:00",
        "references": [
            "https://github.com/FRRouting/frr/pull/16497"
        ],
        "summary": "An issue was discovered in FRRouting (FRR) through 10.1. bgp_attr_encap in bgpd/bgp_attr.c does not check the actual remaining stream length before taking the TLV value."
    },
    {
        "Modified": "2024-08-19T01:15:00",
        "Published": "2024-08-19T01:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44067",
        "impact": {},
        "last-modified": "2024-08-19T01:15:00",
        "references": [
            "https://ghostwriteattack.com"
        ],
        "summary": "The T-Head XuanTie C910 CPU in the TH1520 SoC and the T-Head XuanTie C920 CPU in the SOPHON SG2042 have instructions that allow unprivileged attackers to write to arbitrary physical memory locations, aka GhostWrite."
    },
    {
        "Modified": "2024-08-19T00:15:00",
        "Published": "2024-08-19T00:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-7919",
        "impact": {},
        "last-modified": "2024-08-19T00:15:00",
        "references": [
            "https://vuldb.com/?id.275069",
            "https://vuldb.com/?ctiid.275069",
            "https://vuldb.com/?submit.387124",
            "https://wiki.shikangsi.com/post/share/fd390bd7-2d60-4ffb-87da-f72cc900f61c"
        ],
        "summary": "A vulnerability, which was classified as critical, has been found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805. This issue affects some unknown processing of the file /report/ParkChargeRecord/GetDataList. The manipulation leads to improper access controls. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-08-19T00:15:00",
        "Published": "2024-08-19T00:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-7920",
        "impact": {},
        "last-modified": "2024-08-19T00:15:00",
        "references": [
            "https://vuldb.com/?id.275070",
            "https://vuldb.com/?ctiid.275070",
            "https://vuldb.com/?submit.387125",
            "https://wiki.shikangsi.com/post/share/123687c4-ff4b-48e8-8299-6f4950a75af5"
        ],
        "summary": "A vulnerability, which was classified as problematic, was found in Anhui Deshun Intelligent Technology Jieshun JieLink+ JSOTC2016 up to 20240805. Affected is an unknown function of the file /Report/ParkCommon/GetParkInThroughDeivces. The manipulation leads to improper access controls. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-08-18T23:15:00",
        "Published": "2024-08-18T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-7916",
        "impact": {},
        "last-modified": "2024-08-18T23:15:00",
        "references": [
            "https://vuldb.com/?id.275041",
            "https://vuldb.com/?ctiid.275041",
            "https://vuldb.com/?submit.388905"
        ],
        "summary": "A vulnerability classified as problematic was found in nafisulbari/itsourcecode Insurance Management System 1.0. Affected by this vulnerability is an unknown functionality of the file addNominee.php of the component Add Nominee Page. The manipulation of the argument Nominee-Client ID leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-08-18T23:15:00",
        "Published": "2024-08-18T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-7917",
        "impact": {},
        "last-modified": "2024-08-18T23:15:00",
        "references": [
            "https://vuldb.com/?id.275042",
            "https://vuldb.com/?ctiid.275042",
            "https://vuldb.com/?submit.389296",
            "https://wiki.shikangsi.com/post/share/5de742ae-e5e6-48ed-876b-dca7e74813cb"
        ],
        "summary": "A vulnerability, which was classified as critical, has been found in DouPHP 1.7 Release 20220822. Affected by this issue is some unknown functionality of the file /admin/system.php of the component Favicon Handler. The manipulation of the argument site_favicon leads to unrestricted upload. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-35686",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/sensei-lms/wordpress-sensei-lms-plugin-4-23-1-broken-access-control-vulnerability?_s_id=cve",
            "https://patchstack.com/database/vulnerability/woothemes-sensei/wordpress-sensei-pro-wc-paid-courses-plugin-4-23-1-1-23-1-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in Automattic Sensei LMS, Automattic Sensei Pro (WC Paid Courses).This issue affects Sensei LMS: from n/a through 4.23.1; Sensei Pro (WC Paid Courses): from n/a through 4.23.1.1.23.1."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-43145",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/geodirectory/wordpress-geodirectory-plugin-2-3-61-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in AyeCode Ltd GeoDirectory.This issue affects GeoDirectory: from n/a through 2.3.61."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43207",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/unite-gallery-lite/wordpress-unite-gallery-lite-plugin-1-7-62-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Valiano Unite Gallery Lite.This issue affects Unite Gallery Lite: from n/a through 1.7.62."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-43239",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/learning-management-system/wordpress-masteriyo-lms-plugin-1-11-4-insecure-direct-object-reference-idor-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in Masteriyo Masteriyo - LMS.This issue affects Masteriyo - LMS: from n/a through 1.11.4."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43241",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/indeed-membership-pro/wordpress-indeed-ultimate-membership-pro-plugin-12-6-reflected-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in azzaroco Ultimate Membership Pro allows Reflected XSS.This issue affects Ultimate Membership Pro: from n/a through 12.6."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43244",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/houzez/wordpress-houzez-theme-by-favethemes-themeforest-theme-2-8-6-1-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in favethemes Houzez allows Reflected XSS.This issue affects Houzez: from n/a through 3.2.4."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43246",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/whmpress/wordpress-whmpress-plugin-6-2-revision-5-reflected-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in creativeon WHMpress allows Reflected XSS.This issue affects WHMpress: from n/a through 6.2-revision-5."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43262",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/busiprof/wordpress-busiprof-theme-2-4-8-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in webriti Busiprof allows Stored XSS.This issue affects Busiprof: from n/a through 2.4.8."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43263",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/visual-composer-starter/wordpress-visual-composer-starter-theme-3-3-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Visual Composer Visual Composer Starter allows Stored XSS.This issue affects Visual Composer Starter: from n/a through 3.3."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-43266",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wp-job-portal/wordpress-wp-job-portal-a-complete-job-board-plugin-2-1-6-insecure-direct-object-references-idor-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in WP Job Portal.This issue affects WP Job Portal: from n/a through 2.1.6."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43267",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/ultimate-addons-for-elementor/wordpress-mega-addons-for-elementor-plugin-1-9-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Qamar Sheeraz, Nasir Ahmad, GenialSouls Mega Addons For Elementor allows Stored XSS.This issue affects Mega Addons For Elementor: from n/a through 1.9."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43278",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/display-a-meta-field-as-block/wordpress-meta-field-block-plugin-1-2-13-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Phi Phan Meta Field Block allows Stored XSS.This issue affects Meta Field Block: from n/a through 1.2.13."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43279",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/newsletters-lite/wordpress-newsletters-plugin-4-9-8-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Tribulant Newsletters allows Reflected XSS.This issue affects Newsletters: from n/a through 4.9.8."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-43282",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/tutor/wordpress-tutor-lms-plugin-2-7-2-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Themeum Tutor LMS.This issue affects Tutor LMS: from n/a through 2.7.2."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43284",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wp-travel-blocks/wordpress-wp-travel-gutenberg-blocks-plugin-3-5-1-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in WP Travel WP Travel Gutenberg Blocks allows Stored XSS.This issue affects WP Travel Gutenberg Blocks: from n/a through 3.5.1."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-43286",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/squirrly-seo/wordpress-squirrly-seo-plugin-12-3-19-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Squirrly SEO Plugin by Squirrly SEO.This issue affects SEO Plugin by Squirrly SEO: from n/a through 12.3.19."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-43288",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wpforo/wordpress-wpforo-forum-plugin-2-3-4-insecure-direct-object-references-idor-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in gVectors Team wpForo Forum.This issue affects wpForo Forum: from n/a through 2.3.4."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43291",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/cf7-widget-elementor/wordpress-void-contact-form-7-widget-for-elementor-page-builder-plugin-2-4-1-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in voidCoders Void Contact Form 7 Widget For Elementor Page Builder allows Stored XSS.This issue affects Void Contact Form 7 Widget For Elementor Page Builder: from n/a through 2.4.1."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43292",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/envo-elementor-for-woocommerce/wordpress-envo-s-elementor-templates-widgets-for-woocommerce-plugin-1-4-16-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in EnvoThemes Envo's Elementor Templates & Widgets for WooCommerce allows Stored XSS.This issue affects Envo's Elementor Templates & Widgets for WooCommerce: from n/a through 1.4.16."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-43294",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/bold-timeline-lite/wordpress-bold-timeline-lite-plugin-1-2-0-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in BoldThemes Bold Timeline Lite allows Stored XSS.This issue affects Bold Timeline Lite: from n/a through 1.2.0."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-43315",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/checkout-plugins-stripe-woo/wordpress-stripe-payments-for-woocommerce-plugin-1-9-1-insecure-direct-object-references-idor-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in Checkout Plugins Stripe Payments For WooCommerce by Checkout.This issue affects Stripe Payments For WooCommerce by Checkout: from n/a through 1.9.1."
    },
    {
        "Modified": "2024-08-18T22:15:00",
        "Published": "2024-08-18T22:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43322",
        "impact": {},
        "last-modified": "2024-08-18T22:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/zephyr-project-manager/wordpress-zephyr-project-manager-plugin-3-3-100-insecure-direct-object-references-idor-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in Dylan James Zephyr Project Manager.This issue affects Zephyr Project Manager: from n/a through 3.3.100."
    }
]