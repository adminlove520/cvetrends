[
    {
        "Modified": "2024-06-27T15:54:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-27381",
        "impact": {},
        "last-modified": "2024-06-27T15:54:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/"
        ],
        "summary": "An issue was discovered in Samsung Mobile Processor Exynos 980, Exynos 850, Exynos 1280, Exynos 1380, and Exynos 1330. In the function slsi_send_action_frame_ut(), there is no input validation check on len coming from userspace, which can lead to a heap over-read."
    },
    {
        "Modified": "2024-06-27T15:54:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-27382",
        "impact": {},
        "last-modified": "2024-06-27T15:54:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/"
        ],
        "summary": "An issue was discovered in Samsung Mobile Processor Exynos 980, Exynos 850, Exynos 1280, Exynos 1380, and Exynos 1330. In the function slsi_send_action_frame(), there is no input validation check on len coming from userspace, which can lead to a heap over-read."
    },
    {
        "Modified": "2024-06-27T15:52:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-27380",
        "impact": {},
        "last-modified": "2024-06-27T15:52:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/"
        ],
        "summary": "An issue was discovered in Samsung Mobile Processor Exynos 980, Exynos 850, Exynos 1280, Exynos 1380, and Exynos 1330. In the function slsi_set_delayed_wakeup_type(), there is no input validation check on a length of ioctl_args->args[i] coming from userspace, which can lead to a heap over-read."
    },
    {
        "Modified": "2024-06-27T14:53:00",
        "Published": "2024-06-10T21:15:00",
        "access": {},
        "assigner": "product-security@apple.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-23251",
        "impact": {},
        "last-modified": "2024-06-27T14:53:00",
        "references": [
            "https://support.apple.com/en-us/HT214101",
            "https://support.apple.com/en-us/HT214100",
            "https://support.apple.com/en-us/HT214106",
            "https://support.apple.com/en-us/HT214104",
            "https://support.apple.com/kb/HT214104",
            "https://support.apple.com/kb/HT214100",
            "https://support.apple.com/kb/HT214106",
            "https://support.apple.com/kb/HT214101"
        ],
        "summary": "An authentication issue was addressed with improved state management. This issue is fixed in macOS Sonoma 14.5, watchOS 10.5, iOS 17.5 and iPadOS 17.5, iOS 16.7.8 and iPadOS 16.7.8. An attacker with physical access may be able to leak Mail account credentials."
    },
    {
        "Modified": "2024-06-27T14:53:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-36667",
        "impact": {},
        "last-modified": "2024-06-27T14:53:00",
        "references": [
            "https://github.com/sigubbs/cms/blob/main/36/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/idcProType_deal.php?mudi=add&nohrefStr=close"
    },
    {
        "Modified": "2024-06-27T14:53:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-36668",
        "impact": {},
        "last-modified": "2024-06-27T14:53:00",
        "references": [
            "https://github.com/sigubbs/cms/blob/main/35/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component admin/type_deal.php?mudi=del"
    },
    {
        "Modified": "2024-06-27T14:53:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-36669",
        "impact": {},
        "last-modified": "2024-06-27T14:53:00",
        "references": [
            "https://github.com/sigubbs/cms/blob/main/34/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component admin/type_deal.php?mudi=add."
    },
    {
        "Modified": "2024-06-27T14:49:00",
        "Published": "2024-06-10T21:15:00",
        "access": {},
        "assigner": "product-security@apple.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-23282",
        "impact": {},
        "last-modified": "2024-06-27T14:49:00",
        "references": [
            "https://support.apple.com/en-us/HT214101",
            "https://support.apple.com/en-us/HT214100",
            "https://support.apple.com/en-us/HT214106",
            "https://support.apple.com/en-us/HT214104",
            "https://support.apple.com/kb/HT214104",
            "https://support.apple.com/kb/HT214100",
            "https://support.apple.com/kb/HT214106",
            "https://support.apple.com/kb/HT214101"
        ],
        "summary": "The issue was addressed with improved checks. This issue is fixed in macOS Sonoma 14.5, watchOS 10.5, iOS 17.5 and iPadOS 17.5, iOS 16.7.8 and iPadOS 16.7.8. A maliciously crafted email may be able to initiate FaceTime calls without user authorization."
    },
    {
        "Modified": "2024-06-27T14:42:00",
        "Published": "2023-08-17T20:15:00",
        "access": {},
        "assigner": "sirt@juniper.net",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2023-36845",
        "impact": {},
        "last-modified": "2024-06-27T14:42:00",
        "references": [
            "https://supportportal.juniper.net/JSA72300",
            "http://packetstormsecurity.com/files/174865/Juniper-SRX-Firewall-EX-Switch-Remote-Code-Execution.html",
            "http://packetstormsecurity.com/files/176969/Juniper-SRX-Firewall-EX-Switch-Remote-Code-Execution.html"
        ],
        "summary": "A PHP External Variable Modification vulnerability in J-Web of Juniper Networks Junos OS on EX Series \n\nand SRX Series \n\nallows an unauthenticated, network-based attacker to remotely execute code.\n\nUsing a crafted request which sets the variable PHPRC an attacker is able to modify the PHP execution environment allowing the injection und execution of code.\n\n\nThis issue affects Juniper Networks Junos OS on EX Series\n\n\nand \n\n\nSRX Series:\n\n\n\n  *  All versions prior to \n\n20.4R3-S9;\n  *  21.1 versions 21.1R1 and later;\n  *  21.2 versions prior to\u00a021.2R3-S7;\n  *  21.3 versions prior to\u00a021.3R3-S5;\n  *  21.4 versions prior to 21.4R3-S5;\n  *  22.1 versions \n\nprior to \n\n22.1R3-S4;\n  *  22.2 versions \n\nprior to \n\n22.2R3-S2;\n  *  22.3 versions \n\nprior to \n\n22.3R2-S2, 22.3R3-S1;\n  *  22.4 versions \n\nprior to \n\n22.4R2-S1, 22.4R3;\n  *  23.2 versions prior to 23.2R1-S1, 23.2R2.\n\n\n\n\n"
    },
    {
        "Modified": "2024-06-27T14:39:00",
        "Published": "2017-03-24T15:59:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "security@debian.org",
        "cvss": 6.8,
        "cvss-time": "2024-06-27T14:39:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-787",
        "id": "CVE-2017-5509",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-06-27T14:39:00",
        "references": [
            "https://github.com/ImageMagick/ImageMagick/issues/350",
            "https://github.com/ImageMagick/ImageMagick/commit/d4ec73f866a7c42a2e7f301fcd696e5cb7a7d3ab",
            "https://github.com/ImageMagick/ImageMagick/commit/37a1710e2dab6ed91128ea648d654a22fbe2a6af",
            "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=851377",
            "http://www.securityfocus.com/bid/95751",
            "http://www.openwall.com/lists/oss-security/2017/01/17/5",
            "http://www.openwall.com/lists/oss-security/2017/01/16/6",
            "https://security.gentoo.org/glsa/201702-09"
        ],
        "summary": "coders/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write."
    },
    {
        "Modified": "2024-06-27T14:38:00",
        "Published": "2017-03-24T15:59:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "security@debian.org",
        "cvss": 6.8,
        "cvss-time": "2024-06-27T14:38:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-787",
        "id": "CVE-2017-5510",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-06-27T14:38:00",
        "references": [
            "https://github.com/ImageMagick/ImageMagick/issues/348",
            "https://github.com/ImageMagick/ImageMagick/commit/e87af64b1ff1635a32d9b6162f1b0e260fb54ed9",
            "https://github.com/ImageMagick/ImageMagick/commit/91cc3f36f2ccbd485a0456bab9aebe63b635da88",
            "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=851376",
            "http://www.securityfocus.com/bid/95755",
            "http://www.openwall.com/lists/oss-security/2017/01/17/5",
            "http://www.openwall.com/lists/oss-security/2017/01/16/6",
            "https://security.gentoo.org/glsa/201702-09",
            "http://www.debian.org/security/2017/dsa-3799"
        ],
        "summary": "coders/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write."
    },
    {
        "Modified": "2024-06-27T14:37:00",
        "Published": "2017-03-24T15:59:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "security@debian.org",
        "cvss": 7.5,
        "cvss-time": "2024-06-27T14:37:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-119",
        "id": "CVE-2017-5511",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-06-27T14:37:00",
        "references": [
            "https://github.com/ImageMagick/ImageMagick/issues/347",
            "https://github.com/ImageMagick/ImageMagick/commit/c8c6a0f123d5e35c173125365c97e2c0fc7eca42",
            "https://github.com/ImageMagick/ImageMagick/commit/7d65a814ac76bd04760072c33e452371692ee790",
            "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=851374",
            "http://www.securityfocus.com/bid/95746",
            "http://www.openwall.com/lists/oss-security/2017/01/17/5",
            "http://www.openwall.com/lists/oss-security/2017/01/16/6",
            "https://security.gentoo.org/glsa/201702-09",
            "http://www.debian.org/security/2017/dsa-3799"
        ],
        "summary": "coders/psd.c in ImageMagick allows remote attackers to have unspecified impact by leveraging an improper cast, which triggers a heap-based buffer overflow."
    },
    {
        "Modified": "2024-06-27T14:36:00",
        "Published": "2023-08-17T20:15:00",
        "access": {},
        "assigner": "sirt@juniper.net",
        "cvss": null,
        "cwe": "CWE-306",
        "id": "CVE-2023-36847",
        "impact": {},
        "last-modified": "2024-06-27T14:36:00",
        "references": [
            "https://supportportal.juniper.net/JSA72300"
        ],
        "summary": "A Missing Authentication for Critical Function vulnerability in Juniper Networks Junos OS on EX Series allows an unauthenticated, network-based attacker to cause limited impact to the file system integrity.\n\n\n\n\n\nWith a specific request to installAppPackage.php that doesn't require authentication an attacker is able to upload arbitrary files via J-Web, leading to a loss of \n\nintegrity\n\nfor a certain \n\npart of the file system, which may allow chaining to other vulnerabilities.\n\n\nThis issue affects Juniper Networks Junos OS on EX Series:\n\n\n\n  *  All versions prior to 20.4R3-S8;\n  *  21.1 versions 21.1R1 and later;\n  *  21.2 versions prior to 21.2R3-S6;\n  *  21.3 versions \n\nprior to \n\n 21.3R3-S5;\n  *  21.4 versions \n\nprior to \n\n21.4R3-S4;\n  *  22.1 versions \n\nprior to \n\n22.1R3-S3;\n  *  22.2 versions \n\nprior to \n\n22.2R3-S1;\n  *  22.3 versions \n\nprior to \n\n22.3R2-S2, 22.3R3;\n  *  22.4 versions \n\nprior to \n\n22.4R2-S1, 22.4R3.\n\n\n\n\n"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@usom.gov.tr",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-1153",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://www.usom.gov.tr/bildirim/tr-24-0809"
        ],
        "summary": "Improper Access Control vulnerability in Talya Informatics Travel APPS allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects Travel APPS: before v17.0.68."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39153",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/50/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/info_deal.php?mudi=del&dataType=news&dataTypeCN."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39155",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/56/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ipRecord_deal.php?mudi=add."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39157",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/57/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/ipRecord_deal.php?mudi=del&dataType=&dataID=1."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39158",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/58/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/userSys_deal.php?mudi=infoSet."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39154",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/54/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/keyWord_deal.php?mudi=del&dataType=word&dataTypeCN."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39156",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://github.com/Thirtypenny77/cms2/blob/main/55/csrf.md"
        ],
        "summary": "idccms v1.35 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /admin/keyWord_deal.php?mudi=add."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-27T14:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6374",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://vuldb.com/?id.269807",
            "https://vuldb.com/?ctiid.269807",
            "https://vuldb.com/?submit.364874",
            "https://secretive-agate-23c.notion.site/School-Management-System-PHP-MySQL-stored-1-0-1-XSS-50088f0ed9e94efda9c57772ce192980",
            "https://secretive-agate-23c.notion.site/School-Management-System-PHP-MySQL-stored-1-0-1-Stored-XSS-41c9f85f307441c5885fb0df3d3fcc08"
        ],
        "summary": "A vulnerability was found in lahirudanushka School Management System 1.0.0/1.0.1 and classified as problematic. This issue affects some unknown processing of the file /subject.php of the component Subject Page. The manipulation of the argument Subject Title/Sybillus Details leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269807."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-26T21:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6355",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://vuldb.com/?id.269755",
            "https://vuldb.com/?ctiid.269755",
            "https://vuldb.com/?submit.359289"
        ],
        "summary": "A vulnerability was found in Genexis Tilgin Fiber Home Gateway HG1522 CSx000-01_09_01_12. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file /status/product_info/. The manipulation of the argument product_info leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-269755. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-06-03T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36960",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2f527e3efd37c7c5e85e8aa86308856b619fa59f",
            "https://git.kernel.org/stable/c/cef0962f2d3e5fd0660c8efb72321083a1b531a9",
            "https://git.kernel.org/stable/c/3cd682357c6167f636aec8ac0efaa8ba61144d36",
            "https://git.kernel.org/stable/c/b7bab33c4623c66e3398d5253870d4e88c52dfc0",
            "https://git.kernel.org/stable/c/0dbfc73670b357456196130551e586345ca48e1b",
            "https://git.kernel.org/stable/c/7b5fd3af4a250dd0a2a558e07b43478748eb5d22",
            "https://git.kernel.org/stable/c/deab66596dfad14f1c54eeefdb72428340d72a77",
            "https://git.kernel.org/stable/c/a37ef7613c00f2d72c8fc08bd83fb6cc76926c8c",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix invalid reads in fence signaled events\n\nCorrectly set the length of the drm_event to the size of the structure\nthat's actually used.\n\nThe length of the drm_event was set to the parent structure instead of\nto the drm_vmw_event_fence which is supposed to be read. drm_read\nuses the length parameter to copy the event to the user space thus\nresuling in oob reads."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52882",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fe11826ffa200e1a7a826e745163cb2f47875f66",
            "https://git.kernel.org/stable/c/bfc78b4628497eb6df09a6b5bba9dd31616ee175",
            "https://git.kernel.org/stable/c/f1fa9a9816204ac4b118b2e613d3a7c981355019",
            "https://git.kernel.org/stable/c/70f64cb29014e4c4f1fabd3265feebd80590d069",
            "https://git.kernel.org/stable/c/0b82eb134d2942ecc669e2ab2be3f0a58d79428a",
            "https://git.kernel.org/stable/c/9708e5081cfc4f085690294163389bcf82655f90",
            "https://git.kernel.org/stable/c/7e91ed763dc07437777bd012af7a2bd4493731ff",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: sunxi-ng: h6: Reparent CPUX during PLL CPUX rate change\n\nWhile PLL CPUX clock rate change when CPU is running from it works in\nvast majority of cases, now and then it causes instability. This leads\nto system crashes and other undefined behaviour. After a lot of testing\n(30+ hours) while also doing a lot of frequency switches, we can't\nobserve any instability issues anymore when doing reparenting to stable\nclock like 24 MHz oscillator."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36031",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ad2011ea787928b2accb5134f1e423b11fe80a8a",
            "https://git.kernel.org/stable/c/ed79b93f725cd0da39a265dc23d77add1527b9be",
            "https://git.kernel.org/stable/c/e4519a016650e952ad9eb27937f8c447d5a4e06d",
            "https://git.kernel.org/stable/c/25777f3f4e1f371d16a594925f31e37ce07b6ec7",
            "https://git.kernel.org/stable/c/939a08bcd4334bad4b201e60bd0ae1f278d71d41",
            "https://git.kernel.org/stable/c/cc219cb8afbc40ec100c0de941047bb29373126a",
            "https://git.kernel.org/stable/c/9da27fb65a14c18efd4473e2e82b76b53ba60252",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkeys: Fix overwrite of key expiration on instantiation\n\nThe expiry time of a key is unconditionally overwritten during\ninstantiation, defaulting to turn it permanent. This causes a problem\nfor DNS resolution as the expiration set by user-space is overwritten to\nTIME64_MAX, disabling further DNS updates. Fix this by restoring the\ncondition that key_set_expiry is only called when the pre-parser sets a\nspecific expiry."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36886",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e19ec8ab0e25bc4803d7cc91c84e84532e2781bd",
            "https://git.kernel.org/stable/c/93bc2d6d16f2c3178736ba6b845b30475856dc40",
            "https://git.kernel.org/stable/c/367766ff9e407f8a68409b7ce4dc4d5a72afeab1",
            "https://git.kernel.org/stable/c/66116556076f0b96bc1aa9844008c743c8c67684",
            "https://git.kernel.org/stable/c/21ea04aad8a0839b4ec27ef1691ca480620e8e14",
            "https://git.kernel.org/stable/c/ffd4917c1edb3c3ff334fce3704fbe9c39f35682",
            "https://git.kernel.org/stable/c/a0fbb26f8247e326a320e2cb4395bfb234332c90",
            "https://git.kernel.org/stable/c/080cbb890286cd794f1ee788bbc5463e2deb7c2b",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix UAF in error path\n\nSam Page (sam4k) working with Trend Micro Zero Day Initiative reported\na UAF in the tipc_buf_append() error path:\n\nBUG: KASAN: slab-use-after-free in kfree_skb_list_reason+0x47e/0x4c0\nlinux/net/core/skbuff.c:1183\nRead of size 8 at addr ffff88804d2a7c80 by task poc/8034\n\nCPU: 1 PID: 8034 Comm: poc Not tainted 6.8.2 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.0-debian-1.16.0-5 04/01/2014\nCall Trace:\n <IRQ>\n __dump_stack linux/lib/dump_stack.c:88\n dump_stack_lvl+0xd9/0x1b0 linux/lib/dump_stack.c:106\n print_address_description linux/mm/kasan/report.c:377\n print_report+0xc4/0x620 linux/mm/kasan/report.c:488\n kasan_report+0xda/0x110 linux/mm/kasan/report.c:601\n kfree_skb_list_reason+0x47e/0x4c0 linux/net/core/skbuff.c:1183\n skb_release_data+0x5af/0x880 linux/net/core/skbuff.c:1026\n skb_release_all linux/net/core/skbuff.c:1094\n __kfree_skb linux/net/core/skbuff.c:1108\n kfree_skb_reason+0x12d/0x210 linux/net/core/skbuff.c:1144\n kfree_skb linux/./include/linux/skbuff.h:1244\n tipc_buf_append+0x425/0xb50 linux/net/tipc/msg.c:186\n tipc_link_input+0x224/0x7c0 linux/net/tipc/link.c:1324\n tipc_link_rcv+0x76e/0x2d70 linux/net/tipc/link.c:1824\n tipc_rcv+0x45f/0x10f0 linux/net/tipc/node.c:2159\n tipc_udp_recv+0x73b/0x8f0 linux/net/tipc/udp_media.c:390\n udp_queue_rcv_one_skb+0xad2/0x1850 linux/net/ipv4/udp.c:2108\n udp_queue_rcv_skb+0x131/0xb00 linux/net/ipv4/udp.c:2186\n udp_unicast_rcv_skb+0x165/0x3b0 linux/net/ipv4/udp.c:2346\n __udp4_lib_rcv+0x2594/0x3400 linux/net/ipv4/udp.c:2422\n ip_protocol_deliver_rcu+0x30c/0x4e0 linux/net/ipv4/ip_input.c:205\n ip_local_deliver_finish+0x2e4/0x520 linux/net/ipv4/ip_input.c:233\n NF_HOOK linux/./include/linux/netfilter.h:314\n NF_HOOK linux/./include/linux/netfilter.h:308\n ip_local_deliver+0x18e/0x1f0 linux/net/ipv4/ip_input.c:254\n dst_input linux/./include/net/dst.h:461\n ip_rcv_finish linux/net/ipv4/ip_input.c:449\n NF_HOOK linux/./include/linux/netfilter.h:314\n NF_HOOK linux/./include/linux/netfilter.h:308\n ip_rcv+0x2c5/0x5d0 linux/net/ipv4/ip_input.c:569\n __netif_receive_skb_one_core+0x199/0x1e0 linux/net/core/dev.c:5534\n __netif_receive_skb+0x1f/0x1c0 linux/net/core/dev.c:5648\n process_backlog+0x101/0x6b0 linux/net/core/dev.c:5976\n __napi_poll.constprop.0+0xba/0x550 linux/net/core/dev.c:6576\n napi_poll linux/net/core/dev.c:6645\n net_rx_action+0x95a/0xe90 linux/net/core/dev.c:6781\n __do_softirq+0x21f/0x8e7 linux/kernel/softirq.c:553\n do_softirq linux/kernel/softirq.c:454\n do_softirq+0xb2/0xf0 linux/kernel/softirq.c:441\n </IRQ>\n <TASK>\n __local_bh_enable_ip+0x100/0x120 linux/kernel/softirq.c:381\n local_bh_enable linux/./include/linux/bottom_half.h:33\n rcu_read_unlock_bh linux/./include/linux/rcupdate.h:851\n __dev_queue_xmit+0x871/0x3ee0 linux/net/core/dev.c:4378\n dev_queue_xmit linux/./include/linux/netdevice.h:3169\n neigh_hh_output linux/./include/net/neighbour.h:526\n neigh_output linux/./include/net/neighbour.h:540\n ip_finish_output2+0x169f/0x2550 linux/net/ipv4/ip_output.c:235\n __ip_finish_output linux/net/ipv4/ip_output.c:313\n __ip_finish_output+0x49e/0x950 linux/net/ipv4/ip_output.c:295\n ip_finish_output+0x31/0x310 linux/net/ipv4/ip_output.c:323\n NF_HOOK_COND linux/./include/linux/netfilter.h:303\n ip_output+0x13b/0x2a0 linux/net/ipv4/ip_output.c:433\n dst_output linux/./include/net/dst.h:451\n ip_local_out linux/net/ipv4/ip_output.c:129\n ip_send_skb+0x3e5/0x560 linux/net/ipv4/ip_output.c:1492\n udp_send_skb+0x73f/0x1530 linux/net/ipv4/udp.c:963\n udp_sendmsg+0x1a36/0x2b40 linux/net/ipv4/udp.c:1250\n inet_sendmsg+0x105/0x140 linux/net/ipv4/af_inet.c:850\n sock_sendmsg_nosec linux/net/socket.c:730\n __sock_sendmsg linux/net/socket.c:745\n __sys_sendto+0x42c/0x4e0 linux/net/socket.c:2191\n __do_sys_sendto linux/net/socket.c:2203\n __se_sys_sendto linux/net/socket.c:2199\n __x64_sys_sendto+0xe0/0x1c0 linux/net/socket.c:2199\n do_syscall_x64 linux/arch/x86/entry/common.c:52\n do_syscall_\n---truncated---"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36889",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/99951b62bf20cec9247f633a3bea898338b9e5b4",
            "https://git.kernel.org/stable/c/dc941fec0719d0471a5902424d6b2a17df233193",
            "https://git.kernel.org/stable/c/39ca83ed73db9edcc6d70c0dc7a73085a4725012",
            "https://git.kernel.org/stable/c/aa0c07c1f20e05b30019bff083ec43665536f06f",
            "https://git.kernel.org/stable/c/592f69b41766d366dbb8ff4ef5a67c4396527bbe",
            "https://git.kernel.org/stable/c/fb7a0d334894206ae35f023a82cad5a290fd7386",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: ensure snd_nxt is properly initialized on connect\n\nChristoph reported a splat hinting at a corrupted snd_una:\n\n  WARNING: CPU: 1 PID: 38 at net/mptcp/protocol.c:1005 __mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005\n  Modules linked in:\n  CPU: 1 PID: 38 Comm: kworker/1:1 Not tainted 6.9.0-rc1-gbbeac67456c9 #59\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014\n  Workqueue: events mptcp_worker\n  RIP: 0010:__mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005\n  Code: be 06 01 00 00 bf 06 01 00 00 e8 a8 12 e7 fe e9 00 fe ff ff e8\n  \t8e 1a e7 fe 0f b7 ab 3e 02 00 00 e9 d3 fd ff ff e8 7d 1a e7 fe\n  \t<0f> 0b 4c 8b bb e0 05 00 00 e9 74 fc ff ff e8 6a 1a e7 fe 0f 0b e9\n  RSP: 0018:ffffc9000013fd48 EFLAGS: 00010293\n  RAX: 0000000000000000 RBX: ffff8881029bd280 RCX: ffffffff82382fe4\n  RDX: ffff8881003cbd00 RSI: ffffffff823833c3 RDI: 0000000000000001\n  RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\n  R10: 0000000000000000 R11: fefefefefefefeff R12: ffff888138ba8000\n  R13: 0000000000000106 R14: ffff8881029bd908 R15: ffff888126560000\n  FS:  0000000000000000(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f604a5dae38 CR3: 0000000101dac002 CR4: 0000000000170ef0\n  Call Trace:\n   <TASK>\n   __mptcp_clean_una_wakeup net/mptcp/protocol.c:1055 [inline]\n   mptcp_clean_una_wakeup net/mptcp/protocol.c:1062 [inline]\n   __mptcp_retrans+0x7f/0x7e0 net/mptcp/protocol.c:2615\n   mptcp_worker+0x434/0x740 net/mptcp/protocol.c:2767\n   process_one_work+0x1e0/0x560 kernel/workqueue.c:3254\n   process_scheduled_works kernel/workqueue.c:3335 [inline]\n   worker_thread+0x3c7/0x640 kernel/workqueue.c:3416\n   kthread+0x121/0x170 kernel/kthread.c:388\n   ret_from_fork+0x44/0x50 arch/x86/kernel/process.c:147\n   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:243\n   </TASK>\n\nWhen fallback to TCP happens early on a client socket, snd_nxt\nis not yet initialized and any incoming ack will copy such value\ninto snd_una. If the mptcp worker (dumbly) tries mptcp-level\nre-injection after such ack, that would unconditionally trigger a send\nbuffer cleanup using 'bad' snd_una values.\n\nWe could easily disable re-injection for fallback sockets, but such\ndumb behavior already helped catching a few subtle issues and a very\nlow to zero impact in practice.\n\nInstead address the issue always initializing snd_nxt (and write_seq,\nfor consistency) at connect time."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-36902",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4a5a573387da6a6b23a4cc62147453ff1bc32afa",
            "https://git.kernel.org/stable/c/ddec23f206a944c73bcc2724358b85388837daff",
            "https://git.kernel.org/stable/c/674c951ab8a23f7aff9b4c3f2f865901bc76a290",
            "https://git.kernel.org/stable/c/35297fc68de36826087e976f86a5b1f94fd0bf95",
            "https://git.kernel.org/stable/c/7e3242c139c38e60844638e394c2877b16b396b0",
            "https://git.kernel.org/stable/c/8745a8d74ba17dafe72b6ab461fa6c007d879747",
            "https://git.kernel.org/stable/c/1876881c9a49613b5249fb400cbf53412d90cb09",
            "https://git.kernel.org/stable/c/d101291b2681e5ab938554e3e323f7a7ee33e3aa",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fib6_rules: avoid possible NULL dereference in fib6_rule_action()\n\nsyzbot is able to trigger the following crash [1],\ncaused by unsafe ip6_dst_idev() use.\n\nIndeed ip6_dst_idev() can return NULL, and must always be checked.\n\n[1]\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 0 PID: 31648 Comm: syz-executor.0 Not tainted 6.9.0-rc4-next-20240417-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:__fib6_rule_action net/ipv6/fib6_rules.c:237 [inline]\n RIP: 0010:fib6_rule_action+0x241/0x7b0 net/ipv6/fib6_rules.c:267\nCode: 02 00 00 49 8d 9f d8 00 00 00 48 89 d8 48 c1 e8 03 42 80 3c 20 00 74 08 48 89 df e8 f9 32 bf f7 48 8b 1b 48 89 d8 48 c1 e8 03 <42> 80 3c 20 00 74 08 48 89 df e8 e0 32 bf f7 4c 8b 03 48 89 ef 4c\nRSP: 0018:ffffc9000fc1f2f0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 1a772f98c8186700\nRDX: 0000000000000003 RSI: ffffffff8bcac4e0 RDI: ffffffff8c1f9760\nRBP: ffff8880673fb980 R08: ffffffff8fac15ef R09: 1ffffffff1f582bd\nR10: dffffc0000000000 R11: fffffbfff1f582be R12: dffffc0000000000\nR13: 0000000000000080 R14: ffff888076509000 R15: ffff88807a029a00\nFS:  00007f55e82ca6c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b31d23000 CR3: 0000000022b66000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  fib_rules_lookup+0x62c/0xdb0 net/core/fib_rules.c:317\n  fib6_rule_lookup+0x1fd/0x790 net/ipv6/fib6_rules.c:108\n  ip6_route_output_flags_noref net/ipv6/route.c:2637 [inline]\n  ip6_route_output_flags+0x38e/0x610 net/ipv6/route.c:2649\n  ip6_route_output include/net/ip6_route.h:93 [inline]\n  ip6_dst_lookup_tail+0x189/0x11a0 net/ipv6/ip6_output.c:1120\n  ip6_dst_lookup_flow+0xb9/0x180 net/ipv6/ip6_output.c:1250\n  sctp_v6_get_dst+0x792/0x1e20 net/sctp/ipv6.c:326\n  sctp_transport_route+0x12c/0x2e0 net/sctp/transport.c:455\n  sctp_assoc_add_peer+0x614/0x15c0 net/sctp/associola.c:662\n  sctp_connect_new_asoc+0x31d/0x6c0 net/sctp/socket.c:1099\n  __sctp_connect+0x66d/0xe30 net/sctp/socket.c:1197\n  sctp_connect net/sctp/socket.c:4819 [inline]\n  sctp_inet_connect+0x149/0x1f0 net/sctp/socket.c:4834\n  __sys_connect_file net/socket.c:2048 [inline]\n  __sys_connect+0x2df/0x310 net/socket.c:2065\n  __do_sys_connect net/socket.c:2075 [inline]\n  __se_sys_connect net/socket.c:2072 [inline]\n  __x64_sys_connect+0x7a/0x90 net/socket.c:2072\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36905",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/34e41a031fd7523bf1cd00a2adca2370aebea270",
            "https://git.kernel.org/stable/c/ed5e279b69e007ce6c0fe82a5a534c1b19783214",
            "https://git.kernel.org/stable/c/413c33b9f3bc36fdf719690a78824db9f88a9485",
            "https://git.kernel.org/stable/c/2552c9d9440f8e7a2ed0660911ff00f25b90a0a4",
            "https://git.kernel.org/stable/c/3fe4ef0568a48369b1891395d13ac593b1ba41b1",
            "https://git.kernel.org/stable/c/f47d0d32fa94e815fdd78b8b88684873e67939f4",
            "https://git.kernel.org/stable/c/cbf232ba11bc86a5281b4f00e1151349ef4d45cf",
            "https://git.kernel.org/stable/c/94062790aedb505bdda209b10bea47b294d6394f",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: defer shutdown(SEND_SHUTDOWN) for TCP_SYN_RECV sockets\n\nTCP_SYN_RECV state is really special, it is only used by\ncross-syn connections, mostly used by fuzzers.\n\nIn the following crash [1], syzbot managed to trigger a divide\nby zero in tcp_rcv_space_adjust()\n\nA socket makes the following state transitions,\nwithout ever calling tcp_init_transfer(),\nmeaning tcp_init_buffer_space() is also not called.\n\n         TCP_CLOSE\nconnect()\n         TCP_SYN_SENT\n         TCP_SYN_RECV\nshutdown() -> tcp_shutdown(sk, SEND_SHUTDOWN)\n         TCP_FIN_WAIT1\n\nTo fix this issue, change tcp_shutdown() to not\nperform a TCP_SYN_RECV -> TCP_FIN_WAIT1 transition,\nwhich makes no sense anyway.\n\nWhen tcp_rcv_state_process() later changes socket state\nfrom TCP_SYN_RECV to TCP_ESTABLISH, then look at\nsk->sk_shutdown to finally enter TCP_FIN_WAIT1 state,\nand send a FIN packet from a sane socket state.\n\nThis means tcp_send_fin() can now be called from BH\ncontext, and must use GFP_ATOMIC allocations.\n\n[1]\ndivide error: 0000 [#1] PREEMPT SMP KASAN NOPTI\nCPU: 1 PID: 5084 Comm: syz-executor358 Not tainted 6.9.0-rc6-syzkaller-00022-g98369dccd2f8 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:tcp_rcv_space_adjust+0x2df/0x890 net/ipv4/tcp_input.c:767\nCode: e3 04 4c 01 eb 48 8b 44 24 38 0f b6 04 10 84 c0 49 89 d5 0f 85 a5 03 00 00 41 8b 8e c8 09 00 00 89 e8 29 c8 48 0f af c3 31 d2 <48> f7 f1 48 8d 1c 43 49 8d 96 76 08 00 00 48 89 d0 48 c1 e8 03 48\nRSP: 0018:ffffc900031ef3f0 EFLAGS: 00010246\nRAX: 0c677a10441f8f42 RBX: 000000004fb95e7e RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: 0000000027d4b11f R08: ffffffff89e535a4 R09: 1ffffffff25e6ab7\nR10: dffffc0000000000 R11: ffffffff8135e920 R12: ffff88802a9f8d30\nR13: dffffc0000000000 R14: ffff88802a9f8d00 R15: 1ffff1100553f2da\nFS:  00005555775c0380(0000) GS:ffff8880b9500000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f1155bf2304 CR3: 000000002b9f2000 CR4: 0000000000350ef0\nCall Trace:\n <TASK>\n  tcp_recvmsg_locked+0x106d/0x25a0 net/ipv4/tcp.c:2513\n  tcp_recvmsg+0x25d/0x920 net/ipv4/tcp.c:2578\n  inet6_recvmsg+0x16a/0x730 net/ipv6/af_inet6.c:680\n  sock_recvmsg_nosec net/socket.c:1046 [inline]\n  sock_recvmsg+0x109/0x280 net/socket.c:1068\n  ____sys_recvmsg+0x1db/0x470 net/socket.c:2803\n  ___sys_recvmsg net/socket.c:2845 [inline]\n  do_recvmmsg+0x474/0xae0 net/socket.c:2939\n  __sys_recvmmsg net/socket.c:3018 [inline]\n  __do_sys_recvmmsg net/socket.c:3041 [inline]\n  __se_sys_recvmmsg net/socket.c:3034 [inline]\n  __x64_sys_recvmmsg+0x199/0x250 net/socket.c:3034\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7faeb6363db9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 c1 17 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffcc1997168 EFLAGS: 00000246 ORIG_RAX: 000000000000012b\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007faeb6363db9\nRDX: 0000000000000001 RSI: 0000000020000bc0 RDI: 0000000000000005\nRBP: 0000000000000000 R08: 0000000000000000 R09: 000000000000001c\nR10: 0000000000000122 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000001"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36919",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/468f3e3c15076338367b0945b041105b67cf31e3",
            "https://git.kernel.org/stable/c/acd370c1fb86b7302c1cbb354a7c1cd9953768eb",
            "https://git.kernel.org/stable/c/ad498539dda0816aadef384ec117bfea304c75c3",
            "https://git.kernel.org/stable/c/93aa5ccc44781bdfef1bf0bc4c2c292d45251312",
            "https://git.kernel.org/stable/c/1150606d47d711d5bfdf329a1a96ed7027085936",
            "https://git.kernel.org/stable/c/c885ab23206b1f1ba0731ffe7c9455c6a91db256",
            "https://git.kernel.org/stable/c/ea50941cd8c9f0b12f38b73d3b1bfeca660dd342",
            "https://git.kernel.org/stable/c/c214ed2a4dda35b308b0b28eed804d7ae66401f9",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Remove spin_lock_bh while releasing resources after upload\n\nThe session resources are used by FW and driver when session is offloaded,\nonce session is uploaded these resources are not used. The lock is not\nrequired as these fields won't be used any longer. The offload and upload\ncalls are sequential, hence lock is not required.\n\nThis will suppress following BUG_ON():\n\n[  449.843143] ------------[ cut here ]------------\n[  449.848302] kernel BUG at mm/vmalloc.c:2727!\n[  449.853072] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[  449.858712] CPU: 5 PID: 1996 Comm: kworker/u24:2 Not tainted 5.14.0-118.el9.x86_64 #1\nRebooting.\n[  449.867454] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.3.4 11/08/2016\n[  449.876966] Workqueue: fc_rport_eq fc_rport_work [libfc]\n[  449.882910] RIP: 0010:vunmap+0x2e/0x30\n[  449.887098] Code: 00 65 8b 05 14 a2 f0 4a a9 00 ff ff 00 75 1b 55 48 89 fd e8 34 36 79 00 48 85 ed 74 0b 48 89 ef 31 f6 5d e9 14 fc ff ff 5d c3 <0f> 0b 0f 1f 44 00 00 41 57 41 56 49 89 ce 41 55 49 89 fd 41 54 41\n[  449.908054] RSP: 0018:ffffb83d878b3d68 EFLAGS: 00010206\n[  449.913887] RAX: 0000000080000201 RBX: ffff8f4355133550 RCX: 000000000d400005\n[  449.921843] RDX: 0000000000000001 RSI: 0000000000001000 RDI: ffffb83da53f5000\n[  449.929808] RBP: ffff8f4ac6675800 R08: ffffb83d878b3d30 R09: 00000000000efbdf\n[  449.937774] R10: 0000000000000003 R11: ffff8f434573e000 R12: 0000000000001000\n[  449.945736] R13: 0000000000001000 R14: ffffb83da53f5000 R15: ffff8f43d4ea3ae0\n[  449.953701] FS:  0000000000000000(0000) GS:ffff8f529fc80000(0000) knlGS:0000000000000000\n[  449.962732] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  449.969138] CR2: 00007f8cf993e150 CR3: 0000000efbe10003 CR4: 00000000003706e0\n[  449.977102] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  449.985065] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  449.993028] Call Trace:\n[  449.995756]  __iommu_dma_free+0x96/0x100\n[  450.000139]  bnx2fc_free_session_resc+0x67/0x240 [bnx2fc]\n[  450.006171]  bnx2fc_upload_session+0xce/0x100 [bnx2fc]\n[  450.011910]  bnx2fc_rport_event_handler+0x9f/0x240 [bnx2fc]\n[  450.018136]  fc_rport_work+0x103/0x5b0 [libfc]\n[  450.023103]  process_one_work+0x1e8/0x3c0\n[  450.027581]  worker_thread+0x50/0x3b0\n[  450.031669]  ? rescuer_thread+0x370/0x370\n[  450.036143]  kthread+0x149/0x170\n[  450.039744]  ? set_kthread_struct+0x40/0x40\n[  450.044411]  ret_from_fork+0x22/0x30\n[  450.048404] Modules linked in: vfat msdos fat xfs nfs_layout_nfsv41_files rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver dm_service_time qedf qed crc8 bnx2fc libfcoe libfc scsi_transport_fc intel_rapl_msr intel_rapl_common x86_pkg_temp_thermal intel_powerclamp dcdbas rapl intel_cstate intel_uncore mei_me pcspkr mei ipmi_ssif lpc_ich ipmi_si fuse zram ext4 mbcache jbd2 loop nfsv3 nfs_acl nfs lockd grace fscache netfs irdma ice sd_mod t10_pi sg ib_uverbs ib_core 8021q garp mrp stp llc mgag200 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt mxm_wmi fb_sys_fops cec crct10dif_pclmul ahci crc32_pclmul bnx2x drm ghash_clmulni_intel libahci rfkill i40e libata megaraid_sas mdio wmi sunrpc lrw dm_crypt dm_round_robin dm_multipath dm_snapshot dm_bufio dm_mirror dm_region_hash dm_log dm_zero dm_mod linear raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid6_pq libcrc32c crc32c_intel raid1 raid0 iscsi_ibft squashfs be2iscsi bnx2i cnic uio cxgb4i cxgb4 tls\n[  450.048497]  libcxgbi libcxgb qla4xxx iscsi_boot_sysfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi edd ipmi_devintf ipmi_msghandler\n[  450.159753] ---[ end trace 712de2c57c64abc8 ]---"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36916",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/62accf6c1d7b433752cb3591bba8967b7a801ad5",
            "https://git.kernel.org/stable/c/844fc023e9f14a4fb1de5ae1eaefafd6d69c5fa1",
            "https://git.kernel.org/stable/c/f6add0a6f78dc6360b822ca4b6f9f2f14174c8ca",
            "https://git.kernel.org/stable/c/ce0e99cae00e3131872936713b7f55eefd53ab86",
            "https://git.kernel.org/stable/c/488dc6808cb8369685f18cee81e88e7052ac153b",
            "https://git.kernel.org/stable/c/beaa51b36012fad5a4d3c18b88a617aea7a9b96d",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-iocost: avoid out of bounds shift\n\nUBSAN catches undefined behavior in blk-iocost, where sometimes\niocg->delay is shifted right by a number that is too large,\nresulting in undefined behavior on some architectures.\n\n[  186.556576] ------------[ cut here ]------------\nUBSAN: shift-out-of-bounds in block/blk-iocost.c:1366:23\nshift exponent 64 is too large for 64-bit type 'u64' (aka 'unsigned long long')\nCPU: 16 PID: 0 Comm: swapper/16 Tainted: G S          E    N 6.9.0-0_fbk700_debug_rc2_kbuilder_0_gc85af715cac0 #1\nHardware name: Quanta Twin Lakes MP/Twin Lakes Passive MP, BIOS F09_3A23 12/08/2020\nCall Trace:\n <IRQ>\n dump_stack_lvl+0x8f/0xe0\n __ubsan_handle_shift_out_of_bounds+0x22c/0x280\n iocg_kick_delay+0x30b/0x310\n ioc_timer_fn+0x2fb/0x1f80\n __run_timer_base+0x1b6/0x250\n...\n\nAvoid that undefined behavior by simply taking the\n\"delay = 0\" branch if the shift is too large.\n\nI am not sure what the symptoms of an undefined value\ndelay will be, but I suspect it could be more than a\nlittle annoying to debug."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36929",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/faa83a7797f06cefed86731ba4baa3b4dfdc06c1",
            "https://git.kernel.org/stable/c/c7af99cc21923a9650533c9d77265c8dd683a533",
            "https://git.kernel.org/stable/c/989bf6fd1e1d058e73a364dce1a0c53d33373f62",
            "https://git.kernel.org/stable/c/cfe34d86ef9765c388f145039006bb79b6c81ac6",
            "https://git.kernel.org/stable/c/aea5e2669c2863fdd8679c40ee310b3bcaa85aec",
            "https://git.kernel.org/stable/c/d091e579b864fa790dd6a0cd537a22c383126681",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: core: reject skb_copy(_expand) for fraglist GSO skbs\n\nSKB_GSO_FRAGLIST skbs must not be linearized, otherwise they become\ninvalid. Return NULL if such an skb is passed to skb_copy or\nskb_copy_expand, in order to prevent a crash on a potential later\ncall to skb_gso_segment."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36950",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b3948c69d60279fce5b2eeda92a07d66296c8130",
            "https://git.kernel.org/stable/c/31279bbca40d2f40cb3bbb6d538ec9620a645dec",
            "https://git.kernel.org/stable/c/fa273f312334246c909475c5868e6daab889cc8c",
            "https://git.kernel.org/stable/c/4f9cc355c328fc4f41cbd9c4cd58b235184fa420",
            "https://git.kernel.org/stable/c/6fafe3661712b143d9c69a7322294bd53f559d5d",
            "https://git.kernel.org/stable/c/5982887de60c1b84f9c0ca07c835814d07fd1da0",
            "https://git.kernel.org/stable/c/8643332aac0576581cfdf01798ea3e4e0d624b61",
            "https://git.kernel.org/stable/c/752e3c53de0fa3b7d817a83050b6699b8e9c6ec9",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: ohci: mask bus reset interrupts between ISR and bottom half\n\nIn the FireWire OHCI interrupt handler, if a bus reset interrupt has\noccurred, mask bus reset interrupts until bus_reset_work has serviced and\ncleared the interrupt.\n\nNormally, we always leave bus reset interrupts masked. We infer the bus\nreset from the self-ID interrupt that happens shortly thereafter. A\nscenario where we unmask bus reset interrupts was introduced in 2008 in\na007bb857e0b26f5d8b73c2ff90782d9c0972620: If\nOHCI_PARAM_DEBUG_BUSRESETS (8) is set in the debug parameter bitmask, we\nwill unmask bus reset interrupts so we can log them.\n\nirq_handler logs the bus reset interrupt. However, we can't clear the bus\nreset event flag in irq_handler, because we won't service the event until\nlater. irq_handler exits with the event flag still set. If the\ncorresponding interrupt is still unmasked, the first bus reset will\nusually freeze the system due to irq_handler being called again each\ntime it exits. This freeze can be reproduced by loading firewire_ohci\nwith \"modprobe firewire_ohci debug=-1\" (to enable all debugging output).\nApparently there are also some cases where bus_reset_work will get called\nsoon enough to clear the event, and operation will continue normally.\n\nThis freeze was first reported a few months after a007bb85 was committed,\nbut until now it was never fixed. The debug level could safely be set\nto -1 through sysfs after the module was loaded, but this would be\nineffectual in logging bus reset interrupts since they were only\nunmasked during initialization.\n\nirq_handler will now leave the event flag set but mask bus reset\ninterrupts, so irq_handler won't be called again and there will be no\nfreeze. If OHCI_PARAM_DEBUG_BUSRESETS is enabled, bus_reset_work will\nunmask the interrupt after servicing the event, so future interrupts\nwill be caught as desired.\n\nAs a side effect to this change, OHCI_PARAM_DEBUG_BUSRESETS can now be\nenabled through sysfs in addition to during initial module loading.\nHowever, when enabled through sysfs, logging of bus reset interrupts will\nbe effective only starting with the second bus reset, after\nbus_reset_work has executed."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36933",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a7c2c3c1caabcb4a3d6c47284c397507aaf54fe9",
            "https://git.kernel.org/stable/c/46134031c20fd313d03b90169d64b2e05ca6b65c",
            "https://git.kernel.org/stable/c/bbccf0caef2fa917d6d0692385a06ce3c262a216",
            "https://git.kernel.org/stable/c/5a4603fbc285752d19e4b415466db18ef3617e4a",
            "https://git.kernel.org/stable/c/37ed6f244ec5bda2e90b085084e322ea55d0aaa2",
            "https://git.kernel.org/stable/c/696d18bb59727a2e0526c0802a812620be1c9340",
            "https://git.kernel.org/stable/c/29a07f2ee4d273760c2acbfc756e29eccd82470a",
            "https://git.kernel.org/stable/c/4b911a9690d72641879ea6d13cce1de31d346d79",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnsh: Restore skb->{protocol,data,mac_header} for outer header in nsh_gso_segment().\n\nsyzbot triggered various splats (see [0] and links) by a crafted GSO\npacket of VIRTIO_NET_HDR_GSO_UDP layering the following protocols:\n\n  ETH_P_8021AD + ETH_P_NSH + ETH_P_IPV6 + IPPROTO_UDP\n\nNSH can encapsulate IPv4, IPv6, Ethernet, NSH, and MPLS.  As the inner\nprotocol can be Ethernet, NSH GSO handler, nsh_gso_segment(), calls\nskb_mac_gso_segment() to invoke inner protocol GSO handlers.\n\nnsh_gso_segment() does the following for the original skb before\ncalling skb_mac_gso_segment()\n\n  1. reset skb->network_header\n  2. save the original skb->{mac_heaeder,mac_len} in a local variable\n  3. pull the NSH header\n  4. resets skb->mac_header\n  5. set up skb->mac_len and skb->protocol for the inner protocol.\n\nand does the following for the segmented skb\n\n  6. set ntohs(ETH_P_NSH) to skb->protocol\n  7. push the NSH header\n  8. restore skb->mac_header\n  9. set skb->mac_header + mac_len to skb->network_header\n 10. restore skb->mac_len\n\nThere are two problems in 6-7 and 8-9.\n\n  (a)\n  After 6 & 7, skb->data points to the NSH header, so the outer header\n  (ETH_P_8021AD in this case) is stripped when skb is sent out of netdev.\n\n  Also, if NSH is encapsulated by NSH + Ethernet (so NSH-Ethernet-NSH),\n  skb_pull() in the first nsh_gso_segment() will make skb->data point\n  to the middle of the outer NSH or Ethernet header because the Ethernet\n  header is not pulled by the second nsh_gso_segment().\n\n  (b)\n  While restoring skb->{mac_header,network_header} in 8 & 9,\n  nsh_gso_segment() does not assume that the data in the linear\n  buffer is shifted.\n\n  However, udp6_ufo_fragment() could shift the data and change\n  skb->mac_header accordingly as demonstrated by syzbot.\n\n  If this happens, even the restored skb->mac_header points to\n  the middle of the outer header.\n\nIt seems nsh_gso_segment() has never worked with outer headers so far.\n\nAt the end of nsh_gso_segment(), the outer header must be restored for\nthe segmented skb, instead of the NSH header.\n\nTo do that, let's calculate the outer header position relatively from\nthe inner header and set skb->{data,mac_header,protocol} properly.\n\n[0]:\nBUG: KMSAN: uninit-value in ipvlan_process_outbound drivers/net/ipvlan/ipvlan_core.c:524 [inline]\nBUG: KMSAN: uninit-value in ipvlan_xmit_mode_l3 drivers/net/ipvlan/ipvlan_core.c:602 [inline]\nBUG: KMSAN: uninit-value in ipvlan_queue_xmit+0xf44/0x16b0 drivers/net/ipvlan/ipvlan_core.c:668\n ipvlan_process_outbound drivers/net/ipvlan/ipvlan_core.c:524 [inline]\n ipvlan_xmit_mode_l3 drivers/net/ipvlan/ipvlan_core.c:602 [inline]\n ipvlan_queue_xmit+0xf44/0x16b0 drivers/net/ipvlan/ipvlan_core.c:668\n ipvlan_start_xmit+0x5c/0x1a0 drivers/net/ipvlan/ipvlan_main.c:222\n __netdev_start_xmit include/linux/netdevice.h:4989 [inline]\n netdev_start_xmit include/linux/netdevice.h:5003 [inline]\n xmit_one net/core/dev.c:3547 [inline]\n dev_hard_start_xmit+0x244/0xa10 net/core/dev.c:3563\n __dev_queue_xmit+0x33ed/0x51c0 net/core/dev.c:4351\n dev_queue_xmit include/linux/netdevice.h:3171 [inline]\n packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n packet_snd net/packet/af_packet.c:3081 [inline]\n packet_sendmsg+0x8aef/0x9f10 net/packet/af_packet.c:3113\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n __sys_sendto+0x735/0xa10 net/socket.c:2191\n __do_sys_sendto net/socket.c:2203 [inline]\n __se_sys_sendto net/socket.c:2199 [inline]\n __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3819 [inline]\n slab_alloc_node mm/slub.c:3860 [inline]\n __do_kmalloc_node mm/slub.c:3980 [inline]\n __kmalloc_node_track_caller+0x705/0x1000 mm/slub.c:4001\n kmalloc_reserve+0x249/0x4a0 net/core/skbuff.c:582\n __\n---truncated---"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36939",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b33ca18c3a1190208dfd569c4fa8a2f93084709f",
            "https://git.kernel.org/stable/c/d4891d817350c67392d4731536945f3809a2a0ba",
            "https://git.kernel.org/stable/c/ea6ce93327bd2c8a0c6cf6f2f0e800f3b778f021",
            "https://git.kernel.org/stable/c/8ae63bd858691bee0e2a92571f2fbb36a4d86d65",
            "https://git.kernel.org/stable/c/8a1f89c98dcc542dd6d287e573523714702e0f9c",
            "https://git.kernel.org/stable/c/9909dde2e53a19585212c32fe3eda482b5faaaa3",
            "https://git.kernel.org/stable/c/24457f1be29f1e7042e50a7749f5c2dde8c433c8",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: Handle error of rpc_proc_register() in nfs_net_init().\n\nsyzkaller reported a warning [0] triggered while destroying immature\nnetns.\n\nrpc_proc_register() was called in init_nfs_fs(), but its error\nhas been ignored since at least the initial commit 1da177e4c3f4\n(\"Linux-2.6.12-rc2\").\n\nRecently, commit d47151b79e32 (\"nfs: expose /proc/net/sunrpc/nfs\nin net namespaces\") converted the procfs to per-netns and made\nthe problem more visible.\n\nEven when rpc_proc_register() fails, nfs_net_init() could succeed,\nand thus nfs_net_exit() will be called while destroying the netns.\n\nThen, remove_proc_entry() will be called for non-existing proc\ndirectory and trigger the warning below.\n\nLet's handle the error of rpc_proc_register() properly in nfs_net_init().\n\n[0]:\nname 'nfs'\nWARNING: CPU: 1 PID: 1710 at fs/proc/generic.c:711 remove_proc_entry+0x1bb/0x2d0 fs/proc/generic.c:711\nModules linked in:\nCPU: 1 PID: 1710 Comm: syz-executor.2 Not tainted 6.8.0-12822-gcd51db110a7e #12\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nRIP: 0010:remove_proc_entry+0x1bb/0x2d0 fs/proc/generic.c:711\nCode: 41 5d 41 5e c3 e8 85 09 b5 ff 48 c7 c7 88 58 64 86 e8 09 0e 71 02 e8 74 09 b5 ff 4c 89 e6 48 c7 c7 de 1b 80 84 e8 c5 ad 97 ff <0f> 0b eb b1 e8 5c 09 b5 ff 48 c7 c7 88 58 64 86 e8 e0 0d 71 02 eb\nRSP: 0018:ffffc9000c6d7ce0 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff8880422b8b00 RCX: ffffffff8110503c\nRDX: ffff888030652f00 RSI: ffffffff81105045 RDI: 0000000000000001\nRBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: ffffffff81bb62cb R12: ffffffff84807ffc\nR13: ffff88804ad6fcc0 R14: ffffffff84807ffc R15: ffffffff85741ff8\nFS:  00007f30cfba8640(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ff51afe8000 CR3: 000000005a60a005 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <TASK>\n rpc_proc_unregister+0x64/0x70 net/sunrpc/stats.c:310\n nfs_net_exit+0x1c/0x30 fs/nfs/inode.c:2438\n ops_exit_list+0x62/0xb0 net/core/net_namespace.c:170\n setup_net+0x46c/0x660 net/core/net_namespace.c:372\n copy_net_ns+0x244/0x590 net/core/net_namespace.c:505\n create_new_namespaces+0x2ed/0x770 kernel/nsproxy.c:110\n unshare_nsproxy_namespaces+0xae/0x160 kernel/nsproxy.c:228\n ksys_unshare+0x342/0x760 kernel/fork.c:3322\n __do_sys_unshare kernel/fork.c:3393 [inline]\n __se_sys_unshare kernel/fork.c:3391 [inline]\n __x64_sys_unshare+0x1f/0x30 kernel/fork.c:3391\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x4f/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\nRIP: 0033:0x7f30d0febe5d\nCode: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 9f 1b 00 f7 d8 64 89 01 48\nRSP: 002b:00007f30cfba7cc8 EFLAGS: 00000246 ORIG_RAX: 0000000000000110\nRAX: ffffffffffffffda RBX: 00000000004bbf80 RCX: 00007f30d0febe5d\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 000000006c020600\nRBP: 00000000004bbf80 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000002\nR13: 000000000000000b R14: 00007f30d104c530 R15: 0000000000000000\n </TASK>"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36940",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/735f4c6b6771eafe336404c157ca683ad72a040d",
            "https://git.kernel.org/stable/c/cdaa171473d98962ae86f2a663d398fda2fbeefd",
            "https://git.kernel.org/stable/c/288bc4aa75f150d6f1ee82dd43c6da1b438b6068",
            "https://git.kernel.org/stable/c/41f88ef8ba387a12f4a2b8c400b6c9e8e54b2cca",
            "https://git.kernel.org/stable/c/ac7d65795827dc0cf7662384ed27caf4066bd72e",
            "https://git.kernel.org/stable/c/558c8039fdf596a584a92c171cbf3298919c448c",
            "https://git.kernel.org/stable/c/f9f1e321d53e4c5b666b66e5b43da29841fb55ba",
            "https://git.kernel.org/stable/c/5038a66dad0199de60e5671603ea6623eb9e5c79",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: core: delete incorrect free in pinctrl_enable()\n\nThe \"pctldev\" struct is allocated in devm_pinctrl_register_and_init().\nIt's a devm_ managed pointer that is freed by devm_pinctrl_dev_release(),\nso freeing it in pinctrl_enable() will lead to a double free.\n\nThe devm_pinctrl_dev_release() function frees the pindescs and destroys\nthe mutex as well."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36941",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/327382dc0f16b268950b96e0052595efd80f7b0a",
            "https://git.kernel.org/stable/c/97792d0611ae2e6fe3ccefb0a94a1d802317c457",
            "https://git.kernel.org/stable/c/5a730a161ac2290d46d49be76b2b1aee8d2eb307",
            "https://git.kernel.org/stable/c/ad12c74e953b68ad85c78adc6408ed8435c64af4",
            "https://git.kernel.org/stable/c/b0db4caa10f2e4e811cf88744fbf0d074b67ec1f",
            "https://git.kernel.org/stable/c/244822c09b4f9aedfb5977f03c0deeb39da8ec7d",
            "https://git.kernel.org/stable/c/f92772a642485394db5c9a17bd0ee73fc6902383",
            "https://git.kernel.org/stable/c/801ea33ae82d6a9d954074fbcf8ea9d18f1543a7",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: don't free NULL coalescing rule\n\nIf the parsing fails, we can dereference a NULL pointer here."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36946",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ec1f71c05caeba0f814df77e0f511d8b4618623a",
            "https://git.kernel.org/stable/c/dc6beac059f0331de97155a89d84058d4a9e49c7",
            "https://git.kernel.org/stable/c/f085e02f0a32f6dfcfabc6535c9c4a1707cef86b",
            "https://git.kernel.org/stable/c/4ff334cade9dae50e4be387f71e94fae634aa9b4",
            "https://git.kernel.org/stable/c/728a83160f98ee6b60df0d890141b9b7240182fe",
            "https://git.kernel.org/stable/c/ee9e39a6cb3ca2a3d35b4ae25547ee3526a44d00",
            "https://git.kernel.org/stable/c/9a77226440008cf04ba68faf641a2d50f4998137",
            "https://git.kernel.org/stable/c/d8cac8568618dcb8a51af3db1103e8d4cc4aeea7",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nphonet: fix rtm_phonet_notify() skb allocation\n\nfill_route() stores three components in the skb:\n\n- struct rtmsg\n- RTA_DST (u8)\n- RTA_OIF (u32)\n\nTherefore, rtm_phonet_notify() should use\n\nNLMSG_ALIGN(sizeof(struct rtmsg)) +\nnla_total_size(1) +\nnla_total_size(4)"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36953",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4404465a1bee3607ad90a4c5f9e16dfd75b85728",
            "https://git.kernel.org/stable/c/17db92da8be5dd3bf63c01f4109fe47db64fc66f",
            "https://git.kernel.org/stable/c/3a5b0378ac6776c7c31b18e0f3c1389bd6005e80",
            "https://git.kernel.org/stable/c/8d6a1c8e3de36cb0f5e866f1a582b00939e23104",
            "https://git.kernel.org/stable/c/01981276d64e542c177b243f7c979fee855d5487",
            "https://git.kernel.org/stable/c/6ddb4f372fc63210034b903d96ebbeb3c7195adb",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: vgic-v2: Check for non-NULL vCPU in vgic_v2_parse_attr()\n\nvgic_v2_parse_attr() is responsible for finding the vCPU that matches\nthe user-provided CPUID, which (of course) may not be valid. If the ID\nis invalid, kvm_get_vcpu_by_id() returns NULL, which isn't handled\ngracefully.\n\nSimilar to the GICv3 uaccess flow, check that kvm_get_vcpu_by_id()\nactually returns something and fail the ioctl if not."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36954",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/01cd1b7b685751ee422d00d050292a3d277652d6",
            "https://git.kernel.org/stable/c/2f87fd9476cf9725d774e6dcb7d17859c6a6d1ae",
            "https://git.kernel.org/stable/c/adbce6d20da6254c86425a8d4359b221b5ccbccd",
            "https://git.kernel.org/stable/c/42c8471b0566c7539e7dd584b4d0ebd3cec8cb2c",
            "https://git.kernel.org/stable/c/d03a82f4f8144befdc10518e732e2a60b34c870e",
            "https://git.kernel.org/stable/c/614c5a5ae45a921595952117b2e2bd4d4bf9b574",
            "https://git.kernel.org/stable/c/3210d34fda4caff212cb53729e6bd46de604d565",
            "https://git.kernel.org/stable/c/97bf6f81b29a8efaf5d0983251a7450e5794370d",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix a possible memleak in tipc_buf_append\n\n__skb_linearize() doesn't free the skb when it fails, so move\n'*buf = NULL' after __skb_linearize(), so that the skb can be\nfreed on the err path."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36957",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/bcdac70adceb44373da204c3c297f2a98e13216e",
            "https://git.kernel.org/stable/c/ec697fbd38cbe2eef0948b58673b146caa95402f",
            "https://git.kernel.org/stable/c/8f11fe3ea3fc261640cfc8a5addd838000407c67",
            "https://git.kernel.org/stable/c/0a0285cee11c7dcc2657bcd456e469958a5009e7",
            "https://git.kernel.org/stable/c/fc3e0076c1f82fe981d321e3a7bad4cbee542c19",
            "https://git.kernel.org/stable/c/f299ee709fb45036454ca11e90cb2810fe771878",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: avoid off-by-one read from userspace\n\nWe try to access count + 1 byte from userspace with memdup_user(buffer,\ncount + 1). However, the userspace only provides buffer of count bytes and\nonly these count bytes are verified to be okay to access. To ensure the\ncopied buffer is NUL terminated, we use memdup_user_nul instead."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36959",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/06780473cb8a858d1d6cab2673e021b072a852d1",
            "https://git.kernel.org/stable/c/47d253c485491caaf70d8cd8c0248ae26e42581f",
            "https://git.kernel.org/stable/c/35ab679e8bb5a81a4f922d3efbd43e32bce69274",
            "https://git.kernel.org/stable/c/76aa2440deb9a35507590f2c981a69a57ecd305d",
            "https://git.kernel.org/stable/c/518d5ddafeb084d6d9b1773ed85164300037d0e6",
            "https://git.kernel.org/stable/c/026e24cf31733dbd97f41cc9bc5273ace428eeec",
            "https://git.kernel.org/stable/c/c7e02ccc9fdc496fe51e440e3e66ac36509ca049",
            "https://git.kernel.org/stable/c/a0cedbcc8852d6c77b00634b81e41f17f29d9404",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: devicetree: fix refcount leak in pinctrl_dt_to_map()\n\nIf we fail to allocate propname buffer, we need to drop the reference\ncount we just took. Because the pinctrl_dt_free_maps() includes the\ndroping operation, here we call it directly."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-30T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36017",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8ac69ff2d0d5be9734c4402de932aa3dc8549c1a",
            "https://git.kernel.org/stable/c/5e7ef2d88666a0212db8c38e6703864b9ce70169",
            "https://git.kernel.org/stable/c/6c8f44b02500c7d14b5e6618fe4ef9a0da47b3de",
            "https://git.kernel.org/stable/c/f3c1bf3054f96ddeab0621d920445bada769b40e",
            "https://git.kernel.org/stable/c/6e4c7193954f4faab92f6e8d88bc5565317b44e7",
            "https://git.kernel.org/stable/c/206003c748b88890a910ef7142d18f77be57550b",
            "https://git.kernel.org/stable/c/4a4b9757789a1551d2df130df23bfb3545bfa7e8",
            "https://git.kernel.org/stable/c/1aec77b2bb2ed1db0f5efc61c4c1ca3813307489",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute validation\n\nEach attribute inside a nested IFLA_VF_VLAN_LIST is assumed to be a\nstruct ifla_vf_vlan_info so the size of such attribute needs to be at least\nof sizeof(struct ifla_vf_vlan_info) which is 14 bytes.\nThe current size validation in do_setvfinfo is against NLA_HDRLEN (4 bytes)\nwhich is less than sizeof(struct ifla_vf_vlan_info) so this validation\nis not enough and a too small attribute might be cast to a\nstruct ifla_vf_vlan_info, this might result in an out of bands\nread access when accessing the saved (casted) entry in ivvl."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-19T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35947",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3c718bddddca9cbef177ac475b94c5c91147fb38",
            "https://git.kernel.org/stable/c/343081c21e56bd6690d342e2f5ae8c00183bf081",
            "https://git.kernel.org/stable/c/41d8ac238ab1cab01a8c71798d61903304f4e79b",
            "https://git.kernel.org/stable/c/ba3c118cff7bcb0fe6aa84ae1f9080d50e31c561",
            "https://git.kernel.org/stable/c/a66c869b17c4c4dcf81d273b02cb0efe88e127ab",
            "https://git.kernel.org/stable/c/a69e1bdd777ce51061111dc419801e8a2fd241cc",
            "https://git.kernel.org/stable/c/529e1852785599160415e964ca322ee7add7aef0",
            "https://git.kernel.org/stable/c/00e7d3bea2ce7dac7bee1cf501fb071fd0ea8f6c",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OTB4HWU2PTVW5NEYHHLOCXDKG3PYA534/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndyndbg: fix old BUG_ON in >control parser\n\nFix a BUG_ON from 2009.  Even if it looks \"unreachable\" (I didn't\nreally look), lets make sure by removing it, doing pr_err and return\n-EINVAL instead."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35848",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c850f71fca09ea41800ed55905980063d17e01da",
            "https://git.kernel.org/stable/c/26d32bec4c6d255a03762f33c637bfa3718be15a",
            "https://git.kernel.org/stable/c/c43e5028f5a35331eb25017f5ff6cc21735005c6",
            "https://git.kernel.org/stable/c/2af84c46b9b8f2d6c0f88d09ee5c849ae1734676",
            "https://git.kernel.org/stable/c/6d8b56ec0c8f30d5657382f47344a32569f7a9bc",
            "https://git.kernel.org/stable/c/f42c97027fb75776e2e9358d16bf4a99aeb04cf2",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\neeprom: at24: fix memory corruption race condition\n\nIf the eeprom is not accessible, an nvmem device will be registered, the\nread will fail, and the device will be torn down. If another driver\naccesses the nvmem device after the teardown, it will reference\ninvalid memory.\n\nMove the failure point before registering the nvmem device."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-14T15:12:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27399",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/adf0398cee86643b8eacde95f17d073d022f782c",
            "https://git.kernel.org/stable/c/e137e2ba96e51902dc2878131823a96bf8e638ae",
            "https://git.kernel.org/stable/c/6466ee65e5b27161c846c73ef407f49dfa1bd1d9",
            "https://git.kernel.org/stable/c/06acb75e7ed600d0bbf7bff5628aa8f24a97978c",
            "https://git.kernel.org/stable/c/e97e16433eb4533083b096a3824b93a5ca3aee79",
            "https://git.kernel.org/stable/c/8960ff650aec70485b40771cd8e6e8c4cb467d33",
            "https://git.kernel.org/stable/c/955b5b6c54d95b5e7444dfc81c95c8e013f27ac0",
            "https://git.kernel.org/stable/c/eb86f955488c39526534211f2610e48a5cf8ead4",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OTB4HWU2PTVW5NEYHHLOCXDKG3PYA534/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DW2MIOIMOFUSNLHLRYX23AFR36BMKD65/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout\n\nThere is a race condition between l2cap_chan_timeout() and\nl2cap_chan_del(). When we use l2cap_chan_del() to delete the\nchannel, the chan->conn will be set to null. But the conn could\nbe dereferenced again in the mutex_lock() of l2cap_chan_timeout().\nAs a result the null pointer dereference bug will happen. The\nKASAN report triggered by POC is shown below:\n\n[  472.074580] ==================================================================\n[  472.075284] BUG: KASAN: null-ptr-deref in mutex_lock+0x68/0xc0\n[  472.075308] Write of size 8 at addr 0000000000000158 by task kworker/0:0/7\n[  472.075308]\n[  472.075308] CPU: 0 PID: 7 Comm: kworker/0:0 Not tainted 6.9.0-rc5-00356-g78c0094a146b #36\n[  472.075308] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.075308] Workqueue: events l2cap_chan_timeout\n[  472.075308] Call Trace:\n[  472.075308]  <TASK>\n[  472.075308]  dump_stack_lvl+0x137/0x1a0\n[  472.075308]  print_report+0x101/0x250\n[  472.075308]  ? __virt_addr_valid+0x77/0x160\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_report+0x139/0x170\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_check_range+0x2c3/0x2e0\n[  472.075308]  mutex_lock+0x68/0xc0\n[  472.075308]  l2cap_chan_timeout+0x181/0x300\n[  472.075308]  process_one_work+0x5d2/0xe00\n[  472.075308]  worker_thread+0xe1d/0x1660\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  kthread+0x2b7/0x350\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork+0x4d/0x80\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork_asm+0x11/0x20\n[  472.075308]  </TASK>\n[  472.075308] ==================================================================\n[  472.094860] Disabling lock debugging due to kernel taint\n[  472.096136] BUG: kernel NULL pointer dereference, address: 0000000000000158\n[  472.096136] #PF: supervisor write access in kernel mode\n[  472.096136] #PF: error_code(0x0002) - not-present page\n[  472.096136] PGD 0 P4D 0\n[  472.096136] Oops: 0002 [#1] PREEMPT SMP KASAN NOPTI\n[  472.096136] CPU: 0 PID: 7 Comm: kworker/0:0 Tainted: G    B              6.9.0-rc5-00356-g78c0094a146b #36\n[  472.096136] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.096136] Workqueue: events l2cap_chan_timeout\n[  472.096136] RIP: 0010:mutex_lock+0x88/0xc0\n[  472.096136] Code: be 08 00 00 00 e8 f8 23 1f fd 4c 89 f7 be 08 00 00 00 e8 eb 23 1f fd 42 80 3c 23 00 74 08 48 88\n[  472.096136] RSP: 0018:ffff88800744fc78 EFLAGS: 00000246\n[  472.096136] RAX: 0000000000000000 RBX: 1ffff11000e89f8f RCX: ffffffff8457c865\n[  472.096136] RDX: 0000000000000001 RSI: 0000000000000008 RDI: ffff88800744fc78\n[  472.096136] RBP: 0000000000000158 R08: ffff88800744fc7f R09: 1ffff11000e89f8f\n[  472.096136] R10: dffffc0000000000 R11: ffffed1000e89f90 R12: dffffc0000000000\n[  472.096136] R13: 0000000000000158 R14: ffff88800744fc78 R15: ffff888007405a00\n[  472.096136] FS:  0000000000000000(0000) GS:ffff88806d200000(0000) knlGS:0000000000000000\n[  472.096136] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  472.096136] CR2: 0000000000000158 CR3: 000000000da32000 CR4: 00000000000006f0\n[  472.096136] Call Trace:\n[  472.096136]  <TASK>\n[  472.096136]  ? __die_body+0x8d/0xe0\n[  472.096136]  ? page_fault_oops+0x6b8/0x9a0\n[  472.096136]  ? kernelmode_fixup_or_oops+0x20c/0x2a0\n[  472.096136]  ? do_user_addr_fault+0x1027/0x1340\n[  472.096136]  ? _printk+0x7a/0xa0\n[  472.096136]  ? mutex_lock+0x68/0xc0\n[  472.096136]  ? add_taint+0x42/0xd0\n[  472.096136]  ? exc_page_fault+0x6a/0x1b0\n[  472.096136]  ? asm_exc_page_fault+0x26/0x30\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  ? mutex_lock+0x88/0xc0\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  l2cap_chan_timeo\n---truncated---"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-14T15:12:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27401",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/38762a0763c10c24a4915feee722d7aa6e73eb98",
            "https://git.kernel.org/stable/c/67f34f093c0f7bf33f5b4ae64d3d695a3b978285",
            "https://git.kernel.org/stable/c/7b8c7bd2296e95b38a6ff346242356a2e7190239",
            "https://git.kernel.org/stable/c/cca330c59c54207567a648357835f59df9a286bb",
            "https://git.kernel.org/stable/c/79f988d3ffc1aa778fc5181bdfab312e57956c6b",
            "https://git.kernel.org/stable/c/4ee0941da10e8fdcdb34756b877efd3282594c1f",
            "https://git.kernel.org/stable/c/1fe60ee709436550f8cfbab01295936b868d5baa",
            "https://git.kernel.org/stable/c/539d51ac48bcfcfa1b3d4a85f8df92fa22c1d41c",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OTB4HWU2PTVW5NEYHHLOCXDKG3PYA534/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DW2MIOIMOFUSNLHLRYX23AFR36BMKD65/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: nosy: ensure user_length is taken into account when fetching packet contents\n\nEnsure that packet_buffer_get respects the user_length provided. If\nthe length of the head packet exceeds the user_length, packet_buffer_get\nwill now return 0 to signify to the user that no data were read\nand a larger buffer size is required. Helps prevent user space overflows."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-05-14T15:12:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27398",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/483bc08181827fc475643272ffb69c533007e546",
            "https://git.kernel.org/stable/c/1b33d55fb7355e27f8c82cd4ecd560f162469249",
            "https://git.kernel.org/stable/c/3212afd00e3cda790fd0583cb3eaef8f9575a014",
            "https://git.kernel.org/stable/c/33a6e92161a78c1073d90e27abe28d746feb0a53",
            "https://git.kernel.org/stable/c/6a18eeb1b3bbc67c20d9609c31dca6a69b4bcde5",
            "https://git.kernel.org/stable/c/bfab2c1f7940a232cd519e82fff137e308abfd93",
            "https://git.kernel.org/stable/c/012363cb1bec5f33a7b94629ab2c1086f30280f2",
            "https://git.kernel.org/stable/c/50c2037fc28df870ef29d9728c770c8955d32178",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OTB4HWU2PTVW5NEYHHLOCXDKG3PYA534/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DW2MIOIMOFUSNLHLRYX23AFR36BMKD65/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix use-after-free bugs caused by sco_sock_timeout\n\nWhen the sco connection is established and then, the sco socket\nis releasing, timeout_work will be scheduled to judge whether\nthe sco disconnection is timeout. The sock will be deallocated\nlater, but it is dereferenced again in sco_sock_timeout. As a\nresult, the use-after-free bugs will happen. The root cause is\nshown below:\n\n    Cleanup Thread               |      Worker Thread\nsco_sock_release                 |\n  sco_sock_close                 |\n    __sco_sock_close             |\n      sco_sock_set_timer         |\n        schedule_delayed_work    |\n  sco_sock_kill                  |    (wait a time)\n    sock_put(sk) //FREE          |  sco_sock_timeout\n                                 |    sock_hold(sk) //USE\n\nThe KASAN report triggered by POC is shown below:\n\n[   95.890016] ==================================================================\n[   95.890496] BUG: KASAN: slab-use-after-free in sco_sock_timeout+0x5e/0x1c0\n[   95.890755] Write of size 4 at addr ffff88800c388080 by task kworker/0:0/7\n...\n[   95.890755] Workqueue: events sco_sock_timeout\n[   95.890755] Call Trace:\n[   95.890755]  <TASK>\n[   95.890755]  dump_stack_lvl+0x45/0x110\n[   95.890755]  print_address_description+0x78/0x390\n[   95.890755]  print_report+0x11b/0x250\n[   95.890755]  ? __virt_addr_valid+0xbe/0xf0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_report+0x139/0x170\n[   95.890755]  ? update_load_avg+0xe5/0x9f0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_check_range+0x2c3/0x2e0\n[   95.890755]  sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  process_one_work+0x561/0xc50\n[   95.890755]  worker_thread+0xab2/0x13c0\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  kthread+0x279/0x300\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork+0x34/0x60\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork_asm+0x11/0x20\n[   95.890755]  </TASK>\n[   95.890755]\n[   95.890755] Allocated by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  __kasan_kmalloc+0x86/0x90\n[   95.890755]  __kmalloc+0x17f/0x360\n[   95.890755]  sk_prot_alloc+0xe1/0x1a0\n[   95.890755]  sk_alloc+0x31/0x4e0\n[   95.890755]  bt_sock_alloc+0x2b/0x2a0\n[   95.890755]  sco_sock_create+0xad/0x320\n[   95.890755]  bt_sock_create+0x145/0x320\n[   95.890755]  __sock_create+0x2e1/0x650\n[   95.890755]  __sys_socket+0xd0/0x280\n[   95.890755]  __x64_sys_socket+0x75/0x80\n[   95.890755]  do_syscall_64+0xc4/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] Freed by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  kasan_save_free_info+0x40/0x50\n[   95.890755]  poison_slab_object+0x118/0x180\n[   95.890755]  __kasan_slab_free+0x12/0x30\n[   95.890755]  kfree+0xb2/0x240\n[   95.890755]  __sk_destruct+0x317/0x410\n[   95.890755]  sco_sock_release+0x232/0x280\n[   95.890755]  sock_close+0xb2/0x210\n[   95.890755]  __fput+0x37f/0x770\n[   95.890755]  task_work_run+0x1ae/0x210\n[   95.890755]  get_signal+0xe17/0xf70\n[   95.890755]  arch_do_signal_or_restart+0x3f/0x520\n[   95.890755]  syscall_exit_to_user_mode+0x55/0x120\n[   95.890755]  do_syscall_64+0xd1/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] The buggy address belongs to the object at ffff88800c388000\n[   95.890755]  which belongs to the cache kmalloc-1k of size 1024\n[   95.890755] The buggy address is located 128 bytes inside of\n[   95.890755]  freed 1024-byte region [ffff88800c388000, ffff88800c388400)\n[   95.890755]\n[   95.890755] The buggy address belongs to the physical page:\n[   95.890755] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88800c38a800 pfn:0xc388\n[   95.890755] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n[   95.890755] ano\n---truncated---"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-04-28T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-119",
        "id": "CVE-2022-48655",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1f08a1b26cfc53b7715abc46857c6023bb1b87de",
            "https://git.kernel.org/stable/c/8e65edf0d37698f7a6cb174608d3ec7976baf49e",
            "https://git.kernel.org/stable/c/e9076ffbcaed5da6c182b144ef9f6e24554af268",
            "https://git.kernel.org/stable/c/7184491fc515f391afba23d0e9b690caaea72daf",
            "https://git.kernel.org/stable/c/f2277d9e2a0d092c13bae7ee82d75432bb8b5108",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Harden accesses to the reset domains\n\nAccessing reset domains descriptors by the index upon the SCMI drivers\nrequests through the SCMI reset operations interface can potentially\nlead to out-of-bound violations if the SCMI driver misbehave.\n\nAdd an internal consistency check before any such domains descriptors\naccesses."
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-04-17T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-26900",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6d32c832a88513f65c2c2c9c75954ee8b387adea",
            "https://git.kernel.org/stable/c/4c1021ce46fc2fb6115f7e79d353941e6dcad366",
            "https://git.kernel.org/stable/c/6cf350658736681b9d6b0b6e58c5c76b235bb4c4",
            "https://git.kernel.org/stable/c/fb5b347efd1bda989846ffc74679d181222fb123",
            "https://git.kernel.org/stable/c/f3a1787dc48213f6caea5ba7d47e0222e7fa34a9",
            "https://git.kernel.org/stable/c/beaf11969fd5cbe6f09cefaa34df1ce8578e8dd9",
            "https://git.kernel.org/stable/c/9fd0198f7ef06ae0d6636fb0578560857dead995",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix kmemleak of rdev->serial\n\nIf kobject_add() is fail in bind_rdev_to_array(), 'rdev->serial' will be\nalloc not be freed, and kmemleak occurs.\n\nunreferenced object 0xffff88815a350000 (size 49152):\n  comm \"mdadm\", pid 789, jiffies 4294716910\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc f773277a):\n    [<0000000058b0a453>] kmemleak_alloc+0x61/0xe0\n    [<00000000366adf14>] __kmalloc_large_node+0x15e/0x270\n    [<000000002e82961b>] __kmalloc_node.cold+0x11/0x7f\n    [<00000000f206d60a>] kvmalloc_node+0x74/0x150\n    [<0000000034bf3363>] rdev_init_serial+0x67/0x170\n    [<0000000010e08fe9>] mddev_create_serial_pool+0x62/0x220\n    [<00000000c3837bf0>] bind_rdev_to_array+0x2af/0x630\n    [<0000000073c28560>] md_add_new_disk+0x400/0x9f0\n    [<00000000770e30ff>] md_ioctl+0x15bf/0x1c10\n    [<000000006cfab718>] blkdev_ioctl+0x191/0x3f0\n    [<0000000085086a11>] vfs_ioctl+0x22/0x60\n    [<0000000018b656fe>] __x64_sys_ioctl+0xba/0xe0\n    [<00000000e54e675e>] do_syscall_64+0x71/0x150\n    [<000000008b0ad622>] entry_SYSCALL_64_after_hwframe+0x6c/0x74"
    },
    {
        "Modified": "2024-06-27T14:15:00",
        "Published": "2024-03-06T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52585",
        "impact": {},
        "last-modified": "2024-06-27T14:15:00",
        "references": [
            "https://git.kernel.org/stable/c/195a6289282e039024ad30ba66e6f94a4d0fbe49",
            "https://git.kernel.org/stable/c/b8d55a90fd55b767c25687747e2b24abd1ef8680",
            "https://git.kernel.org/stable/c/467139546f3fb93913de064461b1a43a212d7626",
            "https://git.kernel.org/stable/c/0eb296233f86750102aa43b97879b8d8311f249a",
            "https://git.kernel.org/stable/c/7e6d6f27522bcd037856234b720ff607b9c4a09b",
            "https://git.kernel.org/stable/c/92cb363d16ac1e41c9764cdb513d0e89a6ff4915",
            "https://git.kernel.org/stable/c/c364e7a34c85c2154fb2e47561965d5b5a0b69b1",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix possible NULL dereference in amdgpu_ras_query_error_status_helper()\n\nReturn invalid error code -EINVAL for invalid block id.\n\nFixes the below:\n\ndrivers/gpu/drm/amd/amdgpu/amdgpu_ras.c:1183 amdgpu_ras_query_error_status_helper() error: we previously assumed 'info' could be null (see line 1176)"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-27T13:16:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38515",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [],
        "summary": "Rejected reason: This CVE is a duplicate of CVE-2024-38374."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-27T13:16:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6371",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://vuldb.com/?id.269804",
            "https://vuldb.com/?ctiid.269804",
            "https://vuldb.com/?submit.364101",
            "https://github.com/L1OudFd8cl09/CVE/blob/main/25_06_2024_b.md"
        ],
        "summary": "A vulnerability, which was classified as critical, has been found in itsourcecode Pool of Bethesda Online Reservation System 1.0. Affected by this issue is some unknown functionality of the file controller.php. The manipulation of the argument rmtype_id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269804."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-27T13:16:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6372",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://vuldb.com/?id.269805",
            "https://vuldb.com/?ctiid.269805",
            "https://vuldb.com/?submit.364752",
            "https://github.com/Galaxy-lrc/cve/issues/1"
        ],
        "summary": "A vulnerability, which was classified as critical, was found in itsourcecode Tailoring Management System 1.0. This affects an unknown part of the file customeradd.php. The manipulation of the argument fullname/address/phonenumber/sex/email/city/comment leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-269805 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-27T13:16:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-6373",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://vuldb.com/?id.269806",
            "https://vuldb.com/?ctiid.269806",
            "https://vuldb.com/?submit.364646",
            "https://github.com/Abyssun/abyssun-/issues/1"
        ],
        "summary": "A vulnerability has been found in itsourcecode Online Food Ordering System up to 1.0 and classified as critical. This vulnerability affects unknown code of the file /addproduct.php. The manipulation of the argument photo leads to unrestricted upload. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-269806 is the identifier assigned to this vulnerability."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38381",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/406cfac9debd4a6d3dc5d9258ee086372a8c08b6",
            "https://git.kernel.org/stable/c/485ded868ed62ceb2acb3a459d7843fd71472619",
            "https://git.kernel.org/stable/c/f80b786ab0550d0020191a59077b2c7e069db2d1",
            "https://git.kernel.org/stable/c/ad4d196d2008c7f413167f0a693feb4f0439d7fe",
            "https://git.kernel.org/stable/c/e8c8e0d0d214c877fbad555df5b3ed558cd9b0c3",
            "https://git.kernel.org/stable/c/e53a7f8afcbd2886f2a94c5d56757328109730ea",
            "https://git.kernel.org/stable/c/017ff397624930fd7ac7f1761f3c9d6a7100f68c",
            "https://git.kernel.org/stable/c/e4a87abf588536d1cdfb128595e6e680af5cf3ed",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_rx_work\n\nsyzbot reported the following uninit-value access issue [1]\n\nnci_rx_work() parses received packet from ndev->rx_q. It should be\nvalidated header size, payload size and total packet size before\nprocessing the packet. If an invalid packet is detected, it should be\nsilently discarded."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38621",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/f6a392266276730bea893b55d12940e32a25f56a",
            "https://git.kernel.org/stable/c/ecf4ddc3aee8ade504c4d36b7b4053ce6093e200",
            "https://git.kernel.org/stable/c/a16775828aaed1c54ff4e6fe83e8e4d5c6a50cb7",
            "https://git.kernel.org/stable/c/7532bcec0797adfa08791301c3bcae14141db3bd",
            "https://git.kernel.org/stable/c/b504518a397059e1d55c521ba0ea2b545a6c4b52",
            "https://git.kernel.org/stable/c/d410017a7181cb55e4a5c810b32b75e4416c6808",
            "https://git.kernel.org/stable/c/a08492832cc4cacc24e0612f483c86ca899b9261",
            "https://git.kernel.org/stable/c/faa4364bef2ec0060de381ff028d1d836600a381",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: stk1160: fix bounds checking in stk1160_copy_video()\n\nThe subtract in this condition is reversed.  The ->length is the length\nof the buffer.  The ->bytesused is how many bytes we have copied thus\nfar.  When the condition is reversed that means the result of the\nsubtraction is always negative but since it's unsigned then the result\nis a very high positive value.  That means the overflow check is never\ntrue.\n\nAdditionally, the ->bytesused doesn't actually work for this purpose\nbecause we're not writing to \"buf->mem + buf->bytesused\".  Instead, the\nmath to calculate the destination where we are writing is a bit\ninvolved.  You calculate the number of full lines already written,\nmultiply by two, skip a line if necessary so that we start on an odd\nnumbered line, and add the offset into the line.\n\nTo fix this buffer overflow, just take the actual destination where we\nare writing, if the offset is already out of bounds print an error and\nreturn.  Otherwise, write up to buf->length bytes."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38634",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/44b38924135d2093e2ec1812969464845dd66dc9",
            "https://git.kernel.org/stable/c/ea9b35372b58ac2931bfc1d5bc25e839d1221e30",
            "https://git.kernel.org/stable/c/cc121e3722a0a2c8f716ef991e5425b180a5fb94",
            "https://git.kernel.org/stable/c/78dbda51bb4241b88a52d71620f06231a341f9ba",
            "https://git.kernel.org/stable/c/8296bb9e5925b6634259c5d4daee88f0cc0884ec",
            "https://git.kernel.org/stable/c/93df2fba6c7dfa9a2f08546ea9a5ca4728758458",
            "https://git.kernel.org/stable/c/865b30c8661924ee9145f442bf32cea549faa869",
            "https://git.kernel.org/stable/c/77ab53371a2066fdf9b895246505f5ef5a4b5d47",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max3100: Lock port->lock when calling uart_handle_cts_change()\n\nuart_handle_cts_change() has to be called with port lock taken,\nSince we run it in a separate work, the lock may not be taken at\nthe time of running. Make sure that it's taken by explicitly doing\nthat. Without it we got a splat:\n\n  WARNING: CPU: 0 PID: 10 at drivers/tty/serial/serial_core.c:3491 uart_handle_cts_change+0xa6/0xb0\n  ...\n  Workqueue: max3100-0 max3100_work [max3100]\n  RIP: 0010:uart_handle_cts_change+0xa6/0xb0\n  ...\n   max3100_handlerx+0xc5/0x110 [max3100]\n   max3100_work+0x12a/0x340 [max3100]"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38637",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/8f4a76d477f0cc3c54d512f07f6f88c8e1c1e07b",
            "https://git.kernel.org/stable/c/e2c64246e5dc8c0d35ec41770b85e2b4cafdff21",
            "https://git.kernel.org/stable/c/eac10cf3a97ffd4b4deb0a29f57c118225a42850",
            "https://git.kernel.org/stable/c/330f6bcdcef03f70f81db5f2ed6747af656a09f2",
            "https://git.kernel.org/stable/c/9b41a9b9c8be8c552f10633453fdb509e83b66f8",
            "https://git.kernel.org/stable/c/518e2c46b5dbce40b1aa0100001d03c3ceaa7d38",
            "https://git.kernel.org/stable/c/895cdd9aa9546523df839f9cc1488a0ecc1e0731",
            "https://git.kernel.org/stable/c/a1ba19a1ae7cd1e324685ded4ab563e78fe68648",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngreybus: lights: check return of get_channel_from_mode\n\nIf channel for the given node is not found we return null from\nget_channel_from_mode. Make sure we validate the return pointer\nbefore using it in two of the missing places.\n\nThis was originally reported in [0]:\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n[0] https://lore.kernel.org/all/20240301190425.120605-1-m.lobanov@rosalinux.ru"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38659",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/2b649d7e0cb42a660f0260ef25fd55fdc9c6c600",
            "https://git.kernel.org/stable/c/ca63fb7af9d3e531aa25f7ae187bfc6c7166ec2d",
            "https://git.kernel.org/stable/c/3c0d36972edbe56fcf98899622d9b90ac9965227",
            "https://git.kernel.org/stable/c/25571a12fbc8a1283bd8380d461267956fd426f7",
            "https://git.kernel.org/stable/c/7077c22f84f41974a711604a42fd0e0684232ee5",
            "https://git.kernel.org/stable/c/f6638e955ca00c489894789492776842e102af9c",
            "https://git.kernel.org/stable/c/aee1955a1509a921c05c70dad5d6fc8563dfcb31",
            "https://git.kernel.org/stable/c/e8021b94b0412c37bcc79027c2e382086b6ce449",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nenic: Validate length of nl attributes in enic_set_vf_port\n\nenic_set_vf_port assumes that the nl attribute IFLA_PORT_PROFILE\nis of length PORT_PROFILE_MAX and that the nl attributes\nIFLA_PORT_INSTANCE_UUID, IFLA_PORT_HOST_UUID are of length PORT_UUID_MAX.\nThese attributes are validated (in the function do_setlink in rtnetlink.c)\nusing the nla_policy ifla_port_policy. The policy defines IFLA_PORT_PROFILE\nas NLA_STRING, IFLA_PORT_INSTANCE_UUID as NLA_BINARY and\nIFLA_PORT_HOST_UUID as NLA_STRING. That means that the length validation\nusing the policy is for the max size of the attributes and not on exact\nsize so the length of these attributes might be less than the sizes that\nenic_set_vf_port expects. This might cause an out of bands\nread access in the memcpys of the data of these\nattributes in enic_set_vf_port."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37353",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/cb7a7c8144b434e06aba99b13b045a7efe859587",
            "https://git.kernel.org/stable/c/43a9aaf63254ab821f0f25fea25698ebe69ea16a",
            "https://git.kernel.org/stable/c/7fbe54f02a5c77ff5dd65e8ed0b58e3bd8c43e9c",
            "https://git.kernel.org/stable/c/42d30da50d5c1ec433fd9551bfddd6887407c352",
            "https://git.kernel.org/stable/c/abf001651acd1858252764fa39d79e3d0b5c86b2",
            "https://git.kernel.org/stable/c/04207a9c64e0b16dac842e5b2ecfa53af25bdea7",
            "https://git.kernel.org/stable/c/bb61a84793858330ba2ca1d202d3779096f6fb54",
            "https://git.kernel.org/stable/c/89875151fccdd024d571aa884ea97a0128b968b6",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio: delete vq in vp_find_vqs_msix() when request_irq() fails\n\nWhen request_irq() fails, error path calls vp_del_vqs(). There, as vq is\npresent in the list, free_irq() is called for the same vector. That\ncauses following splat:\n\n[    0.414355] Trying to free already-free IRQ 27\n[    0.414403] WARNING: CPU: 1 PID: 1 at kernel/irq/manage.c:1899 free_irq+0x1a1/0x2d0\n[    0.414510] Modules linked in:\n[    0.414540] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 6.9.0-rc4+ #27\n[    0.414540] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-1.fc39 04/01/2014\n[    0.414540] RIP: 0010:free_irq+0x1a1/0x2d0\n[    0.414540] Code: 1e 00 48 83 c4 08 48 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 90 8b 74 24 04 48 c7 c7 98 80 6c b1 e8 00 c9 f7 ff 90 <0f> 0b 90 90 48 89 ee 4c 89 ef e8 e0 20 b8 00 49 8b 47 40 48 8b 40\n[    0.414540] RSP: 0000:ffffb71480013ae0 EFLAGS: 00010086\n[    0.414540] RAX: 0000000000000000 RBX: ffffa099c2722000 RCX: 0000000000000000\n[    0.414540] RDX: 0000000000000000 RSI: ffffb71480013998 RDI: 0000000000000001\n[    0.414540] RBP: 0000000000000246 R08: 00000000ffffdfff R09: 0000000000000001\n[    0.414540] R10: 00000000ffffdfff R11: ffffffffb18729c0 R12: ffffa099c1c91760\n[    0.414540] R13: ffffa099c1c916a4 R14: ffffa099c1d2f200 R15: ffffa099c1c91600\n[    0.414540] FS:  0000000000000000(0000) GS:ffffa099fec40000(0000) knlGS:0000000000000000\n[    0.414540] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    0.414540] CR2: 0000000000000000 CR3: 0000000008e3e001 CR4: 0000000000370ef0\n[    0.414540] Call Trace:\n[    0.414540]  <TASK>\n[    0.414540]  ? __warn+0x80/0x120\n[    0.414540]  ? free_irq+0x1a1/0x2d0\n[    0.414540]  ? report_bug+0x164/0x190\n[    0.414540]  ? handle_bug+0x3b/0x70\n[    0.414540]  ? exc_invalid_op+0x17/0x70\n[    0.414540]  ? asm_exc_invalid_op+0x1a/0x20\n[    0.414540]  ? free_irq+0x1a1/0x2d0\n[    0.414540]  vp_del_vqs+0xc1/0x220\n[    0.414540]  vp_find_vqs_msix+0x305/0x470\n[    0.414540]  vp_find_vqs+0x3e/0x1a0\n[    0.414540]  vp_modern_find_vqs+0x1b/0x70\n[    0.414540]  init_vqs+0x387/0x600\n[    0.414540]  virtnet_probe+0x50a/0xc80\n[    0.414540]  virtio_dev_probe+0x1e0/0x2b0\n[    0.414540]  really_probe+0xc0/0x2c0\n[    0.414540]  ? __pfx___driver_attach+0x10/0x10\n[    0.414540]  __driver_probe_device+0x73/0x120\n[    0.414540]  driver_probe_device+0x1f/0xe0\n[    0.414540]  __driver_attach+0x88/0x180\n[    0.414540]  bus_for_each_dev+0x85/0xd0\n[    0.414540]  bus_add_driver+0xec/0x1f0\n[    0.414540]  driver_register+0x59/0x100\n[    0.414540]  ? __pfx_virtio_net_driver_init+0x10/0x10\n[    0.414540]  virtio_net_driver_init+0x90/0xb0\n[    0.414540]  do_one_initcall+0x58/0x230\n[    0.414540]  kernel_init_freeable+0x1a3/0x2d0\n[    0.414540]  ? __pfx_kernel_init+0x10/0x10\n[    0.414540]  kernel_init+0x1a/0x1c0\n[    0.414540]  ret_from_fork+0x31/0x50\n[    0.414540]  ? __pfx_kernel_init+0x10/0x10\n[    0.414540]  ret_from_fork_asm+0x1a/0x30\n[    0.414540]  </TASK>\n\nFix this by calling deleting the current vq when request_irq() fails."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38549",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/79078880795478d551a05acc41f957700030d364",
            "https://git.kernel.org/stable/c/be34a1b351ea7faeb15dde8c44fe89de3980ae67",
            "https://git.kernel.org/stable/c/d17b75ee9c2e44d3a3682c4ea5ab713ea6073350",
            "https://git.kernel.org/stable/c/0e3b6f9123726858cac299e1654e3d20424cabe4",
            "https://git.kernel.org/stable/c/13562c2d48c9ee330de1077d00146742be368f05",
            "https://git.kernel.org/stable/c/af26ea99019caee1500bf7e60c861136c0bf8594",
            "https://git.kernel.org/stable/c/9489951e3ae505534c4013db4e76b1b5a3151ac7",
            "https://git.kernel.org/stable/c/fb4aabdb1b48c25d9e1ee28f89440fd2ce556405",
            "https://git.kernel.org/stable/c/1e4350095e8ab2577ee05f8c3b044e661b5af9a0",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Add 0 size check to mtk_drm_gem_obj\n\nAdd a check to mtk_drm_gem_init if we attempt to allocate a GEM object\nof 0 bytes. Currently, no such check exists and the kernel will panic if\na userspace application attempts to allocate a 0x0 GBM buffer.\n\nTested by attempting to allocate a 0x0 GBM buffer on an MT8188 and\nverifying that we now return EINVAL."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38560",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/481fc0c8617304a67649027c4a44723a139a0462",
            "https://git.kernel.org/stable/c/595a6b98deec01b6dbb20139f71edcd5fb760ec2",
            "https://git.kernel.org/stable/c/00b425ff0891283207d7bad607a2412225274d7a",
            "https://git.kernel.org/stable/c/1708e3cf2488788cba5489e4f913d227de757baf",
            "https://git.kernel.org/stable/c/7d3e694c4fe30f3aba9cd5ae86fb947a54c3db5c",
            "https://git.kernel.org/stable/c/204714e68015d6946279719fd464ecaf57240f35",
            "https://git.kernel.org/stable/c/7510fab46b1cbd1680e2a096e779aec3334b4143",
            "https://git.kernel.org/stable/c/ecb76200f5557a2886888aaa53702da1ab9e6cdf",
            "https://git.kernel.org/stable/c/13d0cecb4626fae67c00c84d3c7851f6b62f7df3",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul instead\nof memdup_user."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38552",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/604c506ca43fce52bb882cff9c1fdf2ec3b4029c",
            "https://git.kernel.org/stable/c/e280ab978c81443103d7c61bdd1d8d708cf6ed6d",
            "https://git.kernel.org/stable/c/04bc4d1090c343025d69149ca669a27c5b9c34a7",
            "https://git.kernel.org/stable/c/ced9c4e2289a786b8fa684d8893b7045ea53ef7e",
            "https://git.kernel.org/stable/c/98b8a6bfd30d07a19cfacdf82b50f84bf3360869",
            "https://git.kernel.org/stable/c/4e8c8b37ee84b3b19c448d2b8e4c916d2f5b9c86",
            "https://git.kernel.org/stable/c/123edbae64f4d21984359b99c6e79fcde31c6123",
            "https://git.kernel.org/stable/c/7226ddf3311c5e5a7726ad7d4e7b079bb3cfbb29",
            "https://git.kernel.org/stable/c/63ae548f1054a0b71678d0349c7dc9628ddd42ca",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix potential index out of bounds in color transformation function\n\nFixes index out of bounds issue in the color transformation function.\nThe issue could occur when the index 'i' exceeds the number of transfer\nfunction points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, an error message is\nlogged and the function returns false to indicate an error.\n\nReported by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:405 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:406 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:407 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38559",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/1f84a2744ad813be23fc4be99fb74bfb24aadb95",
            "https://git.kernel.org/stable/c/a75001678e1d38aa607d5b898ec7ff8ed0700d59",
            "https://git.kernel.org/stable/c/769b9fd2af02c069451fe9108dba73355d9a021c",
            "https://git.kernel.org/stable/c/dccd97b39ab2f2b1b9a47a1394647a4d65815255",
            "https://git.kernel.org/stable/c/d93318f19d1e1a6d5f04f5d965eaa9055bb7c613",
            "https://git.kernel.org/stable/c/563e609275927c0b75fbfd0d90441543aa7b5e0d",
            "https://git.kernel.org/stable/c/4907f5ad246fa9b51093ed7dfc7da9ebbd3f20b8",
            "https://git.kernel.org/stable/c/177f43c6892e6055de6541fe9391a8a3d1f95fc9",
            "https://git.kernel.org/stable/c/d0184a375ee797eb657d74861ba0935b6e405c62",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count from\nuserspace to that buffer. Later, we use kstrtouint on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can\nlead to OOB read when using kstrtouint. Fix this issue by using\nmemdup_user_nul instead of memdup_user."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38583",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/822ae5a8eac30478578a75f7e064f0584931bf2d",
            "https://git.kernel.org/stable/c/82933c84f188dcfe89eb26b0b48ab5d1ca99d164",
            "https://git.kernel.org/stable/c/67fa90d4a2ccd9ebb0e1e168c7d0b5d0cf3c7148",
            "https://git.kernel.org/stable/c/e65ccf3a4de4f0c763d94789615b83e11f204438",
            "https://git.kernel.org/stable/c/86a30d6302deddb9fb97ba6fc4b04d0e870b582a",
            "https://git.kernel.org/stable/c/f9186bba4ea282b07293c1c892441df3a5441cb0",
            "https://git.kernel.org/stable/c/2f12b2c03c5dae1a0de0a9e5853177e3d6eee3c6",
            "https://git.kernel.org/stable/c/68e738be5c518fc3c4e9146b66f67c8fee0135fb",
            "https://git.kernel.org/stable/c/f5d4e04634c9cf68bdf23de08ada0bb92e8befe7",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix use-after-free of timer for log writer thread\n\nPatch series \"nilfs2: fix log writer related issues\".\n\nThis bug fix series covers three nilfs2 log writer-related issues,\nincluding a timer use-after-free issue and potential deadlock issue on\nunmount, and a potential freeze issue in event synchronization found\nduring their analysis.  Details are described in each commit log.\n\n\nThis patch (of 3):\n\nA use-after-free issue has been reported regarding the timer sc_timer on\nthe nilfs_sc_info structure.\n\nThe problem is that even though it is used to wake up a sleeping log\nwriter thread, sc_timer is not shut down until the nilfs_sc_info structure\nis about to be freed, and is used regardless of the thread's lifetime.\n\nFix this issue by limiting the use of sc_timer only while the log writer\nthread is alive."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38599",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/2904e1d9b64f72d291095e3cbb31634f08788b11",
            "https://git.kernel.org/stable/c/526235dffcac74c7823ed504dfac4f88d84ba5df",
            "https://git.kernel.org/stable/c/f0eea095ce8c959b86e1e57fe36ca4fea5ae54f8",
            "https://git.kernel.org/stable/c/a1d21bcd78cf4a4353e1e835789429c6b76aca8b",
            "https://git.kernel.org/stable/c/f06969df2e40ab1dc8f4364a5de967830c74a098",
            "https://git.kernel.org/stable/c/af82d8d2179b7277ad627c39e7e0778f1c86ccdb",
            "https://git.kernel.org/stable/c/8d431391320c5c5398ff966fb3a95e68a7def275",
            "https://git.kernel.org/stable/c/978a12c91b38bf1a213e567f3c20e2beef215f07",
            "https://git.kernel.org/stable/c/c6854e5a267c28300ff045480b5a7ee7f6f1d913",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: prevent xattr node from overflowing the eraseblock\n\nAdd a check to make sure that the requested xattr node size is no larger\nthan the eraseblock minus the cleanmarker.\n\nUnlike the usual inode nodes, the xattr nodes aren't split into parts\nand spread across multiple eraseblocks, which means that a xattr node\nmust not occupy more than one eraseblock. If the requested xattr value is\ntoo large, the xattr node can spill onto the next eraseblock, overwriting\nthe nodes and causing errors such as:\n\njffs2: argh. node added in wrong place at 0x0000b050(2)\njffs2: nextblock 0x0000a000, expected at 0000b00c\njffs2: error: (823) do_verify_xattr_datum: node CRC failed at 0x01e050,\nread=0xfc892c93, calc=0x000000\njffs2: notice: (823) jffs2_get_inode_nodes: Node header CRC failed\nat 0x01e00c. {848f,2fc4,0fef511f,59a3d171}\njffs2: Node at 0x0000000c with length 0x00001044 would run over the\nend of the erase block\njffs2: Perhaps the file system was created with the wrong erase size?\njffs2: jffs2_scan_eraseblock(): Magic bitmask 0x1985 not found\nat 0x00000010: 0x1044 instead\n\nThis breaks the filesystem and can lead to KASAN crashes such as:\n\nBUG: KASAN: slab-out-of-bounds in jffs2_sum_add_kvec+0x125e/0x15d0\nRead of size 4 at addr ffff88802c31e914 by task repro/830\nCPU: 0 PID: 830 Comm: repro Not tainted 6.9.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS Arch Linux 1.16.3-1-1 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0xc6/0x120\n print_report+0xc4/0x620\n ? __virt_addr_valid+0x308/0x5b0\n kasan_report+0xc1/0xf0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_flash_direct_writev+0xa8/0xd0\n jffs2_flash_writev+0x9c9/0xef0\n ? __x64_sys_setxattr+0xc4/0x160\n ? do_syscall_64+0x69/0x140\n ? entry_SYSCALL_64_after_hwframe+0x76/0x7e\n [...]\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38582",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/911d38be151921a5d152bb55e81fd752384c6830",
            "https://git.kernel.org/stable/c/bc9cee50a4a4ca23bdc49f75ea8242d8a2193b3b",
            "https://git.kernel.org/stable/c/eff7cdf890b02596b8d73e910bdbdd489175dbdb",
            "https://git.kernel.org/stable/c/06afce714d87c7cd1dcfccbcd800c5c5d2cf1cfd",
            "https://git.kernel.org/stable/c/1c3844c5f4eac043954ebf6403fa9fd1f0e9c1c0",
            "https://git.kernel.org/stable/c/a8799662fed1f8747edae87a1937549288baca6a",
            "https://git.kernel.org/stable/c/6e5c8e8e024e147b834f56f2115aad241433679b",
            "https://git.kernel.org/stable/c/c516db6ab9eabbedbc430b4f93b0d8728e9b427f",
            "https://git.kernel.org/stable/c/eb85dace897c5986bc2f36b3c783c6abb8a4292e",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential hang in nilfs_detach_log_writer()\n\nSyzbot has reported a potential hang in nilfs_detach_log_writer() called\nduring nilfs2 unmount.\n\nAnalysis revealed that this is because nilfs_segctor_sync(), which\nsynchronizes with the log writer thread, can be called after\nnilfs_segctor_destroy() terminates that thread, as shown in the call trace\nbelow:\n\nnilfs_detach_log_writer\n  nilfs_segctor_destroy\n    nilfs_segctor_kill_thread  --> Shut down log writer thread\n    flush_work\n      nilfs_iput_work_func\n        nilfs_dispose_list\n          iput\n            nilfs_evict_inode\n              nilfs_transaction_commit\n                nilfs_construct_segment (if inode needs sync)\n                  nilfs_segctor_sync  --> Attempt to synchronize with\n                                          log writer thread\n                           *** DEADLOCK ***\n\nFix this issue by changing nilfs_segctor_sync() so that the log writer\nthread returns normally without synchronizing after it terminates, and by\nforcing tasks that are already waiting to complete once after the thread\nterminates.\n\nThe skipped inode metadata flushout will then be processed together in the\nsubsequent cleanup work in nilfs_segctor_destroy()."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38565",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/79ddf5f2020fd593d50f1363bb5131283d74f78f",
            "https://git.kernel.org/stable/c/68a5a00c5d38978a3f8460c6f182f7beec8688ff",
            "https://git.kernel.org/stable/c/ee25389df80138907bc9dcdf4a2be2067cde9a81",
            "https://git.kernel.org/stable/c/b4c24de37a6bb383394a6fef2b85a6db41d426f5",
            "https://git.kernel.org/stable/c/34f7ebff1b9699e0b89fa58b693bc098c2f5ec72",
            "https://git.kernel.org/stable/c/b33a81e4ecfb022b028cae37d1c1ce28ac1b359d",
            "https://git.kernel.org/stable/c/beeed260b92af158592f5e8d2dab65dae45c6f70",
            "https://git.kernel.org/stable/c/7bbf76c9bb2c58375e183074e44f9712483f0603",
            "https://git.kernel.org/stable/c/e120b6388d7d88635d67dcae6483f39c37111850",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ar5523: enable proper endpoint verification\n\nSyzkaller reports [1] hitting a warning about an endpoint in use\nnot having an expected type to it.\n\nFix the issue by checking for the existence of all proper\nendpoints with their according types intact.\n\nSadly, this patch has not been tested on real hardware.\n\n[1] Syzkaller report:\n------------[ cut here ]------------\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 0 PID: 3643 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n <TASK>\n ar5523_cmd+0x41b/0x780 drivers/net/wireless/ath/ar5523/ar5523.c:275\n ar5523_cmd_read drivers/net/wireless/ath/ar5523/ar5523.c:302 [inline]\n ar5523_host_available drivers/net/wireless/ath/ar5523/ar5523.c:1376 [inline]\n ar5523_probe+0x14b0/0x1d10 drivers/net/wireless/ath/ar5523/ar5523.c:1655\n usb_probe_interface+0x30f/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_set_configuration+0x101d/0x1900 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xbe/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd8/0x2c0 drivers/usb/core/driver.c:293\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_new_device.cold+0x685/0x10ad drivers/usb/core/hub.c:2573\n hub_port_connect drivers/usb/core/hub.c:5353 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5497 [inline]\n port_event drivers/usb/core/hub.c:5653 [inline]\n hub_event+0x26cb/0x45d0 drivers/usb/core/hub.c:5735\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n </TASK>"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38587",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/42f0a3f67158ed6b2908d2b9ffbf7e96d23fd358",
            "https://git.kernel.org/stable/c/cd7f3978c2ec741aedd1d860b2adb227314cf996",
            "https://git.kernel.org/stable/c/07ef95cc7a579731198c93beed281e3a79a0e586",
            "https://git.kernel.org/stable/c/504178fb7d9f6cdb0496d5491efb05f45597e535",
            "https://git.kernel.org/stable/c/3726f75a1ccc16cd335c0ccfad1d92ee08ecba5e",
            "https://git.kernel.org/stable/c/c6e1650cf5df1bd6638eeee231a683ef30c7d4eb",
            "https://git.kernel.org/stable/c/eb1ea64328d4cc7d7a912c563f8523d5259716ef",
            "https://git.kernel.org/stable/c/d52c04474feac8e305814a5228e622afe481b2ef",
            "https://git.kernel.org/stable/c/008ab3c53bc4f0b2f20013c8f6c204a3203d0b8b",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspeakup: Fix sizeof() vs ARRAY_SIZE() bug\n\nThe \"buf\" pointer is an array of u16 values.  This code should be\nusing ARRAY_SIZE() (which is 256) instead of sizeof() (which is 512),\notherwise it can the still got out of bounds."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38601",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/b50932ea673b5a089a4bb570a8a868d95c72854e",
            "https://git.kernel.org/stable/c/c68b7a442ee61d04ca58b2b5cb5ea7cb8230f84a",
            "https://git.kernel.org/stable/c/1e160196042cac946798ac192a0bc3398f1aa66b",
            "https://git.kernel.org/stable/c/595363182f28786d641666a09e674b852c83b4bb",
            "https://git.kernel.org/stable/c/54c64967ba5f8658ae7da76005024ebd3d9d8f6e",
            "https://git.kernel.org/stable/c/af3274905b3143ea23142bbf77bd9b610c54e533",
            "https://git.kernel.org/stable/c/5ef9e330406d3fb4f4b2c8bca2c6b8a93bae32d1",
            "https://git.kernel.org/stable/c/79b52013429a42b8efdb0cda8bb0041386abab87",
            "https://git.kernel.org/stable/c/c2274b908db05529980ec056359fae916939fdaa",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix a race between readers and resize checks\n\nThe reader code in rb_get_reader_page() swaps a new reader page into the\nring buffer by doing cmpxchg on old->list.prev->next to point it to the\nnew page. Following that, if the operation is successful,\nold->list.next->prev gets updated too. This means the underlying\ndoubly-linked list is temporarily inconsistent, page->prev->next or\npage->next->prev might not be equal back to page for some page in the\nring buffer.\n\nThe resize operation in ring_buffer_resize() can be invoked in parallel.\nIt calls rb_check_pages() which can detect the described inconsistency\nand stop further tracing:\n\n[  190.271762] ------------[ cut here ]------------\n[  190.271771] WARNING: CPU: 1 PID: 6186 at kernel/trace/ring_buffer.c:1467 rb_check_pages.isra.0+0x6a/0xa0\n[  190.271789] Modules linked in: [...]\n[  190.271991] Unloaded tainted modules: intel_uncore_frequency(E):1 skx_edac(E):1\n[  190.272002] CPU: 1 PID: 6186 Comm: cmd.sh Kdump: loaded Tainted: G            E      6.9.0-rc6-default #5 158d3e1e6d0b091c34c3b96bfd99a1c58306d79f\n[  190.272011] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552c-rebuilt.opensuse.org 04/01/2014\n[  190.272015] RIP: 0010:rb_check_pages.isra.0+0x6a/0xa0\n[  190.272023] Code: [...]\n[  190.272028] RSP: 0018:ffff9c37463abb70 EFLAGS: 00010206\n[  190.272034] RAX: ffff8eba04b6cb80 RBX: 0000000000000007 RCX: ffff8eba01f13d80\n[  190.272038] RDX: ffff8eba01f130c0 RSI: ffff8eba04b6cd00 RDI: ffff8eba0004c700\n[  190.272042] RBP: ffff8eba0004c700 R08: 0000000000010002 R09: 0000000000000000\n[  190.272045] R10: 00000000ffff7f52 R11: ffff8eba7f600000 R12: ffff8eba0004c720\n[  190.272049] R13: ffff8eba00223a00 R14: 0000000000000008 R15: ffff8eba067a8000\n[  190.272053] FS:  00007f1bd64752c0(0000) GS:ffff8eba7f680000(0000) knlGS:0000000000000000\n[  190.272057] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  190.272061] CR2: 00007f1bd6662590 CR3: 000000010291e001 CR4: 0000000000370ef0\n[  190.272070] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  190.272073] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  190.272077] Call Trace:\n[  190.272098]  <TASK>\n[  190.272189]  ring_buffer_resize+0x2ab/0x460\n[  190.272199]  __tracing_resize_ring_buffer.part.0+0x23/0xa0\n[  190.272206]  tracing_resize_ring_buffer+0x65/0x90\n[  190.272216]  tracing_entries_write+0x74/0xc0\n[  190.272225]  vfs_write+0xf5/0x420\n[  190.272248]  ksys_write+0x67/0xe0\n[  190.272256]  do_syscall_64+0x82/0x170\n[  190.272363]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  190.272373] RIP: 0033:0x7f1bd657d263\n[  190.272381] Code: [...]\n[  190.272385] RSP: 002b:00007ffe72b643f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[  190.272391] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f1bd657d263\n[  190.272395] RDX: 0000000000000002 RSI: 0000555a6eb538e0 RDI: 0000000000000001\n[  190.272398] RBP: 0000555a6eb538e0 R08: 000000000000000a R09: 0000000000000000\n[  190.272401] R10: 0000555a6eb55190 R11: 0000000000000246 R12: 00007f1bd6662500\n[  190.272404] R13: 0000000000000002 R14: 00007f1bd6667c00 R15: 0000000000000002\n[  190.272412]  </TASK>\n[  190.272414] ---[ end trace 0000000000000000 ]---\n\nNote that ring_buffer_resize() calls rb_check_pages() only if the parent\ntrace_buffer has recording disabled. Recent commit d78ab792705c\n(\"tracing: Stop current tracer when resizing buffer\") causes that it is\nnow always the case which makes it more likely to experience this issue.\n\nThe window to hit this race is nonetheless very small. To help\nreproducing it, one can add a delay loop in rb_get_reader_page():\n\n ret = rb_head_page_replace(reader, cpu_buffer->reader_page);\n if (!ret)\n \tgoto spin;\n for (unsigned i = 0; i < 1U << 26; i++)  /* inserted delay loop */\n \t__asm__ __volatile__ (\"\" : : : \"memory\");\n rb_list_head(reader->list.next)->prev = &cpu_buffer->reader_page->list;\n\n.. \n---truncated---"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38612",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/10610575a3ac2a702bf5c57aa931beaf847949c7",
            "https://git.kernel.org/stable/c/646cd236c55e2cb5f146fc41bbe4034c4af5b2a4",
            "https://git.kernel.org/stable/c/00e6335329f23ac6cf3105931691674e28bc598c",
            "https://git.kernel.org/stable/c/1a63730fb315bb1bab97edd69ff58ad45e04bb01",
            "https://git.kernel.org/stable/c/e77a3ec7ada84543e75722a1283785a6544de925",
            "https://git.kernel.org/stable/c/3398a40dccb88d3a7eef378247a023a78472db66",
            "https://git.kernel.org/stable/c/85a70ff1e572160f1eeb096ed48d09a1c9d4d89a",
            "https://git.kernel.org/stable/c/c04d6a914e890ccea4a9d11233009a2ee7978bf4",
            "https://git.kernel.org/stable/c/160e9d2752181fcf18c662e74022d77d3164cd45",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix invalid unregister error path\n\nThe error path of seg6_init() is wrong in case CONFIG_IPV6_SEG6_LWTUNNEL\nis not defined. In that case if seg6_hmac_init() fails, the\ngenl_unregister_family() isn't called.\n\nThis issue exist since commit 46738b1317e1 (\"ipv6: sr: add option to control\nlwtunnel support\"), and commit 5559cea2d5aa (\"ipv6: sr: fix possible\nuse-after-free and null-ptr-deref\") replaced unregister_pernet_subsys()\nwith genl_unregister_family() in this error path."
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36904",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/84546cc1aeeb4df3e444b18a4293c9823f974be9",
            "https://git.kernel.org/stable/c/1796ca9c6f5bd50554214053af5f47d112818ee3",
            "https://git.kernel.org/stable/c/1d9cf07810c30ef7948879567d10fd1f01121d34",
            "https://git.kernel.org/stable/c/27b0284d8be182a81feb65581ab6a724dfd596e8",
            "https://git.kernel.org/stable/c/13ed7cdf079686ccd3618335205700c03f6fb446",
            "https://git.kernel.org/stable/c/6e48faad92be13166184d21506e4e54c79c13adc",
            "https://git.kernel.org/stable/c/517e32ea0a8c72202d0d8aa8df50a7cd3d6fdefc",
            "https://git.kernel.org/stable/c/f2db7230f73a80dbb179deab78f88a7947f0ab7e",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Use refcount_inc_not_zero() in tcp_twsk_unique().\n\nAnderson Nascimento reported a use-after-free splat in tcp_twsk_unique()\nwith nice analysis.\n\nSince commit ec94c2696f0b (\"tcp/dccp: avoid one atomic operation for\ntimewait hashdance\"), inet_twsk_hashdance() sets TIME-WAIT socket's\nsk_refcnt after putting it into ehash and releasing the bucket lock.\n\nThus, there is a small race window where other threads could try to\nreuse the port during connect() and call sock_hold() in tcp_twsk_unique()\nfor the TIME-WAIT socket with zero refcnt.\n\nIf that happens, the refcnt taken by tcp_twsk_unique() is overwritten\nand sock_put() will cause underflow, triggering a real use-after-free\nsomewhere else.\n\nTo avoid the use-after-free, we need to use refcount_inc_not_zero() in\ntcp_twsk_unique() and give up on reusing the port if it returns false.\n\n[0]:\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 0 PID: 1039313 at lib/refcount.c:25 refcount_warn_saturate+0xe5/0x110\nCPU: 0 PID: 1039313 Comm: trigger Not tainted 6.8.6-200.fc39.x86_64 #1\nHardware name: VMware, Inc. VMware20,1/440BX Desktop Reference Platform, BIOS VMW201.00V.21805430.B64.2305221830 05/22/2023\nRIP: 0010:refcount_warn_saturate+0xe5/0x110\nCode: 42 8e ff 0f 0b c3 cc cc cc cc 80 3d aa 13 ea 01 00 0f 85 5e ff ff ff 48 c7 c7 f8 8e b7 82 c6 05 96 13 ea 01 01 e8 7b 42 8e ff <0f> 0b c3 cc cc cc cc 48 c7 c7 50 8f b7 82 c6 05 7a 13 ea 01 01 e8\nRSP: 0018:ffffc90006b43b60 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff888009bb3ef0 RCX: 0000000000000027\nRDX: ffff88807be218c8 RSI: 0000000000000001 RDI: ffff88807be218c0\nRBP: 0000000000069d70 R08: 0000000000000000 R09: ffffc90006b439f0\nR10: ffffc90006b439e8 R11: 0000000000000003 R12: ffff8880029ede84\nR13: 0000000000004e20 R14: ffffffff84356dc0 R15: ffff888009bb3ef0\nFS:  00007f62c10926c0(0000) GS:ffff88807be00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020ccb000 CR3: 000000004628c005 CR4: 0000000000f70ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? refcount_warn_saturate+0xe5/0x110\n ? __warn+0x81/0x130\n ? refcount_warn_saturate+0xe5/0x110\n ? report_bug+0x171/0x1a0\n ? refcount_warn_saturate+0xe5/0x110\n ? handle_bug+0x3c/0x80\n ? exc_invalid_op+0x17/0x70\n ? asm_exc_invalid_op+0x1a/0x20\n ? refcount_warn_saturate+0xe5/0x110\n tcp_twsk_unique+0x186/0x190\n __inet_check_established+0x176/0x2d0\n __inet_hash_connect+0x74/0x7d0\n ? __pfx___inet_check_established+0x10/0x10\n tcp_v4_connect+0x278/0x530\n __inet_stream_connect+0x10f/0x3d0\n inet_stream_connect+0x3a/0x60\n __sys_connect+0xa8/0xd0\n __x64_sys_connect+0x18/0x20\n do_syscall_64+0x83/0x170\n entry_SYSCALL_64_after_hwframe+0x78/0x80\nRIP: 0033:0x7f62c11a885d\nCode: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a3 45 0c 00 f7 d8 64 89 01 48\nRSP: 002b:00007f62c1091e58 EFLAGS: 00000296 ORIG_RAX: 000000000000002a\nRAX: ffffffffffffffda RBX: 0000000020ccb004 RCX: 00007f62c11a885d\nRDX: 0000000000000010 RSI: 0000000020ccb000 RDI: 0000000000000003\nRBP: 00007f62c1091e90 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000296 R12: 00007f62c10926c0\nR13: ffffffffffffff88 R14: 0000000000000000 R15: 00007ffe237885b0\n </TASK>"
    },
    {
        "Modified": "2024-06-27T13:16:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36934",
        "impact": {},
        "last-modified": "2024-06-27T13:16:00",
        "references": [
            "https://git.kernel.org/stable/c/bd502ba81cd1d515deddad7dbc6b812b14b97147",
            "https://git.kernel.org/stable/c/80578ec10335bc15ac35fd1703c22aab34e39fdd",
            "https://git.kernel.org/stable/c/6f0f19b79c085cc891c418b768f26f7004bd51a4",
            "https://git.kernel.org/stable/c/0f560240b4cc25d3de527deb257cdf072c0102a9",
            "https://git.kernel.org/stable/c/06cb37e2ba6441888f24566a997481d4197b4e32",
            "https://git.kernel.org/stable/c/e19478763154674c084defc62ae0d64d79657f91",
            "https://git.kernel.org/stable/c/1518b2b498a0109eb6b15755169d3b6607356b35",
            "https://git.kernel.org/stable/c/8c34096c7fdf272fd4c0c37fe411cd2e3ed0ee9f",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbna: ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul\ninstead of memdup_user."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-06-27T13:15:00",
        "access": {},
        "assigner": "cve@usom.gov.tr",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-1107",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://www.usom.gov.tr/bildirim/tr-24-0809"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in Talya Informatics Travel APPS allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects Travel APPS: before v17.0.68."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26754",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f0ecdfa679189d26aedfe24212d4e69e42c2c861",
            "https://git.kernel.org/stable/c/f8cbd1791900b5d96466eede8e9439a5b9ca4de7",
            "https://git.kernel.org/stable/c/2e534fd15e5c2ca15821c897352cf0e8a3e30dca",
            "https://git.kernel.org/stable/c/a576308800be28f2eaa099e7caad093b97d66e77",
            "https://git.kernel.org/stable/c/3963f16cc7643b461271989b712329520374ad2a",
            "https://git.kernel.org/stable/c/ba6b8b02a3314e62571a540efa96560888c5f03e",
            "https://git.kernel.org/stable/c/5013bd54d283eda5262c9ae3bcc966d01daf8576",
            "https://git.kernel.org/stable/c/136cfaca22567a03bbb3bf53a43d8cb5748b80ec",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngtp: fix use-after-free and null-ptr-deref in gtp_genl_dump_pdp()\n\nThe gtp_net_ops pernet operations structure for the subsystem must be\nregistered before registering the generic netlink family.\n\nSyzkaller hit 'general protection fault in gtp_genl_dump_pdp' bug:\n\ngeneral protection fault, probably for non-canonical address\n0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\nCPU: 1 PID: 5826 Comm: gtp Not tainted 6.8.0-rc3-std-def-alt1 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-alt1 04/01/2014\nRIP: 0010:gtp_genl_dump_pdp+0x1be/0x800 [gtp]\nCode: c6 89 c6 e8 64 e9 86 df 58 45 85 f6 0f 85 4e 04 00 00 e8 c5 ee 86\n      df 48 8b 54 24 18 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80>\n      3c 02 00 0f 85 de 05 00 00 48 8b 44 24 18 4c 8b 30 4c 39 f0 74\nRSP: 0018:ffff888014107220 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000002 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000\nR13: ffff88800fcda588 R14: 0000000000000001 R15: 0000000000000000\nFS:  00007f1be4eb05c0(0000) GS:ffff88806ce80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f1be4e766cf CR3: 000000000c33e000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? show_regs+0x90/0xa0\n ? die_addr+0x50/0xd0\n ? exc_general_protection+0x148/0x220\n ? asm_exc_general_protection+0x22/0x30\n ? gtp_genl_dump_pdp+0x1be/0x800 [gtp]\n ? __alloc_skb+0x1dd/0x350\n ? __pfx___alloc_skb+0x10/0x10\n genl_dumpit+0x11d/0x230\n netlink_dump+0x5b9/0xce0\n ? lockdep_hardirqs_on_prepare+0x253/0x430\n ? __pfx_netlink_dump+0x10/0x10\n ? kasan_save_track+0x10/0x40\n ? __kasan_kmalloc+0x9b/0xa0\n ? genl_start+0x675/0x970\n __netlink_dump_start+0x6fc/0x9f0\n genl_family_rcv_msg_dumpit+0x1bb/0x2d0\n ? __pfx_genl_family_rcv_msg_dumpit+0x10/0x10\n ? genl_op_from_small+0x2a/0x440\n ? cap_capable+0x1d0/0x240\n ? __pfx_genl_start+0x10/0x10\n ? __pfx_genl_dumpit+0x10/0x10\n ? __pfx_genl_done+0x10/0x10\n ? security_capable+0x9d/0xe0"
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26772",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5a6dcc4ad0f7f7fa8e8d127b5526e7c5f2d38a43",
            "https://git.kernel.org/stable/c/6b92b1bc16d691c95b152c6dbf027ad64315668d",
            "https://git.kernel.org/stable/c/ffeb72a80a82aba59a6774b0611f792e0ed3b0b7",
            "https://git.kernel.org/stable/c/8de8305a25bfda607fc13475ebe84b978c96d7ff",
            "https://git.kernel.org/stable/c/d639102f4cbd4cb65d1225dba3b9265596aab586",
            "https://git.kernel.org/stable/c/d3bbe77a76bc52e9d4d0a120f1509be36e25c916",
            "https://git.kernel.org/stable/c/21dbe20589c7f48e9c5d336ce6402bcebfa6d76a",
            "https://git.kernel.org/stable/c/832698373a25950942c04a512daa652c18a9b513",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_find_by_goal()\n\nPlaces the logic for checking if the group's block bitmap is corrupt under\nthe protection of the group lock to avoid allocating blocks from the group\nwith a corrupted block bitmap."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26777",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/84246c35ca34207114055a87552a1c4289c8fd7e",
            "https://git.kernel.org/stable/c/6db07619d173765bd8622d63809cbfe361f04207",
            "https://git.kernel.org/stable/c/cd36da760bd1f78c63c7078407baf01dd724f313",
            "https://git.kernel.org/stable/c/df6e2088c6f4cad539cf67cba2d6764461e798d1",
            "https://git.kernel.org/stable/c/f329523f6a65c3bbce913ad35473d83a319d5d99",
            "https://git.kernel.org/stable/c/99f1abc34a6dde248d2219d64aa493c76bbdd9eb",
            "https://git.kernel.org/stable/c/1d11dd3ea5d039c7da089f309f39c4cd363b924b",
            "https://git.kernel.org/stable/c/e421946be7d9bf545147bea8419ef8239cb7ca52",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: sis: Error out if pixclock equals zero\n\nThe userspace program could pass any values to the driver through\nioctl() interface. If the driver doesn't check the value of pixclock,\nit may cause divide-by-zero error.\n\nIn sisfb_check_var(), var->pixclock is used as a divisor to caculate\ndrate before it is checked against zero. Fix this by checking it\nat the beginning.\n\nThis is similar to CVE-2022-3061 in i740fb which was fixed by\ncommit 15cf0b8."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26779",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/76fad1174a0cae6fc857b9f88b261a2e4f07d587",
            "https://git.kernel.org/stable/c/85720b69aef177318f4a18efbcc4302228a340e5",
            "https://git.kernel.org/stable/c/5ffab99e070b9f8ae0cf60c3c3602b84eee818dd",
            "https://git.kernel.org/stable/c/88c18fd06608b3adee547102505d715f21075c9d",
            "https://git.kernel.org/stable/c/eb39bb548bf974acad7bd6780fe11f9e6652d696",
            "https://git.kernel.org/stable/c/54b79d8786964e2f840e8a2ec4a9f9a50f3d4954",
            "https://git.kernel.org/stable/c/281280276b70c822f55ce15b661f6d1d3228aaa9",
            "https://git.kernel.org/stable/c/bcbc84af1183c8cf3d1ca9b78540c2185cd85e7f",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix race condition on enabling fast-xmit\n\nfast-xmit must only be enabled after the sta has been uploaded to the driver,\notherwise it could end up passing the not-yet-uploaded sta via drv_tx calls\nto the driver, leading to potential crashes because of uninitialized drv_priv\ndata.\nAdd a missing sta->uploaded check and re-check fast xmit after inserting a sta."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26722",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3dd2d99e2352903d0e0b8769e6c9b8293c7454b2",
            "https://git.kernel.org/stable/c/422d5243b9f780abd3d39da2b746e3915677b07d",
            "https://git.kernel.org/stable/c/4a98bc739d0753a5810ce5630943cd7614c7717e",
            "https://git.kernel.org/stable/c/d14b8e2005f36319df9412d42037416d64827f6b",
            "https://git.kernel.org/stable/c/1f0d7792e9023e8658e901b7b76a555f6aa052ec",
            "https://git.kernel.org/stable/c/050ad2ca0ac169dd9e552075d2c6af1bbb46534c",
            "https://git.kernel.org/stable/c/ed5b8b735369b40d6c1f8ef3e62d369f74b4c491",
            "https://git.kernel.org/stable/c/6ef5d5b92f7117b324efaac72b3db27ae8bb3082",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: rt5645: Fix deadlock in rt5645_jack_detect_work()\n\nThere is a path in rt5645_jack_detect_work(), where rt5645->jd_mutex\nis left locked forever. That may lead to deadlock\nwhen rt5645_jack_detect_work() is called for the second time.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-04T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26801",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e0b278650f07acf2e0932149183458468a731c03",
            "https://git.kernel.org/stable/c/98fb98fd37e42fd4ce13ff657ea64503e24b6090",
            "https://git.kernel.org/stable/c/6dd0a9dfa99f8990a08eb8fdd8e79bee31c7d8e2",
            "https://git.kernel.org/stable/c/da4569d450b193e39e87119fd316c0291b585d14",
            "https://git.kernel.org/stable/c/45085686b9559bfbe3a4f41d3d695a520668f5e1",
            "https://git.kernel.org/stable/c/2ab9a19d896f5a0dd386e1f001c5309bc35f433b",
            "https://git.kernel.org/stable/c/dd594cdc24f2e48dab441732e6dfcafd6b0711d1",
            "https://git.kernel.org/stable/c/2449007d3f73b2842c9734f45f0aadb522daf592",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Avoid potential use-after-free in hci_error_reset\n\nWhile handling the HCI_EV_HARDWARE_ERROR event, if the underlying\nBT controller is not responding, the GPIO reset mechanism would\nfree the hci_dev and lead to a use-after-free in hci_error_reset.\n\nHere's the call trace observed on a ChromeOS device with Intel AX201:\n   queue_work_on+0x3e/0x6c\n   __hci_cmd_sync_sk+0x2ee/0x4c0 [bluetooth <HASH:3b4a6>]\n   ? init_wait_entry+0x31/0x31\n   __hci_cmd_sync+0x16/0x20 [bluetooth <HASH:3b4a 6>]\n   hci_error_reset+0x4f/0xa4 [bluetooth <HASH:3b4a 6>]\n   process_one_work+0x1d8/0x33f\n   worker_thread+0x21b/0x373\n   kthread+0x13a/0x152\n   ? pr_cont_work+0x54/0x54\n   ? kthread_blkcg+0x31/0x31\n    ret_from_fork+0x1f/0x30\n\nThis patch holds the reference count on the hci_dev while processing\na HCI_EV_HARDWARE_ERROR event to avoid potential crash."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-02T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26671",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9525b38180e2753f0daa1a522b7767a2aa969676",
            "https://git.kernel.org/stable/c/ecd7744a1446eb02ccc63e493e2eb6ede4ef1e10",
            "https://git.kernel.org/stable/c/7610ba1319253225a9ba8a9d28d472fc883b4e2f",
            "https://git.kernel.org/stable/c/89e0e66682e1538aeeaa3109503473663cd24c8b",
            "https://git.kernel.org/stable/c/1d9c777d3e70bdc57dddf7a14a80059d65919e56",
            "https://git.kernel.org/stable/c/6d8b01624a2540336a32be91f25187a433af53a0",
            "https://git.kernel.org/stable/c/f1bc0d8163f8ee84a8d5affdf624cfad657df1d2",
            "https://git.kernel.org/stable/c/5266caaf5660529e3da53004b8b7174cab6374ed",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: fix IO hang from sbitmap wakeup race\n\nIn blk_mq_mark_tag_wait(), __add_wait_queue() may be re-ordered\nwith the following blk_mq_get_driver_tag() in case of getting driver\ntag failure.\n\nThen in __sbitmap_queue_wake_up(), waitqueue_active() may not observe\nthe added waiter in blk_mq_mark_tag_wait() and wake up nothing, meantime\nblk_mq_mark_tag_wait() can't get driver tag successfully.\n\nThis issue can be reproduced by running the following test in loop, and\nfio hang can be observed in < 30min when running it on my test VM\nin laptop.\n\n\tmodprobe -r scsi_debug\n\tmodprobe scsi_debug delay=0 dev_size_mb=4096 max_queue=1 host_max_queue=1 submit_queues=4\n\tdev=`ls -d /sys/bus/pseudo/drivers/scsi_debug/adapter*/host*/target*/*/block/* | head -1 | xargs basename`\n\tfio --filename=/dev/\"$dev\" --direct=1 --rw=randrw --bs=4k --iodepth=1 \\\n       \t\t--runtime=100 --numjobs=40 --time_based --name=test \\\n        \t--ioengine=libaio\n\nFix the issue by adding one explicit barrier in blk_mq_mark_tag_wait(), which\nis just fine in case of running out of tag."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-02T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26675",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4fdb14ba89faff6e6969a4dffdc8e54235d6e5ed",
            "https://git.kernel.org/stable/c/56fae81633ccee307cfcb032f706bf1863a56982",
            "https://git.kernel.org/stable/c/b06e067e93fa4b98acfd3a9f38a398ab91bbc58b",
            "https://git.kernel.org/stable/c/58fbe665b097bf7b3144da7e7b91fb27aa8d0ae3",
            "https://git.kernel.org/stable/c/4e2c4846b2507f6dfc9bea72b7567c2693a82a16",
            "https://git.kernel.org/stable/c/7e5ef49670766c9742ffcd9cead7cdb018268719",
            "https://git.kernel.org/stable/c/210d938f963dddc543b07e66a79b7d8d4bd00bd8",
            "https://git.kernel.org/stable/c/cb88cb53badb8aeb3955ad6ce80b07b598e310b8",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nppp_async: limit MRU to 64K\n\nsyzbot triggered a warning [1] in __alloc_pages():\n\nWARN_ON_ONCE_GFP(order > MAX_PAGE_ORDER, gfp)\n\nWillem fixed a similar issue in commit c0a2a1b0d631 (\"ppp: limit MRU to 64K\")\n\nAdopt the same sanity check for ppp_async_ioctl(PPPIOCSMRU)\n\n[1]:\n\n WARNING: CPU: 1 PID: 11 at mm/page_alloc.c:4543 __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\nModules linked in:\nCPU: 1 PID: 11 Comm: kworker/u4:0 Not tainted 6.8.0-rc2-syzkaller-g41bccc98fb79 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\nWorkqueue: events_unbound flush_to_ldisc\npstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n lr : __alloc_pages+0xc8/0x698 mm/page_alloc.c:4537\nsp : ffff800093967580\nx29: ffff800093967660 x28: ffff8000939675a0 x27: dfff800000000000\nx26: ffff70001272ceb4 x25: 0000000000000000 x24: ffff8000939675c0\nx23: 0000000000000000 x22: 0000000000060820 x21: 1ffff0001272ceb8\nx20: ffff8000939675e0 x19: 0000000000000010 x18: ffff800093967120\nx17: ffff800083bded5c x16: ffff80008ac97500 x15: 0000000000000005\nx14: 1ffff0001272cebc x13: 0000000000000000 x12: 0000000000000000\nx11: ffff70001272cec1 x10: 1ffff0001272cec0 x9 : 0000000000000001\nx8 : ffff800091c91000 x7 : 0000000000000000 x6 : 000000000000003f\nx5 : 00000000ffffffff x4 : 0000000000000000 x3 : 0000000000000020\nx2 : 0000000000000008 x1 : 0000000000000000 x0 : ffff8000939675e0\nCall trace:\n  __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n  __alloc_pages_node include/linux/gfp.h:238 [inline]\n  alloc_pages_node include/linux/gfp.h:261 [inline]\n  __kmalloc_large_node+0xbc/0x1fc mm/slub.c:3926\n  __do_kmalloc_node mm/slub.c:3969 [inline]\n  __kmalloc_node_track_caller+0x418/0x620 mm/slub.c:4001\n  kmalloc_reserve+0x17c/0x23c net/core/skbuff.c:590\n  __alloc_skb+0x1c8/0x3d8 net/core/skbuff.c:651\n  __netdev_alloc_skb+0xb8/0x3e8 net/core/skbuff.c:715\n  netdev_alloc_skb include/linux/skbuff.h:3235 [inline]\n  dev_alloc_skb include/linux/skbuff.h:3248 [inline]\n  ppp_async_input drivers/net/ppp/ppp_async.c:863 [inline]\n  ppp_asynctty_receive+0x588/0x186c drivers/net/ppp/ppp_async.c:341\n  tty_ldisc_receive_buf+0x12c/0x15c drivers/tty/tty_buffer.c:390\n  tty_port_default_receive_buf+0x74/0xac drivers/tty/tty_port.c:37\n  receive_buf drivers/tty/tty_buffer.c:444 [inline]\n  flush_to_ldisc+0x284/0x6e4 drivers/tty/tty_buffer.c:494\n  process_one_work+0x694/0x1204 kernel/workqueue.c:2633\n  process_scheduled_works kernel/workqueue.c:2706 [inline]\n  worker_thread+0x938/0xef4 kernel/workqueue.c:2787\n  kthread+0x288/0x310 kernel/kthread.c:388\n  ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:860"
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26696",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/228742b2ddfb99dfd71e5a307e6088ab6836272e",
            "https://git.kernel.org/stable/c/862ee4422c38be5c249844a684b00d0dbe9d1e46",
            "https://git.kernel.org/stable/c/98a4026b22ff440c7f47056481bcbbe442f607d6",
            "https://git.kernel.org/stable/c/7e9b622bd0748cc104d66535b76d9b3535f9dc0f",
            "https://git.kernel.org/stable/c/8494ba2c9ea00a54d5b50e69b22c55a8958bce32",
            "https://git.kernel.org/stable/c/ea5ddbc11613b55e5128c85f57b08f907abd9b28",
            "https://git.kernel.org/stable/c/e38585401d464578d30f5868ff4ca54475c34f7d",
            "https://git.kernel.org/stable/c/38296afe3c6ee07319e01bb249aa4bb47c07b534",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix hang in nilfs_lookup_dirty_data_buffers()\n\nSyzbot reported a hang issue in migrate_pages_batch() called by mbind()\nand nilfs_lookup_dirty_data_buffers() called in the log writer of nilfs2.\n\nWhile migrate_pages_batch() locks a folio and waits for the writeback to\ncomplete, the log writer thread that should bring the writeback to\ncompletion picks up the folio being written back in\nnilfs_lookup_dirty_data_buffers() that it calls for subsequent log\ncreation and was trying to lock the folio.  Thus causing a deadlock.\n\nIn the first place, it is unexpected that folios/pages in the middle of\nwriteback will be updated and become dirty.  Nilfs2 adds a checksum to\nverify the validity of the log being written and uses it for recovery at\nmount, so data changes during writeback are suppressed.  Since this is\nbroken, an unclean shutdown could potentially cause recovery to fail.\n\nInvestigation revealed that the root cause is that the wait for writeback\ncompletion in nilfs_page_mkwrite() is conditional, and if the backing\ndevice does not require stable writes, data may be modified without\nwaiting.\n\nFix these issues by making nilfs_page_mkwrite() wait for writeback to\nfinish regardless of the stable write requirement of the backing device."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26773",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/21f8cfe79f776287459343e9cfa6055af61328ea",
            "https://git.kernel.org/stable/c/260fc96283c0f594de18a1b045faf6d8fb42874d",
            "https://git.kernel.org/stable/c/927794a02169778c9c2e7b25c768ab3ea8c1dc03",
            "https://git.kernel.org/stable/c/4c21fa60a6f4606f6214a38f50612b17b2f738f5",
            "https://git.kernel.org/stable/c/f97e75fa4e12b0aa0224e83fcbda8853ac2adf36",
            "https://git.kernel.org/stable/c/0184747b552d6b5a14db3b7fcc3b792ce64dedd1",
            "https://git.kernel.org/stable/c/a2576ae9a35c078e488f2c573e9e6821d651fbbe",
            "https://git.kernel.org/stable/c/4530b3660d396a646aad91a787b6ab37cf604b53",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_try_best_found()\n\nDetermine if the group block bitmap is corrupted before using ac_b_ex in\next4_mb_try_best_found() to avoid allocating blocks from a group with a\ncorrupted block bitmap in the following concurrency and making the\nsituation worse.\n\next4_mb_regular_allocator\n  ext4_lock_group(sb, group)\n  ext4_mb_good_group\n   // check if the group bbitmap is corrupted\n  ext4_mb_complex_scan_group\n   // Scan group gets ac_b_ex but doesn't use it\n  ext4_unlock_group(sb, group)\n                           ext4_mark_group_bitmap_corrupted(group)\n                           // The block bitmap was corrupted during\n                           // the group unlock gap.\n  ext4_mb_try_best_found\n    ext4_lock_group(ac->ac_sb, group)\n    ext4_mb_use_best_found\n      mb_mark_used\n      // Allocating blocks in block bitmap corrupted group"
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-04-04T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26791",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/11d7a2e429c02d51e2dc90713823ea8b8d3d3a84",
            "https://git.kernel.org/stable/c/c6652e20d7d783d060fe5f987eac7b5cabe31311",
            "https://git.kernel.org/stable/c/2886fe308a83968dde252302884a1e63351cf16d",
            "https://git.kernel.org/stable/c/ab2d68655d0f04650bef09fee948ff80597c5fb9",
            "https://git.kernel.org/stable/c/f590040ce2b712177306b03c2a63b16f7d48d3c8",
            "https://git.kernel.org/stable/c/b1690ced4d2d8b28868811fb81cd33eee5aefee1",
            "https://git.kernel.org/stable/c/343eecb4ff49a7b1cc1dfe86958a805cf2341cfb",
            "https://git.kernel.org/stable/c/9845664b9ee47ce7ee7ea93caf47d39a9d4552c4",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: dev-replace: properly validate device names\n\nThere's a syzbot report that device name buffers passed to device\nreplace are not properly checked for string termination which could lead\nto a read out of bounds in getname_kernel().\n\nAdd a helper that validates both source and target device name buffers.\nFor devid as the source initialize the buffer to empty string in case\nsomething tries to read it later.\n\nThis was originally analyzed and fixed in a different way by Edward Adam\nDavis (see links)."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-06-22T05:15:00",
        "access": {},
        "assigner": "report@snyk.io",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21519",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://security.snyk.io/vuln/SNYK-PHP-OPENCARTOPENCART-7266579",
            "https://github.com/opencart/opencart/blob/4.0.2.3/upload/admin/controller/tool/upload.php%23L353"
        ],
        "summary": "This affects versions of the package opencart/opencart from 4.0.0.0. An Arbitrary File Creation issue was identified via the database restoration functionality. By injecting PHP code into the database, an attacker with admin privileges can create a backup file with an arbitrary filename (including the extension), within /system/storage/backup.\r\r**Note:**\r\rIt is less likely for the created file to be available within the web root, as part of the security recommendations for the application suggest moving the storage path outside of the web root."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-06-21T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-835",
        "id": "CVE-2024-36288",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/57ff6c0a175930856213b2aa39f8c845a53e5b1c",
            "https://git.kernel.org/stable/c/6ed45d20d30005bed94c8c527ce51d5ad8121018",
            "https://git.kernel.org/stable/c/4cefcd0af7458bdeff56a9d8dfc6868ce23d128a",
            "https://git.kernel.org/stable/c/b4878ea99f2b40ef1925720b1b4ca7f4af1ba785",
            "https://git.kernel.org/stable/c/f9977e4e0cd98a5f06f2492b4f3547db58deabf5",
            "https://git.kernel.org/stable/c/af628d43a822b78ad8d4a58d8259f8bf8bc71115",
            "https://git.kernel.org/stable/c/0a1cb0c6102bb4fd310243588d39461da49497ad",
            "https://git.kernel.org/stable/c/4a77c3dead97339478c7422eb07bf4bf63577008",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix loop termination condition in gss_free_in_token_pages()\n\nThe in_token->pages[] array is not NULL terminated. This results in\nthe following KASAN splat:\n\n  KASAN: maybe wild-memory-access in range [0x04a2013400000008-0x04a201340000000f]"
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31076",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a40209d355afe4ed6d533507838c9e5cd70a76d8",
            "https://git.kernel.org/stable/c/f5f4675960609d8c5ee95f027fbf6ce380f98372",
            "https://git.kernel.org/stable/c/6752dfcfff3ac3e16625ebd3f0ad9630900e7e76",
            "https://git.kernel.org/stable/c/9eeda3e0071a329af1eba15f4e57dc39576bb420",
            "https://git.kernel.org/stable/c/e9c96d01d520498b169ce734a8ad1142bef86a30",
            "https://git.kernel.org/stable/c/59f86a2908380d09cdc726461c0fbb8d8579c99f",
            "https://git.kernel.org/stable/c/ebfb16fc057a016abb46a9720a54abf0d4f6abe1",
            "https://git.kernel.org/stable/c/a6c11c0a5235fb144a65e0cb2ffd360ddc1f6c32",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngenirq/cpuhotplug, x86/vector: Prevent vector leak during CPU offline\n\nThe absence of IRQD_MOVE_PCNTXT prevents immediate effectiveness of\ninterrupt affinity reconfiguration via procfs. Instead, the change is\ndeferred until the next instance of the interrupt being triggered on the\noriginal CPU.\n\nWhen the interrupt next triggers on the original CPU, the new affinity is\nenforced within __irq_move_irq(). A vector is allocated from the new CPU,\nbut the old vector on the original CPU remains and is not immediately\nreclaimed. Instead, apicd->move_in_progress is flagged, and the reclaiming\nprocess is delayed until the next trigger of the interrupt on the new CPU.\n\nUpon the subsequent triggering of the interrupt on the new CPU,\nirq_complete_move() adds a task to the old CPU's vector_cleanup list if it\nremains online. Subsequently, the timer on the old CPU iterates over its\nvector_cleanup list, reclaiming old vectors.\n\nHowever, a rare scenario arises if the old CPU is outgoing before the\ninterrupt triggers again on the new CPU.\n\nIn that case irq_force_complete_move() is not invoked on the outgoing CPU\nto reclaim the old apicd->prev_vector because the interrupt isn't currently\naffine to the outgoing CPU, and irq_needs_fixup() returns false. Even\nthough __vector_schedule_cleanup() is later called on the new CPU, it\ndoesn't reclaim apicd->prev_vector; instead, it simply resets both\napicd->move_in_progress and apicd->prev_vector to 0.\n\nAs a result, the vector remains unreclaimed in vector_matrix, leading to a\nCPU vector leak.\n\nTo address this issue, move the invocation of irq_force_complete_move()\nbefore the irq_needs_fixup() call to reclaim apicd->prev_vector, if the\ninterrupt is currently or used to be affine to the outgoing CPU.\n\nAdditionally, reclaim the vector in __vector_schedule_cleanup() as well,\nfollowing a warning message, although theoretically it should never see\napicd->move_in_progress with apicd->prev_cpu pointing to an offline CPU."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-06-11T15:16:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-35628",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/photo-gallery/wordpress-photo-gallery-by-10web-plugin-1-8-23-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in Photo Gallery Team Photo Gallery by 10Web.This issue affects Photo Gallery by 10Web: from n/a through 1.8.25."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36883",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3cdc34d76c4f777579e28ad373979d36c030cfd3",
            "https://git.kernel.org/stable/c/7b0e64583eab8c1d896b47e5dd0bf2e7d86ec41f",
            "https://git.kernel.org/stable/c/0c3248bc708a7797be573214065cf908ff1f54c7",
            "https://git.kernel.org/stable/c/9518b79bfd2fbf99fa9b7e8e36bcb1825e7ba030",
            "https://git.kernel.org/stable/c/2d60ff5874aefd006717ca5e22ac1e25eac29c42",
            "https://git.kernel.org/stable/c/b6dbfd5bcc267a95a0bf1bf96af46243f96ec6cd",
            "https://git.kernel.org/stable/c/f4f94587e1bf87cb40ec33955a9d90148dd026ab",
            "https://git.kernel.org/stable/c/a26ff37e624d12e28077e5b24d2b264f62764ad6",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00019.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix out-of-bounds access in ops_init\n\nnet_alloc_generic is called by net_alloc, which is called without any\nlocking. It reads max_gen_ptrs, which is changed under pernet_ops_rwsem. It\nis read twice, first to allocate an array, then to set s.len, which is\nlater used to limit the bounds of the array access.\n\nIt is possible that the array is allocated and another thread is\nregistering a new pernet ops, increments max_gen_ptrs, which is then used\nto set s.len with a larger than allocated length for the variable array.\n\nFix it by reading max_gen_ptrs only once in net_alloc_generic. If\nmax_gen_ptrs is later incremented, it will be caught in net_assign_generic."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-29T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36014",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a1f95aede6285dba6dd036d907196f35ae3a11ea",
            "https://git.kernel.org/stable/c/b77620730f614059db2470e8ebab3e725280fc6d",
            "https://git.kernel.org/stable/c/93f76ec1eddce60dbb5885cbc0d7df54adee4639",
            "https://git.kernel.org/stable/c/e4b52d49383306ef73fd1bd9102538beebb0fe07",
            "https://git.kernel.org/stable/c/335cc45ef2b81b68be63c698b4f867a530bdf7a5",
            "https://git.kernel.org/stable/c/b6cc5dd06336ed8bb3a7a1fc5aaf7d5e88bc0818",
            "https://git.kernel.org/stable/c/565d9ad7e5a18eb69ed8b66a9e9bb3f45346520c",
            "https://git.kernel.org/stable/c/a5fa5b40a278a3ca978fed64707bd27614adb1eb",
            "https://git.kernel.org/stable/c/3e54d4e95120641216dfe91a6c49f116a9f68490",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/arm/malidp: fix a possible null pointer dereference\n\nIn malidp_mw_connector_reset, new memory is allocated with kzalloc, but\nno check is performed. In order to prevent null pointer dereferencing,\nensure that mw_state is checked before calling\n__drm_atomic_helper_connector_reset."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35955",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33",
            "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412",
            "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d",
            "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e",
            "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808",
            "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f",
            "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0",
            "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-835",
        "id": "CVE-2024-35982",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/04720ea2e6c64459a90ca28570ea78335eccd924",
            "https://git.kernel.org/stable/c/b3ddf6904073990492454b1dd1c10a24be8c74c6",
            "https://git.kernel.org/stable/c/70a8be9dc2fb65d67f8c1e0c88c587e08e2e575d",
            "https://git.kernel.org/stable/c/87b6af1a7683e021710c08fc0551fc078346032f",
            "https://git.kernel.org/stable/c/3fe79b2c83461edbbf86ed8a6f3924820ff89259",
            "https://git.kernel.org/stable/c/4ca2a5fb54ea2cc43edea614207fcede562d91c2",
            "https://git.kernel.org/stable/c/ca54e2671548616ad34885f90d4f26f7adb088f0",
            "https://git.kernel.org/stable/c/b1f532a3b1e6d2e5559c7ace49322922637a28aa",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-19T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52699",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/13b33feb2ebddc2b1aa607f553566b18a4af1d76",
            "https://git.kernel.org/stable/c/1b4fe801b5bedec2b622ddb18e5c9bf26c63d79f",
            "https://git.kernel.org/stable/c/674c1c4229e743070e09db63a23442950ff000d1",
            "https://git.kernel.org/stable/c/fd203d2c671bdee9ab77090ff394d3b71b627927",
            "https://git.kernel.org/stable/c/53cb1e52c9db618c08335984d1ca80db220ccf09",
            "https://git.kernel.org/stable/c/89e8524135a3902e7563a5a59b7b5ec1bf4904ac",
            "https://git.kernel.org/stable/c/a69224223746ab96d43e5db9d22d136827b7e2d3",
            "https://git.kernel.org/stable/c/f123dc86388cb669c3d6322702dc441abc35c31e",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysv: don't call sb_bread() with pointers_lock held\n\nsyzbot is reporting sleep in atomic context in SysV filesystem [1], for\nsb_bread() is called with rw_spinlock held.\n\nA \"write_lock(&pointers_lock) => read_lock(&pointers_lock) deadlock\" bug\nand a \"sb_bread() with write_lock(&pointers_lock)\" bug were introduced by\n\"Replace BKL for chain locking with sysvfs-private rwlock\" in Linux 2.5.12.\n\nThen, \"[PATCH] err1-40: sysvfs locking fix\" in Linux 2.6.8 fixed the\nformer bug by moving pointers_lock lock to the callers, but instead\nintroduced a \"sb_bread() with read_lock(&pointers_lock)\" bug (which made\nthis problem easier to hit).\n\nAl Viro suggested that why not to do like get_branch()/get_block()/\nfind_shared() in Minix filesystem does. And doing like that is almost a\nrevert of \"[PATCH] err1-40: sysvfs locking fix\" except that get_branch()\n from with find_shared() is called without write_lock(&pointers_lock)."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-19T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35925",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6a55dab4ac956deb23690eedd74e70b892a378e7",
            "https://git.kernel.org/stable/c/edd073c78d2bf48c5b8bf435bbc3d61d6e7c6c14",
            "https://git.kernel.org/stable/c/b0cb5564c3e8e0ee0a2d28c86fa7f02e82d64c3c",
            "https://git.kernel.org/stable/c/21e7d72d0cfcbae6042d498ea2e6f395311767f8",
            "https://git.kernel.org/stable/c/512a01da7134bac8f8b373506011e8aaa3283854",
            "https://git.kernel.org/stable/c/5f7fd6aa4c4877d77133ea86c14cf256f390b2fe",
            "https://git.kernel.org/stable/c/98ddf2604ade2d954bf5ec193600d5274a43fd68",
            "https://git.kernel.org/stable/c/93f52fbeaf4b676b21acfe42a5152620e6770d02",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: prevent division by zero in blk_rq_stat_sum()\n\nThe expression dst->nr_samples + src->nr_samples may\nhave zero value on overflow. It is necessary to add\na check to avoid division by zero.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-19T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35933",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ec2049fb2b8be3e108fe2ef1f1040f91e72c9990",
            "https://git.kernel.org/stable/c/68a69bb2ecafaacdb998a87783068fb51736f43b",
            "https://git.kernel.org/stable/c/86e9b47e8a75c74b1bd83a479979b425c5dc8bd9",
            "https://git.kernel.org/stable/c/006936ecb4edfc3102464044f75858c714e34d28",
            "https://git.kernel.org/stable/c/b19fe5eea619d54eea59bb8a37c0f8d00ef0e912",
            "https://git.kernel.org/stable/c/ffdca0a62abaf8c41d8d9ea132000fd808de329b",
            "https://git.kernel.org/stable/c/22d3053ef05f0b5045e45bd91e7473846261d65e",
            "https://git.kernel.org/stable/c/b79e040910101b020931ba0c9a6b77e81ab7f645",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btintel: Fix null ptr deref in btintel_read_version\n\nIf hci_cmd_sync_complete() is triggered and skb is NULL, then\nhdev->req_skb is NULL, which will cause this issue."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-17T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35809",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9a87375bb586515c0af63d5dcdcd58ec4acf20a6",
            "https://git.kernel.org/stable/c/47d8aafcfe313511a98f165a54d0adceb34e54b1",
            "https://git.kernel.org/stable/c/bbe068b24409ef740657215605284fc7cdddd491",
            "https://git.kernel.org/stable/c/7cc94dd36e48879e76ae7a8daea4ff322b7d9674",
            "https://git.kernel.org/stable/c/900b81caf00c89417172afe0e7e49ac4eb110f4b",
            "https://git.kernel.org/stable/c/d86ad8c3e152349454b82f37007ff6ba45f26989",
            "https://git.kernel.org/stable/c/d534198311c345e4b062c4b88bb609efb8bd91d5",
            "https://git.kernel.org/stable/c/6347348c6aba52dda0b33296684cbb627bdc6970",
            "https://git.kernel.org/stable/c/9d5286d4e7f68beab450deddbb6a32edd5ecf4bf",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/PM: Drain runtime-idle callbacks before driver removal\n\nA race condition between the .runtime_idle() callback and the .remove()\ncallback in the rtsx_pcr PCI driver leads to a kernel crash due to an\nunhandled page fault [1].\n\nThe problem is that rtsx_pci_runtime_idle() is not expected to be running\nafter pm_runtime_get_sync() has been called, but the latter doesn't really\nguarantee that.  It only guarantees that the suspend and resume callbacks\nwill not be running when it returns.\n\nHowever, if a .runtime_idle() callback is already running when\npm_runtime_get_sync() is called, the latter will notice that the runtime PM\nstatus of the device is RPM_ACTIVE and it will return right away without\nwaiting for the former to complete.  In fact, it cannot wait for\n.runtime_idle() to complete because it may be called from that callback (it\narguably does not make much sense to do that, but it is not strictly\nprohibited).\n\nThus in general, whoever is providing a .runtime_idle() callback needs\nto protect it from running in parallel with whatever code runs after\npm_runtime_get_sync().  [Note that .runtime_idle() will not start after\npm_runtime_get_sync() has returned, but it may continue running then if it\nhas started earlier.]\n\nOne way to address that race condition is to call pm_runtime_barrier()\nafter pm_runtime_get_sync() (not before it, because a nonzero value of the\nruntime PM usage counter is necessary to prevent runtime PM callbacks from\nbeing invoked) to wait for the .runtime_idle() callback to complete should\nit be running at that point.  A suitable place for doing that is in\npci_device_remove() which calls pm_runtime_get_sync() before removing the\ndriver, so it may as well call pm_runtime_barrier() subsequently, which\nwill prevent the race in question from occurring, not just in the rtsx_pcr\ndriver, but in any PCI drivers providing .runtime_idle() callbacks."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-17T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35823",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fc7dfe3d123f00e720be80b920da287810a1f37d",
            "https://git.kernel.org/stable/c/ff7342090c1e8c5a37015c89822a68b275b46f8a",
            "https://git.kernel.org/stable/c/1ce408f75ccf1e25b3fddef75cca878b55f2ac90",
            "https://git.kernel.org/stable/c/0190d19d7651c08abc187dac3819c61b726e7e3f",
            "https://git.kernel.org/stable/c/994a1e583c0c206c8ca7d03334a65b79f4d8bc51",
            "https://git.kernel.org/stable/c/7529cbd8b5f6697b369803fe1533612c039cabda",
            "https://git.kernel.org/stable/c/2933b1e4757a0a5c689cf48d80b1a2a85f237ff1",
            "https://git.kernel.org/stable/c/1581dafaf0d34bc9c428a794a22110d7046d186d",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt: fix unicode buffer corruption when deleting characters\n\nThis is the same issue that was fixed for the VGA text buffer in commit\n39cdb68c64d8 (\"vt: fix memory overlapping when deleting chars in the\nbuffer\"). The cure is also the same i.e. replace memcpy() with memmove()\ndue to the overlaping buffers."
    },
    {
        "Modified": "2024-06-27T13:15:00",
        "Published": "2024-05-17T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52670",
        "impact": {},
        "last-modified": "2024-06-27T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/229ce47cbfdc7d3a9415eb676abbfb77d676cb08",
            "https://git.kernel.org/stable/c/dd50fe18c234bd5ff22f658f4d414e8fa8cd6a5d",
            "https://git.kernel.org/stable/c/69ca89d80f2c8a1f5af429b955637beea7eead30",
            "https://git.kernel.org/stable/c/2d27a7b19cb354c6d04bcdc9239e261ff29858d6",
            "https://git.kernel.org/stable/c/f4bb1d5daf77b1a95a43277268adf0d1430c2346",
            "https://git.kernel.org/stable/c/4e6cef3fae5c164968118a13f3fe293700adc81a",
            "https://git.kernel.org/stable/c/9a416d624e5fb7246ea97c11fbfea7e0e27abf43",
            "https://git.kernel.org/stable/c/d5362c37e1f8a40096452fc201c30e705750e687",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nrpmsg: virtio: Free driver_override when rpmsg_remove()\n\nFree driver_override when rpmsg_remove(), otherwise\nthe following memory leak will occur:\n\nunreferenced object 0xffff0000d55d7080 (size 128):\n  comm \"kworker/u8:2\", pid 56, jiffies 4294893188 (age 214.272s)\n  hex dump (first 32 bytes):\n    72 70 6d 73 67 5f 6e 73 00 00 00 00 00 00 00 00  rpmsg_ns........\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<000000009c94c9c1>] __kmem_cache_alloc_node+0x1f8/0x320\n    [<000000002300d89b>] __kmalloc_node_track_caller+0x44/0x70\n    [<00000000228a60c3>] kstrndup+0x4c/0x90\n    [<0000000077158695>] driver_set_override+0xd0/0x164\n    [<000000003e9c4ea5>] rpmsg_register_device_override+0x98/0x170\n    [<000000001c0c89a8>] rpmsg_ns_register_device+0x24/0x30\n    [<000000008bbf8fa2>] rpmsg_probe+0x2e0/0x3ec\n    [<00000000e65a68df>] virtio_dev_probe+0x1c0/0x280\n    [<00000000443331cc>] really_probe+0xbc/0x2dc\n    [<00000000391064b1>] __driver_probe_device+0x78/0xe0\n    [<00000000a41c9a5b>] driver_probe_device+0xd8/0x160\n    [<000000009c3bd5df>] __device_attach_driver+0xb8/0x140\n    [<0000000043cd7614>] bus_for_each_drv+0x7c/0xd4\n    [<000000003b929a36>] __device_attach+0x9c/0x19c\n    [<00000000a94e0ba8>] device_initial_probe+0x14/0x20\n    [<000000003c999637>] bus_probe_device+0xa0/0xac"
    }
]