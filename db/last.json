[
    {
        "Modified": "2024-07-29T17:57:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 9.3,
        "cvss-time": "2024-07-29T17:57:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2021-1675",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-07-29T17:57:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1675",
            "https://www.kb.cert.org/vuls/id/383432",
            "http://packetstormsecurity.com/files/163351/PrintNightmare-Windows-Spooler-Service-Remote-Code-Execution.html",
            "http://packetstormsecurity.com/files/163349/Microsoft-PrintNightmare-Proof-Of-Concept.html",
            "http://packetstormsecurity.com/files/167261/Print-Spooler-Remote-DLL-Injection.html"
        ],
        "summary": "Windows Print Spooler Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:35:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T17:35:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-31201",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:35:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31201"
        ],
        "summary": "Microsoft Enhanced Cryptographic Provider Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:34:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 2.1,
        "cvss-time": "2024-07-29T17:34:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-31955",
        "impact": {
            "availability": "NONE",
            "confidentiality": "PARTIAL",
            "integrity": "NONE"
        },
        "last-modified": "2024-07-29T17:34:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31955"
        ],
        "summary": "Windows Kernel Information Disclosure Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:33:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 9.3,
        "cvss-time": "2024-07-29T17:33:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-191",
        "id": "CVE-2021-31956",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-07-29T17:33:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31956"
        ],
        "summary": "Windows NTFS Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:32:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T17:32:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-33739",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:32:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-33739"
        ],
        "summary": "Microsoft DWM Core Library Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42084",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c329760749b5419769e57cb2be80955d2805f9c9",
            "https://git.kernel.org/stable/c/f531d4bc6c5588d713359e42ed65e46816d841d8",
            "https://git.kernel.org/stable/c/84bf6b64a1a0dfc6de7e1b1c776d58d608e7865a",
            "https://git.kernel.org/stable/c/dbb226d81cd02cee140139c2369791e6f61f2007",
            "https://git.kernel.org/stable/c/5ae6af68410bdad6181ec82104bb9985a7a6a0fa",
            "https://git.kernel.org/stable/c/836359247b0403e0634bfbc83e5bb8063fad287a",
            "https://git.kernel.org/stable/c/930a4c369f74da26816eaaa71b5888d29b759c27",
            "https://git.kernel.org/stable/c/4b8e88e563b5f666446d002ad0dc1e6e8e7102b0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nftruncate: pass a signed offset\n\nThe old ftruncate() syscall, using the 32-bit off_t misses a sign\nextension when called in compat mode on 64-bit architectures.  As a\nresult, passing a negative length accidentally succeeds in truncating\nto file size between 2GiB and 4GiB.\n\nChanging the type of the compat syscall to the signed compat_off_t\nchanges the behavior so it instead returns -EINVAL.\n\nThe native entry point, the truncate() syscall and the corresponding\nloff_t based variants are all correct already and do not suffer\nfrom this mistake."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33365",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://hackmd.io/%40JohnathanHuuTri/rJNbEItJC",
            "https://github.com/johnathanhuutri/CVE_report/blob/master/CVE-2024-33365/README.md"
        ],
        "summary": "Buffer Overflow vulnerability in Tenda AC10 v4 US_AC10V4.0si_V16.03.10.20_cn allows a remote attacker to execute arbitrary code via the Virtual_Data_Check function in the bin/httpd component."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42085",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7026576e89094aa9a0062aa6d10cba18aa99944c",
            "https://git.kernel.org/stable/c/d77e2b5104c51d3668b9717c825a4a06998efe63",
            "https://git.kernel.org/stable/c/17e2956633ca560b95f1cbbb297cfc2adf650649",
            "https://git.kernel.org/stable/c/f1274cfab183e69a7c7bafffcb4f50703c876276",
            "https://git.kernel.org/stable/c/7838de15bb700c2898a7d741db9b1f3cbc86c136"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: remove lock of otg mode during gadget suspend/resume to avoid deadlock\n\nWhen config CONFIG_USB_DWC3_DUAL_ROLE is selected, and trigger system\nto enter suspend status with below command:\necho mem > /sys/power/state\nThere will be a deadlock issue occurring. Detailed invoking path as\nbelow:\ndwc3_suspend_common()\n    spin_lock_irqsave(&dwc->lock, flags);              <-- 1st\n    dwc3_gadget_suspend(dwc);\n        dwc3_gadget_soft_disconnect(dwc);\n            spin_lock_irqsave(&dwc->lock, flags);      <-- 2nd\nThis issue is exposed by commit c7ebd8149ee5 (\"usb: dwc3: gadget: Fix\nNULL pointer dereference in dwc3_gadget_suspend\") that removes the code\nof checking whether dwc->gadget_driver is NULL or not. It causes the\nfollowing code is executed and deadlock occurs when trying to get the\nspinlock. In fact, the root cause is the commit 5265397f9442(\"usb: dwc3:\nRemove DWC3 locking during gadget suspend/resume\") that forgot to remove\nthe lock of otg mode. So, remove the redundant lock of otg mode during\ngadget suspend/resume."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42086",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6fa31bbe2ea8665ee970258eb8320cbf231dbe9e",
            "https://git.kernel.org/stable/c/b0af334616ed425024bf220adda0f004806b5feb",
            "https://git.kernel.org/stable/c/c326551e99f5416986074ce78bef94f6a404b517",
            "https://git.kernel.org/stable/c/7a13d1357658d3a3c1cd7b3b9543c805a6e5e6e9",
            "https://git.kernel.org/stable/c/ba1bb3e2a38a7fef1c1818dd4f2d9abbfdde553a",
            "https://git.kernel.org/stable/c/b5967393d50e3c6e632efda3ea3fdde14c1bfd0e",
            "https://git.kernel.org/stable/c/3add41bbda92938e9a528d74659dfc552796be4e",
            "https://git.kernel.org/stable/c/fdd478c3ae98c3f13628e110dce9b6cfb0d9b3c8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: chemical: bme680: Fix overflows in compensate() functions\n\nThere are cases in the compensate functions of the driver that\nthere could be overflows of variables due to bit shifting ops.\nThese implications were initially discussed here [1] and they\nwere mentioned in log message of Commit 1b3bd8592780 (\"iio:\nchemical: Add support for Bosch BME680 sensor\").\n\n[1]: https://lore.kernel.org/linux-iio/20180728114028.3c1bbe81@archlinux/"
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42087",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b71348be1236398be2d04c5e145fd6eaae86a91b",
            "https://git.kernel.org/stable/c/98686ec1824728ff41d7b358131f7d0227c2ba2a",
            "https://git.kernel.org/stable/c/cae52f61fda0f5d2949dc177f984c9e187d4c6a0",
            "https://git.kernel.org/stable/c/489f38de3375ab84b3d269d0a1d64d6ee95d7044",
            "https://git.kernel.org/stable/c/5f41401219fbe7663b3cf65ebd4ed95ebbb8ffb9",
            "https://git.kernel.org/stable/c/1618f7a875ffd916596392fd29880c0429b8af60",
            "https://git.kernel.org/stable/c/e646402bf82145349fcf5dcbe395afaf02a8ce47",
            "https://git.kernel.org/stable/c/ee7860cd8b5763017f8dc785c2851fecb7a0c565"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panel: ilitek-ili9881c: Fix warning with GPIO controllers that sleep\n\nThe ilitek-ili9881c controls the reset GPIO using the non-sleeping\ngpiod_set_value() function. This complains loudly when the GPIO\ncontroller needs to sleep. As the caller can sleep, use\ngpiod_set_value_cansleep() to fix the issue."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42088",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/42b9ab7a4d7e6c5efd71847541e4fcc213585aad",
            "https://git.kernel.org/stable/c/282a4482e198e03781c152c88aac8aa382ef9a55"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: mt8195: Add platform entry for ETDM1_OUT_BE dai link\n\nCommit e70b8dd26711 (\"ASoC: mediatek: mt8195: Remove afe-dai component\nand rework codec link\") removed the codec entry for the ETDM1_OUT_BE\ndai link entirely instead of replacing it with COMP_EMPTY(). This worked\nby accident as the remaining COMP_EMPTY() platform entry became the codec\nentry, and the platform entry became completely empty, effectively the\nsame as COMP_DUMMY() since snd_soc_fill_dummy_dai() doesn't do anything\nfor platform entries.\n\nThis causes a KASAN out-of-bounds warning in mtk_soundcard_common_probe()\nin sound/soc/mediatek/common/mtk-soundcard-driver.c:\n\n\tfor_each_card_prelinks(card, i, dai_link) {\n\t\tif (adsp_node && !strncmp(dai_link->name, \"AFE_SOF\", strlen(\"AFE_SOF\")))\n\t\t\tdai_link->platforms->of_node = adsp_node;\n\t\telse if (!dai_link->platforms->name && !dai_link->platforms->of_node)\n\t\t\tdai_link->platforms->of_node = platform_node;\n\t}\n\nwhere the code expects the platforms array to have space for at least one entry.\n\nAdd an COMP_EMPTY() entry so that dai_link->platforms has space."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42089",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ae81535ce2503aabc4adab3472f4338070cdeb6a",
            "https://git.kernel.org/stable/c/8896e18b7c366f8faf9344abfd0971435f1c723a",
            "https://git.kernel.org/stable/c/3662eb2170e59b58ad479982dc1084889ba757b9",
            "https://git.kernel.org/stable/c/544ab46b7ece6d6bebbdee5d5659c0a0f804a99a",
            "https://git.kernel.org/stable/c/8faf91e58425c2f6ce773250dfd995f1c2d461ac",
            "https://git.kernel.org/stable/c/29bc9e7c75398b0d12fc30955f2e9b2dd29ffaed",
            "https://git.kernel.org/stable/c/7c18b4d89ff9c810b6e562408afda5ce165c4ea6",
            "https://git.kernel.org/stable/c/90f3feb24172185f1832636264943e8b5e289245"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: fsl-asoc-card: set priv->pdev before using it\n\npriv->pdev pointer was set after being used in\nfsl_asoc_card_audmux_init().\nMove this assignment at the start of the probe function, so\nsub-functions can correctly use pdev through priv.\n\nfsl_asoc_card_audmux_init() dereferences priv->pdev to get access to the\ndev struct, used with dev_err macros.\nAs priv is zero-initialised, there would be a NULL pointer dereference.\nNote that if priv->dev is dereferenced before assignment but never used,\nfor example if there is no error to be printed, the driver won't crash\nprobably due to compiler optimisations."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42090",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e65a0dc2e85efb28e182aca50218e8a056d0ce04",
            "https://git.kernel.org/stable/c/420ce1261907e5dbeda1e4daffd5b6c76f8188c0",
            "https://git.kernel.org/stable/c/b813e3fd102a959c5b208ed68afe27e0137a561b",
            "https://git.kernel.org/stable/c/01fe2f885f7813f8aed5d3704b384a97b1116a9e",
            "https://git.kernel.org/stable/c/b36efd2e3e22a329444b6b24fa48df6d20ae66e6",
            "https://git.kernel.org/stable/c/4038c57bf61631219b31f1bd6e92106ec7f084dc",
            "https://git.kernel.org/stable/c/48a7a7c9571c3e62f17012dd7f2063e926179ddd",
            "https://git.kernel.org/stable/c/adec57ff8e66aee632f3dd1f93787c13d112b7a1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: fix deadlock in create_pinctrl() when handling -EPROBE_DEFER\n\nIn create_pinctrl(), pinctrl_maps_mutex is acquired before calling\nadd_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl()\ncalls pinctrl_free(). However, pinctrl_free() attempts to acquire\npinctrl_maps_mutex, which is already held by create_pinctrl(), leading to\na potential deadlock.\n\nThis patch resolves the issue by releasing pinctrl_maps_mutex before\ncalling pinctrl_free(), preventing the deadlock.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6748",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://www.manageengine.com/itom/advisory/cve-2024-6748.html"
        ],
        "summary": "Zohocorp ManageEngine\u00a0OpManager, OpManager Plus, OpManager MSP and RMM versions\u00a0128317 and below are vulnerable to authenticated SQL injection in the URL monitoring."
    },
    {
        "Modified": "2024-07-29T17:06:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T17:06:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-119",
        "id": "CVE-2021-33742",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:06:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-33742"
        ],
        "summary": "Windows MSHTML Platform Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-29T16:52:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3966",
        "impact": {},
        "last-modified": "2024-07-29T16:52:00",
        "references": [
            "https://wpscan.com/vulnerability/9f0a575f-862d-4f2e-8d25-82c6f58dd11a/"
        ],
        "summary": "The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin"
    },
    {
        "Modified": "2024-07-29T16:51:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-3971",
        "impact": {},
        "last-modified": "2024-07-29T16:51:00",
        "references": [
            "https://wpscan.com/vulnerability/5dec5719-105d-4989-a97f-bda04d223322/"
        ],
        "summary": "The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack"
    },
    {
        "Modified": "2024-07-29T16:51:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-3972",
        "impact": {},
        "last-modified": "2024-07-29T16:51:00",
        "references": [
            "https://wpscan.com/vulnerability/55dfb9b5-d590-478b-bd1f-d420b79037fa/"
        ],
        "summary": "The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack"
    },
    {
        "Modified": "2024-07-29T16:43:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3977",
        "impact": {},
        "last-modified": "2024-07-29T16:43:00",
        "references": [
            "https://wpscan.com/vulnerability/25851386-eccf-49cb-afbf-c25286c9b19e/"
        ],
        "summary": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-07-29T16:42:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3978",
        "impact": {},
        "last-modified": "2024-07-29T16:42:00",
        "references": [
            "https://wpscan.com/vulnerability/a9f47d11-47ac-4998-a82a-dc2f3b0decdf/"
        ],
        "summary": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks"
    },
    {
        "Modified": "2024-07-29T16:35:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4005",
        "impact": {},
        "last-modified": "2024-07-29T16:35:00",
        "references": [
            "https://wpscan.com/vulnerability/02ca09f8-4080-4969-992d-0e6afb29bc62/"
        ],
        "summary": "The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-07-29T16:31:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4270",
        "impact": {},
        "last-modified": "2024-07-29T16:31:00",
        "references": [
            "https://wpscan.com/vulnerability/7a3b89cc-7a81-448a-94fc-36a7033609d5/"
        ],
        "summary": "The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41085",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1d064e4fbebcf5b18dc10c1f3973487eb163b600",
            "https://git.kernel.org/stable/c/84ec985944ef34a34a1605b93ce401aa8737af96"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/mem: Fix no cxl_nvd during pmem region auto-assembling\n\nWhen CXL subsystem is auto-assembling a pmem region during cxl\nendpoint port probing, always hit below calltrace.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000078\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n RIP: 0010:cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n Call Trace:\n  <TASK>\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x82/0x160\n  ? do_user_addr_fault+0x65/0x6b0\n  ? exc_page_fault+0x7d/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n  ? cxl_pmem_region_probe+0x1ac/0x360 [cxl_pmem]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n  really_probe+0x173/0x410\n  ? __pfx___device_attach_driver+0x10/0x10\n  __driver_probe_device+0x80/0x170\n  driver_probe_device+0x1e/0x90\n  __device_attach_driver+0x90/0x120\n  bus_for_each_drv+0x84/0xe0\n  __device_attach+0xbc/0x1f0\n  bus_probe_device+0x90/0xa0\n  device_add+0x51c/0x710\n  devm_cxl_add_pmem_region+0x1b5/0x380 [cxl_core]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n\nThe cxl_nvd of the memdev needs to be available during the pmem region\nprobe. Currently the cxl_nvd is registered after the endpoint port probe.\nThe endpoint probe, in the case of autoassembly of regions, can cause a\npmem region probe requiring the not yet available cxl_nvd. Adjust the\nsequence so this dependency is met.\n\nThis requires adding a port parameter to cxl_find_nvdimm_bridge() that\ncan be used to query the ancestor root port. The endpoint port is not\nyet available, but will share a common ancestor with its parent, so\nstart the query from there instead."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41085",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1d064e4fbebcf5b18dc10c1f3973487eb163b600",
            "https://git.kernel.org/stable/c/84ec985944ef34a34a1605b93ce401aa8737af96"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/mem: Fix no cxl_nvd during pmem region auto-assembling\n\nWhen CXL subsystem is auto-assembling a pmem region during cxl\nendpoint port probing, always hit below calltrace.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000078\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n RIP: 0010:cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n Call Trace:\n  <TASK>\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x82/0x160\n  ? do_user_addr_fault+0x65/0x6b0\n  ? exc_page_fault+0x7d/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n  ? cxl_pmem_region_probe+0x1ac/0x360 [cxl_pmem]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n  really_probe+0x173/0x410\n  ? __pfx___device_attach_driver+0x10/0x10\n  __driver_probe_device+0x80/0x170\n  driver_probe_device+0x1e/0x90\n  __device_attach_driver+0x90/0x120\n  bus_for_each_drv+0x84/0xe0\n  __device_attach+0xbc/0x1f0\n  bus_probe_device+0x90/0xa0\n  device_add+0x51c/0x710\n  devm_cxl_add_pmem_region+0x1b5/0x380 [cxl_core]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n\nThe cxl_nvd of the memdev needs to be available during the pmem region\nprobe. Currently the cxl_nvd is registered after the endpoint port probe.\nThe endpoint probe, in the case of autoassembly of regions, can cause a\npmem region probe requiring the not yet available cxl_nvd. Adjust the\nsequence so this dependency is met.\n\nThis requires adding a port parameter to cxl_find_nvdimm_bridge() that\ncan be used to query the ancestor root port. The endpoint port is not\nyet available, but will share a common ancestor with its parent, so\nstart the query from there instead."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41084",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a9e099e29e925f8b31cfe53e8a786b9796f8e453",
            "https://git.kernel.org/stable/c/b8a40a6dbfb0150c1081384caa9bbe28ce5d5060",
            "https://git.kernel.org/stable/c/285f2a08841432fc3e498b1cd00cce5216cdf189"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/region: Avoid null pointer dereference in region lookup\n\ncxl_dpa_to_region() looks up a region based on a memdev and DPA.\nIt wrongly assumes an endpoint found mapping the DPA is also of\na fully assembled region. When not true it leads to a null pointer\ndereference looking up the region name.\n\nThis appears during testing of region lookup after a failure to\nassemble a BIOS defined region or if the lookup raced with the\nassembly of the BIOS defined region.\n\nFailure to clean up BIOS defined regions that fail assembly is an\nissue in itself and a fix to that problem will alleviate some of\nthe impact. It will not alleviate the race condition so let's harden\nthis path.\n\nThe behavior change is that the kernel oops due to a null pointer\ndereference is replaced with a dev_dbg() message noting that an\nendpoint was mapped.\n\nAdditional comments are added so that future users of this function\ncan more clearly understand what it provides."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41087",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/290073b2b557e4dc21ee74a1e403d9ae79e393a2",
            "https://git.kernel.org/stable/c/56f1c7e290cd6c69c948fcd2e2a49e6a637ec38f",
            "https://git.kernel.org/stable/c/010de9acbea58fbcbda08e3793d6262086a493fe",
            "https://git.kernel.org/stable/c/5dde5f8b790274723640d29a07c5a97d57d62047",
            "https://git.kernel.org/stable/c/702c1edbafb2e6f9d20f6d391273b5be09d366a5",
            "https://git.kernel.org/stable/c/062e256516d7db5e7dcdef117f52025cd5c456e3",
            "https://git.kernel.org/stable/c/8106da4d88bbaed809e023cc8014b766223d6e76",
            "https://git.kernel.org/stable/c/ab9e0c529eb7cafebdd31fe1644524e80a48b05d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix double free on error\n\nIf e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump\nto the err_out label, which will call devres_release_group().\ndevres_release_group() will trigger a call to ata_host_release().\nata_host_release() calls kfree(host), so executing the kfree(host) in\nata_host_alloc() will lead to a double free:\n\nkernel BUG at mm/slub.c:553!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:kfree+0x2cf/0x2f0\nCode: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da\nRSP: 0018:ffffc90000f377f0 EFLAGS: 00010246\nRAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320\nRDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0\nRBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffc90000f37610 R11: 617461203a736b6e R12: ffffea00044ac780\nR13: ffff888100046400 R14: ffffffffc02c9de5 R15: 0000000000000006\nFS:  00007f2f1cabe980(0000) GS:ffff88813b380000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f2f1c3acf75 CR3: 0000000111724000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19/0x27\n ? die+0x2e/0x50\n ? do_trap+0xca/0x110\n ? do_error_trap+0x6a/0x90\n ? kfree+0x2cf/0x2f0\n ? exc_invalid_op+0x50/0x70\n ? kfree+0x2cf/0x2f0\n ? asm_exc_invalid_op+0x1a/0x20\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? kfree+0x2cf/0x2f0\n ata_host_alloc+0xf5/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nEnsure that we will not call kfree(host) twice, by performing the kfree()\nonly if the devres_open_group() call failed."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41810",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/twisted/twisted/security/advisories/GHSA-cf56-g6w6-pqq2",
            "https://github.com/twisted/twisted/commit/046a164f89a0f08d3239ecebd750360f8914df33"
        ],
        "summary": "Twisted is an event-based framework for internet applications, supporting Python 3.6+. The `twisted.web.util.redirectTo` function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body. This vulnerability is fixed in 24.7.0rc1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41819",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/enchant97/note-mark/security/advisories/GHSA-rm48-9mqf-8jc3",
            "https://github.com/enchant97/note-mark/commit/a0997facb82f85bfb8c0d497606d89e7d150e182"
        ],
        "summary": "Note Mark is a web-based Markdown notes app. A stored cross-site scripting (XSS) vulnerability in Note Mark allows attackers to execute arbitrary web scripts via a crafted payload injected into the URL value of a link in the markdown content. This vulnerability is fixed in 0.13.1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42067",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/08f6c05feb1db21653e98ca84ea04ca032d014c7",
            "https://git.kernel.org/stable/c/9fef36cad60d4226f9d06953cd56d1d2f9119730",
            "https://git.kernel.org/stable/c/044da7ae7afd4ef60806d73654a2e6a79aa4ed7a",
            "https://git.kernel.org/stable/c/e60adf513275c3a38e5cb67f7fd12387e43a3ff5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Take return from set_memory_rox() into account with bpf_jit_binary_lock_ro()\n\nset_memory_rox() can fail, leaving memory unprotected.\n\nCheck return and bail out when bpf_jit_binary_lock_ro() returns\nan error."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52887",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ed581989d7ea9df6f8646beba2341e32cd49a1f9",
            "https://git.kernel.org/stable/c/f6c839e717901dbd6b1c1ca807b6210222eb70f6",
            "https://git.kernel.org/stable/c/1762ca80c2b72dd1b5821c5e347713ae696276ea",
            "https://git.kernel.org/stable/c/26b18dd30e63d4fd777be429148e8e4ed66f60b2",
            "https://git.kernel.org/stable/c/177e33b655d35d72866b50aec84307119dc5f3d4",
            "https://git.kernel.org/stable/c/0bc0a7416ea73f79f915c9a05ac0858dff65cfed",
            "https://git.kernel.org/stable/c/d3e2904f71ea0fe7eaff1d68a2b0363c888ea0fb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: can: j1939: enhanced error handling for tightly received RTS messages in xtp_rx_rts_session_new\n\nThis patch enhances error handling in scenarios with RTS (Request to\nSend) messages arriving closely. It replaces the less informative WARN_ON_ONCE\nbacktraces with a new error handling method. This provides clearer error\nmessages and allows for the early termination of problematic sessions.\nPreviously, sessions were only released at the end of j1939_xtp_rx_rts().\n\nPotentially this could be reproduced with something like:\ntestj1939 -r vcan0:0x80 &\nwhile true; do\n\t# send first RTS\n\tcansend vcan0 18EC8090#1014000303002301;\n\t# send second RTS\n\tcansend vcan0 18EC8090#1014000303002301;\n\t# send abort\n\tcansend vcan0 18EC8090#ff00000000002301;\ndone"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41086",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/bf920ed92ef24dcd6970c88881cd4700b3acf05b",
            "https://git.kernel.org/stable/c/692aa7a54b2b28d59f24b3bf8250837805484b99"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcachefs: Fix sb_field_downgrade validation\n\n- bch2_sb_downgrade_validate() wasn't checking for a downgrade entry\n  extending past the end of the superblock section\n\n- for_each_downgrade_entry() is used in to_text() and needs to work on\n  malformed input; it also was missing a check for a field extending\n  past the end of the section"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42068",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a359696856ca9409fb97655c5a8ef0f549cb6e03",
            "https://git.kernel.org/stable/c/e4f602e3ff749ba770bf8ff10196e18358de6720",
            "https://git.kernel.org/stable/c/fdd411af8178edc6b7bf260f8fa4fba1bedd0a6d",
            "https://git.kernel.org/stable/c/e3540e5a7054d6daaf9a1415a48aacb092112a89",
            "https://git.kernel.org/stable/c/05412471beba313ecded95aa17b25fe84bb2551a",
            "https://git.kernel.org/stable/c/7d2cc63eca0c993c99d18893214abf8f85d566d8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Take return from set_memory_ro() into account with bpf_prog_lock_ro()\n\nset_memory_ro() can fail, leaving memory unprotected.\n\nCheck its return and take it into account as an error."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41089",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ffabad4aa91e33ced3c6ae793fb37771b3e9cb51",
            "https://git.kernel.org/stable/c/1c9f2e60150b4f13789064370e37f39e6e060f50",
            "https://git.kernel.org/stable/c/56fc4d3b0bdef691831cd95715a7ca3ebea98b2d",
            "https://git.kernel.org/stable/c/5eecb49a6c268dc229005bf6e8167d4001dc09a0",
            "https://git.kernel.org/stable/c/30cbf6ffafbbdd8a6e4e5f0a2e9a9827ee83f3ad",
            "https://git.kernel.org/stable/c/7ece609b0ce7a7ea8acdf512a77d1fee26621637",
            "https://git.kernel.org/stable/c/6e49a157d541e7e97b815a56f4bdfcbc89844a59",
            "https://git.kernel.org/stable/c/6d411c8ccc0137a612e0044489030a194ff5c843"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_hd_modes\n\nIn nv17_tv_get_hd_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). The same applies to drm_cvt_mode().\nAdd a check to avoid null pointer dereference."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42069",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3243e64eb4d897c3eeb48b2a7221ab5a95e1282a",
            "https://git.kernel.org/stable/c/ed45c0a0b662079d4c0e518014cc148c753979b4",
            "https://git.kernel.org/stable/c/1864b8224195d0e43ddb92a8151f54f6562090cc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix possible double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function adev_release\ncalls kfree(madev). We shouldn't call kfree(madev) again\nin the error handling path. Set 'madev' to NULL."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41093",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7f35e01cb0ea4d295f5c067bb5c67dfcddaf05bc",
            "https://git.kernel.org/stable/c/6ce0544cabaa608018d5922ab404dc656a9d8447",
            "https://git.kernel.org/stable/c/330c8c1453848c04d335bad81371a66710210800",
            "https://git.kernel.org/stable/c/dd9ec0ea4cdde0fc48116e63969fc83e81d7ef46",
            "https://git.kernel.org/stable/c/bcfa48ff785bd121316592b131ff6531e3e696bb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: avoid using null object of framebuffer\n\nInstead of using state->fb->obj[0] directly, get object from framebuffer\nby calling drm_gem_fb_get_obj() and return error code when object is\nnull to avoid using null object of framebuffer."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42070",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/40188a25a9847dbeb7ec67517174a835a677752f",
            "https://git.kernel.org/stable/c/23752737c6a618e994f9a310ec2568881a6b49c4",
            "https://git.kernel.org/stable/c/5d43d789b57943720dca4181a05f6477362b94cf",
            "https://git.kernel.org/stable/c/461302e07f49687ffe7d105fa0a330c07c7646d8",
            "https://git.kernel.org/stable/c/efb27ad05949403848f487823b597ed67060e007",
            "https://git.kernel.org/stable/c/952bf8df222599baadbd4f838a49c4fef81d2564",
            "https://git.kernel.org/stable/c/41a6375d48deaf7f730304b5153848bfa1c2980f",
            "https://git.kernel.org/stable/c/7931d32955e09d0a11b1fe0b6aac1bfa061c005c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fully validate NFT_DATA_VALUE on store to data registers\n\nregister store validation for NFT_DATA_VALUE is conditional, however,\nthe datatype is always either NFT_DATA_VALUE or NFT_DATA_VERDICT. This\nonly requires a new helper function to infer the register type from the\nset datatype so this conditional check can be removed. Otherwise,\npointer to chain object can be leaked through the registers."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41096",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ff1121d2214b794dc1772081f27bdd90721a84bc",
            "https://git.kernel.org/stable/c/45fc8d20e0768ab0a0ad054081d0f68aa3c83976",
            "https://git.kernel.org/stable/c/9eee5330656bf92f51cb1f09b2dc9f8cf975b3d1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/MSI: Fix UAF in msi_capability_init\n\nKFENCE reports the following UAF:\n\n BUG: KFENCE: use-after-free read in __pci_enable_msi_range+0x2c0/0x488\n\n Use-after-free read at 0x0000000024629571 (in kfence-#12):\n  __pci_enable_msi_range+0x2c0/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\n kfence-#12: 0x0000000008614900-0x00000000e06c228d, size=104, cache=kmalloc-128\n\n allocated by task 81 on cpu 7 at 10.808142s:\n  __kmem_cache_alloc_node+0x1f0/0x2bc\n  kmalloc_trace+0x44/0x138\n  msi_alloc_desc+0x3c/0x9c\n  msi_domain_insert_msi_desc+0x30/0x78\n  msi_setup_msi_desc+0x13c/0x184\n  __pci_enable_msi_range+0x258/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\n freed by task 81 on cpu 7 at 10.811436s:\n  msi_domain_free_descs+0xd4/0x10c\n  msi_domain_free_locked.part.0+0xc0/0x1d8\n  msi_domain_alloc_irqs_all_locked+0xb4/0xbc\n  pci_msi_setup_msi_irqs+0x30/0x4c\n  __pci_enable_msi_range+0x2a8/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\nDescriptor allocation done in:\n__pci_enable_msi_range\n    msi_capability_init\n        msi_setup_msi_desc\n            msi_insert_msi_desc\n                msi_domain_insert_msi_desc\n                    msi_alloc_desc\n                        ...\n\nFreed in case of failure in __msi_domain_alloc_locked()\n__pci_enable_msi_range\n    msi_capability_init\n        pci_msi_setup_msi_irqs\n            msi_domain_alloc_irqs_all_locked\n                msi_domain_alloc_locked\n                    __msi_domain_alloc_locked => fails\n                    msi_domain_free_locked\n                        ...\n\nThat failure propagates back to pci_msi_setup_msi_irqs() in\nmsi_capability_init() which accesses the descriptor for unmasking in the\nerror exit path.\n\nCure it by copying the descriptor and using the copy for the error exit path\nunmask operation.\n\n[ tglx: Massaged change log ]"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42073",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/bfa86a96912faa0b6142a918db88cc0c738a769e",
            "https://git.kernel.org/stable/c/942901e0fc74ad4b7992ef7ca9336e68d5fd6d36",
            "https://git.kernel.org/stable/c/bf8781ede7bd9a37c0fcabca78976e61300b5a1a",
            "https://git.kernel.org/stable/c/c28947de2bed40217cf256c5d0d16880054fcf13"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_buffers: Fix memory corruptions on Spectrum-4 systems\n\nThe following two shared buffer operations make use of the Shared Buffer\nStatus Register (SBSR):\n\n # devlink sb occupancy snapshot pci/0000:01:00.0\n # devlink sb occupancy clearmax pci/0000:01:00.0\n\nThe register has two masks of 256 bits to denote on which ingress /\negress ports the register should operate on. Spectrum-4 has more than\n256 ports, so the register was extended by cited commit with a new\n'port_page' field.\n\nHowever, when filling the register's payload, the driver specifies the\nports as absolute numbers and not relative to the first port of the port\npage, resulting in memory corruptions [1].\n\nFix by specifying the ports relative to the first port of the port page.\n\n[1]\nBUG: KASAN: slab-use-after-free in mlxsw_sp_sb_occ_snapshot+0xb6d/0xbc0\nRead of size 1 at addr ffff8881068cb00f by task devlink/1566\n[...]\nCall Trace:\n <TASK>\n dump_stack_lvl+0xc6/0x120\n print_report+0xce/0x670\n kasan_report+0xd7/0x110\n mlxsw_sp_sb_occ_snapshot+0xb6d/0xbc0\n mlxsw_devlink_sb_occ_snapshot+0x75/0xb0\n devlink_nl_sb_occ_snapshot_doit+0x1f9/0x2a0\n genl_family_rcv_msg_doit+0x20c/0x300\n genl_rcv_msg+0x567/0x800\n netlink_rcv_skb+0x170/0x450\n genl_rcv+0x2d/0x40\n netlink_unicast+0x547/0x830\n netlink_sendmsg+0x8d4/0xdb0\n __sys_sendto+0x49b/0x510\n __x64_sys_sendto+0xe5/0x1c0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[...]\nAllocated by task 1:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n __kasan_kmalloc+0x8f/0xa0\n copy_verifier_state+0xbc2/0xfb0\n do_check_common+0x2c51/0xc7e0\n bpf_check+0x5107/0x9960\n bpf_prog_load+0xf0e/0x2690\n __sys_bpf+0x1a61/0x49d0\n __x64_sys_bpf+0x7d/0xc0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 1:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n poison_slab_object+0x109/0x170\n __kasan_slab_free+0x14/0x30\n kfree+0xca/0x2b0\n free_verifier_state+0xce/0x270\n do_check_common+0x4828/0xc7e0\n bpf_check+0x5107/0x9960\n bpf_prog_load+0xf0e/0x2690\n __sys_bpf+0x1a61/0x49d0\n __x64_sys_bpf+0x7d/0xc0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41095",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/9289cd3450d1da3e271ef4b054d4d2932c41243e",
            "https://git.kernel.org/stable/c/dbd75f32252508ed6c46c3288a282c301a57ceeb",
            "https://git.kernel.org/stable/c/259549b2ccf795b7f91f7b5aba47286addcfa389",
            "https://git.kernel.org/stable/c/0d17604f2e44b3df21e218fe8fb3b836d41bac49",
            "https://git.kernel.org/stable/c/f95ed0f54b3d3faecae1140ddab854f904a6e7c8",
            "https://git.kernel.org/stable/c/cb751e48bbcffd292090f7882b23b215111b3d72",
            "https://git.kernel.org/stable/c/bdda5072494f2a7215d94fc4124ad1949a218714",
            "https://git.kernel.org/stable/c/66edf3fb331b6c55439b10f9862987b0916b3726"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_ld_modes\n\nIn nv17_tv_get_ld_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41094",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/f29fcfbf6067c0d8c83f84a045da9276c08deac5",
            "https://git.kernel.org/stable/c/00702cfa8432ac67a72f56de5e1d278ddea2ebde",
            "https://git.kernel.org/stable/c/d92a7580392ad4681b1d4f9275d00b95375ebe01"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/fbdev-dma: Only set smem_start is enable per module option\n\nOnly export struct fb_info.fix.smem_start if that is required by the\nuser and the memory does not come from vmalloc().\n\nSetting struct fb_info.fix.smem_start breaks systems where DMA\nmemory is backed by vmalloc address space. An example error is\nshown below.\n\n[    3.536043] ------------[ cut here ]------------\n[    3.540716] virt_to_phys used for non-linear address: 000000007fc4f540 (0xffff800086001000)\n[    3.552628] WARNING: CPU: 4 PID: 61 at arch/arm64/mm/physaddr.c:12 __virt_to_phys+0x68/0x98\n[    3.565455] Modules linked in:\n[    3.568525] CPU: 4 PID: 61 Comm: kworker/u12:5 Not tainted 6.6.23-06226-g4986cc3e1b75-dirty #250\n[    3.577310] Hardware name: NXP i.MX95 19X19 board (DT)\n[    3.582452] Workqueue: events_unbound deferred_probe_work_func\n[    3.588291] pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    3.595233] pc : __virt_to_phys+0x68/0x98\n[    3.599246] lr : __virt_to_phys+0x68/0x98\n[    3.603276] sp : ffff800083603990\n[    3.677939] Call trace:\n[    3.680393]  __virt_to_phys+0x68/0x98\n[    3.684067]  drm_fbdev_dma_helper_fb_probe+0x138/0x238\n[    3.689214]  __drm_fb_helper_initial_config_and_unlock+0x2b0/0x4c0\n[    3.695385]  drm_fb_helper_initial_config+0x4c/0x68\n[    3.700264]  drm_fbdev_dma_client_hotplug+0x8c/0xe0\n[    3.705161]  drm_client_register+0x60/0xb0\n[    3.709269]  drm_fbdev_dma_setup+0x94/0x148\n\nAdditionally, DMA memory is assumed to by contiguous in physical\naddress space, which is not guaranteed by vmalloc().\n\nResolve this by checking the module flag drm_leak_fbdev_smem when\nDRM allocated the instance of struct fb_info. Fbdev-dma then only\nsets smem_start only if required (via FBINFO_HIDE_SMEM_START). Also\nguarantee that the framebuffer is not located in vmalloc address\nspace."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41631",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://platform.akyuu.space/exploit.txt",
            "https://github.com/host-host"
        ],
        "summary": "Buffer Overflow vulnerability in host-host NEUQ_board v.1.0 allows a remote attacker to cause a denial of service via the password.h component."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41098",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/119c97ace2a9ffcf4dc09a23bb057d6c281aff28",
            "https://git.kernel.org/stable/c/8a8ff7e3b736a70d7b7c8764cbcd2724d4079ec8",
            "https://git.kernel.org/stable/c/5d92c7c566dc76d96e0e19e481d926bbe6631c1e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix null pointer dereference on error\n\nIf the ata_port_alloc() call in ata_host_alloc() fails,\nata_host_release() will get called.\n\nHowever, the code in ata_host_release() tries to free ata_port struct\nmembers unconditionally, which can lead to the following:\n\nBUG: unable to handle page fault for address: 0000000000003990\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 10 PID: 594 Comm: (udev-worker) Not tainted 6.10.0-rc5 #44\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:ata_host_release.cold+0x2f/0x6e [libata]\nCode: e4 4d 63 f4 44 89 e2 48 c7 c6 90 ad 32 c0 48 c7 c7 d0 70 33 c0 49 83 c6 0e 41\nRSP: 0018:ffffc90000ebb968 EFLAGS: 00010246\nRAX: 0000000000000041 RBX: ffff88810fb52e78 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff88813b3218c0 RDI: ffff88813b3218c0\nRBP: ffff88810fb52e40 R08: 0000000000000000 R09: 6c65725f74736f68\nR10: ffffc90000ebb738 R11: 73692033203a746e R12: 0000000000000004\nR13: 0000000000000000 R14: 0000000000000011 R15: 0000000000000006\nFS:  00007f6cc55b9980(0000) GS:ffff88813b300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000003990 CR3: 00000001122a2000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19/0x27\n ? page_fault_oops+0x15a/0x2f0\n ? exc_page_fault+0x7e/0x180\n ? asm_exc_page_fault+0x26/0x30\n ? ata_host_release.cold+0x2f/0x6e [libata]\n ? ata_host_release.cold+0x2f/0x6e [libata]\n release_nodes+0x35/0xb0\n devres_release_group+0x113/0x140\n ata_host_alloc+0xed/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nDo not access ata_port struct members unconditionally."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42076",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/5e4ed38eb17eaca42de57d500cc0f9668d2b6abf",
            "https://git.kernel.org/stable/c/a2a0ebff7fdeb2f66e29335adf64b9e457300dd4",
            "https://git.kernel.org/stable/c/4c5dc3927e17489c1cae6f48c0d5e4acb4cae01f",
            "https://git.kernel.org/stable/c/f97cbce633923588307049c4aef9feb2987e371b",
            "https://git.kernel.org/stable/c/ab2a683938ba4416d389c2f5651cbbb2c41b779f",
            "https://git.kernel.org/stable/c/ba7e5ae8208ac07d8e1eace0951a34c169a2d298",
            "https://git.kernel.org/stable/c/b7cdf1dd5d2a2d8200efd98d1893684db48fe134"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: can: j1939: Initialize unused data in j1939_send_one()\n\nsyzbot reported kernel-infoleak in raw_recvmsg() [1]. j1939_send_one()\ncreates full frame including unused data, but it doesn't initialize\nit. This causes the kernel-infoleak issue. Fix this by initializing\nunused data.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n copy_to_user_iter lib/iov_iter.c:24 [inline]\n iterate_ubuf include/linux/iov_iter.h:29 [inline]\n iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n iterate_and_advance include/linux/iov_iter.h:271 [inline]\n _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n copy_to_iter include/linux/uio.h:196 [inline]\n memcpy_to_msg include/linux/skbuff.h:4113 [inline]\n raw_recvmsg+0x2b8/0x9e0 net/can/raw.c:1008\n sock_recvmsg_nosec net/socket.c:1046 [inline]\n sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n ____sys_recvmsg+0x18a/0x620 net/socket.c:2803\n ___sys_recvmsg+0x223/0x840 net/socket.c:2845\n do_recvmmsg+0x4fc/0xfd0 net/socket.c:2939\n __sys_recvmmsg net/socket.c:3018 [inline]\n __do_sys_recvmmsg net/socket.c:3041 [inline]\n __se_sys_recvmmsg net/socket.c:3034 [inline]\n __x64_sys_recvmmsg+0x397/0x490 net/socket.c:3034\n x64_sys_call+0xf6c/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:300\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3804 [inline]\n slab_alloc_node mm/slub.c:3845 [inline]\n kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:577\n __alloc_skb+0x35b/0x7a0 net/core/skbuff.c:668\n alloc_skb include/linux/skbuff.h:1313 [inline]\n alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6504\n sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n sock_alloc_send_skb include/net/sock.h:1842 [inline]\n j1939_sk_alloc_skb net/can/j1939/socket.c:878 [inline]\n j1939_sk_send_loop net/can/j1939/socket.c:1142 [inline]\n j1939_sk_sendmsg+0xc0a/0x2730 net/can/j1939/socket.c:1277\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x30f/0x380 net/socket.c:745\n ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n __sys_sendmsg net/socket.c:2667 [inline]\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2674\n x64_sys_call+0xc4b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nBytes 12-15 of 16 are uninitialized\nMemory access of size 16 starts at ffff888120969690\nData copied to user address 00000000200017c0\n\nCPU: 1 PID: 5050 Comm: syz-executor198 Not tainted 6.9.0-rc5-syzkaller-00031-g71b1543c83d6 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42078",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7e8b94045bc77ce4f085ddfb9eb04e5760e66169",
            "https://git.kernel.org/stable/c/e0011bca603c101f2a3c007bdb77f7006fa78fb1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: initialise nfsd_info.mutex early.\n\nnfsd_info.mutex can be dereferenced by svc_pool_stats_start()\nimmediately after the new netns is created.  Currently this can\ntrigger an oops.\n\nMove the initialisation earlier before it can possibly be dereferenced."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42079",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3429ef5f50909cee9e498c50f0c499b9397116ce",
            "https://git.kernel.org/stable/c/f54f9d5368a4e92ede7dd078a62788dae3a7c6ef",
            "https://git.kernel.org/stable/c/35264909e9d1973ab9aaa2a1b07cda70f12bb828"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix NULL pointer dereference in gfs2_log_flush\n\nIn gfs2_jindex_free(), set sdp->sd_jdesc to NULL under the log flush\nlock to provide exclusion against gfs2_log_flush().\n\nIn gfs2_log_flush(), check if sdp->sd_jdesc is non-NULL before\ndereferencing it.  Otherwise, we could run into a NULL pointer\ndereference when outstanding glock work races with an unmount\n(glock_work_func -> run_queue -> do_xmote -> inode_go_sync ->\ngfs2_log_flush)."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41097",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/5159a81924311c1ec786ad9fdef784ead8676a6a",
            "https://git.kernel.org/stable/c/23926d316d2836315cb113569f91393266eb5b47",
            "https://git.kernel.org/stable/c/75ddbf776dd04a09fb9e5267ead5d0c989f84506",
            "https://git.kernel.org/stable/c/1aac4be1aaa5177506219f01dce5e29194e5e95a",
            "https://git.kernel.org/stable/c/5584c776a1af7807ca815ee6265f2c1429fc5727",
            "https://git.kernel.org/stable/c/f536f09eb45e4de8d1b9accee9d992aa1846f1d4",
            "https://git.kernel.org/stable/c/ac9007520e392541a29daebaae8b9109007bc781",
            "https://git.kernel.org/stable/c/2eabb655a968b862bc0c31629a09f0fbf3c80d51"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: atm: cxacru: fix endpoint checking in cxacru_bind()\n\nSyzbot is still reporting quite an old issue [1] that occurs due to\nincomplete checking of present usb endpoints. As such, wrong\nendpoints types may be used at urb sumbitting stage which in turn\ntriggers a warning in usb_submit_urb().\n\nFix the issue by verifying that required endpoint types are present\nfor both in and out endpoints, taking into account cmd endpoint type.\n\nUnfortunately, this patch has not been tested on real hardware.\n\n[1] Syzbot report:\nusb 1-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 0 PID: 8667 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\nModules linked in:\nCPU: 0 PID: 8667 Comm: kworker/0:4 Not tainted 5.14.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\n...\nCall Trace:\n cxacru_cm+0x3c0/0x8e0 drivers/usb/atm/cxacru.c:649\n cxacru_card_status+0x22/0xd0 drivers/usb/atm/cxacru.c:760\n cxacru_bind+0x7ac/0x11a0 drivers/usb/atm/cxacru.c:1209\n usbatm_usb_probe+0x321/0x1ae0 drivers/usb/atm/usbatm.c:1055\n cxacru_usb_probe+0xdf/0x1e0 drivers/usb/atm/cxacru.c:1363\n usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:517 [inline]\n really_probe+0x23c/0xcd0 drivers/base/dd.c:595\n __driver_probe_device+0x338/0x4d0 drivers/base/dd.c:747\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:777\n __device_attach_driver+0x20b/0x2f0 drivers/base/dd.c:894\n bus_for_each_drv+0x15f/0x1e0 drivers/base/bus.c:427\n __device_attach+0x228/0x4a0 drivers/base/dd.c:965\n bus_probe_device+0x1e4/0x290 drivers/base/bus.c:487\n device_add+0xc2f/0x2180 drivers/base/core.c:3354\n usb_set_configuration+0x113a/0x1910 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xba/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd9/0x2c0 drivers/usb/core/driver.c:293"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42080",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/8656ef8a9288d6c932654f8d3856dc4ab1cfc6b5",
            "https://git.kernel.org/stable/c/782bdaf9d01658281bc813f3f873e6258aa1fd8d",
            "https://git.kernel.org/stable/c/8ac281d42337f36cf7061cf1ea094181b84bc1a9",
            "https://git.kernel.org/stable/c/f45b43d17240e9ca67ebf3cc82bb046b07cc1c61",
            "https://git.kernel.org/stable/c/ca537a34775c103f7b14d7bbd976403f1d1525d8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/restrack: Fix potential invalid address access\n\nstruct rdma_restrack_entry's kern_name was set to KBUILD_MODNAME\nin ib_create_cq(), while if the module exited but forgot del this\nrdma_restrack_entry, it would cause a invalid address access in\nrdma_restrack_clean() when print the owner of this rdma_restrack_entry.\n\nThese code is used to help find one forgotten PD release in one of the\nULPs. But it is not needed anymore, so delete them."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41640",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/alemusix/CVE-2024-41640"
        ],
        "summary": "Cross Site Scripting (XSS) vulnerability in AML Surety Eco up to 3.5 allows an attacker to run arbitrary code via crafted GET request using the id parameter."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42064",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/27df59c6071470efce7182ee92fbb16afba551e0",
            "https://git.kernel.org/stable/c/af114efe8d24b5711cfbedf7180f2ac1a296c24b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip pipe if the pipe idx not set properly\n\n[why]\nDriver crashes when pipe idx not set properly\n\n[how]\nAdd code to skip the pipe that idx not set properly"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41817",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-8rxc-922v-phg8",
            "https://github.com/ImageMagick/ImageMagick/commit/6526a2b28510ead6a3e14de711bb991ad9abff38",
            "https://github.com/ImageMagick/ImageMagick/blob/3b22378a23d59d7517c43b65b1822f023df357a0/app-image/AppRun#L11-L14"
        ],
        "summary": "ImageMagick is a free and open-source software suite, used for editing and manipulating digital images. The `AppImage` version `ImageMagick` might use an empty path when setting `MAGICK_CONFIGURE_PATH` and `LD_LIBRARY_PATH` environment variables while executing, which might lead to arbitrary code execution by loading malicious configuration files or shared libraries in the current working directory while executing `ImageMagick`. The vulnerability is fixed in 7.11-36."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42063",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/b30f3197a6cd080052d5d4973f9a6b479fd9fff5",
            "https://git.kernel.org/stable/c/d812ae6e02bd6e6a9cd1fdb09519c2f33e875faf",
            "https://git.kernel.org/stable/c/3189983c26108cf0990e5c46856dc9feb9470d12",
            "https://git.kernel.org/stable/c/e8742081db7d01f980c6161ae1e8a1dbc1e30979"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode\n\nsyzbot reported uninit memory usages during map_{lookup,delete}_elem.\n\n==========\nBUG: KMSAN: uninit-value in __dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\nBUG: KMSAN: uninit-value in dev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n__dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\ndev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n____bpf_map_lookup_elem kernel/bpf/helpers.c:42 [inline]\nbpf_map_lookup_elem+0x5c/0x80 kernel/bpf/helpers.c:38\n___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997\n__bpf_prog_run256+0xb5/0xe0 kernel/bpf/core.c:2237\n==========\n\nThe reproducer should be in the interpreter mode.\n\nThe C reproducer is trying to run the following bpf prog:\n\n    0: (18) r0 = 0x0\n    2: (18) r1 = map[id:49]\n    4: (b7) r8 = 16777216\n    5: (7b) *(u64 *)(r10 -8) = r8\n    6: (bf) r2 = r10\n    7: (07) r2 += -229\n            ^^^^^^^^^^\n\n    8: (b7) r3 = 8\n    9: (b7) r4 = 0\n   10: (85) call dev_map_lookup_elem#1543472\n   11: (95) exit\n\nIt is due to the \"void *key\" (r2) passed to the helper. bpf allows uninit\nstack memory access for bpf prog with the right privileges. This patch\nuses kmsan_unpoison_memory() to mark the stack as initialized.\n\nThis should address different syzbot reports on the uninit \"void *key\"\nargument during map_{lookup,delete}_elem."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41818",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v",
            "https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164",
            "https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10"
        ],
        "summary": "fast-xml-parser is an open source, pure javascript xml parser. a ReDOS exists on currency.js. This vulnerability is fixed in 4.4.1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42065",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/cc796a77985d6af75c9362cb2e73dce4ae3f97cd",
            "https://git.kernel.org/stable/c/a6eff8f9c7e844cb24ccb188ca24abcd59734e74"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Add a NULL check in xe_ttm_stolen_mgr_init\n\nAdd an explicit check to ensure that the mgr is not NULL."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42063",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/b30f3197a6cd080052d5d4973f9a6b479fd9fff5",
            "https://git.kernel.org/stable/c/d812ae6e02bd6e6a9cd1fdb09519c2f33e875faf",
            "https://git.kernel.org/stable/c/3189983c26108cf0990e5c46856dc9feb9470d12",
            "https://git.kernel.org/stable/c/e8742081db7d01f980c6161ae1e8a1dbc1e30979"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode\n\nsyzbot reported uninit memory usages during map_{lookup,delete}_elem.\n\n==========\nBUG: KMSAN: uninit-value in __dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\nBUG: KMSAN: uninit-value in dev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n__dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\ndev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n____bpf_map_lookup_elem kernel/bpf/helpers.c:42 [inline]\nbpf_map_lookup_elem+0x5c/0x80 kernel/bpf/helpers.c:38\n___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997\n__bpf_prog_run256+0xb5/0xe0 kernel/bpf/core.c:2237\n==========\n\nThe reproducer should be in the interpreter mode.\n\nThe C reproducer is trying to run the following bpf prog:\n\n    0: (18) r0 = 0x0\n    2: (18) r1 = map[id:49]\n    4: (b7) r8 = 16777216\n    5: (7b) *(u64 *)(r10 -8) = r8\n    6: (bf) r2 = r10\n    7: (07) r2 += -229\n            ^^^^^^^^^^\n\n    8: (b7) r3 = 8\n    9: (b7) r4 = 0\n   10: (85) call dev_map_lookup_elem#1543472\n   11: (95) exit\n\nIt is due to the \"void *key\" (r2) passed to the helper. bpf allows uninit\nstack memory access for bpf prog with the right privileges. This patch\nuses kmsan_unpoison_memory() to mark the stack as initialized.\n\nThis should address different syzbot reports on the uninit \"void *key\"\nargument during map_{lookup,delete}_elem."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42066",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/79d54ddf0e292b810887994bb04709c5ac0e1531",
            "https://git.kernel.org/stable/c/4f4fcafde343a54465f85a2909fc684918507a4b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Fix potential integer overflow in page size calculation\n\nExplicitly cast tbo->page_alignment to u64 before bit-shifting to\nprevent overflow when assigning to min_page_size."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42071",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ef7646ed49fff962e97b276f4ab91327a67eeb5a",
            "https://git.kernel.org/stable/c/84b767f9e34fdb143c09e66a2a20722fc2921821"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: use dev_consume_skb_any outside of napi\n\nIf we're not in a NAPI softirq context, we need to be careful\nabout how we call napi_consume_skb(), specifically we need to\ncall it with budget==0 to signal to it that we're not in a\nsafe context.\n\nThis was found while running some configuration stress testing\nof traffic and a change queue config loop running, and this\ncurious note popped out:\n\n[ 4371.402645] BUG: using smp_processor_id() in preemptible [00000000] code: ethtool/20545\n[ 4371.402897] caller is napi_skb_cache_put+0x16/0x80\n[ 4371.403120] CPU: 25 PID: 20545 Comm: ethtool Kdump: loaded Tainted: G           OE      6.10.0-rc3-netnext+ #8\n[ 4371.403302] Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 01/23/2021\n[ 4371.403460] Call Trace:\n[ 4371.403613]  <TASK>\n[ 4371.403758]  dump_stack_lvl+0x4f/0x70\n[ 4371.403904]  check_preemption_disabled+0xc1/0xe0\n[ 4371.404051]  napi_skb_cache_put+0x16/0x80\n[ 4371.404199]  ionic_tx_clean+0x18a/0x240 [ionic]\n[ 4371.404354]  ionic_tx_cq_service+0xc4/0x200 [ionic]\n[ 4371.404505]  ionic_tx_flush+0x15/0x70 [ionic]\n[ 4371.404653]  ? ionic_lif_qcq_deinit.isra.23+0x5b/0x70 [ionic]\n[ 4371.404805]  ionic_txrx_deinit+0x71/0x190 [ionic]\n[ 4371.404956]  ionic_reconfigure_queues+0x5f5/0xff0 [ionic]\n[ 4371.405111]  ionic_set_ringparam+0x2e8/0x3e0 [ionic]\n[ 4371.405265]  ethnl_set_rings+0x1f1/0x300\n[ 4371.405418]  ethnl_default_set_doit+0xbb/0x160\n[ 4371.405571]  genl_family_rcv_msg_doit+0xff/0x130\n\t[...]\n\nI found that ionic_tx_clean() calls napi_consume_skb() which calls\nnapi_skb_cache_put(), but before that last call is the note\n    /* Zero budget indicate non-NAPI context called us, like netpoll */\nand\n    DEBUG_NET_WARN_ON_ONCE(!in_softirq());\n\nThose are pretty big hints that we're doing it wrong.  We can pass a\ncontext hint down through the calls to let ionic_tx_clean() know what\nwe're doing so it can call napi_consume_skb() correctly."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42072",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/175827e04f4be53f3dfb57edf12d0d49b18fd939",
            "https://git.kernel.org/stable/c/2b2efe1937ca9f8815884bd4dcd5b32733025103"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix may_goto with negative offset.\n\nZac's syzbot crafted a bpf prog that exposed two bugs in may_goto.\nThe 1st bug is the way may_goto is patched. When offset is negative\nit should be patched differently.\nThe 2nd bug is in the verifier:\nwhen current state may_goto_depth is equal to visited state may_goto_depth\nit means there is an actual infinite loop. It's not correct to prune\nexploration of the program at this point.\nNote, that this check doesn't limit the program to only one may_goto insn,\nsince 2nd and any further may_goto will increment may_goto_depth only\nin the queued state pushed for future exploration. The current state\nwill have may_goto_depth == 0 regardless of number of may_goto insns\nand the verifier has to explore the program until bpf_exit."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42071",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ef7646ed49fff962e97b276f4ab91327a67eeb5a",
            "https://git.kernel.org/stable/c/84b767f9e34fdb143c09e66a2a20722fc2921821"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: use dev_consume_skb_any outside of napi\n\nIf we're not in a NAPI softirq context, we need to be careful\nabout how we call napi_consume_skb(), specifically we need to\ncall it with budget==0 to signal to it that we're not in a\nsafe context.\n\nThis was found while running some configuration stress testing\nof traffic and a change queue config loop running, and this\ncurious note popped out:\n\n[ 4371.402645] BUG: using smp_processor_id() in preemptible [00000000] code: ethtool/20545\n[ 4371.402897] caller is napi_skb_cache_put+0x16/0x80\n[ 4371.403120] CPU: 25 PID: 20545 Comm: ethtool Kdump: loaded Tainted: G           OE      6.10.0-rc3-netnext+ #8\n[ 4371.403302] Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 01/23/2021\n[ 4371.403460] Call Trace:\n[ 4371.403613]  <TASK>\n[ 4371.403758]  dump_stack_lvl+0x4f/0x70\n[ 4371.403904]  check_preemption_disabled+0xc1/0xe0\n[ 4371.404051]  napi_skb_cache_put+0x16/0x80\n[ 4371.404199]  ionic_tx_clean+0x18a/0x240 [ionic]\n[ 4371.404354]  ionic_tx_cq_service+0xc4/0x200 [ionic]\n[ 4371.404505]  ionic_tx_flush+0x15/0x70 [ionic]\n[ 4371.404653]  ? ionic_lif_qcq_deinit.isra.23+0x5b/0x70 [ionic]\n[ 4371.404805]  ionic_txrx_deinit+0x71/0x190 [ionic]\n[ 4371.404956]  ionic_reconfigure_queues+0x5f5/0xff0 [ionic]\n[ 4371.405111]  ionic_set_ringparam+0x2e8/0x3e0 [ionic]\n[ 4371.405265]  ethnl_set_rings+0x1f1/0x300\n[ 4371.405418]  ethnl_default_set_doit+0xbb/0x160\n[ 4371.405571]  genl_family_rcv_msg_doit+0xff/0x130\n\t[...]\n\nI found that ionic_tx_clean() calls napi_consume_skb() which calls\nnapi_skb_cache_put(), but before that last call is the note\n    /* Zero budget indicate non-NAPI context called us, like netpoll */\nand\n    DEBUG_NET_WARN_ON_ONCE(!in_softirq());\n\nThose are pretty big hints that we're doing it wrong.  We can pass a\ncontext hint down through the calls to let ionic_tx_clean() know what\nwe're doing so it can call napi_consume_skb() correctly."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42074",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/e158ed266fc1adfa456880fb6dabce2e5623843b",
            "https://git.kernel.org/stable/c/b0c39ae1cc86afe74aa2f6273ccb514f8d180cf6",
            "https://git.kernel.org/stable/c/98d919dfee1cc402ca29d45da642852d7c9a2301"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: amd: acp: add a null check for chip_pdev structure\n\nWhen acp platform device creation is skipped, chip->chip_pdev value will\nremain NULL. Add NULL check for chip->chip_pdev structure in\nsnd_acp_resume() function to avoid null pointer dereference."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42075",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/87496a1b01e8e2e399428c0db25e106f7961d01e",
            "https://git.kernel.org/stable/c/b90d77e5fd784ada62ddd714d15ee2400c28e1cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix remap of arena.\n\nThe bpf arena logic didn't account for mremap operation. Add a refcnt for\nmultiple mmap events to prevent use-after-free in arena_vm_close."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42081",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/76ec0e33707282d5321555698d902f4e067aff37",
            "https://git.kernel.org/stable/c/b15e65349553b1689d15fbdebea874ca5ae2274a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/xe_devcoredump: Check NULL before assignments\n\nAssign 'xe_devcoredump_snapshot *' and 'xe_device *' only if\n'coredump' is not NULL.\n\nv2\n- Fix commit messages.\n\nv3\n- Define variables before code.(Ashutosh/Jose)\n\nv4\n- Drop return check for coredump_to_xe. (Jose/Rodrigo)\n\nv5\n- Modify misleading commit message. (Matt)"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42077",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a68b896aa56e435506453ec8835bc991ec3ae687",
            "https://git.kernel.org/stable/c/320273b5649bbcee87f9e65343077189699d2a7a",
            "https://git.kernel.org/stable/c/9ea2d1c6789722d58ec191f14f9a02518d55b6b4",
            "https://git.kernel.org/stable/c/c05ffb693bfb42a48ef3ee88a55b57392984e111",
            "https://git.kernel.org/stable/c/331d1079d58206ff7dc5518185f800b412f89bc6",
            "https://git.kernel.org/stable/c/be346c1a6eeb49d8fda827d2a9522124c2f72f36"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix DIO failure due to insufficient transaction credits\n\nThe code in ocfs2_dio_end_io_write() estimates number of necessary\ntransaction credits using ocfs2_calc_extend_credits().  This however does\nnot take into account that the IO could be arbitrarily large and can\ncontain arbitrary number of extents.\n\nExtent tree manipulations do often extend the current transaction but not\nin all of the cases.  For example if we have only single block extents in\nthe tree, ocfs2_mark_extent_written() will end up calling\nocfs2_replace_extent_rec() all the time and we will never extend the\ncurrent transaction and eventually exhaust all the transaction credits if\nthe IO contains many single block extents.  Once that happens a\nWARN_ON(jbd2_handle_buffer_credits(handle) <= 0) is triggered in\njbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to\nthis error.  This was actually triggered by one of our customers on a\nheavily fragmented OCFS2 filesystem.\n\nTo fix the issue make sure the transaction always has enough credits for\none extent insert before each call of ocfs2_mark_extent_written().\n\nHeming Zhao said:\n\n------\nPANIC: \"Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error\"\n\nPID: xxx  TASK: xxxx  CPU: 5  COMMAND: \"SubmitThread-CA\"\n  #0 machine_kexec at ffffffff8c069932\n  #1 __crash_kexec at ffffffff8c1338fa\n  #2 panic at ffffffff8c1d69b9\n  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]\n  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]\n  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]\n  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]\n  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]\n  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]\n  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]\n#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]\n#11 dio_complete at ffffffff8c2b9fa7\n#12 do_blockdev_direct_IO at ffffffff8c2bc09f\n#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]\n#14 generic_file_direct_write at ffffffff8c1dcf14\n#15 __generic_file_write_iter at ffffffff8c1dd07b\n#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]\n#17 aio_write at ffffffff8c2cc72e\n#18 kmem_cache_alloc at ffffffff8c248dde\n#19 do_io_submit at ffffffff8c2ccada\n#20 do_syscall_64 at ffffffff8c004984\n#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42082",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1095b8efbb13a6a5fa583ed373ee1ccab29da2d0",
            "https://git.kernel.org/stable/c/1d3e3b3aa2cbe9bc7db9a7f8673a9fa6d2990d54",
            "https://git.kernel.org/stable/c/4e0c539ee265d5c6e7fa7d229cd4aa7bc01816e2",
            "https://git.kernel.org/stable/c/14e51ea78b4ccacb7acb1346b9241bb790a2054c",
            "https://git.kernel.org/stable/c/f92298b0467fd77edc4c1a2c3e48833e69840ec4",
            "https://git.kernel.org/stable/c/7e9f79428372c6eab92271390851be34ab26bfb4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxdp: Remove WARN() from __xdp_reg_mem_model()\n\nsyzkaller reports a warning in __xdp_reg_mem_model().\n\nThe warning occurs only if __mem_id_init_hash_table() returns an error. It\nreturns the error in two cases:\n\n  1. memory allocation fails;\n  2. rhashtable_init() fails when some fields of rhashtable_params\n     struct are not initialized properly.\n\nThe second case cannot happen since there is a static const rhashtable_params\nstruct with valid fields. So, warning is only triggered when there is a\nproblem with memory allocation.\n\nThus, there is no sense in using WARN() to handle this error and it can be\nsafely removed.\n\nWARNING: CPU: 0 PID: 5065 at net/core/xdp.c:299 __xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCPU: 0 PID: 5065 Comm: syz-executor883 Not tainted 6.8.0-syzkaller-05271-gf99c5f563c17 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nRIP: 0010:__xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCall Trace:\n xdp_reg_mem_model+0x22/0x40 net/core/xdp.c:344\n xdp_test_run_setup net/bpf/test_run.c:188 [inline]\n bpf_test_run_xdp_live+0x365/0x1e90 net/bpf/test_run.c:377\n bpf_prog_test_run_xdp+0x813/0x11b0 net/bpf/test_run.c:1267\n bpf_prog_test_run+0x33a/0x3b0 kernel/bpf/syscall.c:4240\n __sys_bpf+0x48d/0x810 kernel/bpf/syscall.c:5649\n __do_sys_bpf kernel/bpf/syscall.c:5738 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:5736 [inline]\n __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5736\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nFound by Linux Verification Center (linuxtesting.org) with syzkaller."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41083",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3473eb87afd402e415a8ca885b284ea0420dde25",
            "https://git.kernel.org/stable/c/a81c98bfa40c11f8ea79b5a9b3f5fda73bfbb4d2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix netfs_page_mkwrite() to check folio->mapping is valid\n\nFix netfs_page_mkwrite() to check that folio->mapping is valid once it has\ntaken the folio lock (as filemap_page_mkwrite() does).  Without this,\ngeneric/247 occasionally oopses with something like the following:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    #PF: supervisor read access in kernel mode\n    #PF: error_code(0x0000) - not-present page\n\n    RIP: 0010:trace_event_raw_event_netfs_folio+0x61/0xc0\n    ...\n    Call Trace:\n     <TASK>\n     ? __die_body+0x1a/0x60\n     ? page_fault_oops+0x6e/0xa0\n     ? exc_page_fault+0xc2/0xe0\n     ? asm_exc_page_fault+0x22/0x30\n     ? trace_event_raw_event_netfs_folio+0x61/0xc0\n     trace_netfs_folio+0x39/0x40\n     netfs_page_mkwrite+0x14c/0x1d0\n     do_page_mkwrite+0x50/0x90\n     do_pte_missing+0x184/0x200\n     __handle_mm_fault+0x42d/0x500\n     handle_mm_fault+0x121/0x1f0\n     do_user_addr_fault+0x23e/0x3c0\n     exc_page_fault+0xc2/0xe0\n     asm_exc_page_fault+0x22/0x30\n\nThis is due to the invalidate_inode_pages2_range() issued at the end of the\nDIO write interfering with the mmap'd writes."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42083",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/8ae401525ae84228a8986bb369224a6224e4d22f",
            "https://git.kernel.org/stable/c/e3f02f32a05009a688a87f5799e049ed6b55bab5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: fix kernel panic due to multi-buffer handling\n\nCurrently, the ionic_run_xdp() doesn't handle multi-buffer packets\nproperly for XDP_TX and XDP_REDIRECT.\nWhen a jumbo frame is received, the ionic_run_xdp() first makes xdp\nframe with all necessary pages in the rx descriptor.\nAnd if the action is either XDP_TX or XDP_REDIRECT, it should unmap\ndma-mapping and reset page pointer to NULL for all pages, not only the\nfirst page.\nBut it doesn't for SG pages. So, SG pages unexpectedly will be reused.\nIt eventually causes kernel panic.\n\nOops: general protection fault, probably for non-canonical address 0x504f4e4dbebc64ff: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 3 PID: 0 Comm: swapper/3 Not tainted 6.10.0-rc3+ #25\nRIP: 0010:xdp_return_frame+0x42/0x90\nCode: 01 75 12 5b 4c 89 e6 5d 31 c9 41 5c 31 d2 41 5d e9 73 fd ff ff 44 8b 6b 20 0f b7 43 0a 49 81 ed 68 01 00 00 49 29 c5 49 01 fd <41> 80 7d0\nRSP: 0018:ffff99d00122ce08 EFLAGS: 00010202\nRAX: 0000000000005453 RBX: ffff8d325f904000 RCX: 0000000000000001\nRDX: 00000000670e1000 RSI: 000000011f90d000 RDI: 504f4e4d4c4b4a49\nRBP: ffff99d003907740 R08: 0000000000000000 R09: 0000000000000000\nR10: 000000011f90d000 R11: 0000000000000000 R12: ffff8d325f904010\nR13: 504f4e4dbebc64fd R14: ffff8d3242b070c8 R15: ffff99d0039077c0\nFS:  0000000000000000(0000) GS:ffff8d399f780000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f41f6c85e38 CR3: 000000037ac30000 CR4: 00000000007506f0\nPKRU: 55555554\nCall Trace:\n <IRQ>\n ? die_addr+0x33/0x90\n ? exc_general_protection+0x251/0x2f0\n ? asm_exc_general_protection+0x22/0x30\n ? xdp_return_frame+0x42/0x90\n ionic_tx_clean+0x211/0x280 [ionic 15881354510e6a9c655c59c54812b319ed2cd015]\n ionic_tx_cq_service+0xd3/0x210 [ionic 15881354510e6a9c655c59c54812b319ed2cd015]\n ionic_txrx_napi+0x41/0x1b0 [ionic 15881354510e6a9c655c59c54812b319ed2cd015]\n __napi_poll.constprop.0+0x29/0x1b0\n net_rx_action+0x2c4/0x350\n handle_softirqs+0xf4/0x320\n irq_exit_rcu+0x78/0xa0\n common_interrupt+0x77/0x90"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41088",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/f926c022ebaabf7963bebf89a97201d66978a025",
            "https://git.kernel.org/stable/c/3e72558c1711d524e3150103739ddd06650e291b",
            "https://git.kernel.org/stable/c/6c6b4afa59c2fb4d1759235f866d8caed2aa4729",
            "https://git.kernel.org/stable/c/d8fb63e46c884c898a38f061c2330f7729e75510"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: mcp251xfd: fix infinite loop when xmit fails\n\nWhen the mcp251xfd_start_xmit() function fails, the driver stops\nprocessing messages, and the interrupt routine does not return,\nrunning indefinitely even after killing the running application.\n\nError messages:\n[  441.298819] mcp251xfd spi2.0 can0: ERROR in mcp251xfd_start_xmit: -16\n[  441.306498] mcp251xfd spi2.0 can0: Transmit Event FIFO buffer not empty. (seq=0x000017c7, tef_tail=0x000017cf, tef_head=0x000017d0, tx_head=0x000017d3).\n... and repeat forever.\n\nThe issue can be triggered when multiple devices share the same SPI\ninterface. And there is concurrent access to the bus.\n\nThe problem occurs because tx_ring->head increments even if\nmcp251xfd_start_xmit() fails. Consequently, the driver skips one TX\npackage while still expecting a response in\nmcp251xfd_handle_tefif_one().\n\nResolve the issue by starting a workqueue to write the tx obj\nsynchronously if err = -EBUSY. In case of another error, decrement\ntx_ring->head, remove skb from the echo stack, and drop the message.\n\n[mkl: use more imperative wording in patch description]"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41092",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/f771b91f21c46ad1217328d05e72a2c7e3add535",
            "https://git.kernel.org/stable/c/29c0fdf49078ab161570d3d1c6e13d66f182717d",
            "https://git.kernel.org/stable/c/ca0fabd365a27a94a36e68a7a02df8ff3c13dac6",
            "https://git.kernel.org/stable/c/06dec31a0a5112a91f49085e8a8fa1a82296d5c7",
            "https://git.kernel.org/stable/c/414f4a31f7a811008fd9a33b06216b060bad18fc",
            "https://git.kernel.org/stable/c/996c3412a06578e9d779a16b9e79ace18125ab50"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gt: Fix potential UAF by revoke of fence registers\n\nCI has been sporadically reporting the following issue triggered by\nigt@i915_selftest@live@hangcheck on ADL-P and similar machines:\n\n<6> [414.049203] i915: Running intel_hangcheck_live_selftests/igt_reset_evict_fence\n...\n<6> [414.068804] i915 0000:00:02.0: [drm] GT0: GUC: submission enabled\n<6> [414.068812] i915 0000:00:02.0: [drm] GT0: GUC: SLPC enabled\n<3> [414.070354] Unable to pin Y-tiled fence; err:-4\n<3> [414.071282] i915_vma_revoke_fence:301 GEM_BUG_ON(!i915_active_is_idle(&fence->active))\n...\n<4>[  609.603992] ------------[ cut here ]------------\n<2>[  609.603995] kernel BUG at drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c:301!\n<4>[  609.604003] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n<4>[  609.604006] CPU: 0 PID: 268 Comm: kworker/u64:3 Tainted: G     U  W          6.9.0-CI_DRM_14785-g1ba62f8cea9c+ #1\n<4>[  609.604008] Hardware name: Intel Corporation Alder Lake Client Platform/AlderLake-P DDR4 RVP, BIOS RPLPFWI1.R00.4035.A00.2301200723 01/20/2023\n<4>[  609.604010] Workqueue: i915 __i915_gem_free_work [i915]\n<4>[  609.604149] RIP: 0010:i915_vma_revoke_fence+0x187/0x1f0 [i915]\n...\n<4>[  609.604271] Call Trace:\n<4>[  609.604273]  <TASK>\n...\n<4>[  609.604716]  __i915_vma_evict+0x2e9/0x550 [i915]\n<4>[  609.604852]  __i915_vma_unbind+0x7c/0x160 [i915]\n<4>[  609.604977]  force_unbind+0x24/0xa0 [i915]\n<4>[  609.605098]  i915_vma_destroy+0x2f/0xa0 [i915]\n<4>[  609.605210]  __i915_gem_object_pages_fini+0x51/0x2f0 [i915]\n<4>[  609.605330]  __i915_gem_free_objects.isra.0+0x6a/0xc0 [i915]\n<4>[  609.605440]  process_scheduled_works+0x351/0x690\n...\n\nIn the past, there were similar failures reported by CI from other IGT\ntests, observed on other platforms.\n\nBefore commit 63baf4f3d587 (\"drm/i915/gt: Only wait for GPU activity\nbefore unbinding a GGTT fence\"), i915_vma_revoke_fence() was waiting for\nidleness of vma->active via fence_update().   That commit introduced\nvma->fence->active in order for the fence_update() to be able to wait\nselectively on that one instead of vma->active since only idleness of\nfence registers was needed.  But then, another commit 0d86ee35097a\n(\"drm/i915/gt: Make fence revocation unequivocal\") replaced the call to\nfence_update() in i915_vma_revoke_fence() with only fence_write(), and\nalso added that GEM_BUG_ON(!i915_active_is_idle(&fence->active)) in front.\nNo justification was provided on why we might then expect idleness of\nvma->fence->active without first waiting on it.\n\nThe issue can be potentially caused by a race among revocation of fence\nregisters on one side and sequential execution of signal callbacks invoked\non completion of a request that was using them on the other, still\nprocessed in parallel to revocation of those fence registers.  Fix it by\nwaiting for idleness of vma->fence->active in i915_vma_revoke_fence().\n\n(cherry picked from commit 24bb052d3dd499c5956abad5f7d8e4fd07da7fb1)"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41624",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "http://himalaya.com",
            "https://github.com/x1ngg3/cve/tree/main/CVE-2024-41624"
        ],
        "summary": "Incorrect access control in Himalaya Xiaoya nano smart speaker rom_version 1.6.96 allows a remote attacker to have an unspecified impact."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41021",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/9e13767ccefdc4f8aa92514b592b60f6b54882ff",
            "https://git.kernel.org/stable/c/a3aefb871222a9880602d1a44a558177b4143e3b",
            "https://git.kernel.org/stable/c/df39038cd89525d465c2c8827eb64116873f141a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Fix VM_FAULT_HWPOISON handling in do_exception()\n\nThere is no support for HWPOISON, MEMORY_FAILURE, or ARCH_HAS_COPY_MC on\ns390. Therefore we do not expect to see VM_FAULT_HWPOISON in\ndo_exception().\n\nHowever, since commit af19487f00f3 (\"mm: make PTE_MARKER_SWAPIN_ERROR more\ngeneral\"), it is possible to see VM_FAULT_HWPOISON in combination with\nPTE_MARKER_POISONED, even on architectures that do not support HWPOISON\notherwise. In this case, we will end up on the BUG() in do_exception().\n\nFix this by treating VM_FAULT_HWPOISON the same as VM_FAULT_SIGBUS, similar\nto x86 when MEMORY_FAILURE is not configured. Also print unexpected fault\nflags, for easier debugging.\n\nNote that VM_FAULT_HWPOISON_LARGE is not expected, because s390 cannot\nsupport swap entries on other levels than PTE level."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37906",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3",
            "https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248"
        ],
        "summary": "Admidio is a free, open source user management system for websites of organizations and groups. In Admidio before version 4.3.9, there is an SQL Injection in the `/adm_program/modules/ecards/ecard_send.php` source file of the Admidio Application. The SQL Injection results in a compromise of the application's database. The value of `ecard_recipients `POST parameter is being directly concatenated with the SQL query in the source code causing the SQL Injection. The SQL Injection can be exploited by a member user, using blind condition-based, time-based, and Out of band interaction SQL Injection payloads. This vulnerability is fixed in 4.3.9."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41020",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a561145f3ae973ebf3e0aee41624e92a6c5cb38d",
            "https://git.kernel.org/stable/c/4c43ad4ab41602201d34c66ac62130fe339d686f",
            "https://git.kernel.org/stable/c/911cc83e56a2de5a40758766c6a70d6998248860",
            "https://git.kernel.org/stable/c/53e21cfa68a7d12de378b7116c75571f73e0dfa2",
            "https://git.kernel.org/stable/c/f4d0775c6e2f1340ca0725f0337de149aaa989ca",
            "https://git.kernel.org/stable/c/73ae349534ebc377328e7d21891e589626c6e82c",
            "https://git.kernel.org/stable/c/5b0af8e4c70e4b884bb94ff5f0cd49ecf1273c02",
            "https://git.kernel.org/stable/c/ed898f9ca3fa32c56c858b463ceb9d9936cc69c4",
            "https://git.kernel.org/stable/c/f8138f2ad2f745b9a1c696a05b749eabe44337ea"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfilelock: Fix fcntl/close race recovery compat path\n\nWhen I wrote commit 3cad1bc01041 (\"filelock: Remove locks reliably when\nfcntl/close race is detected\"), I missed that there are two copies of the\ncode I was patching: The normal version, and the version for 64-bit offsets\non 32-bit kernels.\nThanks to Greg KH for stumbling over this while doing the stable\nbackport...\n\nApply exactly the same fix to the compat path for 32-bit kernels."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41023",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7a54d31face626f62de415ebe77b43f76c3ffaf4",
            "https://git.kernel.org/stable/c/b58652db66c910c2245f5bee7deca41c12d707b9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/deadline: Fix task_struct reference leak\n\nDuring the execution of the following stress test with linux-rt:\n\nstress-ng --cyclic 30 --timeout 30 --minimize --quiet\n\nkmemleak frequently reported a memory leak concerning the task_struct:\n\nunreferenced object 0xffff8881305b8000 (size 16136):\n  comm \"stress-ng\", pid 614, jiffies 4294883961 (age 286.412s)\n  object hex dump (first 32 bytes):\n    02 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .@..............\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  debug hex dump (first 16 bytes):\n    53 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00  S...............\n  backtrace:\n    [<00000000046b6790>] dup_task_struct+0x30/0x540\n    [<00000000c5ca0f0b>] copy_process+0x3d9/0x50e0\n    [<00000000ced59777>] kernel_clone+0xb0/0x770\n    [<00000000a50befdc>] __do_sys_clone+0xb6/0xf0\n    [<000000001dbf2008>] do_syscall_64+0x5d/0xf0\n    [<00000000552900ff>] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nThe issue occurs in start_dl_timer(), which increments the task_struct\nreference count and sets a timer. The timer callback, dl_task_timer,\nis supposed to decrement the reference count upon expiration. However,\nif enqueue_task_dl() is called before the timer expires and cancels it,\nthe reference count is not decremented, leading to the leak.\n\nThis patch fixes the reference leak by ensuring the task_struct\nreference count is properly decremented when the timer is canceled."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41033",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1d1ba14e00d290b1ed616ed78c8c49bf897ce390",
            "https://git.kernel.org/stable/c/5a4d8944d6b1e1aaaa83ea42c116b520b4ed0394"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachestat: do not flush stats in recency check\n\nsyzbot detects that cachestat() is flushing stats, which can sleep, in its\nRCU read section (see [1]).  This is done in the workingset_test_recent()\nstep (which checks if the folio's eviction is recent).\n\nMove the stat flushing step to before the RCU read section of cachestat,\nand skip stat flushing during the recency check.\n\n[1]: https://lore.kernel.org/cgroups/000000000000f71227061bdf97e0@google.com/"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41026",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/c561c4ecce712f94b442db5960e281f13b28df2e",
            "https://git.kernel.org/stable/c/16198eef11c1929374381d7f6271b4bf6aa44615"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: davinci_mmc: Prevent transmitted data size from exceeding sgm's length\n\nNo check is done on the size of the data to be transmiited. This causes\na kernel panic when this size exceeds the sg_miter's length.\n\nLimit the number of transmitted bytes to sgm->length."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6576",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://www.progress.com/moveit",
            "https://community.progress.com/s/article/MOVEit-Transfer-Product-Security-Alert-Bulletin-July-2024-CVE-2024-6576"
        ],
        "summary": "Improper Authentication vulnerability in Progress MOVEit Transfer (SFTP module) can lead to Privilege Escalation.This issue affects MOVEit Transfer: from 2023.0.0 before 2023.0.12, from 2023.1.0 before 2023.1.7, from 2024.0.0 before 2024.0.3."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41030",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/66cf853e1c7a2407f15d9f7aaa3e47d61745e361",
            "https://git.kernel.org/stable/c/9e84b1ba5c98fb5c9f869c85db1d870354613baa",
            "https://git.kernel.org/stable/c/198498b2049c0f11f7670be6974570e02b0cc035",
            "https://git.kernel.org/stable/c/e2e33caa5dc2eae7bddf88b22ce11ec3d760e5cd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: discard write access to the directory open\n\nmay_open() does not allow a directory to be opened with the write access.\nHowever, some writing flags set by client result in adding write access\non server, making ksmbd incompatible with FUSE file system. Simply, let's\ndiscard the write access when opening a directory.\n\nlist_add corruption. next is NULL.\n------------[ cut here ]------------\nkernel BUG at lib/list_debug.c:26!\npc : __list_add_valid+0x88/0xbc\nlr : __list_add_valid+0x88/0xbc\nCall trace:\n__list_add_valid+0x88/0xbc\nfuse_finish_open+0x11c/0x170\nfuse_open_common+0x284/0x5e8\nfuse_dir_open+0x14/0x24\ndo_dentry_open+0x2a4/0x4e0\ndentry_open+0x50/0x80\nsmb2_open+0xbe4/0x15a4\nhandle_ksmbd_work+0x478/0x5ec\nprocess_one_work+0x1b4/0x448\nworker_thread+0x25c/0x430\nkthread+0x104/0x1d4\nret_from_fork+0x10/0x20"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41022",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3dd9734878a9042f0358301d19a2b006a0fc4d06",
            "https://git.kernel.org/stable/c/a5224e2123ce21102f346f518db80f004d5053a7",
            "https://git.kernel.org/stable/c/544fa213f15d27f0370795845d55eeb3e00080d2",
            "https://git.kernel.org/stable/c/e8dfbf83a82bbfb9680921719fbe65e535af59ea",
            "https://git.kernel.org/stable/c/4edb0a84e6b32e75dc9bd6dd085b2c2ff19ec287",
            "https://git.kernel.org/stable/c/d347c9a398bf7eab9408d207c0a50fb720f9de7d",
            "https://git.kernel.org/stable/c/298e2ce222e712ffafa47288c5b2fcf33d72fda3",
            "https://git.kernel.org/stable/c/6769a23697f17f9bf9365ca8ed62fe37e361a05a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix signedness bug in sdma_v4_0_process_trap_irq()\n\nThe \"instance\" variable needs to be signed for the error handling to work."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41036",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a0c69c492f4a8fad52f0a97565241c926160c9a4",
            "https://git.kernel.org/stable/c/80ece00137300d74642f2038c8fe5440deaf9f05",
            "https://git.kernel.org/stable/c/10fec0cd0e8f56ff06c46bb24254c7d8f8f2bbf0",
            "https://git.kernel.org/stable/c/0913ec336a6c0c4a2b296bd9f74f8e41c4c83c8c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Fix deadlock with the SPI chip variant\n\nWhen SMP is enabled and spinlocks are actually functional then there is\na deadlock with the 'statelock' spinlock between ks8851_start_xmit_spi\nand ks8851_irq:\n\n    watchdog: BUG: soft lockup - CPU#0 stuck for 27s!\n    call trace:\n      queued_spin_lock_slowpath+0x100/0x284\n      do_raw_spin_lock+0x34/0x44\n      ks8851_start_xmit_spi+0x30/0xb8\n      ks8851_start_xmit+0x14/0x20\n      netdev_start_xmit+0x40/0x6c\n      dev_hard_start_xmit+0x6c/0xbc\n      sch_direct_xmit+0xa4/0x22c\n      __qdisc_run+0x138/0x3fc\n      qdisc_run+0x24/0x3c\n      net_tx_action+0xf8/0x130\n      handle_softirqs+0x1ac/0x1f0\n      __do_softirq+0x14/0x20\n      ____do_softirq+0x10/0x1c\n      call_on_irq_stack+0x3c/0x58\n      do_softirq_own_stack+0x1c/0x28\n      __irq_exit_rcu+0x54/0x9c\n      irq_exit_rcu+0x10/0x1c\n      el1_interrupt+0x38/0x50\n      el1h_64_irq_handler+0x18/0x24\n      el1h_64_irq+0x64/0x68\n      __netif_schedule+0x6c/0x80\n      netif_tx_wake_queue+0x38/0x48\n      ks8851_irq+0xb8/0x2c8\n      irq_thread_fn+0x2c/0x74\n      irq_thread+0x10c/0x1b0\n      kthread+0xc8/0xd8\n      ret_from_fork+0x10/0x20\n\nThis issue has not been identified earlier because tests were done on\na device with SMP disabled and so spinlocks were actually NOPs.\n\nNow use spin_(un)lock_bh for TX queue related locking to avoid execution\nof softirq work synchronously that would lead to a deadlock."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41039",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/fd035f0810b33c2a8792effdb82bf35920221565",
            "https://git.kernel.org/stable/c/9c9877a96e033bf6c6470b3b4f06106d91ace11e",
            "https://git.kernel.org/stable/c/49a79f344d0a17c6a5eef53716cc76fcdbfca9ba",
            "https://git.kernel.org/stable/c/3019b86bce16fbb5bc1964f3544d0ce7d0137278"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: cs_dsp: Fix overflow checking of wmfw header\n\nFix the checking that firmware file buffer is large enough for the\nwmfw header, to prevent overrunning the buffer.\n\nThe original code tested that the firmware data buffer contained\nenough bytes for the sums of the size of the structs\n\n\twmfw_header + wmfw_adsp1_sizes + wmfw_footer\n\nBut wmfw_adsp1_sizes is only used on ADSP1 firmware. For ADSP2 and\nHalo Core the equivalent struct is wmfw_adsp2_sizes, which is\n4 bytes longer. So the length check didn't guarantee that there\nare enough bytes in the firmware buffer for a header with\nwmfw_adsp2_sizes.\n\nThis patch splits the length check into three separate parts. Each\nof the wmfw_header, wmfw_adsp?_sizes and wmfw_footer are checked\nseparately before they are used."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41043",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/86858da8335db48bde9be02abd7156a69d622e86",
            "https://git.kernel.org/stable/c/631a4b3ddc7831b20442c59c28b0476d0704c9af"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nfnetlink_queue: drop bogus WARN_ON\n\nHappens when rules get flushed/deleted while packet is out, so remove\nthis WARN_ON.\n\nThis WARN exists in one form or another since v4.14, no need to backport\nthis to older releases, hence use a more recent fixes tag."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41025",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/8b8b82dcf393ceaca8c88939338fd4c30b5b11b2",
            "https://git.kernel.org/stable/c/dbf4c31c9b039fd9734da156036492a2a7f78f64",
            "https://git.kernel.org/stable/c/ad0bd973a033003ca578c42a760d1dc77aeea15e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Fix memory leak in audio daemon attach operation\n\nAudio PD daemon send the name as part of the init IOCTL call. This\nname needs to be copied to kernel for which memory is allocated.\nThis memory is never freed which might result in memory leak. Free\nthe memory when it is not needed."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40576",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://www.sourcecodester.com/php/17375/best-courier-management-system-project-php.html",
            "https://github.com/jubilianite/CVEs/blob/main/CVE-2024-40576.md"
        ],
        "summary": "Cross Site Scripting vulnerability in Best House Rental Management System 1.0 allows a remote attacker to execute arbitrary code via the \"House No\" and \"Description\" parameters in the houses page at the index.php component."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41041",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7a67c4e47626e6daccda62888f8b096abb5d3940",
            "https://git.kernel.org/stable/c/9f965684c57c3117cfd2f754dd3270383c529fba",
            "https://git.kernel.org/stable/c/ddf516e50bf8a7bc9b3bd8a9831f9c7a8131a32a",
            "https://git.kernel.org/stable/c/a6db0d3ea6536e7120871e5448b3032570152ec6",
            "https://git.kernel.org/stable/c/c5fd77ca13d657c6e99bf04f0917445e6a80231e",
            "https://git.kernel.org/stable/c/20ceae10623c3b29fdf7609690849475bcdebdb0",
            "https://git.kernel.org/stable/c/5c0b485a8c6116516f33925b9ce5b6104a6eadfd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nudp: Set SOCK_RCU_FREE earlier in udp_lib_get_port().\n\nsyzkaller triggered the warning [0] in udp_v4_early_demux().\n\nIn udp_v[46]_early_demux() and sk_lookup(), we do not touch the refcount\nof the looked-up sk and use sock_pfree() as skb->destructor, so we check\nSOCK_RCU_FREE to ensure that the sk is safe to access during the RCU grace\nperiod.\n\nCurrently, SOCK_RCU_FREE is flagged for a bound socket after being put\ninto the hash table.  Moreover, the SOCK_RCU_FREE check is done too early\nin udp_v[46]_early_demux() and sk_lookup(), so there could be a small race\nwindow:\n\n  CPU1                                 CPU2\n  ----                                 ----\n  udp_v4_early_demux()                 udp_lib_get_port()\n  |                                    |- hlist_add_head_rcu()\n  |- sk = __udp4_lib_demux_lookup()    |\n  |- DEBUG_NET_WARN_ON_ONCE(sk_is_refcounted(sk));\n                                       `- sock_set_flag(sk, SOCK_RCU_FREE)\n\nWe had the same bug in TCP and fixed it in commit 871019b22d1b (\"net:\nset SOCK_RCU_FREE before inserting socket into hashtable\").\n\nLet's apply the same fix for UDP.\n\n[0]:\nWARNING: CPU: 0 PID: 11198 at net/ipv4/udp.c:2599 udp_v4_early_demux+0x481/0xb70 net/ipv4/udp.c:2599\nModules linked in:\nCPU: 0 PID: 11198 Comm: syz-executor.1 Not tainted 6.9.0-g93bda33046e7 #13\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nRIP: 0010:udp_v4_early_demux+0x481/0xb70 net/ipv4/udp.c:2599\nCode: c5 7a 15 fe bb 01 00 00 00 44 89 e9 31 ff d3 e3 81 e3 bf ef ff ff 89 de e8 2c 74 15 fe 85 db 0f 85 02 06 00 00 e8 9f 7a 15 fe <0f> 0b e8 98 7a 15 fe 49 8d 7e 60 e8 4f 39 2f fe 49 c7 46 60 20 52\nRSP: 0018:ffffc9000ce3fa58 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff8318c92c\nRDX: ffff888036ccde00 RSI: ffffffff8318c2f1 RDI: 0000000000000001\nRBP: ffff88805a2dd6e0 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0001ffffffffffff R12: ffff88805a2dd680\nR13: 0000000000000007 R14: ffff88800923f900 R15: ffff88805456004e\nFS:  00007fc449127640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fc449126e38 CR3: 000000003de4b002 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\nPKRU: 55555554\nCall Trace:\n <TASK>\n ip_rcv_finish_core.constprop.0+0xbdd/0xd20 net/ipv4/ip_input.c:349\n ip_rcv_finish+0xda/0x150 net/ipv4/ip_input.c:447\n NF_HOOK include/linux/netfilter.h:314 [inline]\n NF_HOOK include/linux/netfilter.h:308 [inline]\n ip_rcv+0x16c/0x180 net/ipv4/ip_input.c:569\n __netif_receive_skb_one_core+0xb3/0xe0 net/core/dev.c:5624\n __netif_receive_skb+0x21/0xd0 net/core/dev.c:5738\n netif_receive_skb_internal net/core/dev.c:5824 [inline]\n netif_receive_skb+0x271/0x300 net/core/dev.c:5884\n tun_rx_batched drivers/net/tun.c:1549 [inline]\n tun_get_user+0x24db/0x2c50 drivers/net/tun.c:2002\n tun_chr_write_iter+0x107/0x1a0 drivers/net/tun.c:2048\n new_sync_write fs/read_write.c:497 [inline]\n vfs_write+0x76f/0x8d0 fs/read_write.c:590\n ksys_write+0xbf/0x190 fs/read_write.c:643\n __do_sys_write fs/read_write.c:655 [inline]\n __se_sys_write fs/read_write.c:652 [inline]\n __x64_sys_write+0x41/0x50 fs/read_write.c:652\n x64_sys_call+0xe66/0x1990 arch/x86/include/generated/asm/syscalls_64.h:2\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x4b/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x4b/0x53\nRIP: 0033:0x7fc44a68bc1f\nCode: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 e9 cf f5 ff 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 3c d0 f5 ff 48\nRSP: 002b:00007fc449126c90 EFLAGS: 00000293 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 00000000004bc050 RCX: 00007fc44a68bc1f\nR\n---truncated---"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41044",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/97d1efd8be26615ff680cdde86937d5943138f37",
            "https://git.kernel.org/stable/c/6e8f1c21174f9482033bbb59f13ce1a8cbe843c3",
            "https://git.kernel.org/stable/c/3ba12c2afd933fc1bf800f6d3f6c7ec8f602ce56",
            "https://git.kernel.org/stable/c/ebc5c630457783d17d0c438b0ad70b232a64a82f",
            "https://git.kernel.org/stable/c/3134bdf7356ed952dcecb480861d2afcc1e40492",
            "https://git.kernel.org/stable/c/099502ca410922b56353ccef2749bc0de669da78",
            "https://git.kernel.org/stable/c/d683e7f3fc48f59576af34631b4fb07fd931343e",
            "https://git.kernel.org/stable/c/f2aeb7306a898e1cbd03963d376f4b6656ca2b55"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nppp: reject claimed-as-LCP but actually malformed packets\n\nSince 'ppp_async_encode()' assumes valid LCP packets (with code\nfrom 1 to 7 inclusive), add 'ppp_check_packet()' to ensure that\nLCP packet has an actual body beyond PPP_LCP header bytes, and\nreject claimed-as-LCP but actually malformed data otherwise."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41032",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb",
            "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882",
            "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41028",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/e030aa6c972641cb069086a8c7a0f747653e472a",
            "https://git.kernel.org/stable/c/639868f1cb87b683cf830353bbee0c4078202313",
            "https://git.kernel.org/stable/c/0d71da43d6b7916d36cf1953d793da80433c50bf",
            "https://git.kernel.org/stable/c/b6e02c6b0377d4339986e07aeb696c632cd392aa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: toshiba_acpi: Fix array out-of-bounds access\n\nIn order to use toshiba_dmi_quirks[] together with the standard DMI\nmatching functions, it must be terminated by a empty entry.\n\nSince this entry is missing, an array out-of-bounds access occurs\nevery time the quirk list is processed.\n\nFix this by adding the terminating empty entry."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38529",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/Admidio/admidio/security/advisories/GHSA-g872-jwwr-vggm",
            "https://github.com/Admidio/admidio/commit/3b1cc1cda05747edebe15f2825b79bc5a673d94c"
        ],
        "summary": "Admidio is a free, open source user management system for websites of organizations and groups. In Admidio before version 4.3.10, there is a Remote Code Execution Vulnerability in the Message module of the Admidio Application, where it is possible to upload a PHP file in the attachment. The uploaded file can be accessed publicly through the URL `{admidio_base_url}/adm_my_files/messages_attachments/{file_name}`. The vulnerability is caused due to the lack of file extension verification, allowing malicious files to be uploaded to the server and public availability of the uploaded file. This vulnerability is fixed in 4.3.10."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41047",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/b399a68054dfb36eed121846ef5fcddba40b7740",
            "https://git.kernel.org/stable/c/4bc336b2345f1485438c0eb7246d9c8a8d09f8ff",
            "https://git.kernel.org/stable/c/5266302cb2c74d8ab0e9a69d5752fffaea70496e",
            "https://git.kernel.org/stable/c/0075b8c94d76830c7b6f018f6e4eeb0bf6465fdc",
            "https://git.kernel.org/stable/c/01fc5142ae6b06b61ed51a624f2732d6525d8ea3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix XDP program unloading while removing the driver\n\nThe commit 6533e558c650 (\"i40e: Fix reset path while removing\nthe driver\") introduced a new PF state \"__I40E_IN_REMOVE\" to block\nmodifying the XDP program while the driver is being removed.\nUnfortunately, such a change is useful only if the \".ndo_bpf()\"\ncallback was called out of the rmmod context because unloading the\nexisting XDP program is also a part of driver removing procedure.\nIn other words, from the rmmod context the driver is expected to\nunload the XDP program without reporting any errors. Otherwise,\nthe kernel warning with callstack is printed out to dmesg.\n\nExample failing scenario:\n 1. Load the i40e driver.\n 2. Load the XDP program.\n 3. Unload the i40e driver (using \"rmmod\" command).\n\nThe example kernel warning log:\n\n[  +0.004646] WARNING: CPU: 94 PID: 10395 at net/core/dev.c:9290 unregister_netdevice_many_notify+0x7a9/0x870\n[...]\n[  +0.010959] RIP: 0010:unregister_netdevice_many_notify+0x7a9/0x870\n[...]\n[  +0.002726] Call Trace:\n[  +0.002457]  <TASK>\n[  +0.002119]  ? __warn+0x80/0x120\n[  +0.003245]  ? unregister_netdevice_many_notify+0x7a9/0x870\n[  +0.005586]  ? report_bug+0x164/0x190\n[  +0.003678]  ? handle_bug+0x3c/0x80\n[  +0.003503]  ? exc_invalid_op+0x17/0x70\n[  +0.003846]  ? asm_exc_invalid_op+0x1a/0x20\n[  +0.004200]  ? unregister_netdevice_many_notify+0x7a9/0x870\n[  +0.005579]  ? unregister_netdevice_many_notify+0x3cc/0x870\n[  +0.005586]  unregister_netdevice_queue+0xf7/0x140\n[  +0.004806]  unregister_netdev+0x1c/0x30\n[  +0.003933]  i40e_vsi_release+0x87/0x2f0 [i40e]\n[  +0.004604]  i40e_remove+0x1a1/0x420 [i40e]\n[  +0.004220]  pci_device_remove+0x3f/0xb0\n[  +0.003943]  device_release_driver_internal+0x19f/0x200\n[  +0.005243]  driver_detach+0x48/0x90\n[  +0.003586]  bus_remove_driver+0x6d/0xf0\n[  +0.003939]  pci_unregister_driver+0x2e/0xb0\n[  +0.004278]  i40e_exit_module+0x10/0x5f0 [i40e]\n[  +0.004570]  __do_sys_delete_module.isra.0+0x197/0x310\n[  +0.005153]  do_syscall_64+0x85/0x170\n[  +0.003684]  ? syscall_exit_to_user_mode+0x69/0x220\n[  +0.004886]  ? do_syscall_64+0x95/0x170\n[  +0.003851]  ? exc_page_fault+0x7e/0x180\n[  +0.003932]  entry_SYSCALL_64_after_hwframe+0x71/0x79\n[  +0.005064] RIP: 0033:0x7f59dc9347cb\n[  +0.003648] Code: 73 01 c3 48 8b 0d 65 16 0c 00 f7 d8 64 89 01 48 83\nc8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 b0 00 00 00 0f\n05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 35 16 0c 00 f7 d8 64 89 01 48\n[  +0.018753] RSP: 002b:00007ffffac99048 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0\n[  +0.007577] RAX: ffffffffffffffda RBX: 0000559b9bb2f6e0 RCX: 00007f59dc9347cb\n[  +0.007140] RDX: 0000000000000000 RSI: 0000000000000800 RDI: 0000559b9bb2f748\n[  +0.007146] RBP: 00007ffffac99070 R08: 1999999999999999 R09: 0000000000000000\n[  +0.007133] R10: 00007f59dc9a5ac0 R11: 0000000000000206 R12: 0000000000000000\n[  +0.007141] R13: 00007ffffac992d8 R14: 0000559b9bb2f6e0 R15: 0000000000000000\n[  +0.007151]  </TASK>\n[  +0.002204] ---[ end trace 0000000000000000 ]---\n\nFix this by checking if the XDP program is being loaded or unloaded.\nThen, block only loading a new program while \"__I40E_IN_REMOVE\" is set.\nAlso, move testing \"__I40E_IN_REMOVE\" flag to the beginning of XDP_SETUP\ncallback to avoid unnecessary operations and checks."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41031",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/06b5a69c27ec405a3c3f2da8520ff1ee70b94a21",
            "https://git.kernel.org/stable/c/1ef650d3b1b2a16473981b447f38705fe9b93972",
            "https://git.kernel.org/stable/c/3390916aca7af1893ed2ebcdfee1d6fdb65bb058"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/filemap: skip to create PMD-sized page cache if needed\n\nOn ARM64, HPAGE_PMD_ORDER is 13 when the base page size is 64KB.  The\nPMD-sized page cache can't be supported by xarray as the following error\nmessages indicate.\n\n------------[ cut here ]------------\nWARNING: CPU: 35 PID: 7484 at lib/xarray.c:1025 xas_split_alloc+0xf8/0x128\nModules linked in: nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib  \\\nnft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct    \\\nnft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4    \\\nip_set rfkill nf_tables nfnetlink vfat fat virtio_balloon drm      \\\nfuse xfs libcrc32c crct10dif_ce ghash_ce sha2_ce sha256_arm64      \\\nsha1_ce virtio_net net_failover virtio_console virtio_blk failover \\\ndimlib virtio_mmio\nCPU: 35 PID: 7484 Comm: test Kdump: loaded Tainted: G W 6.10.0-rc5-gavin+ #9\nHardware name: QEMU KVM Virtual Machine, BIOS edk2-20240524-1.el9 05/24/2024\npstate: 83400005 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)\npc : xas_split_alloc+0xf8/0x128\nlr : split_huge_page_to_list_to_order+0x1c4/0x720\nsp : ffff800087a4f6c0\nx29: ffff800087a4f6c0 x28: ffff800087a4f720 x27: 000000001fffffff\nx26: 0000000000000c40 x25: 000000000000000d x24: ffff00010625b858\nx23: ffff800087a4f720 x22: ffffffdfc0780000 x21: 0000000000000000\nx20: 0000000000000000 x19: ffffffdfc0780000 x18: 000000001ff40000\nx17: 00000000ffffffff x16: 0000018000000000 x15: 51ec004000000000\nx14: 0000e00000000000 x13: 0000000000002000 x12: 0000000000000020\nx11: 51ec000000000000 x10: 51ece1c0ffff8000 x9 : ffffbeb961a44d28\nx8 : 0000000000000003 x7 : ffffffdfc0456420 x6 : ffff0000e1aa6eb8\nx5 : 20bf08b4fe778fca x4 : ffffffdfc0456420 x3 : 0000000000000c40\nx2 : 000000000000000d x1 : 000000000000000c x0 : 0000000000000000\nCall trace:\n xas_split_alloc+0xf8/0x128\n split_huge_page_to_list_to_order+0x1c4/0x720\n truncate_inode_partial_folio+0xdc/0x160\n truncate_inode_pages_range+0x1b4/0x4a8\n truncate_pagecache_range+0x84/0xa0\n xfs_flush_unmap_range+0x70/0x90 [xfs]\n xfs_file_fallocate+0xfc/0x4d8 [xfs]\n vfs_fallocate+0x124/0x2e8\n ksys_fallocate+0x4c/0xa0\n __arm64_sys_fallocate+0x24/0x38\n invoke_syscall.constprop.0+0x7c/0xd8\n do_el0_svc+0xb4/0xd0\n el0_svc+0x44/0x1d8\n el0t_64_sync_handler+0x134/0x150\n el0t_64_sync+0x17c/0x180\n\nFix it by skipping to allocate PMD-sized page cache when its size is\nlarger than MAX_PAGECACHE_ORDER.  For this specific case, we will fall to\nregular path where the readahead window is determined by BDI's sysfs file\n(read_ahead_kb)."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41050",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/35710c6c4a1c64478ec1b5e0e81d386c0844dec6",
            "https://git.kernel.org/stable/c/de045a82e1a4e04be62718d3c2981a55150765a0",
            "https://git.kernel.org/stable/c/9d3bf4e9aa23f0d9e99ebe7a94f232ddba54ee17",
            "https://git.kernel.org/stable/c/19f4f399091478c95947f6bd7ad61622300c30d9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: cyclic allocation of msg_id to avoid reuse\n\nReusing the msg_id after a maliciously completed reopen request may cause\na read request to remain unprocessed and result in a hung, as shown below:\n\n       t1       |      t2       |      t3\n-------------------------------------------------\ncachefiles_ondemand_select_req\n cachefiles_ondemand_object_is_close(A)\n cachefiles_ondemand_set_object_reopening(A)\n queue_work(fscache_object_wq, &info->work)\n                ondemand_object_worker\n                 cachefiles_ondemand_init_object(A)\n                  cachefiles_ondemand_send_req(OPEN)\n                    // get msg_id 6\n                    wait_for_completion(&req_A->done)\ncachefiles_ondemand_daemon_read\n // read msg_id 6 req_A\n cachefiles_ondemand_get_fd\n copy_to_user\n                                // Malicious completion msg_id 6\n                                copen 6,-1\n                                cachefiles_ondemand_copen\n                                 complete(&req_A->done)\n                                 // will not set the object to close\n                                 // because ondemand_id && fd is valid.\n\n                // ondemand_object_worker() is done\n                // but the object is still reopening.\n\n                                // new open req_B\n                                cachefiles_ondemand_init_object(B)\n                                 cachefiles_ondemand_send_req(OPEN)\n                                 // reuse msg_id 6\nprocess_open_req\n copen 6,A.size\n // The expected failed copen was executed successfully\n\nExpect copen to fail, and when it does, it closes fd, which sets the\nobject to close, and then close triggers reopen again. However, due to\nmsg_id reuse resulting in a successful copen, the anonymous fd is not\nclosed until the daemon exits. Therefore read requests waiting for reopen\nto complete may trigger hung task.\n\nTo avoid this issue, allocate the msg_id cyclically to avoid reusing the\nmsg_id for a very short duration of time."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41056",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/16d76857d6b5426f41b587d0bb925de3f25bfb21",
            "https://git.kernel.org/stable/c/392cff2f86a25a4286ff3151c7739143c61c1781",
            "https://git.kernel.org/stable/c/53a9f8cdbf35a682e9894e1a606f4640e5359185",
            "https://git.kernel.org/stable/c/680e126ec0400f6daecf0510c5bb97a55779ff03"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: cs_dsp: Use strnlen() on name fields in V1 wmfw files\n\nUse strnlen() instead of strlen() on the algorithm and coefficient name\nstring arrays in V1 wmfw files.\n\nIn V1 wmfw files the name is a NUL-terminated string in a fixed-size\narray. cs_dsp should protect against overrunning the array if the NUL\nterminator is missing."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41059",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/72805debec8f7aa342da194fe0ed7bc8febea335",
            "https://git.kernel.org/stable/c/c733e24a61cbcff10f660041d6d84d32bb7e4cb4",
            "https://git.kernel.org/stable/c/34f8efd2743f2d961e92e8e994de4c7a2f9e74a0",
            "https://git.kernel.org/stable/c/d02d8c1dacafb28930c39e16d48e40bb6e4cbc70",
            "https://git.kernel.org/stable/c/22999936b91ba545ce1fbbecae6895127945e91c",
            "https://git.kernel.org/stable/c/f08956d8e0f80fd0d4ad84ec917302bb2f3a9c6a",
            "https://git.kernel.org/stable/c/ad57dc2caf1e0a3c0a9904400fae7afbc9f74bb2",
            "https://git.kernel.org/stable/c/0570730c16307a72f8241df12363f76600baf57d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: fix uninit-value in copy_name\n\n[syzbot reported]\nBUG: KMSAN: uninit-value in sized_strscpy+0xc4/0x160\n sized_strscpy+0xc4/0x160\n copy_name+0x2af/0x320 fs/hfsplus/xattr.c:411\n hfsplus_listxattr+0x11e9/0x1a50 fs/hfsplus/xattr.c:750\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3877 [inline]\n slab_alloc_node mm/slub.c:3918 [inline]\n kmalloc_trace+0x57b/0xbe0 mm/slub.c:4065\n kmalloc include/linux/slab.h:628 [inline]\n hfsplus_listxattr+0x4cc/0x1a50 fs/hfsplus/xattr.c:699\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[Fix]\nWhen allocating memory to strbuf, initialize memory to 0."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T14:15:00",
        "access": {},
        "assigner": "security@ubuntu.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6984",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/juju/juju/commit/da929676853092a29ddf8d589468cf85ba3efaf2",
            "https://github.com/juju/juju/security/advisories/GHSA-6vjm-54vp-mxhx",
            "https://www.cve.org/CVERecord?id=CVE-2024-6984"
        ],
        "summary": "An issue was discovered in Juju that resulted in the leak of the sensitive context ID, which allows a local unprivileged attacker to access other sensitive data or relation accessible to the local charm."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41024",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/5e305b5986dc52122a9368a1461f0c13e1de3fd6",
            "https://git.kernel.org/stable/c/c69fd8afacebfdf2f8a1ee1ea7e0723786529874",
            "https://git.kernel.org/stable/c/bab2f5e8fd5d2f759db26b78d9db57412888f187"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Restrict untrusted app to attach to privileged PD\n\nUntrusted application with access to only non-secure fastrpc device\nnode can attach to root_pd or static PDs if it can make the respective\ninit request. This can cause problems as the untrusted application\ncan send bad requests to root_pd or static PDs. Add changes to reject\nattach to privileged PDs if the request is being made using non-secure\nfastrpc device node."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41046",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1a2db00a554cfda57c397cce79b2804bf9633fec",
            "https://git.kernel.org/stable/c/907443174e76b854d28024bd079f0e53b94dc9a1",
            "https://git.kernel.org/stable/c/22b16618a80858b3a9d607708444426948cc4ae1",
            "https://git.kernel.org/stable/c/69ad5fa0ce7c548262e0770fc2b726fe7ab4f156",
            "https://git.kernel.org/stable/c/c2b66e2b3939af63699e4a4bd25a8ac4a9b1d1b3",
            "https://git.kernel.org/stable/c/9d23909ae041761cb2aa0c3cb1748598d8b6bc54",
            "https://git.kernel.org/stable/c/84aaaa796a19195fc59290154fef9aeb1fba964f",
            "https://git.kernel.org/stable/c/e1533b6319ab9c3a97dad314dd88b3783bc41b69"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: lantiq_etop: fix double free in detach\n\nThe number of the currently released descriptor is never incremented\nwhich results in the same skb being released multiple times."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41062",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/605572e64cd9cebb05ed609d96cff05b50d18cdf",
            "https://git.kernel.org/stable/c/b803f30ea23e0968b6c8285c42adf0d862ab2bf6",
            "https://git.kernel.org/stable/c/3b732449b78183d17178db40be3a4401cf3cd629",
            "https://git.kernel.org/stable/c/89e856e124f9ae548572c56b1b70c2255705f8fe"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbluetooth/l2cap: sync sock recv cb and release\n\nThe problem occurs between the system call to close the sock and hci_rx_work,\nwhere the former releases the sock and the latter accesses it without lock protection.\n\n           CPU0                       CPU1\n           ----                       ----\n           sock_close                 hci_rx_work\n\t   l2cap_sock_release         hci_acldata_packet\n\t   l2cap_sock_kill            l2cap_recv_frame\n\t   sk_free                    l2cap_conless_channel\n\t                              l2cap_sock_recv_cb\n\nIf hci_rx_work processes the data that needs to be received before the sock is\nclosed, then everything is normal; Otherwise, the work thread may access the\nreleased sock when receiving data.\n\nAdd a chan mutex in the rx callback of the sock to achieve synchronization between\nthe sock release and recv cb.\n\nSock is dead, so set chan data to NULL, avoid others use invalid sock pointer."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41038",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/6619aa48a011364e9f29083cc76368e6acfe5b11",
            "https://git.kernel.org/stable/c/76ea8e13aaefdfda6e5601323d6ea5340359dcfa",
            "https://git.kernel.org/stable/c/014239b9971d79421a0ba652579e1ca1b7b57b6d",
            "https://git.kernel.org/stable/c/2163aff6bebbb752edf73f79700f5e2095f3559e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: cs_dsp: Prevent buffer overrun when processing V2 alg headers\n\nCheck that all fields of a V2 algorithm header fit into the available\nfirmware data buffer.\n\nThe wmfw V2 format introduced variable-length strings in the algorithm\nblock header. This means the overall header length is variable, and the\nposition of most fields varies depending on the length of the string\nfields. Each field must be checked to ensure that it does not overflow\nthe firmware data buffer.\n\nAs this ia bugfix patch, the fixes avoid making any significant change to\nthe existing code. This makes it easier to review and less likely to\nintroduce new bugs."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41064",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/8836e1bf5838ac6c08760e0a2dd7cf6410aa7ff3",
            "https://git.kernel.org/stable/c/033c51dfdbb6b79ab43fb3587276fa82d0a329e1",
            "https://git.kernel.org/stable/c/4fad7fef847b6028475dd7b4c14fcb82b3e51274",
            "https://git.kernel.org/stable/c/4bc246d2d60d071314842fa448faa4ed39082aff",
            "https://git.kernel.org/stable/c/f23c3d1ca9c4b2d626242a4e7e1ec1770447f7b5",
            "https://git.kernel.org/stable/c/428d940a8b6b3350b282c14d3f63350bde65c48b",
            "https://git.kernel.org/stable/c/a1216e62d039bf63a539bbe718536ec789a853dd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/eeh: avoid possible crash when edev->pdev changes\n\nIf a PCI device is removed during eeh_pe_report_edev(), edev->pdev\nwill change and can cause a crash, hold the PCI rescan/remove lock\nwhile taking a copy of edev->pdev->bus."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41027",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/519547760f16eae7803d2658d9524bc5ba7a20a7",
            "https://git.kernel.org/stable/c/14875fd5f9bcf60ac5518c63bfb676ade44aa7c6",
            "https://git.kernel.org/stable/c/cd94cac4069a763ab5206be2c64c9a8beae590ba",
            "https://git.kernel.org/stable/c/8111f902b7c95d75fc80c7e577f5045886c6b384",
            "https://git.kernel.org/stable/c/1723f04caacb32cadc4e063725d836a0c4450694"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nFix userfaultfd_api to return EINVAL as expected\n\nCurrently if we request a feature that is not set in the Kernel config we\nfail silently and return all the available features.  However, the man\npage indicates we should return an EINVAL.\n\nWe need to fix this issue since we can end up with a Kernel warning should\na program request the feature UFFD_FEATURE_WP_UNPOPULATED on a kernel with\nthe config not set with this feature.\n\n [  200.812896] WARNING: CPU: 91 PID: 13634 at mm/memory.c:1660 zap_pte_range+0x43d/0x660\n [  200.820738] Modules linked in:\n [  200.869387] CPU: 91 PID: 13634 Comm: userfaultfd Kdump: loaded Not tainted 6.9.0-rc5+ #8\n [  200.877477] Hardware name: Dell Inc. PowerEdge R6525/0N7YGH, BIOS 2.7.3 03/30/2022\n [  200.885052] RIP: 0010:zap_pte_range+0x43d/0x660"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41029",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/aa066afaaac32caf2160d58d4e3010ee04421c62",
            "https://git.kernel.org/stable/c/6bef98bafd82903a8d461463f9594f19f1fd6a85"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmem: core: limit cell sysfs permissions to main attribute ones\n\nThe cell sysfs attribute should not provide more access to the nvmem\ndata than the main attribute itself.\nFor example if nvme_config::root_only was set, the cell attribute\nwould still provide read access to everybody.\n\nMask out permissions not available on the main attribute."
    }
]