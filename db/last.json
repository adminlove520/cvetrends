[
    {
        "Modified": "2024-05-23T23:15:00",
        "Published": "2024-05-23T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-5279",
        "impact": {},
        "last-modified": "2024-05-23T23:15:00",
        "references": [
            "https://vuldb.com/?id.266083",
            "https://vuldb.com/?ctiid.266083",
            "https://gitee.com/qiwen-cloud/qiwen-file/issues/I8W3H2"
        ],
        "summary": "A vulnerability was found in Qiwen Netdisk up to 1.4.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the component File Rename Handler. The manipulation with the input <img src=\"\" onerror=\"alert(document.cookie)\"> leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-266083."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5242",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-501/"
        ],
        "summary": "TP-Link Omada ER605 Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.\n\nThe specific flaw exists within the handling of DDNS error codes. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22522."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5244",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-503/"
        ],
        "summary": "TP-Link Omada ER605 Reliance on Security Through Obscurity Vulnerability. This vulnerability allows network-adjacent attackers to access or spoof DDNS messages on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.\n\nThe specific flaw exists within the cmxddnsd executable. The issue results from reliance on obscurity to secure network data. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-22439."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5246",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-497/",
            "https://kb.netgear.com/000066164/Security-Advisory-for-Multiple-Vulnerabilities-on-the-NMS300-PSV-2024-0003-PSV-2024-0004"
        ],
        "summary": "NETGEAR ProSAFE Network Management System Tomcat Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.\n\nThe specific flaw exists within the product installer. The issue results from the use of a vulnerable version of Apache Tomcat. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-22868."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5247",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-498/",
            "https://kb.netgear.com/000066165/Security-Advisory-for-Missing-Function-Level-Access-Control-on-the-NMS300-PSV-2024-0005"
        ],
        "summary": "NETGEAR ProSAFE Network Management System UpLoadServlet Unrestricted File Upload Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Authentication is required to exploit this vulnerability.\n\nThe specific flaw exists within the UpLoadServlet class. The issue results from the lack of proper validation of user-supplied data, which can allow the upload of arbitrary files. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-22923."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5291",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-442/"
        ],
        "summary": "D-Link DIR-2150 GetDeviceSettings Target Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link DIR-2150 routers. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the SOAP API interface, which listens on TCP port 80 by default. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21235."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5292",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-443/"
        ],
        "summary": "D-Link Network Assistant Uncontrolled Search Path Element Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of D-Link Network Assistant. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\n\nThe specific flaw exists within the DNACore service. The service loads a file from an unsecured location. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-21426."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5293",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-444/"
        ],
        "summary": "D-Link DIR-2640 HTTP Referer Stack-Based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link DIR-2640-US routers. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within prog.cgi, which handles HNAP requests made to the lighttpd webserver listening on TCP ports 80 and 443. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21853."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5294",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-445/"
        ],
        "summary": "D-Link DIR-3040 prog.cgi websSecurityHandler Memory Leak Denial-of-Service Vulnerability. This vulnerability allows network-adjacent attackers to create a denial-of-service condition on affected installations of D-Link DIR-3040 routers. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the prog.cgi program, which handles HNAP requests made to the lighttpd webserver listening on ports 80 and 443. The issue results from the lack of proper memory management when processing HTTP cookie values. An attacker can leverage this vulnerability to create a denial-of-service condition on the system.\n. Was ZDI-CAN-21668."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5295",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-446/"
        ],
        "summary": "D-Link G416 flupl self Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link G416 wireless routers. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the HTTP service listening on TCP port 80. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21294."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5296",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-447/"
        ],
        "summary": "D-Link D-View Use of Hard-coded Cryptographic Key Authentication Bypass Vulnerability. This vulnerability allows remote attackers to bypass authentication on affected installations of D-Link D-View. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the TokenUtils class. The issue results from a hard-coded cryptographic key. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-21991."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5297",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-448/"
        ],
        "summary": "D-Link D-View executeWmicCmd Command Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.\n\nThe specific flaw exists within the executeWmicCmd method. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21821."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5298",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-449/"
        ],
        "summary": "D-Link D-View queryDeviceCustomMonitorResult Exposed Dangerous Method Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.\n\nThe specific flaw exists within the queryDeviceCustomMonitorResult method. The issue results from an exposed dangerous method. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21842."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5299",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-450/"
        ],
        "summary": "D-Link D-View execMonitorScript Exposed Dangerous Method Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of D-Link D-View. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.\n\nThe specific flaw exists within the execMonitorScript method. The issue results from an exposed dangerous method. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-21828."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5227",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-499/"
        ],
        "summary": "TP-Link Omada ER605 PPTP VPN username Command Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are only vulnerable if configured to use a PPTP VPN with LDAP authentication.\n\nThe specific flaw exists within the handling of the username parameter provided to the /usr/bin/pppd endpoint. The issue results from the lack of proper validation of a user-supplied string before using it to execute a system call. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22446."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5228",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-500/"
        ],
        "summary": "TP-Link Omada ER605  Comexe DDNS Response Handling Heap-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.\n\nThe specific flaw exists within the handling of DNS responses. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length heap-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22383."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5243",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-502/"
        ],
        "summary": "TP-Link Omada ER605 Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Omada ER605 routers. Authentication is not required to exploit this vulnerability. However, devices are vulnerable only if configured to use the Comexe DDNS service.\n\nThe specific flaw exists within the handling of DNS names. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-22523."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-23T22:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5245",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-496/",
            "https://kb.netgear.com/000066164/Security-Advisory-for-Multiple-Vulnerabilities-on-the-NMS300-PSV-2024-0003-PSV-2024-0004"
        ],
        "summary": "NETGEAR ProSAFE Network Management System Default Credentials Local Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of NETGEAR ProSAFE Network Management System. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\n\nThe specific flaw exists within the product installer. The issue results from the use of default MySQL credentials. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-22755."
    },
    {
        "Modified": "2024-05-23T22:15:00",
        "Published": "2024-05-22T17:16:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-20239",
        "impact": {},
        "last-modified": "2024-05-23T22:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-05-23T21:05:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-35990",
        "impact": {},
        "last-modified": "2024-05-23T21:05:00",
        "references": [
            "https://git.kernel.org/stable/c/fcdd5bb4a8c81c64c1334d7e0aba41a8829a24de",
            "https://git.kernel.org/stable/c/0ccac964520a6f19e355652c8ca38af2a7f27076",
            "https://git.kernel.org/stable/c/8bf574183282d219cfa991f7df37aad491d74c11",
            "https://git.kernel.org/stable/c/8e3c94767cad5150198e4337c8b91f3bb068e14b",
            "https://git.kernel.org/stable/c/c660be571609e03e7d5972343536a736fcb31557",
            "https://git.kernel.org/stable/c/244296cc3a155199a8b080d19e645d7d49081a38"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma: xilinx_dpdma: Fix locking\n\nThere are several places where either chan->lock or chan->vchan.lock was\nnot held. Add appropriate locking. This fixes lockdep warnings like\n\n[   31.077578] ------------[ cut here ]------------\n[   31.077831] WARNING: CPU: 2 PID: 40 at drivers/dma/xilinx/xilinx_dpdma.c:834 xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.077953] Modules linked in:\n[   31.078019] CPU: 2 PID: 40 Comm: kworker/u12:1 Not tainted 6.6.20+ #98\n[   31.078102] Hardware name: xlnx,zynqmp (DT)\n[   31.078169] Workqueue: events_unbound deferred_probe_work_func\n[   31.078272] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   31.078377] pc : xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.078473] lr : xilinx_dpdma_chan_queue_transfer+0x270/0x5e0\n[   31.078550] sp : ffffffc083bb2e10\n[   31.078590] x29: ffffffc083bb2e10 x28: 0000000000000000 x27: ffffff880165a168\n[   31.078754] x26: ffffff880164e920 x25: ffffff880164eab8 x24: ffffff880164d480\n[   31.078920] x23: ffffff880165a148 x22: ffffff880164e988 x21: 0000000000000000\n[   31.079132] x20: ffffffc082aa3000 x19: ffffff880164e880 x18: 0000000000000000\n[   31.079295] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[   31.079453] x14: 0000000000000000 x13: ffffff8802263dc0 x12: 0000000000000001\n[   31.079613] x11: 0001ffc083bb2e34 x10: 0001ff880164e98f x9 : 0001ffc082aa3def\n[   31.079824] x8 : 0001ffc082aa3dec x7 : 0000000000000000 x6 : 0000000000000516\n[   31.079982] x5 : ffffffc7f8d43000 x4 : ffffff88003c9c40 x3 : ffffffffffffffff\n[   31.080147] x2 : ffffffc7f8d43000 x1 : 00000000000000c0 x0 : 0000000000000000\n[   31.080307] Call trace:\n[   31.080340]  xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.080518]  xilinx_dpdma_issue_pending+0x11c/0x120\n[   31.080595]  zynqmp_disp_layer_update+0x180/0x3ac\n[   31.080712]  zynqmp_dpsub_plane_atomic_update+0x11c/0x21c\n[   31.080825]  drm_atomic_helper_commit_planes+0x20c/0x684\n[   31.080951]  drm_atomic_helper_commit_tail+0x5c/0xb0\n[   31.081139]  commit_tail+0x234/0x294\n[   31.081246]  drm_atomic_helper_commit+0x1f8/0x210\n[   31.081363]  drm_atomic_commit+0x100/0x140\n[   31.081477]  drm_client_modeset_commit_atomic+0x318/0x384\n[   31.081634]  drm_client_modeset_commit_locked+0x8c/0x24c\n[   31.081725]  drm_client_modeset_commit+0x34/0x5c\n[   31.081812]  __drm_fb_helper_restore_fbdev_mode_unlocked+0x104/0x168\n[   31.081899]  drm_fb_helper_set_par+0x50/0x70\n[   31.081971]  fbcon_init+0x538/0xc48\n[   31.082047]  visual_init+0x16c/0x23c\n[   31.082207]  do_bind_con_driver.isra.0+0x2d0/0x634\n[   31.082320]  do_take_over_console+0x24c/0x33c\n[   31.082429]  do_fbcon_takeover+0xbc/0x1b0\n[   31.082503]  fbcon_fb_registered+0x2d0/0x34c\n[   31.082663]  register_framebuffer+0x27c/0x38c\n[   31.082767]  __drm_fb_helper_initial_config_and_unlock+0x5c0/0x91c\n[   31.082939]  drm_fb_helper_initial_config+0x50/0x74\n[   31.083012]  drm_fbdev_dma_client_hotplug+0xb8/0x108\n[   31.083115]  drm_client_register+0xa0/0xf4\n[   31.083195]  drm_fbdev_dma_setup+0xb0/0x1cc\n[   31.083293]  zynqmp_dpsub_drm_init+0x45c/0x4e0\n[   31.083431]  zynqmp_dpsub_probe+0x444/0x5e0\n[   31.083616]  platform_probe+0x8c/0x13c\n[   31.083713]  really_probe+0x258/0x59c\n[   31.083793]  __driver_probe_device+0xc4/0x224\n[   31.083878]  driver_probe_device+0x70/0x1c0\n[   31.083961]  __device_attach_driver+0x108/0x1e0\n[   31.084052]  bus_for_each_drv+0x9c/0x100\n[   31.084125]  __device_attach+0x100/0x298\n[   31.084207]  device_initial_probe+0x14/0x20\n[   31.084292]  bus_probe_device+0xd8/0xdc\n[   31.084368]  deferred_probe_work_func+0x11c/0x180\n[   31.084451]  process_one_work+0x3ac/0x988\n[   31.084643]  worker_thread+0x398/0x694\n[   31.084752]  kthread+0x1bc/0x1c0\n[   31.084848]  ret_from_fork+0x10/0x20\n[   31.084932] irq event stamp: 64549\n[   31.084970] hardirqs last  enabled at (64548): [<ffffffc081adf35c>] _raw_spin_unlock_irqrestore+0x80/0x90\n[   31.085157]\n---truncated---"
    },
    {
        "Modified": "2024-05-23T21:04:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-35972",
        "impact": {},
        "last-modified": "2024-05-23T21:04:00",
        "references": [
            "https://git.kernel.org/stable/c/c60ed825530b8c0cc2b524efd39b1d696ec54004",
            "https://git.kernel.org/stable/c/10a9d6a7513f93d7faffcb341af0aa42be8218fe",
            "https://git.kernel.org/stable/c/7ac10c7d728d75bc9daaa8fade3c7a3273b9a9ff"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n\nIf ulp = kzalloc() fails, the allocated edev will leak because it is\nnot properly assigned and the cleanup path will not be able to free it.\nFix it by assigning it properly immediately after allocation."
    },
    {
        "Modified": "2024-05-23T21:04:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-35978",
        "impact": {},
        "last-modified": "2024-05-23T21:04:00",
        "references": [
            "https://git.kernel.org/stable/c/89a32741f4217856066c198a4a7267bcdd1edd67",
            "https://git.kernel.org/stable/c/4beab84fbb50df3be1d8f8a976e6fe882ca65cb2",
            "https://git.kernel.org/stable/c/8478394f76c748862ef179a16f651f752bdafaf0",
            "https://git.kernel.org/stable/c/75193678cce993aa959e7764b6df2f599886dd06",
            "https://git.kernel.org/stable/c/66fab1e120b39f8f47a94186ddee36006fc02ca8",
            "https://git.kernel.org/stable/c/9ab5e44b9bac946bd49fd63264a08cd1ea494e76",
            "https://git.kernel.org/stable/c/e4cb8382fff6706436b66eafd9c0ee857ff0a9f5",
            "https://git.kernel.org/stable/c/45d355a926ab40f3ae7bc0b0a00cb0e3e8a5a810"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one."
    },
    {
        "Modified": "2024-05-23T21:04:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-835",
        "id": "CVE-2024-35982",
        "impact": {},
        "last-modified": "2024-05-23T21:04:00",
        "references": [
            "https://git.kernel.org/stable/c/04720ea2e6c64459a90ca28570ea78335eccd924",
            "https://git.kernel.org/stable/c/b3ddf6904073990492454b1dd1c10a24be8c74c6",
            "https://git.kernel.org/stable/c/70a8be9dc2fb65d67f8c1e0c88c587e08e2e575d",
            "https://git.kernel.org/stable/c/87b6af1a7683e021710c08fc0551fc078346032f",
            "https://git.kernel.org/stable/c/3fe79b2c83461edbbf86ed8a6f3924820ff89259",
            "https://git.kernel.org/stable/c/4ca2a5fb54ea2cc43edea614207fcede562d91c2",
            "https://git.kernel.org/stable/c/ca54e2671548616ad34885f90d4f26f7adb088f0",
            "https://git.kernel.org/stable/c/b1f532a3b1e6d2e5559c7ace49322922637a28aa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present."
    },
    {
        "Modified": "2024-05-23T21:04:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-35984",
        "impact": {},
        "last-modified": "2024-05-23T21:04:00",
        "references": [
            "https://git.kernel.org/stable/c/40f1d79f07b49c8a64a861706e5163f2db4bd95d",
            "https://git.kernel.org/stable/c/ad3c3ac7a03be3697114f781193dd3e9d97e6e23",
            "https://git.kernel.org/stable/c/5fd72404587d7db4acb2d241fd8c387afb0a7aec",
            "https://git.kernel.org/stable/c/5a09eae9a7db597fe0c1fc91636205b4a25d2620",
            "https://git.kernel.org/stable/c/4e75e222d397c6752b229ed72fc4644c8c36ecde",
            "https://git.kernel.org/stable/c/e3425674ff68dc521c57c6eabad0cbd20a027d85",
            "https://git.kernel.org/stable/c/357c64ef1ef39b1e7cd91ab6bdd304d043702c83",
            "https://git.kernel.org/stable/c/91811a31b68d3765b3065f4bb6d7d6d84a7cfc9f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]"
    },
    {
        "Modified": "2024-05-23T21:03:00",
        "Published": "2024-05-16T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-120",
        "id": "CVE-2024-34905",
        "impact": {},
        "last-modified": "2024-05-23T21:03:00",
        "references": [
            "https://github.com/CloudWise-OpenSource/FlyFish/issues/191"
        ],
        "summary": "FlyFish v3.0.0 was discovered to contain a buffer overflow via the password parameter on the login page. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input."
    },
    {
        "Modified": "2024-05-23T20:59:00",
        "Published": "2024-05-15T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-34913",
        "impact": {},
        "last-modified": "2024-05-23T20:59:00",
        "references": [
            "https://github.com/Joying-C/Cross-site-scripting-vulnerability/tree/main/r-pan-scaffolding_Cross_site%20_scripting%20_vulnerability"
        ],
        "summary": "An arbitrary file upload vulnerability in r-pan-scaffolding v5.0 and below allows attackers to execute arbitrary code via uploading a crafted PDF file."
    },
    {
        "Modified": "2024-05-23T20:56:00",
        "Published": "2024-05-15T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-34909",
        "impact": {},
        "last-modified": "2024-05-23T20:56:00",
        "references": [
            "https://github.com/Joying-C/Cross-site-scripting-vulnerability/tree/main/KYKMS_Cross_site%20_scripting%20_vulnerability"
        ],
        "summary": "An arbitrary file upload vulnerability in KYKMS v1.0.1 and below allows attackers to execute arbitrary code via uploading a crafted PDF file."
    },
    {
        "Modified": "2024-05-23T20:42:00",
        "Published": "2024-05-15T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-34906",
        "impact": {},
        "last-modified": "2024-05-23T20:42:00",
        "references": [
            "https://github.com/kuaifan/dootask/issues/210"
        ],
        "summary": "An arbitrary file upload vulnerability in dootask v0.30.13 allows attackers to execute arbitrary code via uploading a crafted PDF file."
    },
    {
        "Modified": "2024-05-23T20:40:00",
        "Published": "2024-05-14T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-59",
        "id": "CVE-2024-32002",
        "impact": {},
        "last-modified": "2024-05-23T20:40:00",
        "references": [
            "https://github.com/git/git/security/advisories/GHSA-8h77-4q3w-gfgv",
            "https://github.com/git/git/commit/97065761333fd62db1912d81b489db938d8c991d",
            "https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---recurse-submodulesltpathspecgt",
            "https://git-scm.com/docs/git-config#Documentation/git-config.txt-coresymlinks"
        ],
        "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources."
    },
    {
        "Modified": "2024-05-23T20:34:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2022-48692",
        "impact": {},
        "last-modified": "2024-05-23T20:34:00",
        "references": [
            "https://git.kernel.org/stable/c/f022576aa03c2385ea7f2b27ee5b331e43abf624",
            "https://git.kernel.org/stable/c/a8edd49c94b4b08019ed7d6dd794fca8078a4deb",
            "https://git.kernel.org/stable/c/f2c70f56f762e5dc3b0d7dc438fbb137cb116413",
            "https://git.kernel.org/stable/c/12f35199a2c0551187edbf8eb01379f0598659fa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srp: Set scmnd->result only when scmnd is not NULL\n\nThis change fixes the following kernel NULL pointer dereference\nwhich is reproduced by blktests srp/007 occasionally.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000170\nPGD 0 P4D 0\nOops: 0002 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 9 Comm: kworker/0:1H Kdump: loaded Not tainted 6.0.0-rc1+ #37\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.15.0-29-g6a62e0cb0dfe-prebuilt.qemu.org 04/01/2014\nWorkqueue:  0x0 (kblockd)\nRIP: 0010:srp_recv_done+0x176/0x500 [ib_srp]\nCode: 00 4d 85 ff 0f 84 52 02 00 00 48 c7 82 80 02 00 00 00 00 00 00 4c 89 df 4c 89 14 24 e8 53 d3 4a f6 4c 8b 14 24 41 0f b6 42 13 <41> 89 87 70 01 00 00 41 0f b6 52 12 f6 c2 02 74 44 41 8b 42 1c b9\nRSP: 0018:ffffaef7c0003e28 EFLAGS: 00000282\nRAX: 0000000000000000 RBX: ffff9bc9486dea60 RCX: 0000000000000000\nRDX: 0000000000000102 RSI: ffffffffb76bbd0e RDI: 00000000ffffffff\nRBP: ffff9bc980099a00 R08: 0000000000000001 R09: 0000000000000001\nR10: ffff9bca53ef0000 R11: ffff9bc980099a10 R12: ffff9bc956e14000\nR13: ffff9bc9836b9cb0 R14: ffff9bc9557b4480 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff9bc97ec00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000170 CR3: 0000000007e04000 CR4: 00000000000006f0\nCall Trace:\n <IRQ>\n __ib_process_cq+0xb7/0x280 [ib_core]\n ib_poll_handler+0x2b/0x130 [ib_core]\n irq_poll_softirq+0x93/0x150\n __do_softirq+0xee/0x4b8\n irq_exit_rcu+0xf7/0x130\n sysvec_apic_timer_interrupt+0x8e/0xc0\n </IRQ>"
    },
    {
        "Modified": "2024-05-23T20:34:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2022-48691",
        "impact": {},
        "last-modified": "2024-05-23T20:34:00",
        "references": [
            "https://git.kernel.org/stable/c/910891a2a44cdc49efcc4fe7459c1085ba00d0f4",
            "https://git.kernel.org/stable/c/1ce55ec5cb7c573c983dffbe290b8d17caf1f157",
            "https://git.kernel.org/stable/c/94ed8eeb8d9aeb00e4f4e19b83a2e28b6442fbc5",
            "https://git.kernel.org/stable/c/77972a36ecc4db7fc7c68f0e80714263c5f03f65"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: clean up hook list when offload flags check fails\n\nsplice back the hook list so nft_chain_release_hook() has a chance to\nrelease the hooks.\n\nBUG: memory leak\nunreferenced object 0xffff88810180b100 (size 96):\n  comm \"syz-executor133\", pid 3619, jiffies 4294945714 (age 12.690s)\n  hex dump (first 32 bytes):\n    28 64 23 02 81 88 ff ff 28 64 23 02 81 88 ff ff  (d#.....(d#.....\n    90 a8 aa 83 ff ff ff ff 00 00 b5 0f 81 88 ff ff  ................\n  backtrace:\n    [<ffffffff83a8c59b>] kmalloc include/linux/slab.h:600 [inline]\n    [<ffffffff83a8c59b>] nft_netdev_hook_alloc+0x3b/0xc0 net/netfilter/nf_tables_api.c:1901\n    [<ffffffff83a9239a>] nft_chain_parse_netdev net/netfilter/nf_tables_api.c:1998 [inline]\n    [<ffffffff83a9239a>] nft_chain_parse_hook+0x33a/0x530 net/netfilter/nf_tables_api.c:2073\n    [<ffffffff83a9b14b>] nf_tables_addchain.constprop.0+0x10b/0x950 net/netfilter/nf_tables_api.c:2218\n    [<ffffffff83a9c41b>] nf_tables_newchain+0xa8b/0xc60 net/netfilter/nf_tables_api.c:2593\n    [<ffffffff83a3d6a6>] nfnetlink_rcv_batch+0xa46/0xd20 net/netfilter/nfnetlink.c:517\n    [<ffffffff83a3db79>] nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:638 [inline]\n    [<ffffffff83a3db79>] nfnetlink_rcv+0x1f9/0x220 net/netfilter/nfnetlink.c:656\n    [<ffffffff83a13b17>] netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]\n    [<ffffffff83a13b17>] netlink_unicast+0x397/0x4c0 net/netlink/af_netlink.c:1345\n    [<ffffffff83a13fd6>] netlink_sendmsg+0x396/0x710 net/netlink/af_netlink.c:1921\n    [<ffffffff83865ab6>] sock_sendmsg_nosec net/socket.c:714 [inline]\n    [<ffffffff83865ab6>] sock_sendmsg+0x56/0x80 net/socket.c:734\n    [<ffffffff8386601c>] ____sys_sendmsg+0x36c/0x390 net/socket.c:2482\n    [<ffffffff8386a918>] ___sys_sendmsg+0xa8/0x110 net/socket.c:2536\n    [<ffffffff8386aaa8>] __sys_sendmsg+0x88/0x100 net/socket.c:2565\n    [<ffffffff845e5955>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n    [<ffffffff845e5955>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n    [<ffffffff84800087>] entry_SYSCALL_64_after_hwframe+0x63/0xcd"
    },
    {
        "Modified": "2024-05-23T20:34:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2022-48693",
        "impact": {},
        "last-modified": "2024-05-23T20:34:00",
        "references": [
            "https://git.kernel.org/stable/c/0284b4e6dec6088a41607aa3f42bf51edff01883",
            "https://git.kernel.org/stable/c/57b2897ec3ffe4cbe018446be6d04432919dca6b",
            "https://git.kernel.org/stable/c/6dc0251638a4a1a998506dbd4627f8317e907558",
            "https://git.kernel.org/stable/c/43245c77d9efd8c9eb91bf225d07954dcf32204d",
            "https://git.kernel.org/stable/c/653500b400d5576940b7429690f7197199ddcc82",
            "https://git.kernel.org/stable/c/1085f5080647f0c9f357c270a537869191f7f2a1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: brcmstb: pm-arm: Fix refcount leak and __iomem leak bugs\n\nIn brcmstb_pm_probe(), there are two kinds of leak bugs:\n\n(1) we need to add of_node_put() when for_each__matching_node() breaks\n(2) we need to add iounmap() for each iomap in fail path"
    },
    {
        "Modified": "2024-05-23T20:34:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2022-48694",
        "impact": {},
        "last-modified": "2024-05-23T20:34:00",
        "references": [
            "https://git.kernel.org/stable/c/14d148401c5202fec3a071e24785481d540b22c3",
            "https://git.kernel.org/stable/c/5becc531a3fa8da75158a8993f56cc3e0717716e",
            "https://git.kernel.org/stable/c/ead54ced6321099978d30d62dc49c282a6e70574"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/irdma: Fix drain SQ hang with no completion\n\nSW generated completions for outstanding WRs posted on SQ\nafter QP is in error target the wrong CQ. This causes the\nib_drain_sq to hang with no completion.\n\nFix this to generate completions on the right CQ.\n\n[  863.969340] INFO: task kworker/u52:2:671 blocked for more than 122 seconds.\n[  863.979224]       Not tainted 5.14.0-130.el9.x86_64 #1\n[  863.986588] \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[  863.996997] task:kworker/u52:2   state:D stack:    0 pid:  671 ppid:     2 flags:0x00004000\n[  864.007272] Workqueue: xprtiod xprt_autoclose [sunrpc]\n[  864.014056] Call Trace:\n[  864.017575]  __schedule+0x206/0x580\n[  864.022296]  schedule+0x43/0xa0\n[  864.026736]  schedule_timeout+0x115/0x150\n[  864.032185]  __wait_for_common+0x93/0x1d0\n[  864.037717]  ? usleep_range_state+0x90/0x90\n[  864.043368]  __ib_drain_sq+0xf6/0x170 [ib_core]\n[  864.049371]  ? __rdma_block_iter_next+0x80/0x80 [ib_core]\n[  864.056240]  ib_drain_sq+0x66/0x70 [ib_core]\n[  864.062003]  rpcrdma_xprt_disconnect+0x82/0x3b0 [rpcrdma]\n[  864.069365]  ? xprt_prepare_transmit+0x5d/0xc0 [sunrpc]\n[  864.076386]  xprt_rdma_close+0xe/0x30 [rpcrdma]\n[  864.082593]  xprt_autoclose+0x52/0x100 [sunrpc]\n[  864.088718]  process_one_work+0x1e8/0x3c0\n[  864.094170]  worker_thread+0x50/0x3b0\n[  864.099109]  ? rescuer_thread+0x370/0x370\n[  864.104473]  kthread+0x149/0x170\n[  864.109022]  ? set_kthread_struct+0x40/0x40\n[  864.114713]  ret_from_fork+0x22/0x30"
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-35992",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/976df695f579bbb2914114b4e9974fe4ed1eb813",
            "https://git.kernel.org/stable/c/610f175d2e16fb2436ba7974b990563002c20d07",
            "https://git.kernel.org/stable/c/40406dfbc060503d2e0a9e637e98493c54997b3d",
            "https://git.kernel.org/stable/c/e4308bc22b9d46cf33165c9dfaeebcf29cd56f04"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: marvell: a3700-comphy: Fix out of bounds read\n\nThere is an out of bounds read access of 'gbe_phy_init_fix[fix_idx].addr'\nevery iteration after 'fix_idx' reaches 'ARRAY_SIZE(gbe_phy_init_fix)'.\n\nMake sure 'gbe_phy_init[addr]' is used when all elements of\n'gbe_phy_init_fix' array are handled.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2022-48675",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/e8de6cb5755eae7b793d8c00c8696c8667d44a7f",
            "https://git.kernel.org/stable/c/819110054b14d7272b4188db997a3d80f75ab785",
            "https://git.kernel.org/stable/c/83c43fd872e32c8071d5582eb7c40f573a8342f3",
            "https://git.kernel.org/stable/c/85eaeb5058f0f04dffb124c97c86b4f18db0b833"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/core: Fix a nested dead lock as part of ODP flow\n\nFix a nested dead lock as part of ODP flow by using mmput_async().\n\nFrom the below call trace [1] can see that calling mmput() once we have\nthe umem_odp->umem_mutex locked as required by\nib_umem_odp_map_dma_and_lock() might trigger in the same task the\nexit_mmap()->__mmu_notifier_release()->mlx5_ib_invalidate_range() which\nmay dead lock when trying to lock the same mutex.\n\nMoving to use mmput_async() will solve the problem as the above\nexit_mmap() flow will be called in other task and will be executed once\nthe lock will be available.\n\n[1]\n[64843.077665] task:kworker/u133:2  state:D stack:    0 pid:80906 ppid:\n2 flags:0x00004000\n[64843.077672] Workqueue: mlx5_ib_page_fault mlx5_ib_eqe_pf_action [mlx5_ib]\n[64843.077719] Call Trace:\n[64843.077722]  <TASK>\n[64843.077724]  __schedule+0x23d/0x590\n[64843.077729]  schedule+0x4e/0xb0\n[64843.077735]  schedule_preempt_disabled+0xe/0x10\n[64843.077740]  __mutex_lock.constprop.0+0x263/0x490\n[64843.077747]  __mutex_lock_slowpath+0x13/0x20\n[64843.077752]  mutex_lock+0x34/0x40\n[64843.077758]  mlx5_ib_invalidate_range+0x48/0x270 [mlx5_ib]\n[64843.077808]  __mmu_notifier_release+0x1a4/0x200\n[64843.077816]  exit_mmap+0x1bc/0x200\n[64843.077822]  ? walk_page_range+0x9c/0x120\n[64843.077828]  ? __cond_resched+0x1a/0x50\n[64843.077833]  ? mutex_lock+0x13/0x40\n[64843.077839]  ? uprobe_clear_state+0xac/0x120\n[64843.077860]  mmput+0x5f/0x140\n[64843.077867]  ib_umem_odp_map_dma_and_lock+0x21b/0x580 [ib_core]\n[64843.077931]  pagefault_real_mr+0x9a/0x140 [mlx5_ib]\n[64843.077962]  pagefault_mr+0xb4/0x550 [mlx5_ib]\n[64843.077992]  pagefault_single_data_segment.constprop.0+0x2ac/0x560\n[mlx5_ib]\n[64843.078022]  mlx5_ib_eqe_pf_action+0x528/0x780 [mlx5_ib]\n[64843.078051]  process_one_work+0x22b/0x3d0\n[64843.078059]  worker_thread+0x53/0x410\n[64843.078065]  ? process_one_work+0x3d0/0x3d0\n[64843.078073]  kthread+0x12a/0x150\n[64843.078079]  ? set_kthread_struct+0x50/0x50\n[64843.078085]  ret_from_fork+0x22/0x30\n[64843.078093]  </TASK>"
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2022-48686",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/19816a0214684f70b49b25075ff8c402fdd611d3",
            "https://git.kernel.org/stable/c/5914fa32ef1b7766fea933f9eed94ac5c00aa7ff",
            "https://git.kernel.org/stable/c/13c80a6c112467bab5e44d090767930555fc17a5",
            "https://git.kernel.org/stable/c/c3eb461aa56e6fa94fb80442ba2586bd223a8886",
            "https://git.kernel.org/stable/c/160f3549a907a50e51a8518678ba2dcf2541abea"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: fix UAF when detecting digest errors\n\nWe should also bail from the io_work loop when we set rd_enabled to true,\nso we don't attempt to read data from the socket when the TCP stream is\nalready out-of-sync or corrupted."
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2022-48687",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/dc9dbd65c803af1607484fed5da50d41dc8dd864",
            "https://git.kernel.org/stable/c/f684c16971ed5e77dfa25a9ad25b5297e1f58eab",
            "https://git.kernel.org/stable/c/3df71e11a4773d775c3633c44319f7acdb89011c",
            "https://git.kernel.org/stable/c/076f2479fc5a15c4a970ca3b5e57d42ba09a31fa",
            "https://git.kernel.org/stable/c/55195563ec29f80f984237b743de0e2b6ba4d093",
            "https://git.kernel.org/stable/c/56ad3f475482bca55b0ae544031333018eb145b3",
            "https://git.kernel.org/stable/c/84a53580c5d2138c7361c7c3eea5b31827e63b35"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix out-of-bounds read when setting HMAC data.\n\nThe SRv6 layer allows defining HMAC data that can later be used to sign IPv6\nSegment Routing Headers. This configuration is realised via netlink through\nfour attributes: SEG6_ATTR_HMACKEYID, SEG6_ATTR_SECRET, SEG6_ATTR_SECRETLEN and\nSEG6_ATTR_ALGID. Because the SECRETLEN attribute is decoupled from the actual\nlength of the SECRET attribute, it is possible to provide invalid combinations\n(e.g., secret = \"\", secretlen = 64). This case is not checked in the code and\nwith an appropriately crafted netlink message, an out-of-bounds read of up\nto 64 bytes (max secret length) can occur past the skb end pointer and into\nskb_shared_info:\n\nBreakpoint 1, seg6_genl_sethmac (skb=<optimized out>, info=<optimized out>) at net/ipv6/seg6.c:208\n208\t\tmemcpy(hinfo->secret, secret, slen);\n(gdb) bt\n #0  seg6_genl_sethmac (skb=<optimized out>, info=<optimized out>) at net/ipv6/seg6.c:208\n #1  0xffffffff81e012e9 in genl_family_rcv_msg_doit (skb=skb@entry=0xffff88800b1f9f00, nlh=nlh@entry=0xffff88800b1b7600,\n    extack=extack@entry=0xffffc90000ba7af0, ops=ops@entry=0xffffc90000ba7a80, hdrlen=4, net=0xffffffff84237580 <init_net>, family=<optimized out>,\n    family=<optimized out>) at net/netlink/genetlink.c:731\n #2  0xffffffff81e01435 in genl_family_rcv_msg (extack=0xffffc90000ba7af0, nlh=0xffff88800b1b7600, skb=0xffff88800b1f9f00,\n    family=0xffffffff82fef6c0 <seg6_genl_family>) at net/netlink/genetlink.c:775\n #3  genl_rcv_msg (skb=0xffff88800b1f9f00, nlh=0xffff88800b1b7600, extack=0xffffc90000ba7af0) at net/netlink/genetlink.c:792\n #4  0xffffffff81dfffc3 in netlink_rcv_skb (skb=skb@entry=0xffff88800b1f9f00, cb=cb@entry=0xffffffff81e01350 <genl_rcv_msg>)\n    at net/netlink/af_netlink.c:2501\n #5  0xffffffff81e00919 in genl_rcv (skb=0xffff88800b1f9f00) at net/netlink/genetlink.c:803\n #6  0xffffffff81dff6ae in netlink_unicast_kernel (ssk=0xffff888010eec800, skb=0xffff88800b1f9f00, sk=0xffff888004aed000)\n    at net/netlink/af_netlink.c:1319\n #7  netlink_unicast (ssk=ssk@entry=0xffff888010eec800, skb=skb@entry=0xffff88800b1f9f00, portid=portid@entry=0, nonblock=<optimized out>)\n    at net/netlink/af_netlink.c:1345\n #8  0xffffffff81dff9a4 in netlink_sendmsg (sock=<optimized out>, msg=0xffffc90000ba7e48, len=<optimized out>) at net/netlink/af_netlink.c:1921\n...\n(gdb) p/x ((struct sk_buff *)0xffff88800b1f9f00)->head + ((struct sk_buff *)0xffff88800b1f9f00)->end\n$1 = 0xffff88800b1b76c0\n(gdb) p/x secret\n$2 = 0xffff88800b1b76c0\n(gdb) p slen\n$3 = 64 '@'\n\nThe OOB data can then be read back from userspace by dumping HMAC state. This\ncommit fixes this by ensuring SECRETLEN cannot exceed the actual length of\nSECRET."
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2022-48688",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/c49f320e2492738d478bc427dcd54ccfe0cba746",
            "https://git.kernel.org/stable/c/5332a094514852d5e58c278cf4193adb937337fc",
            "https://git.kernel.org/stable/c/342d77769a6cceb3df7720a1e18baa4339eee3fc",
            "https://git.kernel.org/stable/c/2ed94383f3a2693dbf5bc47c514b42524bd8f9ae",
            "https://git.kernel.org/stable/c/38af35bec59a8431a1eb29da994a0a45cba275d9",
            "https://git.kernel.org/stable/c/fb8396aeda5872369a8ed6d2301e2c86e303c520"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix kernel crash during module removal\n\nThe driver incorrectly frees client instance and subsequent\ni40e module removal leads to kernel crash.\n\nReproducer:\n1. Do ethtool offline test followed immediately by another one\nhost# ethtool -t eth0 offline; ethtool -t eth0 offline\n2. Remove recursively irdma module that also removes i40e module\nhost# modprobe -r irdma\n\nResult:\n[ 8675.035651] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.193774] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.201316] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.358921] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.496921] i40e 0000:3d:00.0: IRDMA hardware initialization FAILED init_state=2 status=-110\n[ 8686.188955] i40e 0000:3d:00.1: i40e_ptp_stop: removed PHC on eno2\n[ 8686.943890] i40e 0000:3d:00.1: Deleted LAN device PF1 bus=0x3d dev=0x00 func=0x01\n[ 8686.952669] i40e 0000:3d:00.0: i40e_ptp_stop: removed PHC on eno1\n[ 8687.761787] BUG: kernel NULL pointer dereference, address: 0000000000000030\n[ 8687.768755] #PF: supervisor read access in kernel mode\n[ 8687.773895] #PF: error_code(0x0000) - not-present page\n[ 8687.779034] PGD 0 P4D 0\n[ 8687.781575] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[ 8687.785935] CPU: 51 PID: 172891 Comm: rmmod Kdump: loaded Tainted: G        W I        5.19.0+ #2\n[ 8687.794800] Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.0X.02.0001.051420190324 05/14/2019\n[ 8687.805222] RIP: 0010:i40e_lan_del_device+0x13/0xb0 [i40e]\n[ 8687.810719] Code: d4 84 c0 0f 84 b8 25 01 00 e9 9c 25 01 00 41 bc f4 ff ff ff eb 91 90 0f 1f 44 00 00 41 54 55 53 48 8b 87 58 08 00 00 48 89 fb <48> 8b 68 30 48 89 ef e8 21 8a 0f d5 48 89 ef e8 a9 78 0f d5 48 8b\n[ 8687.829462] RSP: 0018:ffffa604072efce0 EFLAGS: 00010202\n[ 8687.834689] RAX: 0000000000000000 RBX: ffff8f43833b2000 RCX: 0000000000000000\n[ 8687.841821] RDX: 0000000000000000 RSI: ffff8f4b0545b298 RDI: ffff8f43833b2000\n[ 8687.848955] RBP: ffff8f43833b2000 R08: 0000000000000001 R09: 0000000000000000\n[ 8687.856086] R10: 0000000000000000 R11: 000ffffffffff000 R12: ffff8f43833b2ef0\n[ 8687.863218] R13: ffff8f43833b2ef0 R14: ffff915103966000 R15: ffff8f43833b2008\n[ 8687.870342] FS:  00007f79501c3740(0000) GS:ffff8f4adffc0000(0000) knlGS:0000000000000000\n[ 8687.878427] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 8687.884174] CR2: 0000000000000030 CR3: 000000014276e004 CR4: 00000000007706e0\n[ 8687.891306] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 8687.898441] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 8687.905572] PKRU: 55555554\n[ 8687.908286] Call Trace:\n[ 8687.910737]  <TASK>\n[ 8687.912843]  i40e_remove+0x2c0/0x330 [i40e]\n[ 8687.917040]  pci_device_remove+0x33/0xa0\n[ 8687.920962]  device_release_driver_internal+0x1aa/0x230\n[ 8687.926188]  driver_detach+0x44/0x90\n[ 8687.929770]  bus_remove_driver+0x55/0xe0\n[ 8687.933693]  pci_unregister_driver+0x2a/0xb0\n[ 8687.937967]  i40e_exit_module+0xc/0xf48 [i40e]\n\nTwo offline tests cause IRDMA driver failure (ETIMEDOUT) and this\nfailure is indicated back to i40e_client_subtask() that calls\ni40e_client_del_instance() to free client instance referenced\nby pf->cinst and sets this pointer to NULL. During the module\nremoval i40e_remove() calls i40e_lan_del_device() that dereferences\npf->cinst that is NULL -> crash.\nDo not remove client instance when client open callbacks fails and\njust clear __I40E_CLIENT_INSTANCE_OPENED bit. The driver also needs\nto take care about this situation (when netdev is up and client\nis NOT opened) in i40e_notify_client_of_netdev_close() and\ncalls client close callback only when __I40E_CLIENT_INSTANCE_OPENED\nis set."
    },
    {
        "Modified": "2024-05-23T20:33:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-362",
        "id": "CVE-2022-48689",
        "impact": {},
        "last-modified": "2024-05-23T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/8527c9a6bf8e54fef0a8d3d7d8874a48c725c915",
            "https://git.kernel.org/stable/c/6730c48ed6b0cd939fc9b30b2d621ce0b89bea83",
            "https://git.kernel.org/stable/c/3261400639463a853ba2b3be8bd009c2a8089775"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: TX zerocopy should not sense pfmemalloc status\n\nWe got a recent syzbot report [1] showing a possible misuse\nof pfmemalloc page status in TCP zerocopy paths.\n\nIndeed, for pages coming from user space or other layers,\nusing page_is_pfmemalloc() is moot, and possibly could give\nfalse positives.\n\nThere has been attempts to make page_is_pfmemalloc() more robust,\nbut not using it in the first place in this context is probably better,\nremoving cpu cycles.\n\nNote to stable teams :\n\nYou need to backport 84ce071e38a6 (\"net: introduce\n__skb_fill_page_desc_noacc\") as a prereq.\n\nRace is more probable after commit c07aea3ef4d4\n(\"mm: add a signature in struct page\") because page_is_pfmemalloc()\nis now using low order bit from page->lru.next, which can change\nmore often than page->index.\n\nLow order bit should never be set for lru.next (when used as an anchor\nin LRU list), so KCSAN report is mostly a false positive.\n\nBackporting to older kernel versions seems not necessary.\n\n[1]\nBUG: KCSAN: data-race in lru_add_fn / tcp_build_frag\n\nwrite to 0xffffea0004a1d2c8 of 8 bytes by task 18600 on cpu 0:\n__list_add include/linux/list.h:73 [inline]\nlist_add include/linux/list.h:88 [inline]\nlruvec_add_folio include/linux/mm_inline.h:105 [inline]\nlru_add_fn+0x440/0x520 mm/swap.c:228\nfolio_batch_move_lru+0x1e1/0x2a0 mm/swap.c:246\nfolio_batch_add_and_move mm/swap.c:263 [inline]\nfolio_add_lru+0xf1/0x140 mm/swap.c:490\nfilemap_add_folio+0xf8/0x150 mm/filemap.c:948\n__filemap_get_folio+0x510/0x6d0 mm/filemap.c:1981\npagecache_get_page+0x26/0x190 mm/folio-compat.c:104\ngrab_cache_page_write_begin+0x2a/0x30 mm/folio-compat.c:116\next4_da_write_begin+0x2dd/0x5f0 fs/ext4/inode.c:2988\ngeneric_perform_write+0x1d4/0x3f0 mm/filemap.c:3738\next4_buffered_write_iter+0x235/0x3e0 fs/ext4/file.c:270\next4_file_write_iter+0x2e3/0x1210\ncall_write_iter include/linux/fs.h:2187 [inline]\nnew_sync_write fs/read_write.c:491 [inline]\nvfs_write+0x468/0x760 fs/read_write.c:578\nksys_write+0xe8/0x1a0 fs/read_write.c:631\n__do_sys_write fs/read_write.c:643 [inline]\n__se_sys_write fs/read_write.c:640 [inline]\n__x64_sys_write+0x3e/0x50 fs/read_write.c:640\ndo_syscall_x64 arch/x86/entry/common.c:50 [inline]\ndo_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nread to 0xffffea0004a1d2c8 of 8 bytes by task 18611 on cpu 1:\npage_is_pfmemalloc include/linux/mm.h:1740 [inline]\n__skb_fill_page_desc include/linux/skbuff.h:2422 [inline]\nskb_fill_page_desc include/linux/skbuff.h:2443 [inline]\ntcp_build_frag+0x613/0xb20 net/ipv4/tcp.c:1018\ndo_tcp_sendpages+0x3e8/0xaf0 net/ipv4/tcp.c:1075\ntcp_sendpage_locked net/ipv4/tcp.c:1140 [inline]\ntcp_sendpage+0x89/0xb0 net/ipv4/tcp.c:1150\ninet_sendpage+0x7f/0xc0 net/ipv4/af_inet.c:833\nkernel_sendpage+0x184/0x300 net/socket.c:3561\nsock_sendpage+0x5a/0x70 net/socket.c:1054\npipe_to_sendpage+0x128/0x160 fs/splice.c:361\nsplice_from_pipe_feed fs/splice.c:415 [inline]\n__splice_from_pipe+0x222/0x4d0 fs/splice.c:559\nsplice_from_pipe fs/splice.c:594 [inline]\ngeneric_splice_sendpage+0x89/0xc0 fs/splice.c:743\ndo_splice_from fs/splice.c:764 [inline]\ndirect_splice_actor+0x80/0xa0 fs/splice.c:931\nsplice_direct_to_actor+0x305/0x620 fs/splice.c:886\ndo_splice_direct+0xfb/0x180 fs/splice.c:974\ndo_sendfile+0x3bf/0x910 fs/read_write.c:1249\n__do_sys_sendfile64 fs/read_write.c:1317 [inline]\n__se_sys_sendfile64 fs/read_write.c:1303 [inline]\n__x64_sys_sendfile64+0x10c/0x150 fs/read_write.c:1303\ndo_syscall_x64 arch/x86/entry/common.c:50 [inline]\ndo_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nvalue changed: 0x0000000000000000 -> 0xffffea0004a1d288\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 1 PID: 18611 Comm: syz-executor.4 Not tainted 6.0.0-rc2-syzkaller-00248-ge022620b5d05-dirty #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 07/22/2022"
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2022-48670",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://git.kernel.org/stable/c/c87f1f99e26ea4ae08cabe753ae98e5626bdba89",
            "https://git.kernel.org/stable/c/1c11289b34ab67ed080bbe0f1855c4938362d9cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npeci: cpu: Fix use-after-free in adev_release()\n\nWhen auxiliary_device_add() returns an error, auxiliary_device_uninit()\nis called, which causes refcount for device to be decremented and\n.release callback will be triggered.\n\nBecause adev_release() re-calls auxiliary_device_uninit(), it will cause\nuse-after-free:\n[ 1269.455172] WARNING: CPU: 0 PID: 14267 at lib/refcount.c:28 refcount_warn_saturate+0x110/0x15\n[ 1269.464007] refcount_t: underflow; use-after-free."
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2022-48671",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://git.kernel.org/stable/c/321488cfac7d0eb6d97de467015ff754f85813ff",
            "https://git.kernel.org/stable/c/07191f984842d50020789ff14c75da436a7f46a9",
            "https://git.kernel.org/stable/c/9f267393b036f1470fb12fb892d59e7ff8aeb58d",
            "https://git.kernel.org/stable/c/5db17805b6ba4c34dab303f49aea3562fc25af75",
            "https://git.kernel.org/stable/c/99bc25748e394d17f9e8b10cc7f273b8e64c1c7e",
            "https://git.kernel.org/stable/c/43626dade36fa74d3329046f4ae2d7fdefe401c6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup: Add missing cpus_read_lock() to cgroup_attach_task_all()\n\nsyzbot is hitting percpu_rwsem_assert_held(&cpu_hotplug_lock) warning at\ncpuset_attach() [1], for commit 4f7e7236435ca0ab (\"cgroup: Fix\nthreadgroup_rwsem <-> cpus_read_lock() deadlock\") missed that\ncpuset_attach() is also called from cgroup_attach_task_all().\nAdd cpus_read_lock() like what cgroup_procs_write_start() does."
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-193",
        "id": "CVE-2022-48672",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://git.kernel.org/stable/c/cbdda20ce363356698835185801a58a28f644853",
            "https://git.kernel.org/stable/c/2566706ac6393386a4e7c4ce23fe17f4c98d9aa0",
            "https://git.kernel.org/stable/c/e0e88c25f88b9805572263c9ed20f1d88742feaf",
            "https://git.kernel.org/stable/c/ee4369260e77821602102dcc7d792de39a56365c",
            "https://git.kernel.org/stable/c/ba6b9f7cc1108bad6e2c53b1d6e0156379188db7",
            "https://git.kernel.org/stable/c/2133f451311671c7c42b5640d2b999326b39aa0e",
            "https://git.kernel.org/stable/c/2f945a792f67815abca26fa8a5e863ccf3fa1181"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: fdt: fix off-by-one error in unflatten_dt_nodes()\n\nCommit 78c44d910d3e (\"drivers/of: Fix depth when unflattening devicetree\")\nforgot to fix up the depth check in the loop body in unflatten_dt_nodes()\nwhich makes it possible to overflow the nps[] buffer...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool."
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-755",
        "id": "CVE-2022-48673",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://git.kernel.org/stable/c/89fcb70f1acd6b0bbf2f7bfbf45d7aa75a9bdcde",
            "https://git.kernel.org/stable/c/e9b1a4f867ae9c1dbd1d71cd09cbdb3239fb4968"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Fix possible access to freed memory in link clear\n\nAfter modifying the QP to the Error state, all RX WR would be completed\nwith WC in IB_WC_WR_FLUSH_ERR status. Current implementation does not\nwait for it is done, but destroy the QP and free the link group directly.\nSo there is a risk that accessing the freed memory in tasklet context.\n\nHere is a crash example:\n\n BUG: unable to handle page fault for address: ffffffff8f220860\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD f7300e067 P4D f7300e067 PUD f7300f063 PMD 8c4e45063 PTE 800ffff08c9df060\n Oops: 0002 [#1] SMP PTI\n CPU: 1 PID: 0 Comm: swapper/1 Kdump: loaded Tainted: G S         OE     5.10.0-0607+ #23\n Hardware name: Inspur NF5280M4/YZMB-00689-101, BIOS 4.1.20 07/09/2018\n RIP: 0010:native_queued_spin_lock_slowpath+0x176/0x1b0\n Code: f3 90 48 8b 32 48 85 f6 74 f6 eb d5 c1 ee 12 83 e0 03 83 ee 01 48 c1 e0 05 48 63 f6 48 05 00 c8 02 00 48 03 04 f5 00 09 98 8e <48> 89 10 8b 42 08 85 c0 75 09 f3 90 8b 42 08 85 c0 74 f7 48 8b 32\n RSP: 0018:ffffb3b6c001ebd8 EFLAGS: 00010086\n RAX: ffffffff8f220860 RBX: 0000000000000246 RCX: 0000000000080000\n RDX: ffff91db1f86c800 RSI: 000000000000173c RDI: ffff91db62bace00\n RBP: ffff91db62bacc00 R08: 0000000000000000 R09: c00000010000028b\n R10: 0000000000055198 R11: ffffb3b6c001ea58 R12: ffff91db80e05010\n R13: 000000000000000a R14: 0000000000000006 R15: 0000000000000040\n FS:  0000000000000000(0000) GS:ffff91db1f840000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffffff8f220860 CR3: 00000001f9580004 CR4: 00000000003706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  <IRQ>\n  _raw_spin_lock_irqsave+0x30/0x40\n  mlx5_ib_poll_cq+0x4c/0xc50 [mlx5_ib]\n  smc_wr_rx_tasklet_fn+0x56/0xa0 [smc]\n  tasklet_action_common.isra.21+0x66/0x100\n  __do_softirq+0xd5/0x29c\n  asm_call_irq_on_stack+0x12/0x20\n  </IRQ>\n  do_softirq_own_stack+0x37/0x40\n  irq_exit_rcu+0x9d/0xa0\n  sysvec_call_function_single+0x34/0x80\n  asm_sysvec_call_function_single+0x12/0x20"
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42097",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1430/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Annotation objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-21902."
    },
    {
        "Modified": "2024-05-23T20:26:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42096",
        "impact": {},
        "last-modified": "2024-05-23T20:26:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1429/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader PDF File Parsing Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of PDF files. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-21880."
    },
    {
        "Modified": "2024-05-23T20:25:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42094",
        "impact": {},
        "last-modified": "2024-05-23T20:25:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1427/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader Annotation Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Annotation objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-21873."
    },
    {
        "Modified": "2024-05-23T20:25:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2023-42095",
        "impact": {},
        "last-modified": "2024-05-23T20:25:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1428/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader AcroForm Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Annotation objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21879."
    },
    {
        "Modified": "2024-05-23T20:22:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42093",
        "impact": {},
        "last-modified": "2024-05-23T20:22:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1426/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader Annotation Use-After-Free Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Annotation objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21869."
    },
    {
        "Modified": "2024-05-23T20:21:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42092",
        "impact": {},
        "last-modified": "2024-05-23T20:21:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1425/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader Doc Object Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Doc objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-21676."
    },
    {
        "Modified": "2024-05-23T20:20:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42091",
        "impact": {},
        "last-modified": "2024-05-23T20:20:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1424/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader XFA Doc Object Use-After-Free Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Doc objects. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-21601."
    },
    {
        "Modified": "2024-05-23T20:15:00",
        "Published": "2024-05-23T20:15:00",
        "access": {},
        "assigner": "security@opentext.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5201",
        "impact": {},
        "last-modified": "2024-05-23T20:15:00",
        "references": [
            "https://portal.microfocus.com/s/article/KM000029985"
        ],
        "summary": "Privilege Escalation\u00a0in OpenText Dimensions RM allows an authenticated user to escalate there privilege to the privilege of another user\u00a0via HTTP Request"
    },
    {
        "Modified": "2024-05-23T20:15:00",
        "Published": "2024-05-23T20:15:00",
        "access": {},
        "assigner": "security@opentext.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5202",
        "impact": {},
        "last-modified": "2024-05-23T20:15:00",
        "references": [
            "https://portal.microfocus.com/s/article/KM000029988"
        ],
        "summary": "Arbitrary File Read\u00a0in OpenText Dimensions RM allows\u00a0authenticated users\u00a0to read files stored on the server via webservices"
    },
    {
        "Modified": "2024-05-23T20:11:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2023-42090",
        "impact": {},
        "last-modified": "2024-05-23T20:11:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1423/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader XFA Doc Object Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of Doc objects. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21596."
    },
    {
        "Modified": "2024-05-23T20:03:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-42089",
        "impact": {},
        "last-modified": "2024-05-23T20:03:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1422/",
            "https://www.foxit.com/support/security-bulletins.html"
        ],
        "summary": "Foxit PDF Reader templates Use-After-Free Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Foxit PDF Reader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the handling of templates. The issue results from the lack of validating the existence of an object prior to performing operations on the object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-21586."
    },
    {
        "Modified": "2024-05-23T19:54:00",
        "Published": "2024-05-15T21:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "CWE-843",
        "id": "CVE-2024-4947",
        "impact": {},
        "last-modified": "2024-05-23T19:54:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/05/stable-channel-update-for-desktop_15.html",
            "https://issues.chromium.org/issues/340221135"
        ],
        "summary": "Type Confusion in V8 in Google Chrome prior to 125.0.6422.60 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-05-23T19:54:00",
        "Published": "2023-10-26T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-43208",
        "impact": {},
        "last-modified": "2024-05-23T19:54:00",
        "references": [
            "https://www.horizon3.ai/nextgen-mirth-connect-remote-code-execution-vulnerability-cve-2023-43208/",
            "http://packetstormsecurity.com/files/176920/Mirth-Connect-4.4.0-Remote-Command-Execution.html"
        ],
        "summary": "NextGen Healthcare Mirth Connect before version 4.4.1 is vulnerable to unauthenticated remote code execution. Note that this vulnerability is caused by the incomplete patch of CVE-2023-37679."
    },
    {
        "Modified": "2024-05-23T19:54:00",
        "Published": "2021-01-05T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "security@apache.org",
        "cvss": 5.0,
        "cvss-time": "2024-05-23T19:54:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
        "cwe": "CWE-552",
        "id": "CVE-2020-17519",
        "impact": {
            "availability": "NONE",
            "confidentiality": "PARTIAL",
            "integrity": "NONE"
        },
        "last-modified": "2024-05-23T19:54:00",
        "references": [
            "https://lists.apache.org/thread.html/r6843202556a6d0bce9607ebc02e303f68fc88e9038235598bde3b50d%40%3Cdev.flink.apache.org%3E",
            "http://www.openwall.com/lists/oss-security/2021/01/05/2",
            "http://packetstormsecurity.com/files/160849/Apache-Flink-1.11.0-Arbitrary-File-Read-Directory-Traversal.html",
            "https://lists.apache.org/thread.html/r6843202556a6d0bce9607ebc02e303f68fc88e9038235598bde3b50d%40%3Cuser.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r6843202556a6d0bce9607ebc02e303f68fc88e9038235598bde3b50d%40%3Cannounce.apache.org%3E",
            "https://lists.apache.org/thread.html/r28f17e564950d663e68cc6fe75756012dda62ac623766bb9bc5e7034%40%3Cissues.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r2fc60b30557e4a537c2a6293023049bd1c49fd92b518309aa85a0398%40%3Cissues.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r4e1b72bfa789ea5bc20b8afe56119200ed25bdab0eb80d664fa5bfe2%40%3Cdev.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r0a433be10676f4fe97ca423d08f914e0ead341c901216f292d2bbe83%40%3Cissues.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r88b55f3ebf1f8f4e1cc61f030252aaef4b77060b56557a243abb92a1%40%3Cissues.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r88f427865fb6aa6e6378efe07632a1906b430365e15e3b9621aabe1d%40%3Cissues.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/ra8c96bf3ccb4e491f9ce87ba35f134b4449beb2a38d1ce28fd89001f%40%3Cdev.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r229167538863518738e02f4c1c5a8bb34c1d45dadcc97adf6676b0c1%40%3Cdev.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/r90890afea72a9571d666820b2fe5942a0a5f86be406fa31da3dd0922%40%3Cannounce.apache.org%3E",
            "https://lists.apache.org/thread.html/r1125f3044a0946d1e7e6f125a6170b58d413ebd4a95157e4608041c7%40%3Cannounce.apache.org%3E",
            "https://lists.apache.org/thread.html/r26fcdd4fe288323006253437ebc4dd6fdfadfb5e93465a0e4f68420d%40%3Cuser-zh.flink.apache.org%3E"
        ],
        "summary": "A change introduced in Apache Flink 1.11.0 (and released in 1.11.1 and 1.11.2 as well) allows attackers to read any file on the local filesystem of the JobManager through the REST interface of the JobManager process. Access is restricted to files accessible by the JobManager process. All users should upgrade to Flink 1.11.3 or 1.12.0 if their Flink instance(s) are exposed. The issue was fixed in commit b561010b0ee741543c3953306037f00d7a9f0801 from apache/flink:master."
    },
    {
        "Modified": "2024-05-23T19:37:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-27021",
        "impact": {},
        "last-modified": "2024-05-23T19:37:00",
        "references": [
            "https://git.kernel.org/stable/c/53d986f39acd8ea11c9e460732bfa5add66360d9",
            "https://git.kernel.org/stable/c/19fa4f2a85d777a8052e869c1b892a2f7556569d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nr8169: fix LED-related deadlock on module removal\n\nBinding devm_led_classdev_register() to the netdev is problematic\nbecause on module removal we get a RTNL-related deadlock. Fix this\nby avoiding the device-managed LED functions.\n\nNote: We can safely call led_classdev_unregister() for a LED even\nif registering it failed, because led_classdev_unregister() detects\nthis and is a no-op in this case."
    },
    {
        "Modified": "2024-05-23T19:37:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-908",
        "id": "CVE-2024-27022",
        "impact": {},
        "last-modified": "2024-05-23T19:37:00",
        "references": [
            "https://git.kernel.org/stable/c/abdb88dd272bbeb93efe01d8e0b7b17e24af3a34",
            "https://git.kernel.org/stable/c/35e351780fa9d8240dd6f7e4f245f9ea37e96c19",
            "https://git.kernel.org/stable/c/0c42f7e039aba3de6d7dbf92da708e2b2ecba557",
            "https://git.kernel.org/stable/c/cec11fa2eb512ebe3a459c185f4aca1d44059bbf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfork: defer linking file vma until vma is fully initialized\n\nThorvald reported a WARNING [1]. And the root cause is below race:\n\n CPU 1\t\t\t\t\tCPU 2\n fork\t\t\t\t\thugetlbfs_fallocate\n  dup_mmap\t\t\t\t hugetlbfs_punch_hole\n   i_mmap_lock_write(mapping);\n   vma_interval_tree_insert_after -- Child vma is visible through i_mmap tree.\n   i_mmap_unlock_write(mapping);\n   hugetlb_dup_vma_private -- Clear vma_lock outside i_mmap_rwsem!\n\t\t\t\t\t i_mmap_lock_write(mapping);\n   \t\t\t\t\t hugetlb_vmdelete_list\n\t\t\t\t\t  vma_interval_tree_foreach\n\t\t\t\t\t   hugetlb_vma_trylock_write -- Vma_lock is cleared.\n   tmp->vm_ops->open -- Alloc new vma_lock outside i_mmap_rwsem!\n\t\t\t\t\t   hugetlb_vma_unlock_write -- Vma_lock is assigned!!!\n\t\t\t\t\t i_mmap_unlock_write(mapping);\n\nhugetlb_dup_vma_private() and hugetlb_vm_op_open() are called outside\ni_mmap_rwsem lock while vma lock can be used in the same time.  Fix this\nby deferring linking file vma until vma is fully initialized.  Those vmas\nshould be initialized first before they can be used."
    },
    {
        "Modified": "2024-05-23T19:36:00",
        "Published": "2024-05-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2022-48674",
        "impact": {},
        "last-modified": "2024-05-23T19:36:00",
        "references": [
            "https://git.kernel.org/stable/c/8ddd001cef5e82d19192e6861068463ecca5f556",
            "https://git.kernel.org/stable/c/94c34faaafe7b55adc2d8d881db195b646959b9e",
            "https://git.kernel.org/stable/c/2f44013e39984c127c6efedf70e6b5f4e9dcf315"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix pcluster use-after-free on UP platforms\n\nDuring stress testing with CONFIG_SMP disabled, KASAN reports as below:\n\n==================================================================\nBUG: KASAN: use-after-free in __mutex_lock+0xe5/0xc30\nRead of size 8 at addr ffff8881094223f8 by task stress/7789\n\nCPU: 0 PID: 7789 Comm: stress Not tainted 6.0.0-rc1-00002-g0d53d2e882f9 #3\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\nCall Trace:\n <TASK>\n..\n __mutex_lock+0xe5/0xc30\n..\n z_erofs_do_read_page+0x8ce/0x1560\n..\n z_erofs_readahead+0x31c/0x580\n..\nFreed by task 7787\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x20/0x30\n kasan_set_free_info+0x20/0x40\n __kasan_slab_free+0x10c/0x190\n kmem_cache_free+0xed/0x380\n rcu_core+0x3d5/0xc90\n __do_softirq+0x12d/0x389\n\nLast potentially related work creation:\n kasan_save_stack+0x1e/0x40\n __kasan_record_aux_stack+0x97/0xb0\n call_rcu+0x3d/0x3f0\n erofs_shrink_workstation+0x11f/0x210\n erofs_shrink_scan+0xdc/0x170\n shrink_slab.constprop.0+0x296/0x530\n drop_slab+0x1c/0x70\n drop_caches_sysctl_handler+0x70/0x80\n proc_sys_call_handler+0x20a/0x2f0\n vfs_write+0x555/0x6c0\n ksys_write+0xbe/0x160\n do_syscall_64+0x3b/0x90\n\nThe root cause is that erofs_workgroup_unfreeze() doesn't reset to\norig_val thus it causes a race that the pcluster reuses unexpectedly\nbefore freeing.\n\nSince UP platforms are quite rare now, such path becomes unnecessary.\nLet's drop such specific-designed path directly instead."
    },
    {
        "Modified": "2024-05-23T19:36:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-362",
        "id": "CVE-2024-27020",
        "impact": {},
        "last-modified": "2024-05-23T19:36:00",
        "references": [
            "https://git.kernel.org/stable/c/0b6de00206adbbfc6373b3ae38d2a6f197987907",
            "https://git.kernel.org/stable/c/8d56bad42ac4c43c6c72ddd6a654a2628bf839c5",
            "https://git.kernel.org/stable/c/a9ebf340d123ae12582210407f879d6a5a1bc25b",
            "https://git.kernel.org/stable/c/01f1a678b05ade4b1248019c2dcca773aebbeb7f",
            "https://git.kernel.org/stable/c/f969eb84ce482331a991079ab7a5c4dc3b7f89bf",
            "https://git.kernel.org/stable/c/939109c0a8e2a006a6cc8209e262d25065f4403a",
            "https://git.kernel.org/stable/c/b38a133d37fa421c8447b383d788c9cc6f5cb34c",
            "https://git.kernel.org/stable/c/934e66e231cff2b18faa2c8aad0b8cec13957e05"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_expr_type_get()\n\nnft_unregister_expr() can concurrent with __nft_expr_type_get(),\nand there is not any protection when iterate over nf_tables_expressions\nlist in __nft_expr_type_get(). Therefore, there is potential data-race\nof nf_tables_expressions list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_expressions\nlist in __nft_expr_type_get(), and use rcu_read_lock() in the caller\nnft_expr_type_get() to protect the entire type query process."
    },
    {
        "Modified": "2024-05-23T19:36:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-27017",
        "impact": {},
        "last-modified": "2024-05-23T19:36:00",
        "references": [
            "https://git.kernel.org/stable/c/721715655c72640567e8742567520c99801148ed",
            "https://git.kernel.org/stable/c/29b359cf6d95fd60730533f7f10464e95bd17c73"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: walk over current view on netlink dump\n\nThe generation mask can be updated while netlink dump is in progress.\nThe pipapo set backend walk iterator cannot rely on it to infer what\nview of the datastructure is to be used. Add notation to specify if user\nwants to read/update the set.\n\nBased on patch from Florian Westphal."
    },
    {
        "Modified": "2024-05-23T19:36:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-27018",
        "impact": {},
        "last-modified": "2024-05-23T19:36:00",
        "references": [
            "https://git.kernel.org/stable/c/dceb683ab87ca3666a9bb5c0158528b646faedc4",
            "https://git.kernel.org/stable/c/b13db0d16bc7b2a52abcf5cb71334f63faa5dbd6",
            "https://git.kernel.org/stable/c/3f59ac29dea0921637053908fe99268d157bbb9d",
            "https://git.kernel.org/stable/c/43193174510ea4f3ce09b796e559a2fd9f148615",
            "https://git.kernel.org/stable/c/751de2012eafa4d46d8081056761fa0e9cc8a178"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: br_netfilter: skip conntrack input hook for promisc packets\n\nFor historical reasons, when bridge device is in promisc mode, packets\nthat are directed to the taps follow bridge input hook path. This patch\nadds a workaround to reset conntrack for these packets.\n\nJianbo Liu reports warning splats in their test infrastructure where\ncloned packets reach the br_netfilter input hook to confirm the\nconntrack object.\n\nScratch one bit from BR_INPUT_SKB_CB to annotate that this packet has\nreached the input hook because it is passed up to the bridge device to\nreach the taps.\n\n[   57.571874] WARNING: CPU: 1 PID: 0 at net/bridge/br_netfilter_hooks.c:616 br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.572749] Modules linked in: xt_MASQUERADE nf_conntrack_netlink nfnetlink iptable_nat xt_addrtype xt_conntrack nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry overlay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_isc si ib_umad rdma_cm ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5ctl mlx5_core\n[   57.575158] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 6.8.0+ #19\n[   57.575700] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n[   57.576662] RIP: 0010:br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.577195] Code: fe ff ff 41 bd 04 00 00 00 be 04 00 00 00 e9 4a ff ff ff be 04 00 00 00 48 89 ef e8 f3 a9 3c e1 66 83 ad b4 00 00 00 04 eb 91 <0f> 0b e9 f1 fe ff ff 0f 0b e9 df fe ff ff 48 89 df e8 b3 53 47 e1\n[   57.578722] RSP: 0018:ffff88885f845a08 EFLAGS: 00010202\n[   57.579207] RAX: 0000000000000002 RBX: ffff88812dfe8000 RCX: 0000000000000000\n[   57.579830] RDX: ffff88885f845a60 RSI: ffff8881022dc300 RDI: 0000000000000000\n[   57.580454] RBP: ffff88885f845a60 R08: 0000000000000001 R09: 0000000000000003\n[   57.581076] R10: 00000000ffff1300 R11: 0000000000000002 R12: 0000000000000000\n[   57.581695] R13: ffff8881047ffe00 R14: ffff888108dbee00 R15: ffff88814519b800\n[   57.582313] FS:  0000000000000000(0000) GS:ffff88885f840000(0000) knlGS:0000000000000000\n[   57.583040] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   57.583564] CR2: 000000c4206aa000 CR3: 0000000103847001 CR4: 0000000000370eb0\n[   57.584194] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[   57.584820] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[   57.585440] Call Trace:\n[   57.585721]  <IRQ>\n[   57.585976]  ? __warn+0x7d/0x130\n[   57.586323]  ? br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.586811]  ? report_bug+0xf1/0x1c0\n[   57.587177]  ? handle_bug+0x3f/0x70\n[   57.587539]  ? exc_invalid_op+0x13/0x60\n[   57.587929]  ? asm_exc_invalid_op+0x16/0x20\n[   57.588336]  ? br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.588825]  nf_hook_slow+0x3d/0xd0\n[   57.589188]  ? br_handle_vlan+0x4b/0x110\n[   57.589579]  br_pass_frame_up+0xfc/0x150\n[   57.589970]  ? br_port_flags_change+0x40/0x40\n[   57.590396]  br_handle_frame_finish+0x346/0x5e0\n[   57.590837]  ? ipt_do_table+0x32e/0x430\n[   57.591221]  ? br_handle_local_finish+0x20/0x20\n[   57.591656]  br_nf_hook_thresh+0x4b/0xf0 [br_netfilter]\n[   57.592286]  ? br_handle_local_finish+0x20/0x20\n[   57.592802]  br_nf_pre_routing_finish+0x178/0x480 [br_netfilter]\n[   57.593348]  ? br_handle_local_finish+0x20/0x20\n[   57.593782]  ? nf_nat_ipv4_pre_routing+0x25/0x60 [nf_nat]\n[   57.594279]  br_nf_pre_routing+0x24c/0x550 [br_netfilter]\n[   57.594780]  ? br_nf_hook_thresh+0xf0/0xf0 [br_netfilter]\n[   57.595280]  br_handle_frame+0x1f3/0x3d0\n[   57.595676]  ? br_handle_local_finish+0x20/0x20\n[   57.596118]  ? br_handle_frame_finish+0x5e0/0x5e0\n[   57.596566]  __netif_receive_skb_core+0x25b/0xfc0\n[   57.597017]  ? __napi_build_skb+0x37/0x40\n[   57.597418]  __netif_receive_skb_list_core+0xfb/0x220"
    },
    {
        "Modified": "2024-05-23T19:36:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-362",
        "id": "CVE-2024-27019",
        "impact": {},
        "last-modified": "2024-05-23T19:36:00",
        "references": [
            "https://git.kernel.org/stable/c/379bf7257bc5f2a1b1ca8514e08a871b7bf6d920",
            "https://git.kernel.org/stable/c/df7c0fb8c2b9f9cac65659332581b19682a71349",
            "https://git.kernel.org/stable/c/ad333578f736d56920e090d7db1f8dec891d815e",
            "https://git.kernel.org/stable/c/4ca946b19caf655a08d5e2266d4d5526025ebb73",
            "https://git.kernel.org/stable/c/d78d867dcea69c328db30df665be5be7d0148484"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_obj_type_get()\n\nnft_unregister_obj() can concurrent with __nft_obj_type_get(),\nand there is not any protection when iterate over nf_tables_objects\nlist in __nft_obj_type_get(). Therefore, there is potential data-race\nof nf_tables_objects list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_objects\nlist in __nft_obj_type_get(), and use rcu_read_lock() in the caller\nnft_obj_type_get() to protect the entire type query process."
    },
    {
        "Modified": "2024-05-23T19:33:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-27016",
        "impact": {},
        "last-modified": "2024-05-23T19:33:00",
        "references": [
            "https://git.kernel.org/stable/c/d06977b9a4109f8738bb276125eb6a0b772bc433",
            "https://git.kernel.org/stable/c/8bf7c76a2a207ca2b4cfda0a279192adf27678d7",
            "https://git.kernel.org/stable/c/a2471d271042ea18e8a6babc132a8716bb2f08b9",
            "https://git.kernel.org/stable/c/cf366ee3bc1b7d1c76a882640ba3b3f8f1039163",
            "https://git.kernel.org/stable/c/87b3593bed1868b2d9fe096c01bcdf0ea86cbebf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: validate pppoe header\n\nEnsure there is sufficient room to access the protocol field of the\nPPPoe header. Validate it once before the flowtable lookup, then use a\nhelper function to access protocol field."
    },
    {
        "Modified": "2024-05-23T19:16:00",
        "Published": "2024-05-23T19:16:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31843",
        "impact": {},
        "last-modified": "2024-05-23T19:16:00",
        "references": [
            "https://www.gruppotim.it/it/footer/red-team.html"
        ],
        "summary": "An issue was discovered in Italtel Embrace 1.6.4. The Web application does not properly check the parameters sent as input before they are processed on the server side. This allows authenticated users to execute commands on the Operating System."
    },
    {
        "Modified": "2024-05-23T19:16:00",
        "Published": "2024-05-23T19:16:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35079",
        "impact": {},
        "last-modified": "2024-05-23T19:16:00",
        "references": [
            "https://www.inxedu.com/",
            "https://github.com/cxcxcxcxcxcxcxc/cxcxcxcxcxcxcxc/blob/main/cxcxcxcxcxc/about-2024/35079.txt"
        ],
        "summary": "An arbitrary file upload vulnerability in the uploadAudio method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading a crafted .jsp file."
    },
    {
        "Modified": "2024-05-23T19:16:00",
        "Published": "2024-05-23T19:16:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35080",
        "impact": {},
        "last-modified": "2024-05-23T19:16:00",
        "references": [
            "https://www.inxedu.com/",
            "https://github.com/cxcxcxcxcxcxcxc/cxcxcxcxcxcxcxc/blob/main/cxcxcxcxcxc/about-2024/35080.txt"
        ],
        "summary": "An arbitrary file upload vulnerability in the gok4 method of inxedu v2024.4 allows attackers to execute arbitrary code via uploading a crafted .jsp file."
    },
    {
        "Modified": "2024-05-23T19:16:00",
        "Published": "2024-05-23T19:16:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35375",
        "impact": {},
        "last-modified": "2024-05-23T19:16:00",
        "references": [
            "http://shtaoism.com/",
            "https://gist.github.com/Tsq741/a16015209fa8728d505c4f82b4f518cd"
        ],
        "summary": "There is an arbitrary file upload vulnerability on the media add .php page in the backend of the website in version 5.7.114 of DedeCMS"
    },
    {
        "Modified": "2024-05-23T19:16:00",
        "Published": "2024-05-23T19:16:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35570",
        "impact": {},
        "last-modified": "2024-05-23T19:16:00",
        "references": [
            "https://github.com/KakeruJ/CVE/"
        ],
        "summary": "An arbitrary file upload vulnerability in the component \\controller\\ImageUploadController.class of inxedu v2.0.6 allows attackers to execute arbitrary code via uploading a crafted jsp file."
    },
    {
        "Modified": "2024-05-23T19:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-27014",
        "impact": {},
        "last-modified": "2024-05-23T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/46efa4d5930cf3c2af8c01f75e0a47e4fc045e3b",
            "https://git.kernel.org/stable/c/48c4bb81df19402d4346032353d0795260255e3b",
            "https://git.kernel.org/stable/c/0080bf99499468030248ebd25dd645e487dcecdc",
            "https://git.kernel.org/stable/c/fef965764cf562f28afb997b626fc7c3cec99693"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Prevent deadlock while disabling aRFS\n\nWhen disabling aRFS under the `priv->state_lock`, any scheduled\naRFS works are canceled using the `cancel_work_sync` function,\nwhich waits for the work to end if it has already started.\nHowever, while waiting for the work handler, the handler will\ntry to acquire the `state_lock` which is already acquired.\n\nThe worker acquires the lock to delete the rules if the state\nis down, which is not the worker's responsibility since\ndisabling aRFS deletes the rules.\n\nAdd an aRFS state variable, which indicates whether the aRFS is\nenabled and prevent adding rules when the aRFS is disabled.\n\nKernel log:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.7.0-rc4_net_next_mlx5_5483eb2 #1 Tainted: G          I\n------------------------------------------------------\nethtool/386089 is trying to acquire lock:\nffff88810f21ce68 ((work_completion)(&rule->arfs_work)){+.+.}-{0:0}, at: __flush_work+0x74/0x4e0\n\nbut task is already holding lock:\nffff8884a1808cc0 (&priv->state_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&priv->state_lock){+.+.}-{3:3}:\n       __mutex_lock+0x80/0xc90\n       arfs_handle_work+0x4b/0x3b0 [mlx5_core]\n       process_one_work+0x1dc/0x4a0\n       worker_thread+0x1bf/0x3c0\n       kthread+0xd7/0x100\n       ret_from_fork+0x2d/0x50\n       ret_from_fork_asm+0x11/0x20\n\n-> #0 ((work_completion)(&rule->arfs_work)){+.+.}-{0:0}:\n       __lock_acquire+0x17b4/0x2c80\n       lock_acquire+0xd0/0x2b0\n       __flush_work+0x7a/0x4e0\n       __cancel_work_timer+0x131/0x1c0\n       arfs_del_rules+0x143/0x1e0 [mlx5_core]\n       mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n       mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n       ethnl_set_channels+0x28f/0x3b0\n       ethnl_default_set_doit+0xec/0x240\n       genl_family_rcv_msg_doit+0xd0/0x120\n       genl_rcv_msg+0x188/0x2c0\n       netlink_rcv_skb+0x54/0x100\n       genl_rcv+0x24/0x40\n       netlink_unicast+0x1a1/0x270\n       netlink_sendmsg+0x214/0x460\n       __sock_sendmsg+0x38/0x60\n       __sys_sendto+0x113/0x170\n       __x64_sys_sendto+0x20/0x30\n       do_syscall_64+0x40/0xe0\n       entry_SYSCALL_64_after_hwframe+0x46/0x4e\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&priv->state_lock);\n                               lock((work_completion)(&rule->arfs_work));\n                               lock(&priv->state_lock);\n  lock((work_completion)(&rule->arfs_work));\n\n *** DEADLOCK ***\n\n3 locks held by ethtool/386089:\n #0: ffffffff82ea7210 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\n #1: ffffffff82e94c88 (rtnl_mutex){+.+.}-{3:3}, at: ethnl_default_set_doit+0xd3/0x240\n #2: ffff8884a1808cc0 (&priv->state_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nstack backtrace:\nCPU: 15 PID: 386089 Comm: ethtool Tainted: G          I        6.7.0-rc4_net_next_mlx5_5483eb2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x60/0xa0\n check_noncircular+0x144/0x160\n __lock_acquire+0x17b4/0x2c80\n lock_acquire+0xd0/0x2b0\n ? __flush_work+0x74/0x4e0\n ? save_trace+0x3e/0x360\n ? __flush_work+0x74/0x4e0\n __flush_work+0x7a/0x4e0\n ? __flush_work+0x74/0x4e0\n ? __lock_acquire+0xa78/0x2c80\n ? lock_acquire+0xd0/0x2b0\n ? mark_held_locks+0x49/0x70\n __cancel_work_timer+0x131/0x1c0\n ? mark_held_locks+0x49/0x70\n arfs_del_rules+0x143/0x1e0 [mlx5_core]\n mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n ethnl_set_channels+0x28f/0x3b0\n ethnl_default_set_doit+0xec/0x240\n genl_family_rcv_msg_doit+0xd0/0x120\n genl_rcv_msg+0x188/0x2c0\n ? ethn\n---truncated---"
    },
    {
        "Modified": "2024-05-23T19:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-26987",
        "impact": {},
        "last-modified": "2024-05-23T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5ef7ba2799a3b5ed292b8f6407376e2c25ef002e",
            "https://git.kernel.org/stable/c/882e1180c83f5b75bae03d0ccc31ccedfe5159de",
            "https://git.kernel.org/stable/c/49955b24002dc16a0ae2e83a57a2a6c863a1845c",
            "https://git.kernel.org/stable/c/1983184c22dd84a4d95a71e5c6775c2638557dc7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/memory-failure: fix deadlock when hugetlb_optimize_vmemmap is enabled\n\nWhen I did hard offline test with hugetlb pages, below deadlock occurs:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-11409-gf6cef5f8c37f #1 Not tainted\n------------------------------------------------------\nbash/46904 is trying to acquire lock:\nffffffffabe68910 (cpu_hotplug_lock){++++}-{0:0}, at: static_key_slow_dec+0x16/0x60\n\nbut task is already holding lock:\nffffffffabf92ea8 (pcp_batch_high_lock){+.+.}-{3:3}, at: zone_pcp_disable+0x16/0x40\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (pcp_batch_high_lock){+.+.}-{3:3}:\n       __mutex_lock+0x6c/0x770\n       page_alloc_cpu_online+0x3c/0x70\n       cpuhp_invoke_callback+0x397/0x5f0\n       __cpuhp_invoke_callback_range+0x71/0xe0\n       _cpu_up+0xeb/0x210\n       cpu_up+0x91/0xe0\n       cpuhp_bringup_mask+0x49/0xb0\n       bringup_nonboot_cpus+0xb7/0xe0\n       smp_init+0x25/0xa0\n       kernel_init_freeable+0x15f/0x3e0\n       kernel_init+0x15/0x1b0\n       ret_from_fork+0x2f/0x50\n       ret_from_fork_asm+0x1a/0x30\n\n-> #0 (cpu_hotplug_lock){++++}-{0:0}:\n       __lock_acquire+0x1298/0x1cd0\n       lock_acquire+0xc0/0x2b0\n       cpus_read_lock+0x2a/0xc0\n       static_key_slow_dec+0x16/0x60\n       __hugetlb_vmemmap_restore_folio+0x1b9/0x200\n       dissolve_free_huge_page+0x211/0x260\n       __page_handle_poison+0x45/0xc0\n       memory_failure+0x65e/0xc70\n       hard_offline_page_store+0x55/0xa0\n       kernfs_fop_write_iter+0x12c/0x1d0\n       vfs_write+0x387/0x550\n       ksys_write+0x64/0xe0\n       do_syscall_64+0xca/0x1e0\n       entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(pcp_batch_high_lock);\n                               lock(cpu_hotplug_lock);\n                               lock(pcp_batch_high_lock);\n  rlock(cpu_hotplug_lock);\n\n *** DEADLOCK ***\n\n5 locks held by bash/46904:\n #0: ffff98f6c3bb23f0 (sb_writers#5){.+.+}-{0:0}, at: ksys_write+0x64/0xe0\n #1: ffff98f6c328e488 (&of->mutex){+.+.}-{3:3}, at: kernfs_fop_write_iter+0xf8/0x1d0\n #2: ffff98ef83b31890 (kn->active#113){.+.+}-{0:0}, at: kernfs_fop_write_iter+0x100/0x1d0\n #3: ffffffffabf9db48 (mf_mutex){+.+.}-{3:3}, at: memory_failure+0x44/0xc70\n #4: ffffffffabf92ea8 (pcp_batch_high_lock){+.+.}-{3:3}, at: zone_pcp_disable+0x16/0x40\n\nstack backtrace:\nCPU: 10 PID: 46904 Comm: bash Kdump: loaded Not tainted 6.8.0-11409-gf6cef5f8c37f #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x68/0xa0\n check_noncircular+0x129/0x140\n __lock_acquire+0x1298/0x1cd0\n lock_acquire+0xc0/0x2b0\n cpus_read_lock+0x2a/0xc0\n static_key_slow_dec+0x16/0x60\n __hugetlb_vmemmap_restore_folio+0x1b9/0x200\n dissolve_free_huge_page+0x211/0x260\n __page_handle_poison+0x45/0xc0\n memory_failure+0x65e/0xc70\n hard_offline_page_store+0x55/0xa0\n kernfs_fop_write_iter+0x12c/0x1d0\n vfs_write+0x387/0x550\n ksys_write+0x64/0xe0\n do_syscall_64+0xca/0x1e0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7fc862314887\nCode: 10 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 48 89 54 24 18 48 89 74 24\nRSP: 002b:00007fff19311268 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007fc862314887\nRDX: 000000000000000c RSI: 000056405645fe10 RDI: 0000000000000001\nRBP: 000056405645fe10 R08: 00007fc8623d1460 R09: 000000007fffffff\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000000000c\nR13: 00007fc86241b780 R14: 00007fc862417600 R15: 00007fc862416a00\n\nIn short, below scene breaks the \n---truncated---"
    },
    {
        "Modified": "2024-05-23T19:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-27012",
        "impact": {},
        "last-modified": "2024-05-23T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/86658fc7414d4b9e25c2699d751034537503d637",
            "https://git.kernel.org/stable/c/e79b47a8615d42c68aaeb68971593333667382ed"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: restore set elements when delete set fails\n\nFrom abort path, nft_mapelem_activate() needs to restore refcounters to\nthe original state. Currently, it uses the set->ops->walk() to iterate\nover these set elements. The existing set iterator skips inactive\nelements in the next generation, this does not work from the abort path\nto restore the original state since it has to skip active elements\ninstead (not inactive ones).\n\nThis patch moves the check for inactive elements to the set iterator\ncallback, then it reverses the logic for the .activate case which\nneeds to skip active elements.\n\nToggle next generation bit for elements when delete set command is\ninvoked and call nft_clear() from .activate (abort) path to restore the\nnext generation bit.\n\nThe splat below shows an object in mappings memleak:\n\n[43929.457523] ------------[ cut here ]------------\n[43929.457532] WARNING: CPU: 0 PID: 1139 at include/net/netfilter/nf_tables.h:1237 nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[...]\n[43929.458014] RIP: 0010:nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458076] Code: 83 f8 01 77 ab 49 8d 7c 24 08 e8 37 5e d0 de 49 8b 6c 24 08 48 8d 7d 50 e8 e9 5c d0 de 8b 45 50 8d 50 ff 89 55 50 85 c0 75 86 <0f> 0b eb 82 0f 0b eb b3 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90\n[43929.458081] RSP: 0018:ffff888140f9f4b0 EFLAGS: 00010246\n[43929.458086] RAX: 0000000000000000 RBX: ffff8881434f5288 RCX: dffffc0000000000\n[43929.458090] RDX: 00000000ffffffff RSI: ffffffffa26d28a7 RDI: ffff88810ecc9550\n[43929.458093] RBP: ffff88810ecc9500 R08: 0000000000000001 R09: ffffed10281f3e8f\n[43929.458096] R10: 0000000000000003 R11: ffff0000ffff0000 R12: ffff8881434f52a0\n[43929.458100] R13: ffff888140f9f5f4 R14: ffff888151c7a800 R15: 0000000000000002\n[43929.458103] FS:  00007f0c687c4740(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[43929.458107] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[43929.458111] CR2: 00007f58dbe5b008 CR3: 0000000123602005 CR4: 00000000001706f0\n[43929.458114] Call Trace:\n[43929.458118]  <TASK>\n[43929.458121]  ? __warn+0x9f/0x1a0\n[43929.458127]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458188]  ? report_bug+0x1b1/0x1e0\n[43929.458196]  ? handle_bug+0x3c/0x70\n[43929.458200]  ? exc_invalid_op+0x17/0x40\n[43929.458211]  ? nft_setelem_data_deactivate+0xd7/0xf0 [nf_tables]\n[43929.458271]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458332]  nft_mapelem_deactivate+0x24/0x30 [nf_tables]\n[43929.458392]  nft_rhash_walk+0xdd/0x180 [nf_tables]\n[43929.458453]  ? __pfx_nft_rhash_walk+0x10/0x10 [nf_tables]\n[43929.458512]  ? rb_insert_color+0x2e/0x280\n[43929.458520]  nft_map_deactivate+0xdc/0x1e0 [nf_tables]\n[43929.458582]  ? __pfx_nft_map_deactivate+0x10/0x10 [nf_tables]\n[43929.458642]  ? __pfx_nft_mapelem_deactivate+0x10/0x10 [nf_tables]\n[43929.458701]  ? __rcu_read_unlock+0x46/0x70\n[43929.458709]  nft_delset+0xff/0x110 [nf_tables]\n[43929.458769]  nft_flush_table+0x16f/0x460 [nf_tables]\n[43929.458830]  nf_tables_deltable+0x501/0x580 [nf_tables]"
    },
    {
        "Modified": "2024-05-23T19:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-770",
        "id": "CVE-2024-27013",
        "impact": {},
        "last-modified": "2024-05-23T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a50dbeca28acf7051dfa92786b85f704c75db6eb",
            "https://git.kernel.org/stable/c/62e27ef18eb4f0d33bbae8e9ef56b99696a74713",
            "https://git.kernel.org/stable/c/40f4ced305c6c47487d3cd8da54676e2acc1a6ad",
            "https://git.kernel.org/stable/c/52854101180beccdb9dc2077a3bea31b6ad48dfa",
            "https://git.kernel.org/stable/c/f8bbc07ac535593139c875ffa19af924b1084540",
            "https://git.kernel.org/stable/c/68459b8e3ee554ce71878af9eb69659b9462c588",
            "https://git.kernel.org/stable/c/4b0dcae5c4797bf31c63011ed62917210d3fdac3",
            "https://git.kernel.org/stable/c/14cdb43dbc827e18ac7d5b30c5b4c676219f1421"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: limit printing rate when illegal packet received by tun dev\n\nvhost_worker will call tun call backs to receive packets. If too many\nillegal packets arrives, tun_do_read will keep dumping packet contents.\nWhen console is enabled, it will costs much more cpu time to dump\npacket and soft lockup will be detected.\n\nnet_ratelimit mechanism can be used to limit the dumping rate.\n\nPID: 33036    TASK: ffff949da6f20000  CPU: 23   COMMAND: \"vhost-32980\"\n #0 [fffffe00003fce50] crash_nmi_callback at ffffffff89249253\n #1 [fffffe00003fce58] nmi_handle at ffffffff89225fa3\n #2 [fffffe00003fceb0] default_do_nmi at ffffffff8922642e\n #3 [fffffe00003fced0] do_nmi at ffffffff8922660d\n #4 [fffffe00003fcef0] end_repeat_nmi at ffffffff89c01663\n    [exception RIP: io_serial_in+20]\n    RIP: ffffffff89792594  RSP: ffffa655314979e8  RFLAGS: 00000002\n    RAX: ffffffff89792500  RBX: ffffffff8af428a0  RCX: 0000000000000000\n    RDX: 00000000000003fd  RSI: 0000000000000005  RDI: ffffffff8af428a0\n    RBP: 0000000000002710   R8: 0000000000000004   R9: 000000000000000f\n    R10: 0000000000000000  R11: ffffffff8acbf64f  R12: 0000000000000020\n    R13: ffffffff8acbf698  R14: 0000000000000058  R15: 0000000000000000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #5 [ffffa655314979e8] io_serial_in at ffffffff89792594\n #6 [ffffa655314979e8] wait_for_xmitr at ffffffff89793470\n #7 [ffffa65531497a08] serial8250_console_putchar at ffffffff897934f6\n #8 [ffffa65531497a20] uart_console_write at ffffffff8978b605\n #9 [ffffa65531497a48] serial8250_console_write at ffffffff89796558\n #10 [ffffa65531497ac8] console_unlock at ffffffff89316124\n #11 [ffffa65531497b10] vprintk_emit at ffffffff89317c07\n #12 [ffffa65531497b68] printk at ffffffff89318306\n #13 [ffffa65531497bc8] print_hex_dump at ffffffff89650765\n #14 [ffffa65531497ca8] tun_do_read at ffffffffc0b06c27 [tun]\n #15 [ffffa65531497d38] tun_recvmsg at ffffffffc0b06e34 [tun]\n #16 [ffffa65531497d68] handle_rx at ffffffffc0c5d682 [vhost_net]\n #17 [ffffa65531497ed0] vhost_worker at ffffffffc0c644dc [vhost]\n #18 [ffffa65531497f10] kthread at ffffffff892d2e72\n #19 [ffffa65531497f50] ret_from_fork at ffffffff89c0022f"
    },
    {
        "Modified": "2024-05-23T19:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-27015",
        "impact": {},
        "last-modified": "2024-05-23T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e719b52d0c56989b0f3475a03a6d64f182c85b56",
            "https://git.kernel.org/stable/c/f1c3c61701a0b12f4906152c1626a5de580ea3d2",
            "https://git.kernel.org/stable/c/4ed82dd368ad883dc4284292937b882f044e625d",
            "https://git.kernel.org/stable/c/e3f078103421642fcd5f05c5e70777feb10f000d",
            "https://git.kernel.org/stable/c/6db5dc7b351b9569940cd1cf445e237c42cd6d27"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: incorrect pppoe tuple\n\npppoe traffic reaching ingress path does not match the flowtable entry\nbecause the pppoe header is expected to be at the network header offset.\nThis bug causes a mismatch in the flow table lookup, so pppoe packets\nenter the classical forwarding path."
    },
    {
        "Modified": "2024-05-23T19:14:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-120",
        "id": "CVE-2024-26952",
        "impact": {},
        "last-modified": "2024-05-23T19:14:00",
        "references": [
            "https://git.kernel.org/stable/c/2dcda336b6e80b72d58d30d40f2fad9724e5fe63",
            "https://git.kernel.org/stable/c/0c5541b4c980626fa3cab16ba1a451757778bbb5",
            "https://git.kernel.org/stable/c/c6cd2e8d2d9aa7ee35b1fa6a668e32a22a9753da"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix potencial out-of-bounds when buffer offset is invalid\n\nI found potencial out-of-bounds when buffer offset fields of a few requests\nis invalid. This patch set the minimum value of buffer offset field to\n->Buffer offset to validate buffer length."
    },
    {
        "Modified": "2024-05-23T19:14:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-26979",
        "impact": {},
        "last-modified": "2024-05-23T19:14:00",
        "references": [
            "https://git.kernel.org/stable/c/c560327d900bab968c2e1b4cd7fa2d46cd429e3d",
            "https://git.kernel.org/stable/c/899e154f9546fcae18065d74064889d08fff62c2",
            "https://git.kernel.org/stable/c/07c3fe923ff7eccf684fb4f8c953d0a7cc8ded73",
            "https://git.kernel.org/stable/c/ff41e0d4f3fa10d7cdd7d40f8026bea9fcc8b000",
            "https://git.kernel.org/stable/c/9cb3755b1e3680b720b74dbedfac889e904605c7",
            "https://git.kernel.org/stable/c/585fec7361e7850bead21fada49a7fcde2f2e791",
            "https://git.kernel.org/stable/c/517621b7060096e48e42f545fa6646fc00252eac"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix possible null pointer derefence with invalid contexts\n\nvmw_context_cotable can return either an error or a null pointer and its\nusage sometimes went unchecked. Subsequent code would then try to access\neither a null pointer or an error value.\n\nThe invalid dereferences were only possible with malformed userspace\napps which never properly initialized the rendering contexts.\n\nCheck the results of vmw_context_cotable to fix the invalid derefs.\n\nThanks:\nziming zhang(@ezrak1e) from Ant Group Light-Year Security Lab\nwho was the first person to discover it.\nNiels De Graef who reported it and helped to track down the poc."
    },
    {
        "Modified": "2024-05-23T19:14:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-26986",
        "impact": {},
        "last-modified": "2024-05-23T19:14:00",
        "references": [
            "https://git.kernel.org/stable/c/aa02d43367a9adf8c85fb382fea4171fb266c8d0",
            "https://git.kernel.org/stable/c/0dcd876411644da98a6b4d5a18d32ca94c15bdb5",
            "https://git.kernel.org/stable/c/18921b205012568b45760753ad3146ddb9e2d4e2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix memory leak in create_process failure\n\nFix memory leak due to a leaked mmget reference on an error handling\ncode path that is triggered when attempting to create KFD processes\nwhile a GPU reset is in progress."
    },
    {
        "Modified": "2024-05-23T19:14:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-26978",
        "impact": {},
        "last-modified": "2024-05-23T19:14:00",
        "references": [
            "https://git.kernel.org/stable/c/7d271b798add90c6196539167c019d0817285cf0",
            "https://git.kernel.org/stable/c/c45e53c27b78afd6c81fc25608003576f27b5735",
            "https://git.kernel.org/stable/c/12609c76b755dbeb1645c0aacc0f0f4743b2eff3",
            "https://git.kernel.org/stable/c/2160ad6861c4a21d3fa553d7b2aaec6634a37f8a",
            "https://git.kernel.org/stable/c/5cd8af02b466e1beeae13e2de3dc58fcc7925e5a",
            "https://git.kernel.org/stable/c/aeca49661fd02fd56fb026768b580ce301b45733",
            "https://git.kernel.org/stable/c/0d27056c24efd3d63a03f3edfbcfc4827086b110"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max310x: fix NULL pointer dereference in I2C instantiation\n\nWhen trying to instantiate a max14830 device from userspace:\n\n    echo max14830 0x60 > /sys/bus/i2c/devices/i2c-2/new_device\n\nwe get the following error:\n\n    Unable to handle kernel NULL pointer dereference at virtual address...\n    ...\n    Call trace:\n        max310x_i2c_probe+0x48/0x170 [max310x]\n        i2c_device_probe+0x150/0x2a0\n    ...\n\nAdd check for validity of devtype to prevent the error, and abort probe\nwith a meaningful error message."
    },
    {
        "Modified": "2024-05-23T19:13:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-26934",
        "impact": {},
        "last-modified": "2024-05-23T19:13:00",
        "references": [
            "https://git.kernel.org/stable/c/8cbdd324b41528994027128207fae8100dff094f",
            "https://git.kernel.org/stable/c/12d6a5681a0a5cecc2af7860f0a1613fa7c6e947",
            "https://git.kernel.org/stable/c/e451709573f8be904a8a72d0775bf114d7c291d9",
            "https://git.kernel.org/stable/c/1b175bc579f46520b11ecda443bcd2ee4904f66a",
            "https://git.kernel.org/stable/c/ab062fa3dc69aea88fe62162c5881ba14b50ecc5",
            "https://git.kernel.org/stable/c/122a06f1068bf5e39089863f4f60b1f5d4273384",
            "https://git.kernel.org/stable/c/dbdf66250d2d33e8b27352fcb901de79f3521057",
            "https://git.kernel.org/stable/c/07acf979da33c721357ff27129edf74c23c036c6",
            "https://git.kernel.org/stable/c/80ba43e9f799cbdd83842fc27db667289b3150f5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix deadlock in usb_deauthorize_interface()\n\nAmong the attribute file callback routines in\ndrivers/usb/core/sysfs.c, the interface_authorized_store() function is\nthe only one which acquires a device lock on an ancestor device: It\ncalls usb_deauthorize_interface(), which locks the interface's parent\nUSB device.\n\nThe will lead to deadlock if another process already owns that lock\nand tries to remove the interface, whether through a configuration\nchange or because the device has been disconnected.  As part of the\nremoval procedure, device_del() waits for all ongoing sysfs attribute\ncallbacks to complete.  But usb_deauthorize_interface() can't complete\nuntil the device lock has been released, and the lock won't be\nreleased until the removal has finished.\n\nThe mechanism provided by sysfs to prevent this kind of deadlock is\nto use the sysfs_break_active_protection() function, which tells sysfs\nnot to wait for the attribute callback.\n\nReported-and-tested by: Yue Sun <samsun1006219@gmail.com>\nReported by: xingwei lee <xrivendell7@gmail.com>"
    },
    {
        "Modified": "2024-05-23T19:13:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-26942",
        "impact": {},
        "last-modified": "2024-05-23T19:13:00",
        "references": [
            "https://git.kernel.org/stable/c/a8a296ad9957b845b89bcf48be1cf8c74875ecc3",
            "https://git.kernel.org/stable/c/6a4aee277740d04ac0fd54cfa17cc28261932ddc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: qcom: at803x: fix kernel panic with at8031_probe\n\nOn reworking and splitting the at803x driver, in splitting function of\nat803x PHYs it was added a NULL dereference bug where priv is referenced\nbefore it's actually allocated and then is tried to write to for the\nis_1000basex and is_fiber variables in the case of at8031, writing on\nthe wrong address.\n\nFix this by correctly setting priv local variable only after\nat803x_probe is called and actually allocates priv in the phydev struct."
    },
    {
        "Modified": "2024-05-23T19:13:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-26949",
        "impact": {},
        "last-modified": "2024-05-23T19:13:00",
        "references": [
            "https://git.kernel.org/stable/c/99c2f1563b1400cc8331fc79d19ada1bb95bb388",
            "https://git.kernel.org/stable/c/b8eaa8ef1f1157a9f330e36e66bdd7a693309948",
            "https://git.kernel.org/stable/c/08ae9ef829b8055c2fdc8cfee37510c1f4721a07"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/pm: Fix NULL pointer dereference when get power limit\n\nBecause powerplay_table initialization is skipped under\nsriov case, We check and set default lower and upper OD\nvalue if powerplay_table is NULL."
    },
    {
        "Modified": "2024-05-23T19:12:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-415",
        "id": "CVE-2024-26932",
        "impact": {},
        "last-modified": "2024-05-23T19:12:00",
        "references": [
            "https://git.kernel.org/stable/c/242e425ed580b2f4dbcb86c8fc03a410a4084a69",
            "https://git.kernel.org/stable/c/b63f90487bdf93a4223ce7853d14717e9d452856"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: fix double-free issue in tcpm_port_unregister_pd()\n\nWhen unregister pd capabilitie in tcpm, KASAN will capture below double\n-free issue. The root cause is the same capabilitiy will be kfreed twice,\nthe first time is kfreed by pd_capabilities_release() and the second time\nis explicitly kfreed by tcpm_port_unregister_pd().\n\n[    3.988059] BUG: KASAN: double-free in tcpm_port_unregister_pd+0x1a4/0x3dc\n[    3.995001] Free of addr ffff0008164d3000 by task kworker/u16:0/10\n[    4.001206]\n[    4.002712] CPU: 2 PID: 10 Comm: kworker/u16:0 Not tainted 6.8.0-rc5-next-20240220-05616-g52728c567a55 #53\n[    4.012402] Hardware name: Freescale i.MX8QXP MEK (DT)\n[    4.017569] Workqueue: events_unbound deferred_probe_work_func\n[    4.023456] Call trace:\n[    4.025920]  dump_backtrace+0x94/0xec\n[    4.029629]  show_stack+0x18/0x24\n[    4.032974]  dump_stack_lvl+0x78/0x90\n[    4.036675]  print_report+0xfc/0x5c0\n[    4.040289]  kasan_report_invalid_free+0xa0/0xc0\n[    4.044937]  __kasan_slab_free+0x124/0x154\n[    4.049072]  kfree+0xb4/0x1e8\n[    4.052069]  tcpm_port_unregister_pd+0x1a4/0x3dc\n[    4.056725]  tcpm_register_port+0x1dd0/0x2558\n[    4.061121]  tcpci_register_port+0x420/0x71c\n[    4.065430]  tcpci_probe+0x118/0x2e0\n\nTo fix the issue, this will remove kree() from tcpm_port_unregister_pd()."
    },
    {
        "Modified": "2024-05-23T19:12:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-26933",
        "impact": {},
        "last-modified": "2024-05-23T19:12:00",
        "references": [
            "https://git.kernel.org/stable/c/9dac54f08198147f5ec0ec52fcf1bc8ac899ac05",
            "https://git.kernel.org/stable/c/f51849833705dea5b4f9b0c8de714dd87bd6c95c",
            "https://git.kernel.org/stable/c/4facc9421117ba9d8148c73771b213887fec77f7",
            "https://git.kernel.org/stable/c/73d1589b91f2099e5f6534a8497b7c6b527e064e",
            "https://git.kernel.org/stable/c/f4d1960764d8a70318b02f15203a1be2b2554ca1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix deadlock in port \"disable\" sysfs attribute\n\nThe show and store callback routines for the \"disable\" sysfs attribute\nfile in port.c acquire the device lock for the port's parent hub\ndevice.  This can cause problems if another process has locked the hub\nto remove it or change its configuration:\n\n\tRemoving the hub or changing its configuration requires the\n\thub interface to be removed, which requires the port device\n\tto be removed, and device_del() waits until all outstanding\n\tsysfs attribute callbacks for the ports have returned.  The\n\tlock can't be released until then.\n\n\tBut the disable_show() or disable_store() routine can't return\n\tuntil after it has acquired the lock.\n\nThe resulting deadlock can be avoided by calling\nsysfs_break_active_protection().  This will cause the sysfs core not\nto wait for the attribute's callback routine to return, allowing the\nremoval to proceed.  The disadvantage is that after making this call,\nthere is no guarantee that the hub structure won't be deallocated at\nany moment.  To prevent this, we have to acquire a reference to it\nfirst by calling hub_get()."
    },
    {
        "Modified": "2024-05-23T19:10:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-415",
        "id": "CVE-2024-26930",
        "impact": {},
        "last-modified": "2024-05-23T19:10:00",
        "references": [
            "https://git.kernel.org/stable/c/f14cee7a882cb79528f17a2335f53e9fd1848467",
            "https://git.kernel.org/stable/c/b7deb675d674f44e0ddbab87fee8f9f098925e73",
            "https://git.kernel.org/stable/c/825d63164a2e6bacb059a9afb5605425b485413f",
            "https://git.kernel.org/stable/c/e288285d47784fdcf7c81be56df7d65c6f10c58b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix double free of the ha->vp_map pointer\n\nCoverity scan reported potential risk of double free of the pointer\nha->vp_map.  ha->vp_map was freed in qla2x00_mem_alloc(), and again freed\nin function qla2x00_mem_free(ha).\n\nAssign NULL to vp_map and kfree take care of NULL."
    },
    {
        "Modified": "2024-05-23T19:07:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-415",
        "id": "CVE-2024-26929",
        "impact": {},
        "last-modified": "2024-05-23T19:07:00",
        "references": [
            "https://git.kernel.org/stable/c/b03e626bd6d3f0684f56ee1890d70fc9ca991c04",
            "https://git.kernel.org/stable/c/282877633b25d67021a34169c5b5519b1d4ef65e",
            "https://git.kernel.org/stable/c/f85af9f1aa5e2f53694a6cbe72010f754b5ff862",
            "https://git.kernel.org/stable/c/9b43d2884b54d415caab48878b526dfe2ae9921b",
            "https://git.kernel.org/stable/c/846fb9f112f618ec6ae181d8dae7961652574774",
            "https://git.kernel.org/stable/c/82f522ae0d97119a43da53e0f729275691b9c525"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix double free of fcport\n\nThe server was crashing after LOGO because fcport was getting freed twice.\n\n -----------[ cut here ]-----------\n kernel BUG at mm/slub.c:371!\n invalid opcode: 0000 1 SMP PTI\n CPU: 35 PID: 4610 Comm: bash Kdump: loaded Tainted: G OE --------- - - 4.18.0-425.3.1.el8.x86_64 #1\n Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021\n RIP: 0010:set_freepointer.part.57+0x0/0x10\n RSP: 0018:ffffb07107027d90 EFLAGS: 00010246\n RAX: ffff9cb7e3150000 RBX: ffff9cb7e332b9c0 RCX: ffff9cb7e3150400\n RDX: 0000000000001f37 RSI: 0000000000000000 RDI: ffff9cb7c0005500\n RBP: fffff693448c5400 R08: 0000000080000000 R09: 0000000000000009\n R10: 0000000000000000 R11: 0000000000132af0 R12: ffff9cb7c0005500\n R13: ffff9cb7e3150000 R14: ffffffffc06990e0 R15: ffff9cb7ea85ea58\n FS: 00007ff6b79c2740(0000) GS:ffff9cb8f7ec0000(0000) knlGS:0000000000000000\n CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000055b426b7d700 CR3: 0000000169c18002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n kfree+0x238/0x250\n qla2x00_els_dcmd_sp_free+0x20/0x230 [qla2xxx]\n ? qla24xx_els_dcmd_iocb+0x607/0x690 [qla2xxx]\n qla2x00_issue_logo+0x28c/0x2a0 [qla2xxx]\n ? qla2x00_issue_logo+0x28c/0x2a0 [qla2xxx]\n ? kernfs_fop_write+0x11e/0x1a0\n\nRemove one of the free calls and add check for valid fcport. Also use\nfunction qla2x00_free_fcport() instead of kfree()."
    },
    {
        "Modified": "2024-05-23T19:05:00",
        "Published": "2024-05-01T04:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-28978",
        "impact": {},
        "last-modified": "2024-05-23T19:05:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000224641/dsa-2024-201-security-update-for-dell-openmanage-enterprise-vulnerability"
        ],
        "summary": "Dell OpenManage Enterprise, versions 3.10 and 4.0, contains an Improper Access Control vulnerability. A high privileged remote attacker could potentially exploit this vulnerability, leading to unauthorized access to resources."
    },
    {
        "Modified": "2024-05-23T19:05:00",
        "Published": "2024-05-01T04:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-28979",
        "impact": {},
        "last-modified": "2024-05-23T19:05:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000224642/dsa-2024-202-security-update-for-dell-openmanage-enterprise-vulnerability"
        ],
        "summary": "Dell OpenManage Enterprise, versions prior to 4.1.0, contains an XSS injection vulnerability in UI. A high privileged local attacker could potentially exploit this vulnerability, leading to JavaScript injection."
    },
    {
        "Modified": "2024-05-23T19:01:00",
        "Published": "2024-04-28T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-908",
        "id": "CVE-2022-48654",
        "impact": {},
        "last-modified": "2024-05-23T19:01:00",
        "references": [
            "https://git.kernel.org/stable/c/721ea8ac063d70c2078c4e762212705de6151764",
            "https://git.kernel.org/stable/c/5d75fef3e61e797fab5c3fbba88caa74ab92ad47",
            "https://git.kernel.org/stable/c/816eab147e5c6f6621922b8515ad9010ceb1735e",
            "https://git.kernel.org/stable/c/633c81c0449663f57d4138326d036dc6cfad674e",
            "https://git.kernel.org/stable/c/559c36c5a8d730c49ef805a72b213d3bba155cc8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nfnetlink_osf: fix possible bogus match in nf_osf_find()\n\nnf_osf_find() incorrectly returns true on mismatch, this leads to\ncopying uninitialized memory area in nft_osf which can be used to leak\nstale kernel stack data to userspace."
    },
    {
        "Modified": "2024-05-23T18:12:00",
        "Published": "2022-10-11T19:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2022-38028",
        "impact": {},
        "last-modified": "2024-05-23T18:12:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2022-38028"
        ],
        "summary": "Windows Print Spooler Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-05-23T18:11:00",
        "Published": "2024-04-04T01:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-798",
        "id": "CVE-2024-3272",
        "impact": {},
        "last-modified": "2024-05-23T18:11:00",
        "references": [
            "https://vuldb.com/?id.259283",
            "https://vuldb.com/?ctiid.259283",
            "https://github.com/netsecfish/dlink",
            "https://supportannouncement.us.dlink.com/security/publication.aspx?name=SAP10383"
        ],
        "summary": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability, which was classified as very critical, has been found in D-Link DNS-320L, DNS-325, DNS-327L and DNS-340L up to 20240403. This issue affects some unknown processing of the file /cgi-bin/nas_sharing.cgi of the component HTTP GET Request Handler. The manipulation of the argument user with the input messagebus leads to hard-coded credentials. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-259283. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: Vendor was contacted early and confirmed immediately that the product is end-of-life. It should be retired and replaced."
    },
    {
        "Modified": "2024-05-23T18:10:00",
        "Published": "2024-04-04T01:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-77",
        "id": "CVE-2024-3273",
        "impact": {},
        "last-modified": "2024-05-23T18:10:00",
        "references": [
            "https://vuldb.com/?id.259284",
            "https://vuldb.com/?ctiid.259284",
            "https://vuldb.com/?submit.304661",
            "https://github.com/netsecfish/dlink",
            "https://supportannouncement.us.dlink.com/security/publication.aspx?name=SAP10383"
        ],
        "summary": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability, which was classified as critical, was found in D-Link DNS-320L, DNS-325, DNS-327L and DNS-340L up to 20240403. Affected is an unknown function of the file /cgi-bin/nas_sharing.cgi of the component HTTP GET Request Handler. The manipulation of the argument system leads to command injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-259284. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: Vendor was contacted early and confirmed immediately that the product is end-of-life. It should be retired and replaced."
    },
    {
        "Modified": "2024-05-23T18:00:00",
        "Published": "2024-03-12T15:15:00",
        "access": {},
        "assigner": "psirt@fortinet.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2023-48788",
        "impact": {},
        "last-modified": "2024-05-23T18:00:00",
        "references": [
            "https://fortiguard.com/psirt/FG-IR-24-007"
        ],
        "summary": "A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiClientEMS version 7.2.0 through 7.2.2, FortiClientEMS 7.0.1 through 7.0.10 allows attacker to execute unauthorized code or commands via specially crafted packets."
    },
    {
        "Modified": "2024-05-23T17:58:00",
        "Published": "2019-07-02T19:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 10.0,
        "cvss-time": "2024-05-23T17:58:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-78",
        "id": "CVE-2019-7256",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-05-23T17:58:00",
        "references": [
            "https://applied-risk.com/labs/advisories",
            "https://www.applied-risk.com/resources/ar-2019-005",
            "http://packetstormsecurity.com/files/155255/Linear-eMerge-E3-1.00-06-card_scan.php-Command-Injection.html",
            "http://packetstormsecurity.com/files/155256/Linear-eMerge-E3-1.00-06-card_scan_decoder.php-Command-Injection.html",
            "http://packetstormsecurity.com/files/155272/Linear-eMerge-E3-Access-Controller-Command-Injection.html",
            "http://packetstormsecurity.com/files/170372/Linear-eMerge-E3-Series-Access-Controller-Command-Injection.html"
        ],
        "summary": "Linear eMerge E3-Series devices allow Command Injections."
    },
    {
        "Modified": "2024-05-23T17:57:00",
        "Published": "2024-03-05T20:16:00",
        "access": {},
        "assigner": "product-security@apple.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-23225",
        "impact": {},
        "last-modified": "2024-05-23T17:57:00",
        "references": [
            "https://support.apple.com/en-us/HT214081",
            "https://support.apple.com/en-us/HT214082",
            "https://support.apple.com/kb/HT214083",
            "https://support.apple.com/kb/HT214088",
            "https://support.apple.com/kb/HT214084",
            "https://support.apple.com/kb/HT214086",
            "https://support.apple.com/kb/HT214085",
            "https://support.apple.com/kb/HT214087",
            "http://seclists.org/fulldisclosure/2024/Mar/19",
            "http://seclists.org/fulldisclosure/2024/Mar/18",
            "http://seclists.org/fulldisclosure/2024/Mar/21",
            "http://seclists.org/fulldisclosure/2024/Mar/25",
            "http://seclists.org/fulldisclosure/2024/Mar/24",
            "http://seclists.org/fulldisclosure/2024/Mar/22",
            "http://seclists.org/fulldisclosure/2024/Mar/23",
            "http://seclists.org/fulldisclosure/2024/Mar/26"
        ],
        "summary": "A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 16.7.6 and iPadOS 16.7.6, iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited."
    },
    {
        "Modified": "2024-05-23T17:57:00",
        "Published": "2024-03-05T20:16:00",
        "access": {},
        "assigner": "product-security@apple.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-23296",
        "impact": {},
        "last-modified": "2024-05-23T17:57:00",
        "references": [
            "https://support.apple.com/en-us/HT214081",
            "https://support.apple.com/kb/HT214088",
            "https://support.apple.com/kb/HT214084",
            "https://support.apple.com/kb/HT214086",
            "https://support.apple.com/kb/HT214087",
            "http://seclists.org/fulldisclosure/2024/Mar/18",
            "http://seclists.org/fulldisclosure/2024/Mar/21",
            "http://seclists.org/fulldisclosure/2024/Mar/25",
            "http://seclists.org/fulldisclosure/2024/Mar/24",
            "http://seclists.org/fulldisclosure/2024/Mar/26"
        ],
        "summary": "A memory corruption issue was addressed with improved validation. This issue is fixed in iOS 17.4 and iPadOS 17.4. An attacker with arbitrary kernel read and write capability may be able to bypass kernel memory protections. Apple is aware of a report that this issue may have been exploited."
    },
    {
        "Modified": "2024-05-23T17:57:00",
        "Published": "2024-03-04T18:15:00",
        "access": {},
        "assigner": "security@jetbrains.com",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2024-27198",
        "impact": {},
        "last-modified": "2024-05-23T17:57:00",
        "references": [
            "https://www.jetbrains.com/privacy-security/issues-fixed/",
            "https://www.darkreading.com/cyberattacks-data-breaches/jetbrains-teamcity-mass-exploitation-underway-rogue-accounts-thrive"
        ],
        "summary": "In JetBrains TeamCity before 2023.11.4 authentication bypass allowing to perform admin actions was possible"
    },
    {
        "Modified": "2024-05-23T17:57:00",
        "Published": "2024-02-13T18:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21338",
        "impact": {},
        "last-modified": "2024-05-23T17:57:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21338",
            "https://decoded.avast.io/janvojtesek/lazarus-and-the-fudmodule-rootkit-beyond-byovd-with-an-admin-to-kernel-zero-day/"
        ],
        "summary": "Windows Kernel Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-05-23T17:56:00",
        "Published": "2023-07-21T20:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-3603",
        "impact": {},
        "last-modified": "2024-05-23T17:56:00",
        "references": [
            "https://bugzilla.redhat.com/show_bug.cgi?id=2221791",
            "https://access.redhat.com/security/cve/CVE-2023-3603"
        ],
        "summary": "A missing allocation check in sftp server processing read requests may cause a NULL dereference on low-memory conditions. The malicious client can request up to 4GB SFTP reads, causing allocation of up to 4GB buffers, which was not being checked for failure. This will likely crash the authenticated user's sftp server connection (if implemented as forking as recommended). For thread-based servers, this might also cause DoS for legitimate users.\r\n\r\nGiven this code is not in any released versions, no security releases have been issued."
    },
    {
        "Modified": "2024-05-23T17:56:00",
        "Published": "2020-08-17T19:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 9.3,
        "cvss-time": "2024-05-23T17:56:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-330",
        "id": "CVE-2020-1472",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-05-23T17:56:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1472",
            "http://packetstormsecurity.com/files/159190/Zerologon-Proof-Of-Concept.html",
            "https://www.kb.cert.org/vuls/id/490028",
            "http://www.openwall.com/lists/oss-security/2020/09/17/2",
            "https://usn.ubuntu.com/4510-1/",
            "https://www.synology.com/security/advisory/Synology_SA_20_21",
            "https://usn.ubuntu.com/4510-2/",
            "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00080.html",
            "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00086.html",
            "https://usn.ubuntu.com/4559-1/",
            "http://packetstormsecurity.com/files/160127/Zerologon-Netlogon-Privilege-Escalation.html",
            "https://lists.debian.org/debian-lts-announce/2020/11/msg00041.html",
            "https://security.gentoo.org/glsa/202012-24",
            "https://www.oracle.com/security-alerts/cpuApr2021.html",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H4OTFBL6YDVFH2TBJFJIE4FMHPJEEJK3/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TAPQQZZAT4TG3XVRTAFV2Y3S7OAHFBUP/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ST6X3A2XXYMGD4INR26DQ4FP4QSM753B/"
        ],
        "summary": "An elevation of privilege vulnerability exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller, using the Netlogon Remote Protocol (MS-NRPC). An attacker who successfully exploited the vulnerability could run a specially crafted application on a device on the network.\nTo exploit the vulnerability, an unauthenticated attacker would be required to use MS-NRPC to connect to a domain controller to obtain domain administrator access.\nMicrosoft is addressing the vulnerability in a phased two-part rollout. These updates address the vulnerability by modifying how Netlogon handles the usage of Netlogon secure channels.\nFor guidelines on how to manage the changes required for this vulnerability and more information on the phased rollout, see  How to manage the changes in Netlogon secure channel connections associated with CVE-2020-1472 (updated September 28, 2020).\nWhen the second phase of Windows updates become available in Q1 2021, customers will be notified via a revision to this security vulnerability. If you wish to be notified when these updates are released, we recommend that you register for the security notifications mailer to be alerted of content changes to this advisory. See Microsoft Technical Security Notifications.\n"
    }
]