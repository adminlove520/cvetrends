[
    {
        "Modified": "2024-07-12T15:46:00",
        "Published": "2024-07-09T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38085",
        "impact": {},
        "last-modified": "2024-07-12T15:46:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38085"
        ],
        "summary": "Windows Graphics Component Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-12T15:45:00",
        "Published": "2024-07-09T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38086",
        "impact": {},
        "last-modified": "2024-07-12T15:45:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38086"
        ],
        "summary": "Azure Kinect SDK Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-12T15:42:00",
        "Published": "2024-07-09T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38089",
        "impact": {},
        "last-modified": "2024-07-12T15:42:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38089"
        ],
        "summary": "Microsoft Defender for IoT Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-12T15:35:00",
        "Published": "2024-07-09T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38091",
        "impact": {},
        "last-modified": "2024-07-12T15:35:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38091"
        ],
        "summary": "Microsoft WS-Discovery Denial of Service Vulnerability"
    },
    {
        "Modified": "2024-07-12T15:34:00",
        "Published": "2024-07-06T17:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-37554",
        "impact": {},
        "last-modified": "2024-07-12T15:34:00",
        "references": [
            "https://patchstack.com/database/vulnerability/ultraaddons-elementor-lite/wordpress-ultraaddons-elementor-addons-header-footer-builder-custom-font-custom-css-woo-widget-menu-builder-anywhere-elementor-shortcode-plugin-1-1-6-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in CodeAstrology Team UltraAddons Elementor Lite (Header & Footer Builder, Menu Builder, Cart Icon, Shortcode).This issue affects UltraAddons Elementor Lite (Header & Footer Builder, Menu Builder, Cart Icon, Shortcode): from n/a through 1.1.6."
    },
    {
        "Modified": "2024-07-12T15:29:00",
        "Published": "2024-07-06T15:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-37547",
        "impact": {},
        "last-modified": "2024-07-12T15:29:00",
        "references": [
            "https://patchstack.com/database/vulnerability/addons-for-elementor/wordpress-elementor-addons-by-livemesh-plugin-8-3-7-local-file-inclusion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Livemesh Livemesh Addons for Elementor.This issue affects Livemesh Addons for Elementor: from n/a through 8.3.7."
    },
    {
        "Modified": "2024-07-12T15:24:00",
        "Published": "2024-07-06T16:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-37553",
        "impact": {},
        "last-modified": "2024-07-12T15:24:00",
        "references": [
            "https://patchstack.com/database/vulnerability/testimonials-widget/wordpress-testimonials-widget-plugin-4-0-4-cross-site-scripting-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Axelerant Testimonials Widget allows Stored XSS.This issue affects Testimonials Widget: from n/a through 4.0.4."
    },
    {
        "Modified": "2024-07-12T15:20:00",
        "Published": "2024-07-09T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-5802",
        "impact": {},
        "last-modified": "2024-07-12T15:20:00",
        "references": [
            "https://wpscan.com/vulnerability/cd37f702-9144-4c98-9b08-c63e510cd97f/"
        ],
        "summary": "The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed"
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-12T15:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-38715",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/exs-widgets/wordpress-exs-widgets-plugin-0-3-1-local-file-inclusion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in ExS ExS Widgets allows PHP Local File Inclusion.This issue affects ExS Widgets: from n/a through 0.3.1."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-12T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39903",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://github.com/widgetti/solara/security/advisories/GHSA-9794-pc4r-438w",
            "https://github.com/widgetti/solara/commit/df2fd66a7f4e8ffd36e8678697a8a4f76760dc54"
        ],
        "summary": "Solara is a pure Python, React-style framework for scaling Jupyter and web apps. A Local File Inclusion (LFI) vulnerability was identified in widgetti/solara, in version <1.35.1, which was fixed in version 1.35.1. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../' when serving static files. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-12T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39909",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://github.com/openclarity/kubeclarity/security/advisories/GHSA-5248-h45p-9pgw",
            "https://github.com/openclarity/kubeclarity/commit/1d1178840703a72d9082b7fc4aea0a3326c5d294",
            "https://github.com/openclarity/kubeclarity/blob/main/backend/pkg/database/id_view.go#L79"
        ],
        "summary": "KubeClarity is a tool for detection and management of Software Bill Of Materials (SBOM) and vulnerabilities of container images and filesystems. A time/boolean SQL Injection is present in the following resource `/api/applicationResources` via the following parameter `packageID`. As it can be seen in backend/pkg/database/id_view.go, while building the SQL Query the `fmt.Sprintf` function is used to build the query string without the input having first been subjected to any validation. This vulnerability is fixed in 2.23.1."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-12T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39914",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://github.com/FOGProject/fogproject/security/advisories/GHSA-7h44-6vq6-cq8j",
            "https://github.com/FOGProject/fogproject/commit/2413bc034753c32799785e9bf08164ccd0a2759f"
        ],
        "summary": "FOG is a cloning/imaging/rescue suite/inventory management system. Prior to 1.5.10.34, packages/web/lib/fog/reportmaker.class.php in FOG was affected by a command injection via the filename parameter to /fog/management/export.php. This vulnerability is fixed in 1.5.10.34."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-12T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39916",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://github.com/FOGProject/fogproject/security/advisories/GHSA-3xjr-xf9v-hwjh",
            "https://github.com/FOGProject/fogproject/commit/2de209bc57a177a052b4a877f000c591740b2f88"
        ],
        "summary": "FOG is a free open-source cloning/imaging/rescue suite/inventory management system. There is a security issue with the NFS configuration in /etc/exports generated by the installer that allows an attacker to modify files outside the export in the default installation. The exports have the no_subtree_check option. The no_subtree_check option means that if a client performs a file operation, the server will only check if the requested file is on the correct filesystem, not if it is in the correct directory. This enables modifying files in /images, accessing other files on the same filesystem, and accessing files on other filesystems. This vulnerability is fixed in 1.5.10.30."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2024-07-11T17:15:00",
        "access": {},
        "assigner": "sirt@juniper.net",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39536",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://supportportal.juniper.net/JSA82996"
        ],
        "summary": "A Missing Release of Memory after Effective Lifetime vulnerability in the Periodic Packet Management Daemon (ppmd) of Juniper Networks Junos OS and Junos OS Evolved allows an unauthenticated adjacent attacker to cause a \n\nDenial-of-Service (DoS).\n\n\nWhen a\u00a0BFD session configured with authentication flaps,\u00a0ppmd memory can leak. Whether the leak happens depends on a\u00a0race condition which is outside the attackers control. This issue only affects BFD operating in distributed aka delegated (which is the default behavior) or inline mode.\n\n\n\nWhether the leak occurs can be monitored with the following CLI command:\n\n> show ppm request-queue\n\n\nFPC \u00a0 \u00a0 Pending-request\nfpc0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02\nrequest-total-pending: 2\n\n\nwhere a continuously increasing number of pending requests is indicative of the leak.\u00a0\n\n\n\n\n\n\n\n\nThis issue affects:\n\nJunos OS:\n\n\n  *  All versions before 21.2R3-S8,\n  *  21.4 versions before 21.4R3-S7,\n  *  22.1 versions before 22.1R3-S4,\n  *  22.2 versions before 22.2R3-S4, \n  *  22.3 versions before 22.3R3,\n  *  22.4 versions before 22.4R2-S2, 22.4R3.\n\n\n\nJunos OS Evolved:\n  *  All versions before 21.2R3-S8-EVO,\n  *  21.4-EVO versions before 21.4R3-S7-EVO,\n  *  22.2-EVO versions before 22.2R3-S4-EVO,\n  *  22.3-EVO versions before 22.3R3-EVO,\n  *  22.4-EVO versions before 22.4R3-EVO."
    },
    {
        "Modified": "2024-07-12T15:15:00",
        "Published": "2023-07-31T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-863",
        "id": "CVE-2023-36091",
        "impact": {},
        "last-modified": "2024-07-12T15:15:00",
        "references": [
            "https://www.dlink.com/en/security-bulletin/",
            "https://www.dlink.com/en/support"
        ],
        "summary": "Authentication Bypass vulnerability in D-Link DIR-895 FW102b07 allows remote attackers to gain escalated privileges via via function phpcgi_main in cgibin. NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
    },
    {
        "Modified": "2024-07-12T15:05:00",
        "Published": "2024-07-09T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38092",
        "impact": {},
        "last-modified": "2024-07-12T15:05:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38092"
        ],
        "summary": "Azure CycleCloud Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-12T14:58:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-1284",
        "id": "CVE-2024-27362",
        "impact": {},
        "last-modified": "2024-07-12T14:58:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/",
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/cve-2024-27362/"
        ],
        "summary": "A vulnerability was discovered in Samsung Mobile Processors Exynos 1280, Exynos 2200, Exynos 1330, Exynos 1380, and Exynos 2400 where they do not properly check the length of the data, which can lead to a Information disclosure."
    },
    {
        "Modified": "2024-07-12T14:57:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-1284",
        "id": "CVE-2024-27360",
        "impact": {},
        "last-modified": "2024-07-12T14:57:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/",
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/cve-2024-27360/"
        ],
        "summary": "A vulnerability was discovered in Samsung Mobile Processors Exynos 850, Exynos 1080, Exynos 2100, Exynos 2200, Exynos 1280, Exynos 1380, Exynos 1330, and Exynos W930 where they do not properly check length of the data, which can lead to a Denial of Service."
    },
    {
        "Modified": "2024-07-12T14:57:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-28067",
        "impact": {},
        "last-modified": "2024-07-12T14:57:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/",
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/cve-2024-28067/"
        ],
        "summary": "A vulnerability in Samsung Exynos Modem 5300 allows a Man-in-the-Middle (MITM) attacker to downgrade the security mode of packets going to the victim, enabling the attacker to send messages to the victim in plaintext."
    },
    {
        "Modified": "2024-07-12T14:53:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-1284",
        "id": "CVE-2024-31957",
        "impact": {},
        "last-modified": "2024-07-12T14:53:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/",
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/cve-2024-31957/"
        ],
        "summary": "A vulnerability was discovered in Samsung Mobile Processors Exynos 2200 and Exynos 2400 where they lack a check for the validation of native handles, which can result in a DoS(Denial of Service) attack by unmapping an invalid length."
    },
    {
        "Modified": "2024-07-12T14:51:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-38970",
        "impact": {},
        "last-modified": "2024-07-12T14:51:00",
        "references": [
            "https://github.com/tingyuu/vaeThink",
            "https://gist.github.com/fltys/b2c430bca85c97211010bdc602437978"
        ],
        "summary": "vaeThink 1.0.2 is vulnerable to Information Disclosure via the system backend,access management administrator function."
    },
    {
        "Modified": "2024-07-12T14:50:00",
        "Published": "2024-07-09T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-38971",
        "impact": {},
        "last-modified": "2024-07-12T14:50:00",
        "references": [
            "https://github.com/tingyuu/vaeThink",
            "https://gist.github.com/fltys/998d96272545d2cf7cd6b182adbfd672"
        ],
        "summary": "vaeThink 1.0.2 is vulnerable to stored Cross Site Scripting (XSS) in the system backend."
    },
    {
        "Modified": "2024-07-12T14:40:00",
        "Published": "2024-07-09T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-6171",
        "impact": {},
        "last-modified": "2024-07-12T14:40:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/714acd7d-6d19-4087-bb27-b9a4ccbb678b?source=cve",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/unitecreator_form.class.php#L742",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/framework/functions.class.php#L3407",
            "https://plugins.trac.wordpress.org/changeset/3112307/"
        ],
        "summary": "The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to IP Address Spoofing in all versions up to, and including, 1.5.112 due to insufficient IP address validation and/or use of user-supplied HTTP headers as a primary method for IP retrieval. This makes it possible for unauthenticated attackers  to bypass antispam functionality in the Form Builder widgets."
    },
    {
        "Modified": "2024-07-12T14:30:00",
        "Published": "2024-07-09T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6169",
        "impact": {},
        "last-modified": "2024-07-12T14:30:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f2f11c32-d58e-4ac8-83c7-30927a626e10?source=cve",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/framework/instagram/helper.class.php#L168",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/framework/instagram/helper.class.php#L178",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/framework/instagram/helper.class.php#L182",
            "https://github.com/hakluke/weaponised-XSS-payloads/blob/master/wordpress_create_admin_user.js",
            "https://plugins.trac.wordpress.org/changeset/3112307/"
        ],
        "summary": "The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018username\u2019 parameter in all versions up to, and including, 1.5.112 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above and granted plugin setting edit permissions by an administrator, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-07-12T14:25:00",
        "Published": "2024-07-09T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4667",
        "impact": {},
        "last-modified": "2024-07-12T14:25:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/a24c2d7d-8df8-4a3a-a538-09e11ebc6dd5?source=cve",
            "https://plugins.trac.wordpress.org/browser/blog-posts-and-category-for-elementor/trunk/widgets/post-category-filter.php#L885",
            "https://wordpress.org/plugins/blog-posts-and-category-for-elementor/#developers"
        ],
        "summary": "The Blog, Posts and Category Filter for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Post and Category Filter widget in all versions up to, and including, 1.0.3 due to insufficient input sanitization and output escaping on user supplied 'post_types' attribute. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-07-12T14:23:00",
        "Published": "2024-07-09T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6166",
        "impact": {},
        "last-modified": "2024-07-12T14:23:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/9826c91c-0f6e-4d3b-bc14-4af6b60ef246?source=cve",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/unitecreator_addons.class.php#L79",
            "https://plugins.trac.wordpress.org/changeset/3112307/"
        ],
        "summary": "The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to time-based SQL Injection via the \u2018addons_order\u2019 parameter in all versions up to, and including, 1.5.112 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above and granted plugin setting edit permissions by an administrator, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-07-12T14:20:00",
        "Published": "2024-07-09T05:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6170",
        "impact": {},
        "last-modified": "2024-07-12T14:20:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/db14b141-521b-464d-a638-2228b1a86c2b?source=cve",
            "https://plugins.trac.wordpress.org/browser/unlimited-elements-for-elementor/trunk/inc_php/unitecreator_settings_output.class.php#L398",
            "https://github.com/hakluke/weaponised-XSS-payloads/blob/master/wordpress_create_admin_user.js",
            "https://plugins.trac.wordpress.org/changeset/3112307/"
        ],
        "summary": "The Unlimited Elements For Elementor (Free Widgets, Addons, Templates) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018email\u2019 parameter in all versions up to, and including, 1.5.112 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-07-12T14:17:00",
        "Published": "2023-07-10T16:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-601",
        "id": "CVE-2023-3568",
        "impact": {},
        "last-modified": "2024-07-12T14:17:00",
        "references": [
            "https://huntr.dev/bounties/e8d530db-a6a7-4f79-a95d-b77654cc04f8",
            "https://github.com/alextselegidis/easyappointments/commit/b37b46019553089db4f22eb2fe998bca84b2cb64"
        ],
        "summary": "Open Redirect in GitHub repository alextselegidis/easyappointments prior to 1.5.0.\n\n"
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-35773",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/comment-reply-email/wordpress-comment-reply-email-plugin-1-3-csrf-to-stored-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in WPJohnny, zerOneIT Comment Reply Email allows Cross-Site Scripting (XSS).This issue affects Comment Reply Email: from n/a through 1.3."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-37202",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/custom-add-to-cart-button-for-woocommerce/wordpress-ultimate-custom-add-to-cart-button-ajax-for-woocommerce-by-binary-carpenter-plugin-1-222-16-broken-access-control-to-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in BinaryCarpenter Ultimate Custom Add To Cart Button (Ajax) For WooCommerce by Binary Carpenter allows Cross-Site Scripting (XSS).This issue affects Ultimate Custom Add To Cart Button (Ajax) For WooCommerce by Binary Carpenter: from n/a through 1.222.16."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37564",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/payplus-payment-gateway/wordpress-payplus-payment-gateway-plugin-7-0-7-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in PayPlus LTD PayPlus Payment Gateway.This issue affects PayPlus Payment Gateway: from n/a through 7.0.7."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-37928",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/noo-jobmonster/wordpress-jobmonster-theme-4-7-0-unauthenticated-arbitrary-file-deletion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in NooTheme Jobmonster allows File Manipulation.This issue affects Jobmonster: from n/a through 4.7.0."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-74",
        "id": "CVE-2024-38700",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/currency-switcher/wordpress-wpcs-wordpress-currency-switcher-professional-plugin-1-2-0-3-arbitrary-shortcode-execution-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') vulnerability in realmag777 WPCS allows Code Injection.This issue affects WPCS: from n/a through 1.2.0.3."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-38704",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wp-team-manager/wordpress-team-manager-plugin-2-1-12-local-file-inclusion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in DynamicWebLab WordPress Team Manager allows PHP Local File Inclusion.This issue affects WordPress Team Manager: from n/a through 2.1.12."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-38706",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/ht-mega-for-elementor/wordpress-ht-mega-plugin-2-5-7-json-path-traversal-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in HasThemes HT Mega allows Path Traversal.This issue affects HT Mega: from n/a through 2.5.7."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-269",
        "id": "CVE-2024-37560",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wp-user-switch/wordpress-wp-user-switch-plugin-1-0-5-privilege-escalation-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Privilege Management vulnerability in IqbalRony WP User Switch allows Privilege Escalation.This issue affects WP User Switch: from n/a through 1.1.0."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-37213",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/ali2woo-lite/wordpress-aliexpress-dropshipping-with-alinext-lite-plugin-3-3-5-csrf-to-xss-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in Ali2Woo Team Ali2Woo Lite allows Cross-Site Scripting (XSS).This issue affects Ali2Woo Lite: from n/a through 3.3.9."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-37544",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/more-better-reviews-for-woocommerce/wordpress-get-better-reviews-for-woocommerce-plugin-4-0-6-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in Tobias Conrad Get Better Reviews for WooCommerce.This issue affects Get Better Reviews for WooCommerce: from n/a through 4.0.6."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-37932",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/woocommerce-openpos/wordpress-woocommerce-openpos-plugin-6-4-4-unauthenticated-arbitrary-file-deletion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in anhvnit Woocommerce OpenPos allows File Manipulation.This issue affects Woocommerce OpenPos: from n/a through 6.4.4."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-269",
        "id": "CVE-2024-37927",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/noo-jobmonster/wordpress-jobmonster-theme-4-7-0-unauthenticated-privilege-escalation-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Privilege Management vulnerability in NooTheme Jobmonster allows Privilege Escalation.This issue affects Jobmonster: from n/a through 4.7.0."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-37939",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/patricia-lite/wordpress-patricia-lite-theme-1-2-3-cross-site-request-forgery-csrf-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in VolThemes Patricia Lite.This issue affects Patricia Lite: from n/a through 1.2.3."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-37933",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/woocommerce-openpos/wordpress-woocommerce-openpos-plugin-6-4-4-unauthenticated-sql-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in anhvnit Woocommerce OpenPos.This issue affects Woocommerce OpenPos: from n/a through 6.4.4."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-37938",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/sociallyviral/wordpress-sociallyviral-theme-1-0-10-cross-site-request-forgery-csrf-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in MyThemeShop SociallyViral.This issue affects SociallyViral: from n/a through 1.0.10."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-37940",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/seraphinite-accelerator-ext/wordpress-seraphinite-accelerator-full-premium-plugin-2-21-13-csrf-leading-to-arbitrary-file-deletion-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in Seraphinite Solutions Seraphinite Accelerator (Full, premium).This issue affects Seraphinite Accelerator (Full, premium): from n/a through 2.21.13."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37941",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/internal-links/wordpress-internal-link-juicer-seo-auto-linker-for-wordpress-plugin-2-24-3-cross-site-request-forgery-csrf-vulnerability?_s_id=cve"
        ],
        "summary": "Cross-Site Request Forgery (CSRF) vulnerability in Internal Link Juicer Internal Link Juicer: SEO Auto Linker for WordPress.This issue affects Internal Link Juicer: SEO Auto Linker for WordPress: from n/a through 2.24.3."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-38709",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/gd-rating-system/wordpress-gd-rating-system-plugin-3-6-local-file-inclusion-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Milan Petrovic GD Rating System allows PHP Local File Inclusion.This issue affects GD Rating System: from n/a through 3.6."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-74",
        "id": "CVE-2024-36522",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://lists.apache.org/thread/w613qh7yors840pbx00l1pq6wkl9jzkc",
            "http://www.openwall.com/lists/oss-security/2024/07/12/2"
        ],
        "summary": "The default configuration of XSLTResourceStream.java is vulnerable to remote code execution via XSLT injection when processing input from an untrusted source without validation.\nUsers are recommended to upgrade to versions 10.1.0, 9.18.0 or 8.16.0, which fix this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-08T18:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-364",
        "id": "CVE-2024-6409",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-6409",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2295085",
            "http://www.openwall.com/lists/oss-security/2024/07/08/2",
            "https://explore.alas.aws.amazon.com/CVE-2024-6409.html",
            "https://sig-security.rocky.page/issues/CVE-2024-6409/",
            "https://ubuntu.com/security/CVE-2024-6409",
            "https://security-tracker.debian.org/tracker/CVE-2024-6409",
            "http://www.openwall.com/lists/oss-security/2024/07/09/2",
            "http://www.openwall.com/lists/oss-security/2024/07/09/5",
            "https://bugzilla.suse.com/show_bug.cgi?id=1227217",
            "https://www.suse.com/security/cve/CVE-2024-6409.html",
            "https://almalinux.org/blog/2024-07-09-cve-2024-6409/",
            "http://www.openwall.com/lists/oss-security/2024/07/10/1",
            "http://www.openwall.com/lists/oss-security/2024/07/10/2",
            "https://github.com/openela-main/openssh/commit/c00da7741d42029e49047dd89e266d91dcfbffa0",
            "https://security.netapp.com/advisory/ntap-20240712-0003/"
        ],
        "summary": "A signal handler race condition vulnerability was found in OpenSSH's server (sshd) in Red Hat Enterprise Linux 9, where a client does not authenticate within LoginGraceTime seconds (120 by default, 600 in old OpenSSH versions), then sshd's SIGALRM handler is called asynchronously. However, this signal handler calls various functions that are not async-signal-safe, for example, syslog(). This issue leaves it vulnerable to a signal handler race condition on the cleanup_exit() function, which introduces the same vulnerability as CVE-2024-6387 in the unprivileged child of the SSHD server. As a consequence of a successful attack, in the worst case scenario, the attacker may be able to perform a remote code execution (RCE) within unprivileged user running the sshd server. This vulnerability affects only the sshd server shipped with Red Hat Enterprise Linux 9, while upstream versions of sshd are not impact by this flaw."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-08T14:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-405",
        "id": "CVE-2024-39743",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7159714",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/297172"
        ],
        "summary": "IBM MQ Operator 3.2.2 and IBM MQ Operator 2.0.24 IBM MQ Container Developer Edition is vulnerable to denial of service caused by incorrect memory de-allocation.   A remote attacker could exploit this vulnerability to cause the server to consume memory resources.  IBM X-Force ID:  297172."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-04T09:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39884",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0002/"
        ],
        "summary": "A regression in the core of Apache HTTP Server 2.4.60 ignores some use of the legacy content-type based configuration of handlers.\u00a0 \u00a0\"AddType\" and similar configuration, under some circumstances where files are requested indirectly, result in source code disclosure of local content. For example, PHP scripts may be served instead of interpreted.\n\nUsers are recommended to upgrade to version 2.4.61, which fixes this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-02T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39894",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://www.openssh.com/txt/release-9.8",
            "https://lists.mindrot.org/pipermail/openssh-unix-announce/2024-July/000158.html",
            "https://www.openwall.com/lists/oss-security/2024/07/02/1",
            "http://www.openwall.com/lists/oss-security/2024/07/03/6",
            "https://security.netapp.com/advisory/ntap-20240712-0004/"
        ],
        "summary": "OpenSSH 9.5 through 9.7 before 9.8 sometimes allows timing attacks against echo-off password entry (e.g., for su and Sudo) because of an ObscureKeystrokeTiming logic error. Similarly, other timing attacks against keystroke entry could occur."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-116",
        "id": "CVE-2024-38474",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Substitution encoding issue in mod_rewrite in Apache HTTP Server 2.4.59 and earlier allows attacker to execute scripts in\ndirectories permitted by the configuration but not directly reachable by any\u00a0URL or source disclosure of scripts meant to only to be executed as CGI.\n\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue.\n\nSome RewriteRules that capture and substitute unsafely will now fail unless rewrite flag \"UnsafeAllow3F\" is specified."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-36387",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Serving WebSocket protocol upgrades over a HTTP/2 connection could result in a Null Pointer dereference, leading to a crash of the server process, degrading performance."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-38477",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "null pointer dereference in mod_proxy in Apache HTTP Server 2.4.59 and earlier allows an attacker to crash the server via a malicious request.\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-116",
        "id": "CVE-2024-38475",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Improper escaping of output in mod_rewrite in Apache HTTP Server 2.4.59 and earlier allows an attacker to map URLs to filesystem locations that are\u00a0permitted to be served by the server but are not intentionally/directly reachable by any URL, resulting in code execution or source code disclosure. \n\nSubstitutions in\u00a0server context that use a backreferences or variables as the first segment of the substitution are affected.\u00a0 Some unsafe RewiteRules will be broken by this change and the rewrite flag \"UnsafePrefixStat\" can be used to opt back in once ensuring the substitution is appropriately constrained."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-829",
        "id": "CVE-2024-38476",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Vulnerability in core of Apache HTTP Server 2.4.59 and earlier are vulnerably to information disclosure, SSRF or local script execution via\u00a0backend applications whose response headers are malicious or exploitable.\n\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38472",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "SSRF in Apache HTTP Server on Windows allows to potentially leak NTML hashes to a malicious server via SSRF and\u00a0malicious requests or content \nUsers are recommended to upgrade to version 2.4.60 which fixes this issue.\u00a0 Note: Existing configurations that access UNC paths will have to configure new directive \"UNCList\" to allow access during request processing."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-20",
        "id": "CVE-2024-39573",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Potential SSRF in mod_rewrite in Apache HTTP Server 2.4.59 and earlier allows an attacker to cause unsafe RewriteRules to unexpectedly setup URL's to be handled by mod_proxy.\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-07-01T19:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-116",
        "id": "CVE-2024-38473",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://security.netapp.com/advisory/ntap-20240712-0001/"
        ],
        "summary": "Encoding problem in mod_proxy in Apache HTTP Server 2.4.59 and earlier allows request URLs with incorrect encoding to be sent to backend services, potentially bypassing authentication via crafted requests.\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2024-06-27T11:15:00",
        "access": {},
        "assigner": "openssl-security@openssl.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5535",
        "impact": {},
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://www.openssl.org/news/secadv/20240627.txt",
            "https://github.com/openssl/openssl/commit/e86ac436f0bd54d4517745483e2315650fae7b2c",
            "https://github.com/openssl/openssl/commit/99fb785a5f85315b95288921a321a935ea29a51e",
            "https://github.com/openssl/openssl/commit/4ada436a1946cbb24db5ab4ca082b69c1bc10f37",
            "https://github.com/openssl/openssl/commit/cf6f91f6121f4db167405db2f0de410a456f260c",
            "https://github.openssl.org/openssl/extended-releases/commit/b78ec0824da857223486660177d3b1f255c65d87",
            "https://github.openssl.org/openssl/extended-releases/commit/9947251413065a05189a63c9b7a6c1d4e224c21c",
            "http://www.openwall.com/lists/oss-security/2024/06/27/1",
            "http://www.openwall.com/lists/oss-security/2024/06/28/4",
            "https://security.netapp.com/advisory/ntap-20240712-0005/"
        ],
        "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available."
    },
    {
        "Modified": "2024-07-12T14:15:00",
        "Published": "2022-07-08T04:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "security@eclipse.org",
        "cvss": 6.8,
        "cvss-time": "2024-07-12T14:15:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-829",
        "id": "CVE-2021-41037",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-12T14:15:00",
        "references": [
            "https://bugs.eclipse.org/bugs/show_bug.cgi?id=577029",
            "https://github.com/eclipse-equinox/p2/issues/235"
        ],
        "summary": "In Eclipse p2, installable units are able to alter the Eclipse Platform installation and the local machine via touchpoints during installation. Those touchpoints can, for example, alter the command-line used to start the application, injecting things like agent or other settings that usually require particular attention in term of security. Although p2 has built-in strategies to ensure artifacts are signed and then to help establish trust, there is no such strategy for the metadata part that does configure such touchpoints. As a result, it's possible to install a unit that will run malicious code during installation without user receiving any warning about this installation step being risky when coming from untrusted source."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40920",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/caaa2129784a04dcade0ea92c12e6ff90bbd23d8",
            "https://git.kernel.org/stable/c/7caefa2771722e65496d85b62e1dc4442b7d1345",
            "https://git.kernel.org/stable/c/406bfc04b01ee47e4c626f77ecc7d9f85135b166",
            "https://git.kernel.org/stable/c/546ceb1dfdac866648ec959cbc71d9525bd73462"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bridge: mst: fix suspicious rcu usage in br_mst_set_state\n\nI converted br_mst_set_state to RCU to avoid a vlan use-after-free\nbut forgot to change the vlan group dereference helper. Switch to vlan\ngroup RCU deref helper to fix the suspicious rcu usage warning."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40948",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/51897f99351fff7b57f4f141940fa93b4e90fd2b",
            "https://git.kernel.org/stable/c/84d3549d54f5ff9fa3281257be3019386f51d1a0",
            "https://git.kernel.org/stable/c/dec2382247860d2134c8d41e103e26460c099629",
            "https://git.kernel.org/stable/c/8bb592c2eca8fd2bc06db7d80b38da18da4a2f43"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/page_table_check: fix crash on ZONE_DEVICE\n\nNot all pages may apply to pgtable check.  One example is ZONE_DEVICE\npages: they map PFNs directly, and they don't allocate page_ext at all\neven if there's struct page around.  One may reference\ndevm_memremap_pages().\n\nWhen both ZONE_DEVICE and page-table-check enabled, then try to map some\ndax memories, one can trigger kernel bug constantly now when the kernel\nwas trying to inject some pfn maps on the dax device:\n\n kernel BUG at mm/page_table_check.c:55!\n\nWhile it's pretty legal to use set_pxx_at() for ZONE_DEVICE pages for page\nfault resolutions, skip all the checks if page_ext doesn't even exist in\npgtable checker, which applies to ZONE_DEVICE but maybe more."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39503",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c0761d1f1ce1d5b85b5e82bbb714df12de1aa8c3",
            "https://git.kernel.org/stable/c/93b53c202b51a69e42ca57f5a183f7e008e19f83",
            "https://git.kernel.org/stable/c/0f1bb77c6d837c9513943bc7c08f04c5cc5c6568",
            "https://git.kernel.org/stable/c/390b353d1a1da3e9c6c0fd14fe650d69063c95d6",
            "https://git.kernel.org/stable/c/2ba35b37f780c6410bb4bba9c3072596d8576702",
            "https://git.kernel.org/stable/c/90ae20d47de602198eb69e6cd7a3db3420abfc08",
            "https://git.kernel.org/stable/c/4e7aaa6b82d63e8ddcbfb56b4fd3d014ca586f10"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: Fix race between namespace cleanup and gc in the list:set type\n\nLion Ackermann reported that there is a race condition between namespace cleanup\nin ipset and the garbage collection of the list:set type. The namespace\ncleanup can destroy the list:set type of sets while the gc of the set type is\nwaiting to run in rcu cleanup. The latter uses data from the destroyed set which\nthus leads use after free. The patch contains the following parts:\n\n- When destroying all sets, first remove the garbage collectors, then wait\n  if needed and then destroy the sets.\n- Fix the badly ordered \"wait then remove gc\" for the destroy a single set\n  case.\n- Fix the missing rcu locking in the list:set type in the userspace test\n  case.\n- Use proper RCU list handlings in the list:set type.\n\nThe patch depends on c1193d9bbbd3 (netfilter: ipset: Add list flush to cancel_gc)."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40968",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6bff05aaa32c2f7e1f6e68e890876642159db419",
            "https://git.kernel.org/stable/c/64845ac64819683ad5e51b668b2ed56ee3386aee",
            "https://git.kernel.org/stable/c/6c1b9fe148a4e03bbfa234267ebb89f35285814a",
            "https://git.kernel.org/stable/c/25998f5613159fe35920dbd484fcac7ea3ad0799",
            "https://git.kernel.org/stable/c/d996deb80398a90dd3c03590e68dad543da87d62",
            "https://git.kernel.org/stable/c/1c33fd17383f48f679186c54df78542106deeaa0",
            "https://git.kernel.org/stable/c/38d647d509543e9434b3cc470b914348be271fe9",
            "https://git.kernel.org/stable/c/29b83a64df3b42c88c0338696feb6fdcd7f1f3b7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nMIPS: Octeon: Add PCIe link status check\n\nThe standard PCIe configuration read-write interface is used to\naccess the configuration space of the peripheral PCIe devices\nof the mips processor after the PCIe link surprise down, it can\ngenerate kernel panic caused by \"Data bus error\". So it is\nnecessary to add PCIe link status check for system protection.\nWhen the PCIe link is down or in training, assigning a value\nof 0 to the configuration address can prevent read-write behavior\nto the configuration space of peripheral PCIe devices, thereby\npreventing kernel panic."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40908",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/789bd77c9342aa6125003871ae5c6034d0f6f9d2",
            "https://git.kernel.org/stable/c/3708b6c2546c9eb34aead8a34a17e8ae69004e4d",
            "https://git.kernel.org/stable/c/d387805d4b4a46ee01e3dae133c81b6d80195e5b",
            "https://git.kernel.org/stable/c/ae0ba0ab7475a129ef7d449966edf677367efeb4",
            "https://git.kernel.org/stable/c/d0d1df8ba18abc57f28fb3bc053b2bf319367f2c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Set run context for rawtp test_run callback\n\nsyzbot reported crash when rawtp program executed through the\ntest_run interface calls bpf_get_attach_cookie helper or any\nother helper that touches task->bpf_ctx pointer.\n\nSetting the run context (task->bpf_ctx pointer) for test_run\ncallback."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40990",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7186b81c1f15e39069b1af172c6a951728ed3511",
            "https://git.kernel.org/stable/c/1e692244bf7dd827dd72edc6c4a3b36ae572f03c",
            "https://git.kernel.org/stable/c/999586418600b4b3b93c2a0edd3a4ca71ee759bf",
            "https://git.kernel.org/stable/c/e0deb0e9c967b61420235f7f17a4450b4b4d6ce2",
            "https://git.kernel.org/stable/c/4ab99e3613139f026d2d8ba954819e2876120ab3",
            "https://git.kernel.org/stable/c/36ab7ada64caf08f10ee5a114d39964d1f91e81d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Add check for srq max_sge attribute\n\nmax_sge attribute is passed by the user, and is inserted and used\nunchecked, so verify that the value doesn't exceed maximum allowed value\nbefore using it."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39495",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/74cd0a421896b2e07eafe7da4275302bfecef201",
            "https://git.kernel.org/stable/c/2b6bb0b4abfd79b8698ee161bb73c0936a2aaf83",
            "https://git.kernel.org/stable/c/fb071f5c75d4b1c177824de74ee75f9dd34123b9",
            "https://git.kernel.org/stable/c/9a733d69a4a59c2d08620e6589d823c24be773dc",
            "https://git.kernel.org/stable/c/0b8fba38bdfb848fac52e71270b2aa3538c996ea",
            "https://git.kernel.org/stable/c/03ea2b129344152157418929f06726989efc0445",
            "https://git.kernel.org/stable/c/5c9c5d7f26acc2c669c1dcf57d1bb43ee99220ce"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngreybus: Fix use-after-free bug in gb_interface_release due to race condition.\n\nIn gb_interface_create, &intf->mode_switch_completion is bound with\ngb_interface_mode_switch_work. Then it will be started by\ngb_interface_request_mode_switch. Here is the relevant code.\nif (!queue_work(system_long_wq, &intf->mode_switch_work)) {\n\t...\n}\n\nIf we call gb_interface_release to make cleanup, there may be an\nunfinished work. This function will call kfree to free the object\n\"intf\". However, if gb_interface_mode_switch_work is scheduled to\nrun after kfree, it may cause use-after-free error as\ngb_interface_mode_switch_work will use the object \"intf\".\nThe possible execution flow that may lead to the issue is as follows:\n\nCPU0                            CPU1\n\n                            |   gb_interface_create\n                            |   gb_interface_request_mode_switch\ngb_interface_release        |\nkfree(intf) (free)          |\n                            |   gb_interface_mode_switch_work\n                            |   mutex_lock(&intf->mutex) (use)\n\nFix it by canceling the work before kfree."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40993",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3799d02ae4208af08e81310770d8754863a246a1",
            "https://git.kernel.org/stable/c/72d9611968867cc4c5509e7708b1507d692b797a",
            "https://git.kernel.org/stable/c/523bed6489e089dd8040e72453fb79da47b144c2",
            "https://git.kernel.org/stable/c/788d585e62f487bc4536d454937f737b70d39a33",
            "https://git.kernel.org/stable/c/94dd411c18d7fff9e411555d5c662d29416501e4",
            "https://git.kernel.org/stable/c/3fc09e1ca854bc234e007a56e0f7431f5e2defb5",
            "https://git.kernel.org/stable/c/8ecd06277a7664f4ef018abae3abd3451d64e7a6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: Fix suspicious rcu_dereference_protected()\n\nWhen destroying all sets, we are either in pernet exit phase or\nare executing a \"destroy all sets command\" from userspace. The latter\nwas taken into account in ip_set_dereference() (nfnetlink mutex is held),\nbut the former was not. The patch adds the required check to\nrcu_dereference_protected() in ip_set_dereference()."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40994",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4b03da87d0b7074c93d9662c6e1a8939f9b8b86e",
            "https://git.kernel.org/stable/c/d50d62d5e6ee6aa03c00bddb91745d0b632d3b0f",
            "https://git.kernel.org/stable/c/666e934d749e50a37f3796caaf843a605f115b6f",
            "https://git.kernel.org/stable/c/e1fccfb4638ee6188377867f6015d0ce35764a8e",
            "https://git.kernel.org/stable/c/81d23d2a24012e448f651e007fac2cfd20a45ce0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nptp: fix integer overflow in max_vclocks_store\n\nOn 32bit systems, the \"4 * max\" multiply can overflow.  Use kcalloc()\nto do the allocation to prevent this."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40912",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e51637e0c66a6f72d134d9f95daa47ea62b43c7e",
            "https://git.kernel.org/stable/c/28ba44d680a30c51cf485a2f5a3b680e66ed3932",
            "https://git.kernel.org/stable/c/e7e916d693dcb5a297f40312600a82475f2e63bc",
            "https://git.kernel.org/stable/c/d90bdff79f8e40adf889b5408bfcf521528b169f",
            "https://git.kernel.org/stable/c/9c49b58b9a2bed707e7638576e54c4bccd97b9eb",
            "https://git.kernel.org/stable/c/456bbb8a31e425177dc0e8d4f98728a560c20e81",
            "https://git.kernel.org/stable/c/47d176755d5c0baf284eff039560f8c1ba0ea485",
            "https://git.kernel.org/stable/c/44c06bbde6443de206b30f513100b5670b23fc5e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Fix deadlock in ieee80211_sta_ps_deliver_wakeup()\n\nThe ieee80211_sta_ps_deliver_wakeup() function takes sta->ps_lock to\nsynchronizes with ieee80211_tx_h_unicast_ps_buf() which is called from\nsoftirq context. However using only spin_lock() to get sta->ps_lock in\nieee80211_sta_ps_deliver_wakeup() does not prevent softirq to execute\non this same CPU, to run ieee80211_tx_h_unicast_ps_buf() and try to\ntake this same lock ending in deadlock. Below is an example of rcu stall\nthat arises in such situation.\n\n rcu: INFO: rcu_sched self-detected stall on CPU\n rcu:    2-....: (42413413 ticks this GP) idle=b154/1/0x4000000000000000 softirq=1763/1765 fqs=21206996\n rcu:    (t=42586894 jiffies g=2057 q=362405 ncpus=4)\n CPU: 2 PID: 719 Comm: wpa_supplicant Tainted: G        W          6.4.0-02158-g1b062f552873 #742\n Hardware name: RPT (r1) (DT)\n pstate: 00000005 (nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : queued_spin_lock_slowpath+0x58/0x2d0\n lr : invoke_tx_handlers_early+0x5b4/0x5c0\n sp : ffff00001ef64660\n x29: ffff00001ef64660 x28: ffff000009bc1070 x27: ffff000009bc0ad8\n x26: ffff000009bc0900 x25: ffff00001ef647a8 x24: 0000000000000000\n x23: ffff000009bc0900 x22: ffff000009bc0900 x21: ffff00000ac0e000\n x20: ffff00000a279e00 x19: ffff00001ef646e8 x18: 0000000000000000\n x17: ffff800016468000 x16: ffff00001ef608c0 x15: 0010533c93f64f80\n x14: 0010395c9faa3946 x13: 0000000000000000 x12: 00000000fa83b2da\n x11: 000000012edeceea x10: ffff0000010fbe00 x9 : 0000000000895440\n x8 : 000000000010533c x7 : ffff00000ad8b740 x6 : ffff00000c350880\n x5 : 0000000000000007 x4 : 0000000000000001 x3 : 0000000000000000\n x2 : 0000000000000000 x1 : 0000000000000001 x0 : ffff00000ac0e0e8\n Call trace:\n  queued_spin_lock_slowpath+0x58/0x2d0\n  ieee80211_tx+0x80/0x12c\n  ieee80211_tx_pending+0x110/0x278\n  tasklet_action_common.constprop.0+0x10c/0x144\n  tasklet_action+0x20/0x28\n  _stext+0x11c/0x284\n  ____do_softirq+0xc/0x14\n  call_on_irq_stack+0x24/0x34\n  do_softirq_own_stack+0x18/0x20\n  do_softirq+0x74/0x7c\n  __local_bh_enable_ip+0xa0/0xa4\n  _ieee80211_wake_txqs+0x3b0/0x4b8\n  __ieee80211_wake_queue+0x12c/0x168\n  ieee80211_add_pending_skbs+0xec/0x138\n  ieee80211_sta_ps_deliver_wakeup+0x2a4/0x480\n  ieee80211_mps_sta_status_update.part.0+0xd8/0x11c\n  ieee80211_mps_sta_status_update+0x18/0x24\n  sta_apply_parameters+0x3bc/0x4c0\n  ieee80211_change_station+0x1b8/0x2dc\n  nl80211_set_station+0x444/0x49c\n  genl_family_rcv_msg_doit.isra.0+0xa4/0xfc\n  genl_rcv_msg+0x1b0/0x244\n  netlink_rcv_skb+0x38/0x10c\n  genl_rcv+0x34/0x48\n  netlink_unicast+0x254/0x2bc\n  netlink_sendmsg+0x190/0x3b4\n  ____sys_sendmsg+0x1e8/0x218\n  ___sys_sendmsg+0x68/0x8c\n  __sys_sendmsg+0x44/0x84\n  __arm64_sys_sendmsg+0x20/0x28\n  do_el0_svc+0x6c/0xe8\n  el0_svc+0x14/0x48\n  el0t_64_sync_handler+0xb0/0xb4\n  el0t_64_sync+0x14c/0x150\n\nUsing spin_lock_bh()/spin_unlock_bh() instead prevents softirq to raise\non the same CPU that is holding the lock."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40996",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/dacc15e9cb248d19e5fc63c54bef0b9b55007761",
            "https://git.kernel.org/stable/c/7f9644782c559635bd676c12c59389a34ed7c866",
            "https://git.kernel.org/stable/c/5e90258303a358e88737afb5048bee9113beea3a",
            "https://git.kernel.org/stable/c/2bbe3e5a2f4ef69d13be54f1cf895b4658287080"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Avoid splat in pskb_pull_reason\n\nsyzkaller builds (CONFIG_DEBUG_NET=y) frequently trigger a debug\nhint in pskb_may_pull.\n\nWe'd like to retain this debug check because it might hint at integer\noverflows and other issues (kernel code should pull headers, not huge\nvalue).\n\nIn bpf case, this splat isn't interesting at all: such (nonsensical)\nbpf programs are typically generated by a fuzzer anyway.\n\nDo what Eric suggested and suppress such warning.\n\nFor CONFIG_DEBUG_NET=n we don't need the extra check because\npskb_may_pull will do the right thing: return an error without the\nWARN() backtrace."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41002",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a886bcb0f67d1e3d6b2da25b3519de59098200c2",
            "https://git.kernel.org/stable/c/7c42ce556ff65995c8875c9ed64141c14238e7e6",
            "https://git.kernel.org/stable/c/9f21886370db451b0fdc651f6e41550a1da70601",
            "https://git.kernel.org/stable/c/36810d2db3496bb8b4db7ccda666674a5efc7b47",
            "https://git.kernel.org/stable/c/bba4250757b4ae1680fea435a358d8093f254094"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: hisilicon/sec - Fix memory leak for sec resource release\n\nThe AIV is one of the SEC resources. When releasing resources,\nit need to release the AIV resources at the same time.\nOtherwise, memory leakage occurs.\n\nThe aiv resource release is added to the sec resource release\nfunction."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40923",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9ee14af24e67ef170108db547f7d1f701b3f2bc5",
            "https://git.kernel.org/stable/c/aa116ae9d169e28b692292460aed27fc44f4a017",
            "https://git.kernel.org/stable/c/ffbe335b8d471f79b259e950cb20999700670456"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: disable rx data ring on dma allocation failure\n\nWhen vmxnet3_rq_create() fails to allocate memory for rq->data_ring.base,\nthe subsequent call to vmxnet3_rq_destroy_all_rxdataring does not reset\nrq->data_ring.desc_size for the data ring that failed, which presumably\ncauses the hypervisor to reference it on packet reception.\n\nTo fix this bug, rq->data_ring.desc_size needs to be set to 0 to tell\nthe hypervisor to disable this feature.\n\n[   95.436876] kernel BUG at net/core/skbuff.c:207!\n[   95.439074] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[   95.440411] CPU: 7 PID: 0 Comm: swapper/7 Not tainted 6.9.3-dirty #1\n[   95.441558] Hardware name: VMware, Inc. VMware Virtual\nPlatform/440BX Desktop Reference Platform, BIOS 6.00 12/12/2018\n[   95.443481] RIP: 0010:skb_panic+0x4d/0x4f\n[   95.444404] Code: 4f 70 50 8b 87 c0 00 00 00 50 8b 87 bc 00 00 00 50\nff b7 d0 00 00 00 4c 8b 8f c8 00 00 00 48 c7 c7 68 e8 be 9f e8 63 58 f9\nff <0f> 0b 48 8b 14 24 48 c7 c1 d0 73 65 9f e8 a1 ff ff ff 48 8b 14 24\n[   95.447684] RSP: 0018:ffffa13340274dd0 EFLAGS: 00010246\n[   95.448762] RAX: 0000000000000089 RBX: ffff8fbbc72b02d0 RCX: 000000000000083f\n[   95.450148] RDX: 0000000000000000 RSI: 00000000000000f6 RDI: 000000000000083f\n[   95.451520] RBP: 000000000000002d R08: 0000000000000000 R09: ffffa13340274c60\n[   95.452886] R10: ffffffffa04ed468 R11: 0000000000000002 R12: 0000000000000000\n[   95.454293] R13: ffff8fbbdab3c2d0 R14: ffff8fbbdbd829e0 R15: ffff8fbbdbd809e0\n[   95.455682] FS:  0000000000000000(0000) GS:ffff8fbeefd80000(0000) knlGS:0000000000000000\n[   95.457178] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   95.458340] CR2: 00007fd0d1f650c8 CR3: 0000000115f28000 CR4: 00000000000406f0\n[   95.459791] Call Trace:\n[   95.460515]  <IRQ>\n[   95.461180]  ? __die_body.cold+0x19/0x27\n[   95.462150]  ? die+0x2e/0x50\n[   95.462976]  ? do_trap+0xca/0x110\n[   95.463973]  ? do_error_trap+0x6a/0x90\n[   95.464966]  ? skb_panic+0x4d/0x4f\n[   95.465901]  ? exc_invalid_op+0x50/0x70\n[   95.466849]  ? skb_panic+0x4d/0x4f\n[   95.467718]  ? asm_exc_invalid_op+0x1a/0x20\n[   95.468758]  ? skb_panic+0x4d/0x4f\n[   95.469655]  skb_put.cold+0x10/0x10\n[   95.470573]  vmxnet3_rq_rx_complete+0x862/0x11e0 [vmxnet3]\n[   95.471853]  vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3]\n[   95.473185]  __napi_poll+0x2b/0x160\n[   95.474145]  net_rx_action+0x2c6/0x3b0\n[   95.475115]  handle_softirqs+0xe7/0x2a0\n[   95.476122]  __irq_exit_rcu+0x97/0xb0\n[   95.477109]  common_interrupt+0x85/0xa0\n[   95.478102]  </IRQ>\n[   95.478846]  <TASK>\n[   95.479603]  asm_common_interrupt+0x26/0x40\n[   95.480657] RIP: 0010:pv_native_safe_halt+0xf/0x20\n[   95.481801] Code: 22 d7 e9 54 87 01 00 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa eb 07 0f 00 2d 93 ba 3b 00 fb f4 <e9> 2c 87 01 00 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90\n[   95.485563] RSP: 0018:ffffa133400ffe58 EFLAGS: 00000246\n[   95.486882] RAX: 0000000000004000 RBX: ffff8fbbc1d14064 RCX: 0000000000000000\n[   95.488477] RDX: ffff8fbeefd80000 RSI: ffff8fbbc1d14000 RDI: 0000000000000001\n[   95.490067] RBP: ffff8fbbc1d14064 R08: ffffffffa0652260 R09: 00000000000010d3\n[   95.491683] R10: 0000000000000018 R11: ffff8fbeefdb4764 R12: ffffffffa0652260\n[   95.493389] R13: ffffffffa06522e0 R14: 0000000000000001 R15: 0000000000000000\n[   95.495035]  acpi_safe_halt+0x14/0x20\n[   95.496127]  acpi_idle_do_entry+0x2f/0x50\n[   95.497221]  acpi_idle_enter+0x7f/0xd0\n[   95.498272]  cpuidle_enter_state+0x81/0x420\n[   95.499375]  cpuidle_enter+0x2d/0x40\n[   95.500400]  do_idle+0x1e5/0x240\n[   95.501385]  cpu_startup_entry+0x29/0x30\n[   95.502422]  start_secondary+0x11c/0x140\n[   95.503454]  common_startup_64+0x13e/0x141\n[   95.504466]  </TASK>\n[   95.505197] Modules linked in: nft_fib_inet nft_fib_ipv4\nnft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6\nnft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ip\n---truncated---"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40923",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9ee14af24e67ef170108db547f7d1f701b3f2bc5",
            "https://git.kernel.org/stable/c/aa116ae9d169e28b692292460aed27fc44f4a017",
            "https://git.kernel.org/stable/c/ffbe335b8d471f79b259e950cb20999700670456"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: disable rx data ring on dma allocation failure\n\nWhen vmxnet3_rq_create() fails to allocate memory for rq->data_ring.base,\nthe subsequent call to vmxnet3_rq_destroy_all_rxdataring does not reset\nrq->data_ring.desc_size for the data ring that failed, which presumably\ncauses the hypervisor to reference it on packet reception.\n\nTo fix this bug, rq->data_ring.desc_size needs to be set to 0 to tell\nthe hypervisor to disable this feature.\n\n[   95.436876] kernel BUG at net/core/skbuff.c:207!\n[   95.439074] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[   95.440411] CPU: 7 PID: 0 Comm: swapper/7 Not tainted 6.9.3-dirty #1\n[   95.441558] Hardware name: VMware, Inc. VMware Virtual\nPlatform/440BX Desktop Reference Platform, BIOS 6.00 12/12/2018\n[   95.443481] RIP: 0010:skb_panic+0x4d/0x4f\n[   95.444404] Code: 4f 70 50 8b 87 c0 00 00 00 50 8b 87 bc 00 00 00 50\nff b7 d0 00 00 00 4c 8b 8f c8 00 00 00 48 c7 c7 68 e8 be 9f e8 63 58 f9\nff <0f> 0b 48 8b 14 24 48 c7 c1 d0 73 65 9f e8 a1 ff ff ff 48 8b 14 24\n[   95.447684] RSP: 0018:ffffa13340274dd0 EFLAGS: 00010246\n[   95.448762] RAX: 0000000000000089 RBX: ffff8fbbc72b02d0 RCX: 000000000000083f\n[   95.450148] RDX: 0000000000000000 RSI: 00000000000000f6 RDI: 000000000000083f\n[   95.451520] RBP: 000000000000002d R08: 0000000000000000 R09: ffffa13340274c60\n[   95.452886] R10: ffffffffa04ed468 R11: 0000000000000002 R12: 0000000000000000\n[   95.454293] R13: ffff8fbbdab3c2d0 R14: ffff8fbbdbd829e0 R15: ffff8fbbdbd809e0\n[   95.455682] FS:  0000000000000000(0000) GS:ffff8fbeefd80000(0000) knlGS:0000000000000000\n[   95.457178] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   95.458340] CR2: 00007fd0d1f650c8 CR3: 0000000115f28000 CR4: 00000000000406f0\n[   95.459791] Call Trace:\n[   95.460515]  <IRQ>\n[   95.461180]  ? __die_body.cold+0x19/0x27\n[   95.462150]  ? die+0x2e/0x50\n[   95.462976]  ? do_trap+0xca/0x110\n[   95.463973]  ? do_error_trap+0x6a/0x90\n[   95.464966]  ? skb_panic+0x4d/0x4f\n[   95.465901]  ? exc_invalid_op+0x50/0x70\n[   95.466849]  ? skb_panic+0x4d/0x4f\n[   95.467718]  ? asm_exc_invalid_op+0x1a/0x20\n[   95.468758]  ? skb_panic+0x4d/0x4f\n[   95.469655]  skb_put.cold+0x10/0x10\n[   95.470573]  vmxnet3_rq_rx_complete+0x862/0x11e0 [vmxnet3]\n[   95.471853]  vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3]\n[   95.473185]  __napi_poll+0x2b/0x160\n[   95.474145]  net_rx_action+0x2c6/0x3b0\n[   95.475115]  handle_softirqs+0xe7/0x2a0\n[   95.476122]  __irq_exit_rcu+0x97/0xb0\n[   95.477109]  common_interrupt+0x85/0xa0\n[   95.478102]  </IRQ>\n[   95.478846]  <TASK>\n[   95.479603]  asm_common_interrupt+0x26/0x40\n[   95.480657] RIP: 0010:pv_native_safe_halt+0xf/0x20\n[   95.481801] Code: 22 d7 e9 54 87 01 00 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa eb 07 0f 00 2d 93 ba 3b 00 fb f4 <e9> 2c 87 01 00 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90\n[   95.485563] RSP: 0018:ffffa133400ffe58 EFLAGS: 00000246\n[   95.486882] RAX: 0000000000004000 RBX: ffff8fbbc1d14064 RCX: 0000000000000000\n[   95.488477] RDX: ffff8fbeefd80000 RSI: ffff8fbbc1d14000 RDI: 0000000000000001\n[   95.490067] RBP: ffff8fbbc1d14064 R08: ffffffffa0652260 R09: 00000000000010d3\n[   95.491683] R10: 0000000000000018 R11: ffff8fbeefdb4764 R12: ffffffffa0652260\n[   95.493389] R13: ffffffffa06522e0 R14: 0000000000000001 R15: 0000000000000000\n[   95.495035]  acpi_safe_halt+0x14/0x20\n[   95.496127]  acpi_idle_do_entry+0x2f/0x50\n[   95.497221]  acpi_idle_enter+0x7f/0xd0\n[   95.498272]  cpuidle_enter_state+0x81/0x420\n[   95.499375]  cpuidle_enter+0x2d/0x40\n[   95.500400]  do_idle+0x1e5/0x240\n[   95.501385]  cpu_startup_entry+0x29/0x30\n[   95.502422]  start_secondary+0x11c/0x140\n[   95.503454]  common_startup_64+0x13e/0x141\n[   95.504466]  </TASK>\n[   95.505197] Modules linked in: nft_fib_inet nft_fib_ipv4\nnft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6\nnft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ip\n---truncated---"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40926",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/227349998e5740f14d531b0f0d704e66b1ed3c2f",
            "https://git.kernel.org/stable/c/b96a225377b6602299a03d2ce3c289b68cd41bb7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: don't attempt to schedule hpd_work on headless cards\n\nIf the card doesn't have display hardware, hpd_work and hpd_lock are\nleft uninitialized which causes BUG when attempting to schedule hpd_work\non runtime PM resume.\n\nFix it by adding headless flag to DRM and skip any hpd if it's set."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40935",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/320ba9cbca78be79c912143bbba1d1b35ca55cf0",
            "https://git.kernel.org/stable/c/3bf0b8030296e9ee60d3d4c15849ad9ac0b47081",
            "https://git.kernel.org/stable/c/e73fac95084839c5178d97e81c6a2051251bdc00",
            "https://git.kernel.org/stable/c/85e833cd7243bda7285492b0653c3abb1e2e757b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: flush all requests after setting CACHEFILES_DEAD\n\nIn ondemand mode, when the daemon is processing an open request, if the\nkernel flags the cache as CACHEFILES_DEAD, the cachefiles_daemon_write()\nwill always return -EIO, so the daemon can't pass the copen to the kernel.\nThen the kernel process that is waiting for the copen triggers a hung_task.\n\nSince the DEAD state is irreversible, it can only be exited by closing\n/dev/cachefiles. Therefore, after calling cachefiles_io_error() to mark\nthe cache as CACHEFILES_DEAD, if in ondemand mode, flush all requests to\navoid the above hungtask. We may still be able to read some of the cached\ndata before closing the fd of /dev/cachefiles.\n\nNote that this relies on the patch that adds reference counting to the req,\notherwise it may UAF."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40940",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/531eab2da27dd42d68dfb841d82e987f4a6738b8",
            "https://git.kernel.org/stable/c/d857df86837ac1c30592e8a068204d16feac9930",
            "https://git.kernel.org/stable/c/a03a3fa12769e25f4385bee587afe1445aee7f7a",
            "https://git.kernel.org/stable/c/229bedbf62b13af5aba6525ad10b62ad38d9ccb5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix tainted pointer delete is case of flow rules creation fail\n\nIn case of flow rule creation fail in mlx5_lag_create_port_sel_table(),\ninstead of previously created rules, the tainted pointer is deleted\ndeveral times.\nFix this bug by using correct flow rules pointers.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40937",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/75afd8724739ee5ed8165acde5f6ac3988b485cc",
            "https://git.kernel.org/stable/c/d221284991118c0ab16480b53baecd857c0bc442",
            "https://git.kernel.org/stable/c/2ce5341c36993b776012601921d7688693f8c037",
            "https://git.kernel.org/stable/c/a68184d5b420ea4fc7e6b7ceb52bbc66f90d3c50",
            "https://git.kernel.org/stable/c/6f4d93b78ade0a4c2cafd587f7b429ce95abb02e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Clear napi->skb before dev_kfree_skb_any()\n\ngve_rx_free_skb incorrectly leaves napi->skb referencing an skb after it\nis freed with dev_kfree_skb_any(). This can result in a subsequent call\nto napi_get_frags returning a dangling pointer.\n\nFix this by clearing napi->skb before the skb is freed."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41004",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a85bae262ccecc52a40c466ec067f6c915e0839d",
            "https://git.kernel.org/stable/c/98a7bfc48fffe170a60d87a5cbb7cdddf08184c3",
            "https://git.kernel.org/stable/c/32ef4dc2b1caf5825c0cf50646479608311cafc3",
            "https://git.kernel.org/stable/c/55d5d08174366efe57ca9e79964828b20c626c45",
            "https://git.kernel.org/stable/c/72a0199b361df2387018697b023fdcdd357449a9",
            "https://git.kernel.org/stable/c/3572bd5689b0812b161b40279e39ca5b66d73e88"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Build event generation tests only as modules\n\nThe kprobes and synth event generation test modules add events and lock\n(get a reference) those event file reference in module init function,\nand unlock and delete it in module exit function. This is because those\nare designed for playing as modules.\n\nIf we make those modules as built-in, those events are left locked in the\nkernel, and never be removed. This causes kprobe event self-test failure\nas below.\n\n[   97.349708] ------------[ cut here ]------------\n[   97.353453] WARNING: CPU: 3 PID: 1 at kernel/trace/trace_kprobe.c:2133 kprobe_trace_self_tests_init+0x3f1/0x480\n[   97.357106] Modules linked in:\n[   97.358488] CPU: 3 PID: 1 Comm: swapper/0 Not tainted 6.9.0-g699646734ab5-dirty #14\n[   97.361556] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n[   97.363880] RIP: 0010:kprobe_trace_self_tests_init+0x3f1/0x480\n[   97.365538] Code: a8 24 08 82 e9 ae fd ff ff 90 0f 0b 90 48 c7 c7 e5 aa 0b 82 e9 ee fc ff ff 90 0f 0b 90 48 c7 c7 2d 61 06 82 e9 8e fd ff ff 90 <0f> 0b 90 48 c7 c7 33 0b 0c 82 89 c6 e8 6e 03 1f ff 41 ff c7 e9 90\n[   97.370429] RSP: 0000:ffffc90000013b50 EFLAGS: 00010286\n[   97.371852] RAX: 00000000fffffff0 RBX: ffff888005919c00 RCX: 0000000000000000\n[   97.373829] RDX: ffff888003f40000 RSI: ffffffff8236a598 RDI: ffff888003f40a68\n[   97.375715] RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\n[   97.377675] R10: ffffffff811c9ae5 R11: ffffffff8120c4e0 R12: 0000000000000000\n[   97.379591] R13: 0000000000000001 R14: 0000000000000015 R15: 0000000000000000\n[   97.381536] FS:  0000000000000000(0000) GS:ffff88807dcc0000(0000) knlGS:0000000000000000\n[   97.383813] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   97.385449] CR2: 0000000000000000 CR3: 0000000002244000 CR4: 00000000000006b0\n[   97.387347] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   97.389277] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   97.391196] Call Trace:\n[   97.391967]  <TASK>\n[   97.392647]  ? __warn+0xcc/0x180\n[   97.393640]  ? kprobe_trace_self_tests_init+0x3f1/0x480\n[   97.395181]  ? report_bug+0xbd/0x150\n[   97.396234]  ? handle_bug+0x3e/0x60\n[   97.397311]  ? exc_invalid_op+0x1a/0x50\n[   97.398434]  ? asm_exc_invalid_op+0x1a/0x20\n[   97.399652]  ? trace_kprobe_is_busy+0x20/0x20\n[   97.400904]  ? tracing_reset_all_online_cpus+0x15/0x90\n[   97.402304]  ? kprobe_trace_self_tests_init+0x3f1/0x480\n[   97.403773]  ? init_kprobe_trace+0x50/0x50\n[   97.404972]  do_one_initcall+0x112/0x240\n[   97.406113]  do_initcall_level+0x95/0xb0\n[   97.407286]  ? kernel_init+0x1a/0x1a0\n[   97.408401]  do_initcalls+0x3f/0x70\n[   97.409452]  kernel_init_freeable+0x16f/0x1e0\n[   97.410662]  ? rest_init+0x1f0/0x1f0\n[   97.411738]  kernel_init+0x1a/0x1a0\n[   97.412788]  ret_from_fork+0x39/0x50\n[   97.413817]  ? rest_init+0x1f0/0x1f0\n[   97.414844]  ret_from_fork_asm+0x11/0x20\n[   97.416285]  </TASK>\n[   97.417134] irq event stamp: 13437323\n[   97.418376] hardirqs last  enabled at (13437337): [<ffffffff8110bc0c>] console_unlock+0x11c/0x150\n[   97.421285] hardirqs last disabled at (13437370): [<ffffffff8110bbf1>] console_unlock+0x101/0x150\n[   97.423838] softirqs last  enabled at (13437366): [<ffffffff8108e17f>] handle_softirqs+0x23f/0x2a0\n[   97.426450] softirqs last disabled at (13437393): [<ffffffff8108e346>] __irq_exit_rcu+0x66/0xd0\n[   97.428850] ---[ end trace 0000000000000000 ]---\n\nAnd also, since we can not cleanup dynamic_event file, ftracetest are\nfailed too.\n\nTo avoid these issues, build these tests only as modules."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40944",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d91ddd05082691e69b30744825d18ae799293258",
            "https://git.kernel.org/stable/c/2cfb464669b645a9b98478b74f2bcea9860dcff1",
            "https://git.kernel.org/stable/c/93c1800b3799f17375989b0daf76497dd3e80922"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kexec: Fix bug with call depth tracking\n\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\n\nCall cc_platform_has() earlier in the function when GS is still valid.\n\n  [ bp: Massage. ]"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41005",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/43c0ca793a18578a0f5b305dd77fcf7ed99f1265",
            "https://git.kernel.org/stable/c/efd29cd9c7b8369dfc7bcb34637e6bf1a188aa8e",
            "https://git.kernel.org/stable/c/96826b16ef9c6568d31a1f6ceaa266411a46e46c",
            "https://git.kernel.org/stable/c/3f1a155950a1685ffd0fd7175b3f671da8771f3d",
            "https://git.kernel.org/stable/c/a130e7da73ae93afdb4659842267eec734ffbd57",
            "https://git.kernel.org/stable/c/c2e6a872bde9912f1a7579639c5ca3adf1003916"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetpoll: Fix race condition in netpoll_owner_active\n\nKCSAN detected a race condition in netpoll:\n\n\tBUG: KCSAN: data-race in net_rx_action / netpoll_send_skb\n\twrite (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10:\n\tnet_rx_action (./include/linux/netpoll.h:90 net/core/dev.c:6712 net/core/dev.c:6822)\n<snip>\n\tread to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2:\n\tnetpoll_send_skb (net/core/netpoll.c:319 net/core/netpoll.c:345 net/core/netpoll.c:393)\n\tnetpoll_send_udp (net/core/netpoll.c:?)\n<snip>\n\tvalue changed: 0x0000000a -> 0xffffffff\n\nThis happens because netpoll_owner_active() needs to check if the\ncurrent CPU is the owner of the lock, touching napi->poll_owner\nnon atomically. The ->poll_owner field contains the current CPU holding\nthe lock.\n\nUse an atomic read to check if the poll owner is the current CPU."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40924",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/327280149066f0e5f2e50356b5823f76dabfe86e",
            "https://git.kernel.org/stable/c/7a9883be3b98673333eec65c4a21cc18e60292eb",
            "https://git.kernel.org/stable/c/a2552020fb714ff357182c3c179abfac2289f84d",
            "https://git.kernel.org/stable/c/43e2b37e2ab660c3565d4cff27922bc70e79c3f1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/dpt: Make DPT object unshrinkable\n\nIn some scenarios, the DPT object gets shrunk but\nthe actual framebuffer did not and thus its still\nthere on the DPT's vm->bound_list. Then it tries to\nrewrite the PTEs via a stale CPU mapping. This causes panic.\n\n[vsyrjala: Add TODO comment]\n(cherry picked from commit 51064d471c53dcc8eddd2333c3f1c1d9131ba36c)"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41006",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d616876256b38ecf9a1a1c7d674192c5346bc69c",
            "https://git.kernel.org/stable/c/e07a9c2a850cdebf625e7a1b8171bd23a8554313",
            "https://git.kernel.org/stable/c/5391f9db2cab5ef1cb411be1ab7dbec728078fba",
            "https://git.kernel.org/stable/c/280cf1173726a7059b628c610c71050d5c0b6937",
            "https://git.kernel.org/stable/c/a02fd5d775cf9787ee7698c797e20f2fa13d2e2b",
            "https://git.kernel.org/stable/c/b6ebe4fed73eedeb73f4540f8edc4871945474c8",
            "https://git.kernel.org/stable/c/d377f5a28332954b19e373d36823e59830ab1712",
            "https://git.kernel.org/stable/c/0b9130247f3b6a1122478471ff0e014ea96bb735"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\n\nsyzbot reported a memory leak in nr_create() [0].\n\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\n\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\n\nnr_connect\n  nr_establish_data_link\n    nr_start_heartbeat\n\nnr_release\n  switch (nr->state)\n  case NR_STATE_3\n    nr->state = NR_STATE_2\n    sock_set_flag(sk, SOCK_DESTROY);\n\n                        nr_rx_frame\n                          nr_process_rx_frame\n                            switch (nr->state)\n                            case NR_STATE_2\n                              nr_state2_machine()\n                                nr_disconnect()\n                                  nr_sk(sk)->state = NR_STATE_0\n                                  sock_set_flag(sk, SOCK_DEAD)\n\n                        nr_heartbeat_expiry\n                          switch (nr->state)\n                          case NR_STATE_0\n                            if (sock_flag(sk, SOCK_DESTROY) ||\n                               (sk->sk_state == TCP_LISTEN\n                                 && sock_flag(sk, SOCK_DEAD)))\n                               sock_hold()  // ( !!! )\n                               nr_destroy_socket()\n\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5325",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/a3311097-d477-441e-9bf3-3f991a9b6af9?source=cve",
            "https://plugins.trac.wordpress.org/changeset/3115288/form-vibes/trunk/inc/classes/query.php"
        ],
        "summary": "The Form Vibes plugin for WordPress is vulnerable to SQL Injection via the \u2018fv_export_data\u2019 parameter in all versions up to, and including, 1.4.10 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6495",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/005fc05c-6d82-49ca-b114-a3e64a3a572f?source=cve",
            "https://plugins.trac.wordpress.org/changeset/3115459/premium-addons-for-elementor"
        ],
        "summary": "The Premium Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Animated Text widget in all versions up to, and including, 4.10.36 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40962",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/082b3d4e788953a3ff42ecdb70c4210149076285",
            "https://git.kernel.org/stable/c/25cfe59f4470a051d1b80f51fa0ca3a5048e4a19",
            "https://git.kernel.org/stable/c/cebae292e0c32a228e8f2219c270a7237be24a6a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: allocate dummy checksums for zoned NODATASUM writes\n\nShin'ichiro reported that when he's running fstests' test-case\nbtrfs/167 on emulated zoned devices, he's seeing the following NULL\npointer dereference in 'btrfs_zone_finish_endio()':\n\n  Oops: general protection fault, probably for non-canonical address 0xdffffc0000000011: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  KASAN: null-ptr-deref in range [0x0000000000000088-0x000000000000008f]\n  CPU: 4 PID: 2332440 Comm: kworker/u80:15 Tainted: G        W          6.10.0-rc2-kts+ #4\n  Hardware name: Supermicro Super Server/X11SPi-TF, BIOS 3.3 02/21/2020\n  Workqueue: btrfs-endio-write btrfs_work_helper [btrfs]\n  RIP: 0010:btrfs_zone_finish_endio.part.0+0x34/0x160 [btrfs]\n\n  RSP: 0018:ffff88867f107a90 EFLAGS: 00010206\n  RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff893e5534\n  RDX: 0000000000000011 RSI: 0000000000000004 RDI: 0000000000000088\n  RBP: 0000000000000002 R08: 0000000000000001 R09: ffffed1081696028\n  R10: ffff88840b4b0143 R11: ffff88834dfff600 R12: ffff88840b4b0000\n  R13: 0000000000020000 R14: 0000000000000000 R15: ffff888530ad5210\n  FS:  0000000000000000(0000) GS:ffff888e3f800000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f87223fff38 CR3: 00000007a7c6a002 CR4: 00000000007706f0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  PKRU: 55555554\n  Call Trace:\n   <TASK>\n   ? __die_body.cold+0x19/0x27\n   ? die_addr+0x46/0x70\n   ? exc_general_protection+0x14f/0x250\n   ? asm_exc_general_protection+0x26/0x30\n   ? do_raw_read_unlock+0x44/0x70\n   ? btrfs_zone_finish_endio.part.0+0x34/0x160 [btrfs]\n   btrfs_finish_one_ordered+0x5d9/0x19a0 [btrfs]\n   ? __pfx_lock_release+0x10/0x10\n   ? do_raw_write_lock+0x90/0x260\n   ? __pfx_do_raw_write_lock+0x10/0x10\n   ? __pfx_btrfs_finish_one_ordered+0x10/0x10 [btrfs]\n   ? _raw_write_unlock+0x23/0x40\n   ? btrfs_finish_ordered_zoned+0x5a9/0x850 [btrfs]\n   ? lock_acquire+0x435/0x500\n   btrfs_work_helper+0x1b1/0xa70 [btrfs]\n   ? __schedule+0x10a8/0x60b0\n   ? __pfx___might_resched+0x10/0x10\n   process_one_work+0x862/0x1410\n   ? __pfx_lock_acquire+0x10/0x10\n   ? __pfx_process_one_work+0x10/0x10\n   ? assign_work+0x16c/0x240\n   worker_thread+0x5e6/0x1010\n   ? __pfx_worker_thread+0x10/0x10\n   kthread+0x2c3/0x3a0\n   ? trace_irq_enable.constprop.0+0xce/0x110\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork+0x31/0x70\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork_asm+0x1a/0x30\n   </TASK>\n\nEnabling CONFIG_BTRFS_ASSERT revealed the following assertion to\ntrigger:\n\n  assertion failed: !list_empty(&ordered->list), in fs/btrfs/zoned.c:1815\n\nThis indicates, that we're missing the checksums list on the\nordered_extent. As btrfs/167 is doing a NOCOW write this is to be\nexpected.\n\nFurther analysis with drgn confirmed the assumption:\n\n  >>> inode = prog.crashed_thread().stack_trace()[11]['ordered'].inode\n  >>> btrfs_inode = drgn.container_of(inode, \"struct btrfs_inode\", \\\n         \t\t\t\t\"vfs_inode\")\n  >>> print(btrfs_inode.flags)\n  (u32)1\n\nAs zoned emulation mode simulates conventional zones on regular devices,\nwe cannot use zone-append for writing. But we're only attaching dummy\nchecksums if we're doing a zone-append write.\n\nSo for NOCOW zoned data writes on conventional zones, also attach a\ndummy checksum."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40955",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/677ff4589f1501578fa903a25bb14831d0607992",
            "https://git.kernel.org/stable/c/b829687ae1229224262bcabf49accfa2dbf8db06",
            "https://git.kernel.org/stable/c/13df4d44a3aaabe61cd01d277b6ee23ead2a5206"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix slab-out-of-bounds in ext4_mb_find_good_group_avg_frag_lists()\n\nWe can trigger a slab-out-of-bounds with the following commands:\n\n    mkfs.ext4 -F /dev/$disk 10G\n    mount /dev/$disk /tmp/test\n    echo 2147483647 > /sys/fs/ext4/$disk/mb_group_prealloc\n    echo test > /tmp/test/file && sync\n\n==================================================================\nBUG: KASAN: slab-out-of-bounds in ext4_mb_find_good_group_avg_frag_lists+0x8a/0x200 [ext4]\nRead of size 8 at addr ffff888121b9d0f0 by task kworker/u2:0/11\nCPU: 0 PID: 11 Comm: kworker/u2:0 Tainted: GL 6.7.0-next-20240118 #521\nCall Trace:\n dump_stack_lvl+0x2c/0x50\n kasan_report+0xb6/0xf0\n ext4_mb_find_good_group_avg_frag_lists+0x8a/0x200 [ext4]\n ext4_mb_regular_allocator+0x19e9/0x2370 [ext4]\n ext4_mb_new_blocks+0x88a/0x1370 [ext4]\n ext4_ext_map_blocks+0x14f7/0x2390 [ext4]\n ext4_map_blocks+0x569/0xea0 [ext4]\n ext4_do_writepages+0x10f6/0x1bc0 [ext4]\n[...]\n==================================================================\n\nThe flow of issue triggering is as follows:\n\n// Set s_mb_group_prealloc to 2147483647 via sysfs\next4_mb_new_blocks\n  ext4_mb_normalize_request\n    ext4_mb_normalize_group_request\n      ac->ac_g_ex.fe_len = EXT4_SB(sb)->s_mb_group_prealloc\n  ext4_mb_regular_allocator\n    ext4_mb_choose_next_group\n      ext4_mb_choose_next_group_best_avail\n        mb_avg_fragment_size_order\n          order = fls(len) - 2 = 29\n        ext4_mb_find_good_group_avg_frag_lists\n          frag_list = &sbi->s_mb_avg_fragment_size[order]\n          if (list_empty(frag_list)) // Trigger SOOB!\n\nAt 4k block size, the length of the s_mb_avg_fragment_size list is 14,\nbut an oversized s_mb_group_prealloc is set, causing slab-out-of-bounds\nto be triggered by an attempt to access an element at index 29.\n\nAdd a new attr_id attr_clusters_in_group with values in the range\n[0, sbi->s_clusters_per_group] and declare mb_group_prealloc as\nthat type to fix the issue. In addition avoid returning an order\nfrom mb_avg_fragment_size_order() greater than MB_NUM_ORDERS(sb)\nand reduce some useless loops."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39497",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1b4a8b89bf6787090b56424d269bf84ba00c3263",
            "https://git.kernel.org/stable/c/03c71c42809ef4b17f5d874cdb2d3bf40e847b86",
            "https://git.kernel.org/stable/c/39bc27bd688066a63e56f7f64ad34fae03fbe3b8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/shmem-helper: Fix BUG_ON() on mmap(PROT_WRITE, MAP_PRIVATE)\n\nLack of check for copy-on-write (COW) mapping in drm_gem_shmem_mmap\nallows users to call mmap with PROT_WRITE and MAP_PRIVATE flag\ncausing a kernel panic due to BUG_ON in vmf_insert_pfn_prot:\nBUG_ON((vma->vm_flags & VM_PFNMAP) && is_cow_mapping(vma->vm_flags));\n\nReturn -EINVAL early if COW mapping is detected.\n\nThis bug affects all drm drivers using default shmem helpers.\nIt can be reproduced by this simple example:\nvoid *ptr = mmap(0, size, PROT_WRITE, MAP_PRIVATE, fd, mmap_offset);\nptr[0] = 0;"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40957",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/af90e3d73dc45778767b2fb6e7edd57ebe34380d",
            "https://git.kernel.org/stable/c/ec4d970b597ee5e17b0d8d73b7875197ce9a04d4",
            "https://git.kernel.org/stable/c/d62df86c172033679d744f07d89e93e367dd11f6",
            "https://git.kernel.org/stable/c/561475d53aa7e4511ee7cdba8728ded81cf1db1c",
            "https://git.kernel.org/stable/c/9a3bc8d16e0aacd65c31aaf23a2bced3288a7779"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nseg6: fix parameter passing when calling NF_HOOK() in End.DX4 and End.DX6 behaviors\n\ninput_action_end_dx4() and input_action_end_dx6() are called NF_HOOK() for\nPREROUTING hook, in PREROUTING hook, we should passing a valid indev,\nand a NULL outdev to NF_HOOK(), otherwise may trigger a NULL pointer\ndereference, as below:\n\n    [74830.647293] BUG: kernel NULL pointer dereference, address: 0000000000000090\n    [74830.655633] #PF: supervisor read access in kernel mode\n    [74830.657888] #PF: error_code(0x0000) - not-present page\n    [74830.659500] PGD 0 P4D 0\n    [74830.660450] Oops: 0000 [#1] PREEMPT SMP PTI\n    ...\n    [74830.664953] Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n    [74830.666569] RIP: 0010:rpfilter_mt+0x44/0x15e [ipt_rpfilter]\n    ...\n    [74830.689725] Call Trace:\n    [74830.690402]  <IRQ>\n    [74830.690953]  ? show_trace_log_lvl+0x1c4/0x2df\n    [74830.692020]  ? show_trace_log_lvl+0x1c4/0x2df\n    [74830.693095]  ? ipt_do_table+0x286/0x710 [ip_tables]\n    [74830.694275]  ? __die_body.cold+0x8/0xd\n    [74830.695205]  ? page_fault_oops+0xac/0x140\n    [74830.696244]  ? exc_page_fault+0x62/0x150\n    [74830.697225]  ? asm_exc_page_fault+0x22/0x30\n    [74830.698344]  ? rpfilter_mt+0x44/0x15e [ipt_rpfilter]\n    [74830.699540]  ipt_do_table+0x286/0x710 [ip_tables]\n    [74830.700758]  ? ip6_route_input+0x19d/0x240\n    [74830.701752]  nf_hook_slow+0x3f/0xb0\n    [74830.702678]  input_action_end_dx4+0x19b/0x1e0\n    [74830.703735]  ? input_action_end_t+0xe0/0xe0\n    [74830.704734]  seg6_local_input_core+0x2d/0x60\n    [74830.705782]  lwtunnel_input+0x5b/0xb0\n    [74830.706690]  __netif_receive_skb_one_core+0x63/0xa0\n    [74830.707825]  process_backlog+0x99/0x140\n    [74830.709538]  __napi_poll+0x2c/0x160\n    [74830.710673]  net_rx_action+0x296/0x350\n    [74830.711860]  __do_softirq+0xcb/0x2ac\n    [74830.713049]  do_softirq+0x63/0x90\n\ninput_action_end_dx4() passing a NULL indev to NF_HOOK(), and finally\ntrigger a NULL dereference in rpfilter_mt()->rpfilter_is_loopback():\n\n    static bool\n    rpfilter_is_loopback(const struct sk_buff *skb,\n          \t       const struct net_device *in)\n    {\n            // in is NULL\n            return skb->pkt_type == PACKET_LOOPBACK ||\n          \t in->flags & IFF_LOOPBACK;\n    }"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39507",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/62b5dfb67bfa8bd0301bf3442004563495f9ee48",
            "https://git.kernel.org/stable/c/6d0007f7b69d684879a0f598a042e40244d3cf63",
            "https://git.kernel.org/stable/c/689de7c3bfc7d47e0eacc641c4ce4a0f579aeefa",
            "https://git.kernel.org/stable/c/b2c5024b771cd1dd8175d5f6949accfadbab7edd",
            "https://git.kernel.org/stable/c/12cda920212a49fa22d9e8b9492ac4ea013310a4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash problem in concurrent scenario\n\nWhen link status change, the nic driver need to notify the roce\ndriver to handle this event, but at this time, the roce driver\nmay uninit, then cause kernel crash.\n\nTo fix the problem, when link status change, need to check\nwhether the roce registered, and when uninit, need to wait link\nupdate finish."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40899",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/99e9c5bd27ddefa0f9db88625bf5e31c1e833d62",
            "https://git.kernel.org/stable/c/a6de82765e12fb1201ab607f0d3ffe3309b30fc0",
            "https://git.kernel.org/stable/c/1d902d9a3aa4f2a8bda698294e34be788be012fc",
            "https://git.kernel.org/stable/c/de3e26f9e5b76fc628077578c001c4a51bf54d06"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: fix slab-use-after-free in cachefiles_ondemand_get_fd()\n\nWe got the following issue in a fuzz test of randomly issuing the restore\ncommand:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in cachefiles_ondemand_daemon_read+0x609/0xab0\nWrite of size 4 at addr ffff888109164a80 by task ondemand-04-dae/4962\n\nCPU: 11 PID: 4962 Comm: ondemand-04-dae Not tainted 6.8.0-rc7-dirty #542\nCall Trace:\n kasan_report+0x94/0xc0\n cachefiles_ondemand_daemon_read+0x609/0xab0\n vfs_read+0x169/0xb50\n ksys_read+0xf5/0x1e0\n\nAllocated by task 626:\n __kmalloc+0x1df/0x4b0\n cachefiles_ondemand_send_req+0x24d/0x690\n cachefiles_create_tmpfile+0x249/0xb30\n cachefiles_create_file+0x6f/0x140\n cachefiles_look_up_object+0x29c/0xa60\n cachefiles_lookup_cookie+0x37d/0xca0\n fscache_cookie_state_machine+0x43c/0x1230\n [...]\n\nFreed by task 626:\n kfree+0xf1/0x2c0\n cachefiles_ondemand_send_req+0x568/0x690\n cachefiles_create_tmpfile+0x249/0xb30\n cachefiles_create_file+0x6f/0x140\n cachefiles_look_up_object+0x29c/0xa60\n cachefiles_lookup_cookie+0x37d/0xca0\n fscache_cookie_state_machine+0x43c/0x1230\n [...]\n==================================================================\n\nFollowing is the process that triggers the issue:\n\n     mount  |   daemon_thread1    |    daemon_thread2\n------------------------------------------------------------\n cachefiles_ondemand_init_object\n  cachefiles_ondemand_send_req\n   REQ_A = kzalloc(sizeof(*req) + data_len)\n   wait_for_completion(&REQ_A->done)\n\n            cachefiles_daemon_read\n             cachefiles_ondemand_daemon_read\n              REQ_A = cachefiles_ondemand_select_req\n              cachefiles_ondemand_get_fd\n              copy_to_user(_buffer, msg, n)\n            process_open_req(REQ_A)\n                                  ------ restore ------\n                                  cachefiles_ondemand_restore\n                                  xas_for_each(&xas, req, ULONG_MAX)\n                                   xas_set_mark(&xas, CACHEFILES_REQ_NEW);\n\n                                  cachefiles_daemon_read\n                                   cachefiles_ondemand_daemon_read\n                                    REQ_A = cachefiles_ondemand_select_req\n\n             write(devfd, (\"copen %u,%llu\", msg->msg_id, size));\n             cachefiles_ondemand_copen\n              xa_erase(&cache->reqs, id)\n              complete(&REQ_A->done)\n   kfree(REQ_A)\n                                    cachefiles_ondemand_get_fd(REQ_A)\n                                     fd = get_unused_fd_flags\n                                     file = anon_inode_getfile\n                                     fd_install(fd, file)\n                                     load = (void *)REQ_A->msg.data;\n                                     load->fd = fd;\n                                     // load UAF !!!\n\nThis issue is caused by issuing a restore command when the daemon is still\nalive, which results in a request being processed multiple times thus\ntriggering a UAF. So to avoid this problem, add an additional reference\ncount to cachefiles_req, which is held while waiting and reading, and then\nreleased when the waiting and reading is over.\n\nNote that since there is only one reference count for waiting, we need to\navoid the same request being completed multiple times, so we can only\ncomplete the request if it is successfully removed from the xarray."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40902",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f0dedb5c511ed82cbaff4997a8decf2351ba549f",
            "https://git.kernel.org/stable/c/1e84c9b1838152a87cf453270a5fa75c5037e83a",
            "https://git.kernel.org/stable/c/fc745f6e83cb650f9a5f2c864158e3a5ea76dad0",
            "https://git.kernel.org/stable/c/480e5bc21f2c42d90c2c16045d64d824dcdd5ec7",
            "https://git.kernel.org/stable/c/33aecc5799c93d3ee02f853cb94e201f9731f123",
            "https://git.kernel.org/stable/c/4598233d9748fe4db4e13b9f473588aa25e87d69",
            "https://git.kernel.org/stable/c/b537cb2f4c4a1357479716a9c339c0bda03d873f",
            "https://git.kernel.org/stable/c/7c55b78818cfb732680c4a72ab270cc2d2ee3d0f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: xattr: fix buffer overflow for invalid xattr\n\nWhen an xattr size is not what is expected, it is printed out to the\nkernel log in hex format as a form of debugging.  But when that xattr\nsize is bigger than the expected size, printing it out can cause an\naccess off the end of the buffer.\n\nFix this all up by properly restricting the size of the debug hex dump\nin the kernel log."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40960",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f0cda984e4e634b221dbf9642b8ecc5b4806b41e",
            "https://git.kernel.org/stable/c/d66fc4826127c82f99c4033380f8e93833d331c7",
            "https://git.kernel.org/stable/c/1ed9849fdf9a1a617129346b11d2094ca26828dc",
            "https://git.kernel.org/stable/c/569c9d9ea6648d099187527b93982f406ddcebc0",
            "https://git.kernel.org/stable/c/51ee2f7c30790799d0ec30c0ce0c743e58f046f2",
            "https://git.kernel.org/stable/c/73e7c8ca6ad76f29b2c99c20845a6f3b203ff0c6",
            "https://git.kernel.org/stable/c/6eed6d3cd19ff3cfa83aeceed86da14abaf7417b",
            "https://git.kernel.org/stable/c/b86762dbe19a62e785c189f313cda5b989931f37"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent possible NULL dereference in rt6_probe()\n\nsyzbot caught a NULL dereference in rt6_probe() [1]\n\nBail out if  __in6_dev_get() returns NULL.\n\n[1]\nOops: general protection fault, probably for non-canonical address 0xdffffc00000000cb: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000658-0x000000000000065f]\nCPU: 1 PID: 22444 Comm: syz-executor.0 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\n RIP: 0010:rt6_probe net/ipv6/route.c:656 [inline]\n RIP: 0010:find_match+0x8c4/0xf50 net/ipv6/route.c:758\nCode: 14 fd f7 48 8b 85 38 ff ff ff 48 c7 45 b0 00 00 00 00 48 8d b8 5c 06 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 19\nRSP: 0018:ffffc900034af070 EFLAGS: 00010203\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffc90004521000\nRDX: 00000000000000cb RSI: ffffffff8990d0cd RDI: 000000000000065c\nRBP: ffffc900034af150 R08: 0000000000000005 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000002 R12: 000000000000000a\nR13: 1ffff92000695e18 R14: ffff8880244a1d20 R15: 0000000000000000\nFS:  00007f4844a5a6c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b31b27000 CR3: 000000002d42c000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  rt6_nh_find_match+0xfa/0x1a0 net/ipv6/route.c:784\n  nexthop_for_each_fib6_nh+0x26d/0x4a0 net/ipv4/nexthop.c:1496\n  __find_rr_leaf+0x6e7/0xe00 net/ipv6/route.c:825\n  find_rr_leaf net/ipv6/route.c:853 [inline]\n  rt6_select net/ipv6/route.c:897 [inline]\n  fib6_table_lookup+0x57e/0xa30 net/ipv6/route.c:2195\n  ip6_pol_route+0x1cd/0x1150 net/ipv6/route.c:2231\n  pol_lookup_func include/net/ip6_fib.h:616 [inline]\n  fib6_rule_lookup+0x386/0x720 net/ipv6/fib6_rules.c:121\n  ip6_route_output_flags_noref net/ipv6/route.c:2639 [inline]\n  ip6_route_output_flags+0x1d0/0x640 net/ipv6/route.c:2651\n  ip6_dst_lookup_tail.constprop.0+0x961/0x1760 net/ipv6/ip6_output.c:1147\n  ip6_dst_lookup_flow+0x99/0x1d0 net/ipv6/ip6_output.c:1250\n  rawv6_sendmsg+0xdab/0x4340 net/ipv6/raw.c:898\n  inet_sendmsg+0x119/0x140 net/ipv4/af_inet.c:853\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  sock_write_iter+0x4b8/0x5c0 net/socket.c:1160\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x6b6/0x1140 fs/read_write.c:590\n  ksys_write+0x1f8/0x260 fs/read_write.c:643\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f"
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40965",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2b42e9587a7a9c7b824e0feb92958f258263963e",
            "https://git.kernel.org/stable/c/4268254a39484fc11ba991ae148bacbe75d9cc0a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: lpi2c: Avoid calling clk_get_rate during transfer\n\nInstead of repeatedly calling clk_get_rate for each transfer, lock\nthe clock rate and cache the value.\nA deadlock has been observed while adding tlv320aic32x4 audio codec to\nthe system. When this clock provider adds its clock, the clk mutex is\nlocked already, it needs to access i2c, which in return needs the mutex\nfor clk_get_rate as well."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40970",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7c3bb96a20cd8db3b8824b2ff08b6cde4505c7e5",
            "https://git.kernel.org/stable/c/dd42570018f5962c10f215ad9c21274ed5d3541e",
            "https://git.kernel.org/stable/c/e151ae1ee065cf4b8ce4394ddb9d9c8df6370c66",
            "https://git.kernel.org/stable/c/9004784e8d68bcd1ac1376407ba296fa28f04dbe",
            "https://git.kernel.org/stable/c/333e11bf47fa8d477db90e2900b1ed3c9ae9b697"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nAvoid hw_desc array overrun in dw-axi-dmac\n\nI have a use case where nr_buffers = 3 and in which each descriptor is composed by 3\nsegments, resulting in the DMA channel descs_allocated to be 9. Since axi_desc_put()\nhandles the hw_desc considering the descs_allocated, this scenario would result in a\nkernel panic (hw_desc array will be overrun).\n\nTo fix this, the proposal is to add a new member to the axi_dma_desc structure,\nwhere we keep the number of allocated hw_descs (axi_desc_alloc()) and use it in\naxi_desc_put() to handle the hw_desc array correctly.\n\nAdditionally I propose to remove the axi_chan_start_first_queued() call after completing\nthe transfer, since it was identified that unbalance can occur (started descriptors can\nbe interrupted and transfer ignored due to DMA channel not being enabled)."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39500",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4959ffc65a0e94f8acaac20deac49f89e6ded52d",
            "https://git.kernel.org/stable/c/5eabdf17fed2ad41b836bb4055ec36d95e512c50",
            "https://git.kernel.org/stable/c/e946428439a0d2079959f5603256ac51b6047017",
            "https://git.kernel.org/stable/c/3627605de498639a3c586c8684d12c89cba11073",
            "https://git.kernel.org/stable/c/4b4647add7d3c8530493f7247d11e257ee425bf0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsock_map: avoid race between sock_map_close and sk_psock_put\n\nsk_psock_get will return NULL if the refcount of psock has gone to 0, which\nwill happen when the last call of sk_psock_put is done. However,\nsk_psock_drop may not have finished yet, so the close callback will still\npoint to sock_map_close despite psock being NULL.\n\nThis can be reproduced with a thread deleting an element from the sock map,\nwhile the second one creates a socket, adds it to the map and closes it.\n\nThat will trigger the WARN_ON_ONCE:\n\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 7220 at net/core/sock_map.c:1701 sock_map_close+0x2a2/0x2d0 net/core/sock_map.c:1701\nModules linked in:\nCPU: 1 PID: 7220 Comm: syz-executor380 Not tainted 6.9.0-syzkaller-07726-g3c999d1ae3c7 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\nRIP: 0010:sock_map_close+0x2a2/0x2d0 net/core/sock_map.c:1701\nCode: df e8 92 29 88 f8 48 8b 1b 48 89 d8 48 c1 e8 03 42 80 3c 20 00 74 08 48 89 df e8 79 29 88 f8 4c 8b 23 eb 89 e8 4f 15 23 f8 90 <0f> 0b 90 48 83 c4 08 5b 41 5c 41 5d 41 5e 41 5f 5d e9 13 26 3d 02\nRSP: 0018:ffffc9000441fda8 EFLAGS: 00010293\nRAX: ffffffff89731ae1 RBX: ffffffff94b87540 RCX: ffff888029470000\nRDX: 0000000000000000 RSI: ffffffff8bcab5c0 RDI: ffffffff8c1faba0\nRBP: 0000000000000000 R08: ffffffff92f9b61f R09: 1ffffffff25f36c3\nR10: dffffc0000000000 R11: fffffbfff25f36c4 R12: ffffffff89731840\nR13: ffff88804b587000 R14: ffff88804b587000 R15: ffffffff89731870\nFS:  000055555e080380(0000) GS:ffff8880b9500000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 00000000207d4000 CR4: 0000000000350ef0\nCall Trace:\n <TASK>\n unix_release+0x87/0xc0 net/unix/af_unix.c:1048\n __sock_release net/socket.c:659 [inline]\n sock_close+0xbe/0x240 net/socket.c:1421\n __fput+0x42b/0x8a0 fs/file_table.c:422\n __do_sys_close fs/open.c:1556 [inline]\n __se_sys_close fs/open.c:1541 [inline]\n __x64_sys_close+0x7f/0x110 fs/open.c:1541\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fb37d618070\nCode: 00 00 48 c7 c2 b8 ff ff ff f7 d8 64 89 02 b8 ff ff ff ff eb d4 e8 10 2c 00 00 80 3d 31 f0 07 00 00 74 17 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 48 c3 0f 1f 80 00 00 00 00 48 83 ec 18 89 7c\nRSP: 002b:00007ffcd4a525d8 EFLAGS: 00000202 ORIG_RAX: 0000000000000003\nRAX: ffffffffffffffda RBX: 0000000000000005 RCX: 00007fb37d618070\nRDX: 0000000000000010 RSI: 00000000200001c0 RDI: 0000000000000004\nRBP: 0000000000000000 R08: 0000000100000000 R09: 0000000100000000\nR10: 0000000000000000 R11: 0000000000000202 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n </TASK>\n\nUse sk_psock, which will only check that the pointer is not been set to\nNULL yet, which should only happen after the callbacks are restored. If,\nthen, a reference can still be gotten, we may call sk_psock_stop and cancel\npsock->work.\n\nAs suggested by Paolo Abeni, reorder the condition so the control flow is\nless convoluted.\n\nAfter that change, the reproducer does not trigger the WARN_ON_ONCE\nanymore."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39499",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/58730dfbd4ae01c1b022b0d234a8bf8c02cdfb81",
            "https://git.kernel.org/stable/c/681967c4ff210e06380acf9b9a1b33ae06e77cbd",
            "https://git.kernel.org/stable/c/f70ff737346744633e7b655c1fb23e1578491ff3",
            "https://git.kernel.org/stable/c/95ac3e773a1f8da83c4710a720fbfe80055aafae",
            "https://git.kernel.org/stable/c/95bac1c8bedb362374ea1937b1d3e833e01174ee",
            "https://git.kernel.org/stable/c/e293c6b38ac9029d76ff0d2a6b2d74131709a9a8",
            "https://git.kernel.org/stable/c/757804e1c599af5d2a7f864c8e8b2842406ff4bb",
            "https://git.kernel.org/stable/c/8003f00d895310d409b2bf9ef907c56b42a4e0f4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmci: prevent speculation leaks by sanitizing event in event_deliver()\n\nCoverity spotted that event_msg is controlled by user-space,\nevent_msg->event_data.event is passed to event_deliver() and used\nas an index without sanitization.\n\nThis change ensures that the event index is sanitized to mitigate any\npossibility of speculative information leaks.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc.\n\nOnly compile tested, no access to HW."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39504",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b30669fdea0ca03aa22995e6c99f7e7d9dee89ff",
            "https://git.kernel.org/stable/c/39323f54cad29602917848346c71b087da92a19d",
            "https://git.kernel.org/stable/c/c4ab9da85b9df3692f861512fe6c9812f38b7471"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_inner: validate mandatory meta and payload\n\nCheck for mandatory netlink attributes in payload and meta expression\nwhen used embedded from the inner expression, otherwise NULL pointer\ndereference is possible from userspace."
    },
    {
        "Modified": "2024-07-12T13:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40903",
        "impact": {},
        "last-modified": "2024-07-12T13:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4053696594d7235f3638d49a00cf0f289e4b36a3",
            "https://git.kernel.org/stable/c/04c05d50fa79a41582f7bde8a1fd4377ae4a39e5",
            "https://git.kernel.org/stable/c/6b67b652849faf108a09647c7fde9b179ef24e2b",
            "https://git.kernel.org/stable/c/e7e921918d905544500ca7a95889f898121ba886"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: fix use-after-free case in tcpm_register_source_caps\n\nThere could be a potential use-after-free case in\ntcpm_register_source_caps(). This could happen when:\n * new (say invalid) source caps are advertised\n * the existing source caps are unregistered\n * tcpm_register_source_caps() returns with an error as\n   usb_power_delivery_register_capabilities() fails\n\nThis causes port->partner_source_caps to hold on to the now freed source\ncaps.\n\nReset port->partner_source_caps value to NULL after unregistering\nexisting source caps."
    }
]