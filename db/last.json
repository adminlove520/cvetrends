[
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-07T11:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-306",
        "id": "CVE-2023-46819",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://ofbiz.apache.org/download.html",
            "https://ofbiz.apache.org/security.html",
            "https://ofbiz.apache.org/release-notes-18.12.09.html",
            "https://lists.apache.org/thread/mm5j0rsbl22q7yb0nmb6h2swbfjbwv99"
        ],
        "summary": "Missing Authentication in Apache Software Foundation Apache OFBiz when using the Solr plugin.\nThis issue affects Apache OFBiz: before 18.12.09.\u00a0\n\nUsers are recommended to upgrade to version 18.12.09\n\n"
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-22T07:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-47393",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://gist.github.com/wwwziziyu/7dbf7fd43f9e304ce0819f8a9784d2c6"
        ],
        "summary": "An access control issue in Mercedes me IOS APP v1.34.0 and below allows attackers to view the maintenance orders of other users and access sensitive user information via unspecified vectors."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-07T18:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-1236",
        "id": "CVE-2022-41616",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://patchstack.com/database/vulnerability/export-users-data-csv/wordpress-export-users-data-csv-plugin-2-1-auth-csv-injection-vulnerability?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Formula Elements in a CSV File vulnerability in Kaushik Kalathiya Export Users Data CSV.This issue affects Export Users Data CSV: from n/a through 2.1.\n\n"
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T09:15:00",
        "access": {},
        "assigner": "psirt@huawei.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-46771",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://consumer.huawei.com/en/support/bulletin/2023/11/",
            "https://device.harmonyos.com/en/docs/security/update/security-bulletins-202311-0000001729189597"
        ],
        "summary": "Security vulnerability in the face unlock module. Successful exploitation of this vulnerability may affect service confidentiality."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-09-04T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-45177",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2024-021.txt",
            "https://www.syss.de/pentest-blog/mehrere-sicherheitsschwachstellen-in-videoueberwachungssoftware-c-mor-syss-2024-020-bis-030"
        ],
        "summary": "An issue was discovered in za-internet C-MOR Video Surveillance 5.2401 and 6.00PL01. Due to improper input validation, the C-MOR web interface is vulnerable to persistent cross-site scripting (XSS) attacks. It was found out that the camera configuration is vulnerable to a persistent cross-site scripting attack due to insufficient user input validation."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-09-04T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-45177",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2024-021.txt",
            "https://www.syss.de/pentest-blog/mehrere-sicherheitsschwachstellen-in-videoueberwachungssoftware-c-mor-syss-2024-020-bis-030"
        ],
        "summary": "An issue was discovered in za-internet C-MOR Video Surveillance 5.2401 and 6.00PL01. Due to improper input validation, the C-MOR web interface is vulnerable to persistent cross-site scripting (XSS) attacks. It was found out that the camera configuration is vulnerable to a persistent cross-site scripting attack due to insufficient user input validation."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T04:15:00",
        "access": {},
        "assigner": "psirt@huawei.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-44115",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://consumer.huawei.com/en/support/bulletin/2023/11/",
            "https://device.harmonyos.com/en/docs/security/update/security-bulletins-202311-0000001729189597"
        ],
        "summary": "Vulnerability of improper permission control in the Booster module. Impact: Successful exploitation of this vulnerability may affect service confidentiality."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T09:15:00",
        "access": {},
        "assigner": "psirt@huawei.com",
        "cvss": null,
        "cwe": "CWE-311",
        "id": "CVE-2023-44098",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://consumer.huawei.com/en/support/bulletin/2023/11/",
            "https://device.harmonyos.com/en/docs/security/update/security-bulletins-202311-0000001729189597"
        ],
        "summary": "Vulnerability of missing encryption in the card management module. Successful exploitation of this vulnerability may affect service confidentiality."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-07T16:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-1236",
        "id": "CVE-2023-36527",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://patchstack.com/database/vulnerability/post-to-csv/wordpress-post-to-csv-by-bestwebsoft-plugin-1-4-0-csv-injection?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Formula Elements in a CSV File vulnerability in BestWebSoft Post to CSV by BestWebSoft.This issue affects Post to CSV by BestWebSoft: from n/a through 1.4.0.\n\n"
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-07T17:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-1236",
        "id": "CVE-2022-45360",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://patchstack.com/database/vulnerability/commenter-emails/wordpress-commenter-emails-plugin-2-6-1-csv-injection?_s_id=cve"
        ],
        "summary": "Improper Neutralization of Formula Elements in a CSV File vulnerability in Scott Reilly Commenter Emails.This issue affects Commenter Emails: from n/a through 2.6.1.\n\n"
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T03:15:00",
        "access": {},
        "assigner": "psirt@huawei.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2023-46770",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://consumer.huawei.com/en/support/bulletin/2023/11/",
            "https://device.harmonyos.com/en/docs/security/update/security-bulletins-202311-0000001729189597"
        ],
        "summary": "Out-of-bounds vulnerability in the sensor module. Successful exploitation of this vulnerability may cause mistouch prevention errors on users' mobile phones."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T22:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2023-36667",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://docs.couchbase.com/server/current/release-notes/relnotes.html",
            "https://www.couchbase.com/alerts/"
        ],
        "summary": "Couchbase Server 7.1.4 before 7.1.5 and 7.2.0 before 7.2.1 allows Directory Traversal."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-521",
        "id": "CVE-2023-29974",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.esecforte.com/cve-2023-29974-weak-password-policy/"
        ],
        "summary": "An issue discovered in Pfsense CE version 2.6.0 allows attackers to compromise user accounts via weak password requirements."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-22T01:15:00",
        "access": {},
        "assigner": "ics-cert@hq.dhs.gov",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2023-5299",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.cisa.gov/news-events/ics-advisories/icsa-23-325-02",
            "https://felib.fujielectric.co.jp/en/M10009/M20034/document_detail/c27d5b69-68ef-4af5-90ee-b5dab118f71a"
        ],
        "summary": "A user with a standard account in Fuji Electric Tellus Lite may overwrite files in the system."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-08T10:15:00",
        "access": {},
        "assigner": "psirt@huawei.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2023-46772",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://consumer.huawei.com/en/support/bulletin/2023/11/",
            "https://device.harmonyos.com/en/docs/security/update/security-bulletins-202311-0000001729189597"
        ],
        "summary": "Vulnerability of parameters being out of the value range in the QMI service module. Successful exploitation of this vulnerability may cause errors in reading file data."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-45170",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2024-024.txt",
            "https://www-syss-de.translate.goog/pentest-blog/mehrere-sicherheitsschwachstellen-in-videoueberwachungssoftware-c-mor-syss-2024-020-bis-030?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en-US&_x_tr_pto=wapp"
        ],
        "summary": "An issue was discovered in za-internet C-MOR Video Surveillance 5.2401. Due to improper or missing access control, low privileged users can use administrative functions of the C-MOR web interface. It was found out that different functions are only available to administrative users. However, access those functions is restricted via the web application user interface and not checked on the server side. Thus, by sending corresponding HTTP requests to the web server of the C-MOR web interface, low privileged users can also use administrative functionality, for instance downloading backup files or changing configuration settings."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-45174",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2024-023.txt",
            "https://www.syss.de/pentest-blog/mehrere-sicherheitsschwachstellen-in-videoueberwachungssoftware-c-mor-syss-2024-020-bis-030"
        ],
        "summary": "An issue was discovered in za-internet C-MOR Video Surveillance 5.2401 and 6.00PL01. Due to improper validation of user-supplied data, different functionalities of the C-MOR web interface are vulnerable to SQL injection attacks. This kind of attack allows an authenticated user to execute arbitrary SQL commands in the context of the corresponding MySQL database."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-09-04T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-44820",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44820%20ZZCMS2023%20phpinfo%E6%B3%84%E9%9C%B2.md"
        ],
        "summary": "A sensitive information disclosure vulnerability exists in ZZCMS v.2023 and before within the eginfo.php file located at /3/E_bak5.1/upload/. When accessed with the query parameter phome=ShowPHPInfo, the application executes the phpinfo() function, which exposes detailed information about the PHP environment, including server configuration, loaded modules, and environment variables."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-08-29T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-44930",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://github.com/serilog-contrib/serilog-enrichers-clientinfo/issues/29",
            "https://github.com/serilog-contrib/serilog-enrichers-clientinfo/releases/tag/v2.1.0"
        ],
        "summary": "Serilog before v2.1.0 was discovered to contain a Client IP Spoofing vulnerability, which allows attackers to falsify their IP addresses by specifying an arbitrary IP as a value of X-Forwarded-For or Client-Ip headers while performing HTTP requests."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2023-11-21T22:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-49103",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://owncloud.org/security",
            "https://owncloud.com/security-advisories/disclosure-of-sensitive-credentials-and-configuration-in-containerized-deployments/"
        ],
        "summary": "An issue was discovered in ownCloud owncloud/graphapi 0.2.x before 0.2.1 and 0.3.x before 0.3.1. The graphapi app relies on a third-party GetPhpInfo.php library that provides a URL. When this URL is accessed, it reveals the configuration details of the PHP environment (phpinfo). This information includes all the environment variables of the webserver. In containerized deployments, these environment variables may include sensitive data such as the ownCloud admin password, mail server credentials, and license key. Simply disabling the graphapi app does not eliminate the vulnerability. Additionally, phpinfo exposes various other potentially sensitive configuration details that could be exploited by an attacker to gather information about the system. Therefore, even if ownCloud is not running in a containerized environment, this vulnerability should still be a cause for concern. Note that Docker containers from before February 2023 are not vulnerable to the credential disclosure."
    },
    {
        "Modified": "2024-09-04T19:35:00",
        "Published": "2024-02-29T01:44:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25262",
        "impact": {},
        "last-modified": "2024-09-04T19:35:00",
        "references": [
            "https://tug.org/svn/texlive/trunk/Build/source/texk/ttfdump/ChangeLog?revision=69605&view=co",
            "https://bugs.launchpad.net/ubuntu/+source/texlive-bin/+bug/2047912"
        ],
        "summary": "texlive-bin commit c515e was discovered to contain heap buffer overflow via the function ttfLoadHDMX:ttfdump. This vulnerability allows attackers to cause a Denial of Service (DoS) via supplying a crafted TTF file."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44949",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/642a0b7453daff0295310774016fcb56d1f5bc7f",
            "https://git.kernel.org/stable/c/533de2f470baac40d3bf622fe631f15231a03c9f",
            "https://git.kernel.org/stable/c/7ae04ba36b381bffe2471eff3a93edced843240f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nparisc: fix a possible DMA corruption\n\nARCH_DMA_MINALIGN was defined as 16 - this is too small - it may be\npossible that two unrelated 16-byte allocations share a cache line. If\none of these allocations is written using DMA and the other is written\nusing cached write, the value that was written with DMA may be\ncorrupted.\n\nThis commit changes ARCH_DMA_MINALIGN to be 128 on PA20 and 32 on PA1.1 -\nthat's the largest possible cache line size.\n\nAs different parisc microarchitectures have different cache line size, we\ndefine arch_slab_minalign(), cache_line_size() and\ndma_get_cache_alignment() so that the kernel may tune slab cache\nparameters dynamically, based on the detected cache line size."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44950",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6a6730812220a9a5ce4003eb347da1ee5abd06b0",
            "https://git.kernel.org/stable/c/7d3b793faaab1305994ce568b59d61927235f57b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: fix invalid FIFO access with special register set\n\nWhen enabling access to the special register set, Receiver time-out and\nRHR interrupts can happen. In this case, the IRQ handler will try to read\nfrom the FIFO thru the RHR register at address 0x00, but address 0x00 is\nmapped to DLL register, resulting in erroneous FIFO reading.\n\nCall graph example:\n    sc16is7xx_startup(): entry\n    sc16is7xx_ms_proc(): entry\n    sc16is7xx_set_termios(): entry\n    sc16is7xx_set_baud(): DLH/DLL = $009C --> access special register set\n    sc16is7xx_port_irq() entry            --> IIR is 0x0C\n    sc16is7xx_handle_rx() entry\n    sc16is7xx_fifo_read(): --> unable to access FIFO (RHR) because it is\n                               mapped to DLL (LCR=LCR_CONF_MODE_A)\n    sc16is7xx_set_baud(): exit --> Restore access to general register set\n\nFix the problem by claiming the efr_lock mutex when accessing the Special\nregister set."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44951",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/09cfe05e9907f3276887a20e267cc40e202f4fdd",
            "https://git.kernel.org/stable/c/133f4c00b8b2bfcacead9b81e7e8edfceb4b06c4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: fix TX fifo corruption\n\nSometimes, when a packet is received on channel A at almost the same time\nas a packet is about to be transmitted on channel B, we observe with a\nlogic analyzer that the received packet on channel A is transmitted on\nchannel B. In other words, the Tx buffer data on channel B is corrupted\nwith data from channel A.\n\nThe problem appeared since commit 4409df5866b7 (\"serial: sc16is7xx: change\nEFR lock to operate on each channels\"), which changed the EFR locking to\noperate on each channel instead of chip-wise.\n\nThis commit has introduced a regression, because the EFR lock is used not\nonly to protect the EFR registers access, but also, in a very obscure and\nundocumented way, to protect access to the data buffer, which is shared by\nthe Tx and Rx handlers, but also by each channel of the IC.\n\nFix this regression first by switching to kfifo_out_linear_ptr() in\nsc16is7xx_handle_tx() to eliminate the need for a shared Rx/Tx buffer.\n\nSecondly, replace the chip-wise Rx buffer with a separate Rx buffer for\neach channel."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44948",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/34f36e6ee5bd7eff8b2adcd9fcaef369f752d82e",
            "https://git.kernel.org/stable/c/06c1de44d378ec5439db17bf476507d68589bfe9",
            "https://git.kernel.org/stable/c/450b6b22acdaac67a18eaf5ed498421ffcf10051",
            "https://git.kernel.org/stable/c/ca7d00c5656d1791e28369919e3e10febe9c3b16",
            "https://git.kernel.org/stable/c/8aa79dfb216b865e96ff890bc4ea71650f9bc8d7",
            "https://git.kernel.org/stable/c/8a90d3fc7c24608548d3a750671f9dac21d1a462",
            "https://git.kernel.org/stable/c/388f1c954019f253a8383f7eb733f38d541e10b6",
            "https://git.kernel.org/stable/c/919f18f961c03d6694aa726c514184f2311a4614"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mtrr: Check if fixed MTRRs exist before saving them\n\nMTRRs have an obsolete fixed variant for fine grained caching control\nof the 640K-1MB region that uses separate MSRs. This fixed variant has\na separate capability bit in the MTRR capability MSR.\n\nSo far all x86 CPUs which support MTRR have this separate bit set, so it\nwent unnoticed that mtrr_save_state() does not check the capability bit\nbefore accessing the fixed MTRR MSRs.\n\nThough on a CPU that does not support the fixed MTRR capability this\nresults in a #GP.  The #GP itself is harmless because the RDMSR fault is\nhandled gracefully, but results in a WARN_ON().\n\nAdd the missing capability check to prevent this."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44952",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/49ea4e0d862632d51667da5e7a9c88a560e9c5a1",
            "https://git.kernel.org/stable/c/dd98c9630b7ee273da87e9a244f94ddf947161e2",
            "https://git.kernel.org/stable/c/f098e8fc7227166206256c18d56ab622039108b1",
            "https://git.kernel.org/stable/c/9c23fc327d6ec67629b4ad323bd64d3834c0417d",
            "https://git.kernel.org/stable/c/4a7c2a8387524942171037e70b80e969c3b5c05b",
            "https://git.kernel.org/stable/c/4d035c743c3e391728a6f81cbf0f7f9ca700cf62",
            "https://git.kernel.org/stable/c/cd490a247ddf325325fd0de8898659400c9237ef",
            "https://git.kernel.org/stable/c/15fffc6a5624b13b428bb1c6e9088e32a55eb82c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: Fix uevent_show() vs driver detach race\n\nuevent_show() wants to de-reference dev->driver->name. There is no clean\nway for a device attribute to de-reference dev->driver unless that\nattribute is defined via (struct device_driver).dev_groups. Instead, the\nanti-pattern of taking the device_lock() in the attribute handler risks\ndeadlocks with code paths that remove device attributes while holding\nthe lock.\n\nThis deadlock is typically invisible to lockdep given the device_lock()\nis marked lockdep_set_novalidate_class(), but some subsystems allocate a\nlocal lockdep key for @dev->mutex to reveal reports of the form:\n\n ======================================================\n WARNING: possible circular locking dependency detected\n 6.10.0-rc7+ #275 Tainted: G           OE    N\n ------------------------------------------------------\n modprobe/2374 is trying to acquire lock:\n ffff8c2270070de0 (kn->active#6){++++}-{0:0}, at: __kernfs_remove+0xde/0x220\n\n but task is already holding lock:\n ffff8c22016e88f8 (&cxl_root_key){+.+.}-{3:3}, at: device_release_driver_internal+0x39/0x210\n\n which lock already depends on the new lock.\n\n the existing dependency chain (in reverse order) is:\n\n -> #1 (&cxl_root_key){+.+.}-{3:3}:\n        __mutex_lock+0x99/0xc30\n        uevent_show+0xac/0x130\n        dev_attr_show+0x18/0x40\n        sysfs_kf_seq_show+0xac/0xf0\n        seq_read_iter+0x110/0x450\n        vfs_read+0x25b/0x340\n        ksys_read+0x67/0xf0\n        do_syscall_64+0x75/0x190\n        entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n -> #0 (kn->active#6){++++}-{0:0}:\n        __lock_acquire+0x121a/0x1fa0\n        lock_acquire+0xd6/0x2e0\n        kernfs_drain+0x1e9/0x200\n        __kernfs_remove+0xde/0x220\n        kernfs_remove_by_name_ns+0x5e/0xa0\n        device_del+0x168/0x410\n        device_unregister+0x13/0x60\n        devres_release_all+0xb8/0x110\n        device_unbind_cleanup+0xe/0x70\n        device_release_driver_internal+0x1c7/0x210\n        driver_detach+0x47/0x90\n        bus_remove_driver+0x6c/0xf0\n        cxl_acpi_exit+0xc/0x11 [cxl_acpi]\n        __do_sys_delete_module.isra.0+0x181/0x260\n        do_syscall_64+0x75/0x190\n        entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nThe observation though is that driver objects are typically much longer\nlived than device objects. It is reasonable to perform lockless\nde-reference of a @driver pointer even if it is racing detach from a\ndevice. Given the infrequency of driver unregistration, use\nsynchronize_rcu() in module_remove_driver() to close any potential\nraces.  It is potentially overkill to suffer synchronize_rcu() just to\nhandle the rare module removal racing uevent_show() event.\n\nThanks to Tetsuo Handa for the debug analysis of the syzbot report [1]."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44952",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/49ea4e0d862632d51667da5e7a9c88a560e9c5a1",
            "https://git.kernel.org/stable/c/dd98c9630b7ee273da87e9a244f94ddf947161e2",
            "https://git.kernel.org/stable/c/f098e8fc7227166206256c18d56ab622039108b1",
            "https://git.kernel.org/stable/c/9c23fc327d6ec67629b4ad323bd64d3834c0417d",
            "https://git.kernel.org/stable/c/4a7c2a8387524942171037e70b80e969c3b5c05b",
            "https://git.kernel.org/stable/c/4d035c743c3e391728a6f81cbf0f7f9ca700cf62",
            "https://git.kernel.org/stable/c/cd490a247ddf325325fd0de8898659400c9237ef",
            "https://git.kernel.org/stable/c/15fffc6a5624b13b428bb1c6e9088e32a55eb82c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: Fix uevent_show() vs driver detach race\n\nuevent_show() wants to de-reference dev->driver->name. There is no clean\nway for a device attribute to de-reference dev->driver unless that\nattribute is defined via (struct device_driver).dev_groups. Instead, the\nanti-pattern of taking the device_lock() in the attribute handler risks\ndeadlocks with code paths that remove device attributes while holding\nthe lock.\n\nThis deadlock is typically invisible to lockdep given the device_lock()\nis marked lockdep_set_novalidate_class(), but some subsystems allocate a\nlocal lockdep key for @dev->mutex to reveal reports of the form:\n\n ======================================================\n WARNING: possible circular locking dependency detected\n 6.10.0-rc7+ #275 Tainted: G           OE    N\n ------------------------------------------------------\n modprobe/2374 is trying to acquire lock:\n ffff8c2270070de0 (kn->active#6){++++}-{0:0}, at: __kernfs_remove+0xde/0x220\n\n but task is already holding lock:\n ffff8c22016e88f8 (&cxl_root_key){+.+.}-{3:3}, at: device_release_driver_internal+0x39/0x210\n\n which lock already depends on the new lock.\n\n the existing dependency chain (in reverse order) is:\n\n -> #1 (&cxl_root_key){+.+.}-{3:3}:\n        __mutex_lock+0x99/0xc30\n        uevent_show+0xac/0x130\n        dev_attr_show+0x18/0x40\n        sysfs_kf_seq_show+0xac/0xf0\n        seq_read_iter+0x110/0x450\n        vfs_read+0x25b/0x340\n        ksys_read+0x67/0xf0\n        do_syscall_64+0x75/0x190\n        entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n -> #0 (kn->active#6){++++}-{0:0}:\n        __lock_acquire+0x121a/0x1fa0\n        lock_acquire+0xd6/0x2e0\n        kernfs_drain+0x1e9/0x200\n        __kernfs_remove+0xde/0x220\n        kernfs_remove_by_name_ns+0x5e/0xa0\n        device_del+0x168/0x410\n        device_unregister+0x13/0x60\n        devres_release_all+0xb8/0x110\n        device_unbind_cleanup+0xe/0x70\n        device_release_driver_internal+0x1c7/0x210\n        driver_detach+0x47/0x90\n        bus_remove_driver+0x6c/0xf0\n        cxl_acpi_exit+0xc/0x11 [cxl_acpi]\n        __do_sys_delete_module.isra.0+0x181/0x260\n        do_syscall_64+0x75/0x190\n        entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nThe observation though is that driver objects are typically much longer\nlived than device objects. It is reasonable to perform lockless\nde-reference of a @driver pointer even if it is racing detach from a\ndevice. Given the infrequency of driver unregistration, use\nsynchronize_rcu() in module_remove_driver() to close any potential\nraces.  It is potentially overkill to suffer synchronize_rcu() just to\nhandle the rare module removal racing uevent_show() event.\n\nThanks to Tetsuo Handa for the debug analysis of the syzbot report [1]."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44953",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f13f1858a28c68b7fc0d72c2008d5c1f80d2e8d5",
            "https://git.kernel.org/stable/c/3911af778f208e5f49d43ce739332b91e26bc48e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Fix deadlock during RTC update\n\nThere is a deadlock when runtime suspend waits for the flush of RTC work,\nand the RTC work calls ufshcd_rpm_get_sync() to wait for runtime resume.\n\nHere is deadlock backtrace:\n\nkworker/0:1     D 4892.876354 10 10971 4859 0x4208060 0x8 10 0 120 670730152367\nptr            f0ffff80c2e40000 0 1 0x00000001 0x000000ff 0x000000ff 0x000000ff\n<ffffffee5e71ddb0> __switch_to+0x1a8/0x2d4\n<ffffffee5e71e604> __schedule+0x684/0xa98\n<ffffffee5e71ea60> schedule+0x48/0xc8\n<ffffffee5e725f78> schedule_timeout+0x48/0x170\n<ffffffee5e71fb74> do_wait_for_common+0x108/0x1b0\n<ffffffee5e71efe0> wait_for_completion+0x44/0x60\n<ffffffee5d6de968> __flush_work+0x39c/0x424\n<ffffffee5d6decc0> __cancel_work_sync+0xd8/0x208\n<ffffffee5d6dee2c> cancel_delayed_work_sync+0x14/0x28\n<ffffffee5e2551b8> __ufshcd_wl_suspend+0x19c/0x480\n<ffffffee5e255fb8> ufshcd_wl_runtime_suspend+0x3c/0x1d4\n<ffffffee5dffd80c> scsi_runtime_suspend+0x78/0xc8\n<ffffffee5df93580> __rpm_callback+0x94/0x3e0\n<ffffffee5df90b0c> rpm_suspend+0x2d4/0x65c\n<ffffffee5df91448> __pm_runtime_suspend+0x80/0x114\n<ffffffee5dffd95c> scsi_runtime_idle+0x38/0x6c\n<ffffffee5df912f4> rpm_idle+0x264/0x338\n<ffffffee5df90f14> __pm_runtime_idle+0x80/0x110\n<ffffffee5e24ce44> ufshcd_rtc_work+0x128/0x1e4\n<ffffffee5d6e3a40> process_one_work+0x26c/0x650\n<ffffffee5d6e65c8> worker_thread+0x260/0x3d8\n<ffffffee5d6edec8> kthread+0x110/0x134\n<ffffffee5d616b18> ret_from_fork+0x10/0x20\n\nSkip updating RTC if RPM state is not RPM_ACTIVE."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44955",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/39b217193729aa45eded8de24d9245468a0c0263",
            "https://git.kernel.org/stable/c/fcf6a49d79923a234844b8efe830a61f3f0584e4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Don't refer to dc_sink in is_dsc_need_re_compute\n\n[Why]\nWhen unplug one of monitors connected after mst hub, encounter null pointer dereference.\n\nIt's due to dc_sink get released immediately in early_unregister() or detect_ctx(). When\ncommit new state which directly referring to info stored in dc_sink will cause null pointer\ndereference.\n\n[how]\nRemove redundant checking condition. Relevant condition should already be covered by checking\nif dsc_aux is null or not. Also reset dsc_aux to NULL when the connector is disconnected."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44953",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f13f1858a28c68b7fc0d72c2008d5c1f80d2e8d5",
            "https://git.kernel.org/stable/c/3911af778f208e5f49d43ce739332b91e26bc48e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Fix deadlock during RTC update\n\nThere is a deadlock when runtime suspend waits for the flush of RTC work,\nand the RTC work calls ufshcd_rpm_get_sync() to wait for runtime resume.\n\nHere is deadlock backtrace:\n\nkworker/0:1     D 4892.876354 10 10971 4859 0x4208060 0x8 10 0 120 670730152367\nptr            f0ffff80c2e40000 0 1 0x00000001 0x000000ff 0x000000ff 0x000000ff\n<ffffffee5e71ddb0> __switch_to+0x1a8/0x2d4\n<ffffffee5e71e604> __schedule+0x684/0xa98\n<ffffffee5e71ea60> schedule+0x48/0xc8\n<ffffffee5e725f78> schedule_timeout+0x48/0x170\n<ffffffee5e71fb74> do_wait_for_common+0x108/0x1b0\n<ffffffee5e71efe0> wait_for_completion+0x44/0x60\n<ffffffee5d6de968> __flush_work+0x39c/0x424\n<ffffffee5d6decc0> __cancel_work_sync+0xd8/0x208\n<ffffffee5d6dee2c> cancel_delayed_work_sync+0x14/0x28\n<ffffffee5e2551b8> __ufshcd_wl_suspend+0x19c/0x480\n<ffffffee5e255fb8> ufshcd_wl_runtime_suspend+0x3c/0x1d4\n<ffffffee5dffd80c> scsi_runtime_suspend+0x78/0xc8\n<ffffffee5df93580> __rpm_callback+0x94/0x3e0\n<ffffffee5df90b0c> rpm_suspend+0x2d4/0x65c\n<ffffffee5df91448> __pm_runtime_suspend+0x80/0x114\n<ffffffee5dffd95c> scsi_runtime_idle+0x38/0x6c\n<ffffffee5df912f4> rpm_idle+0x264/0x338\n<ffffffee5df90f14> __pm_runtime_idle+0x80/0x110\n<ffffffee5e24ce44> ufshcd_rtc_work+0x128/0x1e4\n<ffffffee5d6e3a40> process_one_work+0x26c/0x650\n<ffffffee5d6e65c8> worker_thread+0x260/0x3d8\n<ffffffee5d6edec8> kthread+0x110/0x134\n<ffffffee5d616b18> ret_from_fork+0x10/0x20\n\nSkip updating RTC if RPM state is not RPM_ACTIVE."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44954",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/643293b68fbb6c03f5e907736498da17d43f0d81",
            "https://git.kernel.org/stable/c/40f3d5cb0e0cbf7fa697913a27d5d361373bdcf5",
            "https://git.kernel.org/stable/c/e7e7d2b180d8f297cea6db43ea72402fd33e1a29",
            "https://git.kernel.org/stable/c/a54da4b787dcac60b598da69c9c0072812b8282d",
            "https://git.kernel.org/stable/c/c80f454a805443c274394b1db0d1ebf477abd94e",
            "https://git.kernel.org/stable/c/535df7f896a568a8a1564114eaea49d002cb1747",
            "https://git.kernel.org/stable/c/51d87f11dd199bbc6a85982b088ff27bde53b48a",
            "https://git.kernel.org/stable/c/15b7a03205b31bc5623378c190d22b7ff60026f1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: line6: Fix racy access to midibuf\n\nThere can be concurrent accesses to line6 midibuf from both the URB\ncompletion callback and the rawmidi API access.  This could be a cause\nof KMSAN warning triggered by syzkaller below (so put as reported-by\nhere).\n\nThis patch protects the midibuf call of the former code path with a\nspinlock for avoiding the possible races."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44956",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/458bb83119dfee5d14c677f7846dd9363817006f",
            "https://git.kernel.org/stable/c/3cd1585e57908b6efcd967465ef7685f40b2a294"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/preempt_fence: enlarge the fence critical section\n\nIt is really easy to introduce subtle deadlocks in\npreempt_fence_work_func() since we operate on single global ordered-wq\nfor signalling our preempt fences behind the scenes, so even though we\nsignal a particular fence, everything in the callback should be in the\nfence critical section, since blocking in the callback will prevent\nother published fences from signalling. If we enlarge the fence critical\nsection to cover the entire callback, then lockdep should be able to\nunderstand this better, and complain if we grab a sensitive lock like\nvm->lock, which is also held when waiting on preempt fences."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44957",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c2775ae4d9227729f8ca9ee2a068f62a00d5ea9c",
            "https://git.kernel.org/stable/c/49f2a5da6785b2dbde93e291cae037662440346e",
            "https://git.kernel.org/stable/c/1c682593096a487fd9aebc079a307ff7a6d054a3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: privcmd: Switch from mutex to spinlock for irqfds\n\nirqfd_wakeup() gets EPOLLHUP, when it is called by\neventfd_release() by way of wake_up_poll(&ctx->wqh, EPOLLHUP), which\ngets called under spin_lock_irqsave(). We can't use a mutex here as it\nwill lead to a deadlock.\n\nFix it by switching over to a spin lock."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44957",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c2775ae4d9227729f8ca9ee2a068f62a00d5ea9c",
            "https://git.kernel.org/stable/c/49f2a5da6785b2dbde93e291cae037662440346e",
            "https://git.kernel.org/stable/c/1c682593096a487fd9aebc079a307ff7a6d054a3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: privcmd: Switch from mutex to spinlock for irqfds\n\nirqfd_wakeup() gets EPOLLHUP, when it is called by\neventfd_release() by way of wake_up_poll(&ctx->wqh, EPOLLHUP), which\ngets called under spin_lock_irqsave(). We can't use a mutex here as it\nwill lead to a deadlock.\n\nFix it by switching over to a spin lock."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44958",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2a3548c7ef2e135aee40e7e5e44e7d11b893e7c4",
            "https://git.kernel.org/stable/c/2cf7665efe451e48d27953e6b5bc627d518c902b",
            "https://git.kernel.org/stable/c/65727331b60197b742089855ac09464c22b96f66",
            "https://git.kernel.org/stable/c/d0c87a3c6be10a57aa3463c32c3fc6b2a47c3dab",
            "https://git.kernel.org/stable/c/e22f910a26cc2a3ac9c66b8e935ef2a7dd881117"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/smt: Fix unbalance sched_smt_present dec/inc\n\nI got the following warn report while doing stress test:\n\njump label: negative count!\nWARNING: CPU: 3 PID: 38 at kernel/jump_label.c:263 static_key_slow_try_dec+0x9d/0xb0\nCall Trace:\n <TASK>\n __static_key_slow_dec_cpuslocked+0x16/0x70\n sched_cpu_deactivate+0x26e/0x2a0\n cpuhp_invoke_callback+0x3ad/0x10d0\n cpuhp_thread_fun+0x3f5/0x680\n smpboot_thread_fn+0x56d/0x8d0\n kthread+0x309/0x400\n ret_from_fork+0x41/0x70\n ret_from_fork_asm+0x1b/0x30\n </TASK>\n\nBecause when cpuset_cpu_inactive() fails in sched_cpu_deactivate(),\nthe cpu offline failed, but sched_smt_present is decremented before\ncalling sched_cpu_deactivate(), it leads to unbalanced dec/inc, so\nfix it by incrementing sched_smt_present in the error path."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44960",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ba15815dd24cc5ec0d23e2170dc58c7db1e03b4a",
            "https://git.kernel.org/stable/c/df8e734ae5e605348aa0ca2498aedb73e815f244",
            "https://git.kernel.org/stable/c/7cc9ebcfe58be22f18056ad8bc6272d120bdcb3e",
            "https://git.kernel.org/stable/c/50c5248b0ea8aae0529fdf28dac42a41312d3b62",
            "https://git.kernel.org/stable/c/a0362cd6e503278add954123957fd47990e8d9bf",
            "https://git.kernel.org/stable/c/1a9df57d57452b104c46c918569143cf21d7ebf1",
            "https://git.kernel.org/stable/c/716cba46f73a92645cf13eded8d257ed48afc2a4",
            "https://git.kernel.org/stable/c/973a57891608a98e894db2887f278777f564de18"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: core: Check for unset descriptor\n\nMake sure the descriptor has been set before looking at maxpacket.\nThis fixes a null pointer panic in this case.\n\nThis may happen if the gadget doesn't properly set up the endpoint\nfor the current speed, or the gadget descriptors are malformed and\nthe descriptor for the speed/endpoint are not found.\n\nNo current gadget driver is known to have this problem, but this\nmay cause a hard-to-find bug during development of new gadgets."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44964",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6b289f8d91537ec1e4f9c7b38b31b90d93b1419b",
            "https://git.kernel.org/stable/c/f01032a2ca099ec8d619aaa916c3762aa62495df"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix memory leaks and crashes while performing a soft reset\n\nThe second tagged commit introduced a UAF, as it removed restoring\nq_vector->vport pointers after reinitializating the structures.\nThis is due to that all queue allocation functions are performed here\nwith the new temporary vport structure and those functions rewrite\nthe backpointers to the vport. Then, this new struct is freed and\nthe pointers start leading to nowhere.\n\nBut generally speaking, the current logic is very fragile. It claims\nto be more reliable when the system is low on memory, but in fact, it\nconsumes two times more memory as at the moment of running this\nfunction, there are two vports allocated with their queues and vectors.\nMoreover, it claims to prevent the driver from running into \"bad state\",\nbut in fact, any error during the rebuild leaves the old vport in the\npartially allocated state.\nFinally, if the interface is down when the function is called, it always\nallocates a new queue set, but when the user decides to enable the\ninterface later on, vport_open() allocates them once again, IOW there's\na clear memory leak here.\n\nJust don't allocate a new queue set when performing a reset, that solves\ncrashes and memory leaks. Readd the old queue number and reopen the\ninterface on rollback - that solves limbo states when the device is left\ndisabled and/or without HW queues enabled."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44965",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/18da1b27ce16a14a9b636af9232acb4fb24f4c9e",
            "https://git.kernel.org/stable/c/25a727233a40a9b33370eec9f0cad67d8fd312f8",
            "https://git.kernel.org/stable/c/d00c9b4bbc442d99e1dafbdfdab848bc1ead73f6",
            "https://git.kernel.org/stable/c/4d143ae782009b43b4f366402e5c37f59d4e4346",
            "https://git.kernel.org/stable/c/5c580c1050bcbc15c3e78090859d798dcf8c9763",
            "https://git.kernel.org/stable/c/ca07aab70dd3b5e7fddb62d7a6ecd7a7d6d0b2ed",
            "https://git.kernel.org/stable/c/df3eecb5496f87263d171b254ca6e2758ab3c35c",
            "https://git.kernel.org/stable/c/41e71dbb0e0a0fe214545fe64af031303a08524c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44959",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/726f4c241e17be75a9cf6870d80cd7479dc89e8f",
            "https://git.kernel.org/stable/c/061da60716ce0cde99f62f31937b81e1c03acef6",
            "https://git.kernel.org/stable/c/0b6743bd60a56a701070b89fb80c327a44b7b3e2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracefs: Use generic inode RCU for synchronizing freeing\n\nWith structure layout randomization enabled for 'struct inode' we need to\navoid overlapping any of the RCU-used / initialized-only-once members,\ne.g. i_lru or i_sb_list to not corrupt related list traversals when making\nuse of the rcu_head.\n\nFor an unlucky structure layout of 'struct inode' we may end up with the\nfollowing splat when running the ftrace selftests:\n\n[<...>] list_del corruption, ffff888103ee2cb0->next (tracefs_inode_cache+0x0/0x4e0 [slab object]) is NULL (prev is tracefs_inode_cache+0x78/0x4e0 [slab object])\n[<...>] ------------[ cut here ]------------\n[<...>] kernel BUG at lib/list_debug.c:54!\n[<...>] invalid opcode: 0000 [#1] PREEMPT SMP KASAN\n[<...>] CPU: 3 PID: 2550 Comm: mount Tainted: G                 N  6.8.12-grsec+ #122 ed2f536ca62f28b087b90e3cc906a8d25b3ddc65\n[<...>] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014\n[<...>] RIP: 0010:[<ffffffff84656018>] __list_del_entry_valid_or_report+0x138/0x3e0\n[<...>] Code: 48 b8 99 fb 65 f2 ff ff ff ff e9 03 5c d9 fc cc 48 b8 99 fb 65 f2 ff ff ff ff e9 33 5a d9 fc cc 48 b8 99 fb 65 f2 ff ff ff ff <0f> 0b 4c 89 e9 48 89 ea 48 89 ee 48 c7 c7 60 8f dd 89 31 c0 e8 2f\n[<...>] RSP: 0018:fffffe80416afaf0 EFLAGS: 00010283\n[<...>] RAX: 0000000000000098 RBX: ffff888103ee2cb0 RCX: 0000000000000000\n[<...>] RDX: ffffffff84655fe8 RSI: ffffffff89dd8b60 RDI: 0000000000000001\n[<...>] RBP: ffff888103ee2cb0 R08: 0000000000000001 R09: fffffbd0082d5f25\n[<...>] R10: fffffe80416af92f R11: 0000000000000001 R12: fdf99c16731d9b6d\n[<...>] R13: 0000000000000000 R14: ffff88819ad4b8b8 R15: 0000000000000000\n[<...>] RBX: tracefs_inode_cache+0x0/0x4e0 [slab object]\n[<...>] RDX: __list_del_entry_valid_or_report+0x108/0x3e0\n[<...>] RSI: __func__.47+0x4340/0x4400\n[<...>] RBP: tracefs_inode_cache+0x0/0x4e0 [slab object]\n[<...>] RSP: process kstack fffffe80416afaf0+0x7af0/0x8000 [mount 2550 2550]\n[<...>] R09: kasan shadow of process kstack fffffe80416af928+0x7928/0x8000 [mount 2550 2550]\n[<...>] R10: process kstack fffffe80416af92f+0x792f/0x8000 [mount 2550 2550]\n[<...>] R14: tracefs_inode_cache+0x78/0x4e0 [slab object]\n[<...>] FS:  00006dcb380c1840(0000) GS:ffff8881e0600000(0000) knlGS:0000000000000000\n[<...>] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[<...>] CR2: 000076ab72b30e84 CR3: 000000000b088004 CR4: 0000000000360ef0 shadow CR4: 0000000000360ef0\n[<...>] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[<...>] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[<...>] ASID: 0003\n[<...>] Stack:\n[<...>]  ffffffff818a2315 00000000f5c856ee ffffffff896f1840 ffff888103ee2cb0\n[<...>]  ffff88812b6b9750 0000000079d714b6 fffffbfff1e9280b ffffffff8f49405f\n[<...>]  0000000000000001 0000000000000000 ffff888104457280 ffffffff8248b392\n[<...>] Call Trace:\n[<...>]  <TASK>\n[<...>]  [<ffffffff818a2315>] ? lock_release+0x175/0x380 fffffe80416afaf0\n[<...>]  [<ffffffff8248b392>] list_lru_del+0x152/0x740 fffffe80416afb48\n[<...>]  [<ffffffff8248ba93>] list_lru_del_obj+0x113/0x280 fffffe80416afb88\n[<...>]  [<ffffffff8940fd19>] ? _atomic_dec_and_lock+0x119/0x200 fffffe80416afb90\n[<...>]  [<ffffffff8295b244>] iput_final+0x1c4/0x9a0 fffffe80416afbb8\n[<...>]  [<ffffffff8293a52b>] dentry_unlink_inode+0x44b/0xaa0 fffffe80416afbf8\n[<...>]  [<ffffffff8293fefc>] __dentry_kill+0x23c/0xf00 fffffe80416afc40\n[<...>]  [<ffffffff8953a85f>] ? __this_cpu_preempt_check+0x1f/0xa0 fffffe80416afc48\n[<...>]  [<ffffffff82949ce5>] ? shrink_dentry_list+0x1c5/0x760 fffffe80416afc70\n[<...>]  [<ffffffff82949b71>] ? shrink_dentry_list+0x51/0x760 fffffe80416afc78\n[<...>]  [<ffffffff82949da8>] shrink_dentry_list+0x288/0x760 fffffe80416afc80\n[<...>]  [<ffffffff8294ae75>] shrink_dcache_sb+0x155/0x420 fffffe80416afcc8\n[<...>]  [<ffffffff8953a7c3>] ? debug_smp_processor_id+0x23/0xa0 fffffe80416afce0\n[<...>]  [<ffffffff8294ad20>] ? do_one_tre\n---truncated---"
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44966",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3a684499261d0f7ed5ee72793025c88c2276809c",
            "https://git.kernel.org/stable/c/af65d5383854cc3f172a7d0843b628758bf462c8",
            "https://git.kernel.org/stable/c/49df34d2b7da9e57c839555a2f7877291ce45ad1",
            "https://git.kernel.org/stable/c/9350ba06ee61db392c486716ac68ecc20e030f7c",
            "https://git.kernel.org/stable/c/3eb3cd5992f7a0c37edc8d05b4c38c98758d8671"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbinfmt_flat: Fix corruption when not offsetting data start\n\nCommit 04d82a6d0881 (\"binfmt_flat: allow not offsetting data start\")\nintroduced a RISC-V specific variant of the FLAT format which does\nnot allocate any space for the (obsolete) array of shared library\npointers. However, it did not disable the code which initializes the\narray, resulting in the corruption of sizeof(long) bytes before the DATA\nsegment, generally the end of the TEXT segment.\n\nIntroduce MAX_SHARED_LIBS_UPDATE which depends on the state of\nCONFIG_BINFMT_FLAT_NO_DATA_START_OFFSET to guard the initialization of\nthe shared library pointer region so that it will only be initialized\nif space is reserved for it."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44967",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/55a6916db77102765b22855d3a0add4751988b7c",
            "https://git.kernel.org/stable/c/81d34df843620e902dd04aa9205c875833d61c17",
            "https://git.kernel.org/stable/c/9d96b91e03cba9dfcb4ac370c93af4dbc47d5191",
            "https://git.kernel.org/stable/c/eb1ae34e48a09b7a1179c579aed042b032e408f4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mgag200: Bind I2C lifetime to DRM device\n\nManaged cleanup with devm_add_action_or_reset() will release the I2C\nadapter when the underlying Linux device goes away. But the connector\nstill refers to it, so this cleanup leaves behind a stale pointer\nin struct drm_connector.ddc.\n\nBind the lifetime of the I2C adapter to the connector's lifetime by\nusing DRM's managed release. When the DRM device goes away (after\nthe Linux device) DRM will first clean up the connector and then\nclean up the I2C adapter."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44968",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f54abf332a2bc0413cfa8bd6a8511f7aa99faea0",
            "https://git.kernel.org/stable/c/f91fb47ecacc178a83a77eeebd25cbaec18c01d6",
            "https://git.kernel.org/stable/c/668c6c4a7e9e9f081c06b70f30104fb7013437ed",
            "https://git.kernel.org/stable/c/541a900d245536d4809cb1aa322c3fcc2cdb58a6",
            "https://git.kernel.org/stable/c/7b3ec186ba93e333e9efe7254e7e31c1828e5d2d",
            "https://git.kernel.org/stable/c/b9d604933d5fd72dd37f24e1dc35f778297d745a",
            "https://git.kernel.org/stable/c/7dd12f85f150010ef7518201c63fa7e395f5c3e9",
            "https://git.kernel.org/stable/c/6881e75237a84093d0986f56223db3724619f26e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44962",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4d9adcb94d55e9be8a3e464d9f2ff7d27e2ed016",
            "https://git.kernel.org/stable/c/28bbb5011a9723700006da67bdb57ab6a914452b",
            "https://git.kernel.org/stable/c/0d0df1e750bac0fdaa77940e711c1625cff08d33"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btnxpuart: Shutdown timer and prevent rearming when driver unloading\n\nWhen unload the btnxpuart driver, its associated timer will be deleted.\nIf the timer happens to be modified at this moment, it leads to the\nkernel call this timer even after the driver unloaded, resulting in\nkernel panic.\nUse timer_shutdown_sync() instead of del_timer_sync() to prevent rearming.\n\npanic log:\n  Internal error: Oops: 0000000086000007 [#1] PREEMPT SMP\n  Modules linked in: algif_hash algif_skcipher af_alg moal(O) mlan(O) crct10dif_ce polyval_ce polyval_generic   snd_soc_imx_card snd_soc_fsl_asoc_card snd_soc_imx_audmux mxc_jpeg_encdec v4l2_jpeg snd_soc_wm8962 snd_soc_fsl_micfil   snd_soc_fsl_sai flexcan snd_soc_fsl_utils ap130x rpmsg_ctrl imx_pcm_dma can_dev rpmsg_char pwm_fan fuse [last unloaded:   btnxpuart]\n  CPU: 5 PID: 723 Comm: memtester Tainted: G           O       6.6.23-lts-next-06207-g4aef2658ac28 #1\n  Hardware name: NXP i.MX95 19X19 board (DT)\n  pstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : 0xffff80007a2cf464\n  lr : call_timer_fn.isra.0+0x24/0x80\n...\n  Call trace:\n   0xffff80007a2cf464\n   __run_timers+0x234/0x280\n   run_timer_softirq+0x20/0x40\n   __do_softirq+0x100/0x26c\n   ____do_softirq+0x10/0x1c\n   call_on_irq_stack+0x24/0x4c\n   do_softirq_own_stack+0x1c/0x2c\n   irq_exit_rcu+0xc0/0xdc\n   el0_interrupt+0x54/0xd8\n   __el0_irq_handler_common+0x18/0x24\n   el0t_64_irq_handler+0x10/0x1c\n   el0t_64_irq+0x190/0x194\n  Code: ???????? ???????? ???????? ???????? (????????)\n  ---[ end trace 0000000000000000 ]---\n  Kernel panic - not syncing: Oops: Fatal exception in interrupt\n  SMP: stopping secondary CPUs\n  Kernel Offset: disabled\n  CPU features: 0x0,c0000000,40028143,1000721b\n  Memory Limit: none\n  ---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---"
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44969",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7a7e60ed23d471a07dbbe72565d2992ee8244bbe",
            "https://git.kernel.org/stable/c/1ec5ea9e25f582fd6999393e2f2c3bf56f234e05",
            "https://git.kernel.org/stable/c/a3e52a4c22c846858a6875e1c280030a3849e148",
            "https://git.kernel.org/stable/c/a88a49473c94ccfd8dce1e766aacf3c627278463",
            "https://git.kernel.org/stable/c/46f67233b011385d53cf14d272431755de3a7c79",
            "https://git.kernel.org/stable/c/1e8b7fb427af6b2ddd54eff66a6b428a81c96633",
            "https://git.kernel.org/stable/c/2429ea3b4330e3653b72b210a0d5f2a717359506",
            "https://git.kernel.org/stable/c/bf365071ea92b9579d5a272679b74052a5643e35"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/sclp: Prevent release of buffer in I/O\n\nWhen a task waiting for completion of a Store Data operation is\ninterrupted, an attempt is made to halt this operation. If this attempt\nfails due to a hardware or firmware problem, there is a chance that the\nSCLP facility might store data into buffers referenced by the original\noperation at a later time.\n\nHandle this situation by not releasing the referenced data buffers if\nthe halt attempt fails. For current use cases, this might result in a\nleak of few pages of memory in case of a rare hardware/firmware\nmalfunction."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44961",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0da0b06165d83a8ecbb6582d9d5a135f9d38a52a",
            "https://git.kernel.org/stable/c/c28d207edfc5679585f4e96acb67000076ce90be",
            "https://git.kernel.org/stable/c/829798c789f567ef6ba4b084c15b7b5f3bd98d51"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Forward soft recovery errors to userspace\n\nAs we discussed before[1], soft recovery should be\nforwarded to userspace, or we can get into a really\nbad state where apps will keep submitting hanging\ncommand buffers cascading us to a hard reset.\n\n1: https://lore.kernel.org/all/bf23d5ed-9a6b-43e7-84ee-8cbfd0d60f18@froggi.es/\n(cherry picked from commit 434967aadbbbe3ad9103cc29e9a327de20fdba01)"
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44963",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/98251cd60b4d702a8a81de442ab621e83a3fb24f",
            "https://git.kernel.org/stable/c/bb3868033a4cccff7be57e9145f2117cbdc91c11"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not BUG_ON() when freeing tree block after error\n\nWhen freeing a tree block, at btrfs_free_tree_block(), if we fail to\ncreate a delayed reference we don't deal with the error and just do a\nBUG_ON(). The error most likely to happen is -ENOMEM, and we have a\ncomment mentioning that only -ENOMEM can happen, but that is not true,\nbecause in case qgroups are enabled any error returned from\nbtrfs_qgroup_trace_extent_post() (can be -EUCLEAN or anything returned\nfrom btrfs_search_slot() for example) can be propagated back to\nbtrfs_free_tree_block().\n\nSo stop doing a BUG_ON() and return the error to the callers and make\nthem abort the transaction to prevent leaking space. Syzbot was\ntriggering this, likely due to memory allocation failure injection."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44970",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7b379353e9144e1f7460ff15f39862012c9d0d78",
            "https://git.kernel.org/stable/c/650e24748e1e0a7ff91d5c72b72a2f2a452b5b76",
            "https://git.kernel.org/stable/c/50d8009a0ac02c3311b23a0066511f8337bd88d9",
            "https://git.kernel.org/stable/c/fba8334721e266f92079632598e46e5f89082f30"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: SHAMPO, Fix invalid WQ linked list unlink\n\nWhen all the strides in a WQE have been consumed, the WQE is unlinked\nfrom the WQ linked list (mlx5_wq_ll_pop()). For SHAMPO, it is possible\nto receive CQEs with 0 consumed strides for the same WQE even after the\nWQE is fully consumed and unlinked. This triggers an additional unlink\nfor the same wqe which corrupts the linked list.\n\nFix this scenario by accepting 0 sized consumed strides without\nunlinking the WQE again."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44971",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b7b8d9f5e679af60c94251fd6728dde34be69a71",
            "https://git.kernel.org/stable/c/c05516c072903f6fb9134b8e7e1ad4bffcdc4819",
            "https://git.kernel.org/stable/c/7feef10768ea71d468d9bbc1e0d14c461876768c",
            "https://git.kernel.org/stable/c/a7d2808d67570e6acae45c2a96e0d59986888e4c",
            "https://git.kernel.org/stable/c/f3d5efe18a11f94150fee8b3fda9d62079af640a",
            "https://git.kernel.org/stable/c/e3862093ee93fcfbdadcb7957f5f8974fffa806a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: bcm_sf2: Fix a possible memory leak in bcm_sf2_mdio_register()\n\nbcm_sf2_mdio_register() calls of_phy_find_device() and then\nphy_device_remove() in a loop to remove existing PHY devices.\nof_phy_find_device() eventually calls bus_find_device(), which calls\nget_device() on the returned struct device * to increment the refcount.\nThe current implementation does not decrement the refcount, which causes\nmemory leak.\n\nThis commit adds the missing phy_device_free() call to decrement the\nrefcount via put_device() to balance the refcount."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44972",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ba4dedb71356638d8284e34724daca944be70368",
            "https://git.kernel.org/stable/c/d3b403209f767e5857c1b9fda66726e6e6ffc99f",
            "https://git.kernel.org/stable/c/97713b1a2ced1e4a2a6c40045903797ebd44d7e0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not clear page dirty inside extent_write_locked_range()\n\n[BUG]\nFor subpage + zoned case, the following workload can lead to rsv data\nleak at unmount time:\n\n  # mkfs.btrfs -f -s 4k $dev\n  # mount $dev $mnt\n  # fsstress -w -n 8 -d $mnt -s 1709539240\n  0/0: fiemap - no filename\n  0/1: copyrange read - no filename\n  0/2: write - no filename\n  0/3: rename - no source filename\n  0/4: creat f0 x:0 0 0\n  0/4: creat add id=0,parent=-1\n  0/5: writev f0[259 1 0 0 0 0] [778052,113,965] 0\n  0/6: ioctl(FIEMAP) f0[259 1 0 0 224 887097] [1294220,2291618343991484791,0x10000] -1\n  0/7: dwrite - xfsctl(XFS_IOC_DIOINFO) f0[259 1 0 0 224 887097] return 25, fallback to stat()\n  0/7: dwrite f0[259 1 0 0 224 887097] [696320,102400] 0\n  # umount $mnt\n\nThe dmesg includes the following rsv leak detection warning (all call\ntrace skipped):\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8653 btrfs_destroy_inode+0x1e0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8654 btrfs_destroy_inode+0x1a8/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8660 btrfs_destroy_inode+0x1a0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): last unmount of filesystem 1b4abba9-de34-4f07-9e7f-157cf12a18d6\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info DATA has 268218368 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=204800, pinned=0, reserved=0, may_use=12288, readonly=0 zone_unusable=0\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info METADATA has 267796480 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=131072, pinned=0, reserved=0, may_use=262144, readonly=0 zone_unusable=245760\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n\nAbove $dev is a tcmu-runner emulated zoned HDD, which has a max zone\nappend size of 64K, and the system has 64K page size.\n\n[CAUSE]\nI have added several trace_printk() to show the events (header skipped):\n\n  > btrfs_dirty_pages: r/i=5/259 dirty start=774144 len=114688\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=720896 off_in_page=53248 len_in_page=12288\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=786432 off_in_page=0 len_in_page=65536\n  > btrfs_dirty_pages: r/i=5/259 dirty part of page=851968 off_in_page=0 len_in_page=36864\n\nThe above lines show our buffered write has dirtied 3 pages of inode\n259 of root 5:\n\n  704K             768K              832K              896K\n  I           |////I/////////////////I///////////|     I\n              756K                               868K\n\n  |///| is the dirtied range using subpage bitmaps. and 'I' is the page\n  boundary.\n\n  Meanwhile all three pages (704K, 768K, 832K) have their PageDirty\n  flag set.\n\n  > btrfs_direct_write: r/i=5/259 start dio filepos=696320 len=102400\n\nThen direct IO writ\n---truncated---"
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2024-09-04T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44973",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b35cd7f1e969aaa63e6716d82480f6b8a3230949",
            "https://git.kernel.org/stable/c/a371d558e6f3aed977a8a7346350557de5d25190"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm, slub: do not call do_slab_free for kfence object\n\nIn 782f8906f805 the freeing of kfence objects was moved from deep\ninside do_slab_free to the wrapper functions outside. This is a nice\nchange, but unfortunately it missed one spot in __kmem_cache_free_bulk.\n\nThis results in a crash like this:\n\nBUG skbuff_head_cache (Tainted: G S  B       E     ): Padding overwritten. 0xffff88907fea0f00-0xffff88907fea0fff @offset=3840\n\nslab_err (mm/slub.c:1129)\nfree_to_partial_list (mm/slub.c:? mm/slub.c:4036)\nslab_pad_check (mm/slub.c:864 mm/slub.c:1290)\ncheck_slab (mm/slub.c:?)\nfree_to_partial_list (mm/slub.c:3171 mm/slub.c:4036)\nkmem_cache_alloc_bulk (mm/slub.c:? mm/slub.c:4495 mm/slub.c:4586 mm/slub.c:4635)\nnapi_build_skb (net/core/skbuff.c:348 net/core/skbuff.c:527 net/core/skbuff.c:549)\n\nAll the other callers to do_slab_free appear to be ok.\n\nAdd a kfence_free check in __kmem_cache_free_bulk to avoid the crash."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2023-06-13T18:15:00",
        "access": {},
        "assigner": "security@zoom.us",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-34113",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority as this is a duplicate of CVE-2023-36541."
    },
    {
        "Modified": "2024-09-04T19:15:00",
        "Published": "2023-06-13T18:15:00",
        "access": {},
        "assigner": "security@zoom.us",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-34122",
        "impact": {},
        "last-modified": "2024-09-04T19:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority as this is a duplicate of CVE-2023-36540."
    },
    {
        "Modified": "2024-09-04T19:13:00",
        "Published": "2024-08-30T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "CWE-863",
        "id": "CVE-2024-38868",
        "impact": {},
        "last-modified": "2024-09-04T19:13:00",
        "references": [
            "https://www.manageengine.com/products/desktop-central/security-updates-ngav.html"
        ],
        "summary": "Zohocorp ManageEngine Endpoint Central affected by\u00a0Incorrect authorization vulnerability while isolating the devices.This issue affects Endpoint Central: before 11.3.2406.08 and before 11.3.2400.15"
    },
    {
        "Modified": "2024-09-04T18:44:00",
        "Published": "2024-08-19T20:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-7927",
        "impact": {},
        "last-modified": "2024-09-04T18:44:00",
        "references": [
            "https://vuldb.com/?id.275113",
            "https://vuldb.com/?ctiid.275113",
            "https://vuldb.com/?submit.392186",
            "https://gitee.com/A0kooo/cve_article/blob/master/zzcms/Directory_traversal3/zzcms%20class.php%20Directory%20traversal.md"
        ],
        "summary": "A vulnerability classified as critical was found in ZZCMS 2023. Affected by this vulnerability is an unknown functionality of the file /admin/class.php?dowhat=modifyclass. The manipulation of the argument skin[] leads to path traversal. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T18:42:00",
        "Published": "2024-08-19T20:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-7926",
        "impact": {},
        "last-modified": "2024-09-04T18:42:00",
        "references": [
            "https://vuldb.com/?id.275112",
            "https://vuldb.com/?ctiid.275112",
            "https://vuldb.com/?submit.392181",
            "https://gitee.com/A0kooo/cve_article/blob/master/zzcms/Directory_traversal2/zzcms%20siteinfo.php%20Directory%20traversal.md"
        ],
        "summary": "A vulnerability classified as critical has been found in ZZCMS 2023. Affected is an unknown function of the file /admin/about_edit.php?action=modify. The manipulation of the argument skin leads to path traversal. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T18:38:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2022-48868",
        "impact": {},
        "last-modified": "2024-09-04T18:38:00",
        "references": [
            "https://git.kernel.org/stable/c/0f150134dd795ffcd60b798a85ab737d8d010fb7",
            "https://git.kernel.org/stable/c/99dc4520b74e7ca8e9dc9abe37a0b10b49467960",
            "https://git.kernel.org/stable/c/b51b75f0604f17c0f6f3b6f68f1a521a5cc6b04f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Let probe fail when workqueue cannot be enabled\n\nThe workqueue is enabled when the appropriate driver is loaded and\ndisabled when the driver is removed. When the driver is removed it\nassumes that the workqueue was enabled successfully and proceeds to\nfree allocations made during workqueue enabling.\n\nFailure during workqueue enabling does not prevent the driver from\nbeing loaded. This is because the error path within drv_enable_wq()\nreturns success unless a second failure is encountered\nduring the error path. By returning success it is possible to load\nthe driver even if the workqueue cannot be enabled and\nallocations that do not exist are attempted to be freed during\ndriver remove.\n\nSome examples of problematic flows:\n(a)\n\n idxd_dmaengine_drv_probe() -> drv_enable_wq() -> idxd_wq_request_irq():\n In above flow, if idxd_wq_request_irq() fails then\n idxd_wq_unmap_portal() is called on error exit path, but\n drv_enable_wq() returns 0 because idxd_wq_disable() succeeds. The\n driver is thus loaded successfully.\n\n idxd_dmaengine_drv_remove()->drv_disable_wq()->idxd_wq_unmap_portal()\n Above flow on driver unload triggers the WARN in devm_iounmap() because\n the device resource has already been removed during error path of\n drv_enable_wq().\n\n(b)\n\n idxd_dmaengine_drv_probe() -> drv_enable_wq() -> idxd_wq_request_irq():\n In above flow, if idxd_wq_request_irq() fails then\n idxd_wq_init_percpu_ref() is never called to initialize the percpu\n counter, yet the driver loads successfully because drv_enable_wq()\n returns 0.\n\n idxd_dmaengine_drv_remove()->__idxd_wq_quiesce()->percpu_ref_kill():\n Above flow on driver unload triggers a BUG when attempting to drop the\n initial ref of the uninitialized percpu ref:\n BUG: kernel NULL pointer dereference, address: 0000000000000010\n\nFix the drv_enable_wq() error path by returning the original error that\nindicates failure of workqueue enabling. This ensures that the probe\nfails when an error is encountered and the driver remove paths are only\nattempted when the workqueue was enabled successfully."
    },
    {
        "Modified": "2024-09-04T18:35:00",
        "Published": "2024-09-04T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44808",
        "impact": {},
        "last-modified": "2024-09-04T18:35:00",
        "references": [
            "https://github.com/Vypor/Vypors-Attack-API-System",
            "https://jacobmasse.medium.com/cve-2024-44808-remote-command-execution-in-vypor-ddos-attack-api-1ed073725595"
        ],
        "summary": "An issue in Vypor Attack API System v.1.0 allows a remote attacker to execute arbitrary code via the user GET parameter."
    },
    {
        "Modified": "2024-09-04T18:35:00",
        "Published": "2024-03-21T04:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-29864",
        "impact": {},
        "last-modified": "2024-09-04T18:35:00",
        "references": [
            "https://github.com/89luca89/distrobox/commit/82a69f0a234e73e447d0ea8c8b3443b84fd31944",
            "https://github.com/89luca89/distrobox/issues/1275"
        ],
        "summary": "Distrobox before 1.7.0.1 allows attackers to execute arbitrary code via command injection into exported executables."
    },
    {
        "Modified": "2024-09-04T18:35:00",
        "Published": "2024-03-03T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2019-25210",
        "impact": {},
        "last-modified": "2024-09-04T18:35:00",
        "references": [
            "https://github.com/helm/helm/issues/7275",
            "https://www.cncf.io/projects/helm/",
            "https://helm.sh/blog/response-cve-2019-25210/"
        ],
        "summary": "An issue was discovered in Cloud Native Computing Foundation (CNCF) Helm through 3.13.3. It displays values of secrets when the --dry-run flag is used. This is a security concern in some use cases, such as a --dry-run call by a CI/CD tool. NOTE: the vendor's position is that this behavior was introduced intentionally, and cannot be removed without breaking backwards compatibility (some users may be relying on these values). Also, it is not the Helm Project's responsibility if a user decides to use --dry-run within a CI/CD environment whose output is visible to unauthorized persons."
    },
    {
        "Modified": "2024-09-04T18:35:00",
        "Published": "2024-02-21T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-50975",
        "impact": {},
        "last-modified": "2024-09-04T18:35:00",
        "references": [
            "https://newsroom.ripeda.com/tag/macs-for-business/",
            "https://www.electronjs.org/blog/statement-run-as-node-cves",
            "https://gist.github.com/khronokernel/2598c067d0f49b0f0a4c8b01cf129d34"
        ],
        "summary": "The TD Bank TD Advanced Dashboard client through 3.0.3 for macOS allows arbitrary code execution because of the lack of electron::fuses::IsRunAsNodeEnabled (i.e., ELECTRON_RUN_AS_NODE can be used in production). This makes it easier for a compromised process to access banking information."
    },
    {
        "Modified": "2024-09-04T18:33:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2022-48875",
        "impact": {},
        "last-modified": "2024-09-04T18:33:00",
        "references": [
            "https://git.kernel.org/stable/c/187523fa7c2d4c780f775cb869216865c4a909ef",
            "https://git.kernel.org/stable/c/a12fd43bd175fa52c82f9740179d38c34ca1b62e",
            "https://git.kernel.org/stable/c/c838df8461a601b20dc1b9fb1834d2aad8e2f949",
            "https://git.kernel.org/stable/c/69403bad97aa0162e3d7911b27e25abe774093df"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: sdata can be NULL during AMPDU start\n\nieee80211_tx_ba_session_handle_start() may get NULL for sdata when a\ndeauthentication is ongoing.\n\nHere a trace triggering the race with the hostapd test\nmulti_ap_fronthaul_on_ap:\n\n(gdb) list *drv_ampdu_action+0x46\n0x8b16 is in drv_ampdu_action (net/mac80211/driver-ops.c:396).\n391             int ret = -EOPNOTSUPP;\n392\n393             might_sleep();\n394\n395             sdata = get_bss_sdata(sdata);\n396             if (!check_sdata_in_driver(sdata))\n397                     return -EIO;\n398\n399             trace_drv_ampdu_action(local, sdata, params);\n400\n\nwlan0: moving STA 02:00:00:00:03:00 to state 3\nwlan0: associated\nwlan0: deauthenticating from 02:00:00:00:03:00 by local choice (Reason: 3=DEAUTH_LEAVING)\nwlan3.sta1: Open BA session requested for 02:00:00:00:00:00 tid 0\nwlan3.sta1: dropped frame to 02:00:00:00:00:00 (unauthorized port)\nwlan0: moving STA 02:00:00:00:03:00 to state 2\nwlan0: moving STA 02:00:00:00:03:00 to state 1\nwlan0: Removed STA 02:00:00:00:03:00\nwlan0: Destroyed STA 02:00:00:00:03:00\nBUG: unable to handle page fault for address: fffffffffffffb48\nPGD 11814067 P4D 11814067 PUD 11816067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 2 PID: 133397 Comm: kworker/u16:1 Tainted: G        W          6.1.0-rc8-wt+ #59\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014\nWorkqueue: phy3 ieee80211_ba_session_work [mac80211]\nRIP: 0010:drv_ampdu_action+0x46/0x280 [mac80211]\nCode: 53 48 89 f3 be 89 01 00 00 e8 d6 43 bf ef e8 21 46 81 f0 83 bb a0 1b 00 00 04 75 0e 48 8b 9b 28 0d 00 00 48 81 eb 10 0e 00 00 <8b> 93 58 09 00 00 f6 c2 20 0f 84 3b 01 00 00 8b 05 dd 1c 0f 00 85\nRSP: 0018:ffffc900025ebd20 EFLAGS: 00010287\nRAX: 0000000000000000 RBX: fffffffffffff1f0 RCX: ffff888102228240\nRDX: 0000000080000000 RSI: ffffffff918c5de0 RDI: ffff888102228b40\nRBP: ffffc900025ebd40 R08: 0000000000000001 R09: 0000000000000001\nR10: 0000000000000001 R11: 0000000000000000 R12: ffff888118c18ec0\nR13: 0000000000000000 R14: ffffc900025ebd60 R15: ffff888018b7efb8\nFS:  0000000000000000(0000) GS:ffff88817a600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: fffffffffffffb48 CR3: 0000000105228006 CR4: 0000000000170ee0\nCall Trace:\n <TASK>\n ieee80211_tx_ba_session_handle_start+0xd0/0x190 [mac80211]\n ieee80211_ba_session_work+0xff/0x2e0 [mac80211]\n process_one_work+0x29f/0x620\n worker_thread+0x4d/0x3d0\n ? process_one_work+0x620/0x620\n kthread+0xfb/0x120\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x22/0x30\n </TASK>"
    },
    {
        "Modified": "2024-09-04T18:25:00",
        "Published": "2024-08-22T20:15:00",
        "access": {},
        "assigner": "ics-cert@hq.dhs.gov",
        "cvss": null,
        "cwe": "CWE-219",
        "id": "CVE-2024-39776",
        "impact": {},
        "last-modified": "2024-09-04T18:25:00",
        "references": [
            "https://www.cisa.gov/news-events/ics-advisories/icsa-24-235-04"
        ],
        "summary": "Avtec Outpost stores sensitive information in an insecure location without proper access controls in place."
    },
    {
        "Modified": "2024-09-04T18:22:00",
        "Published": "2024-08-22T20:15:00",
        "access": {},
        "assigner": "ics-cert@hq.dhs.gov",
        "cvss": null,
        "cwe": "CWE-321",
        "id": "CVE-2024-42418",
        "impact": {},
        "last-modified": "2024-09-04T18:22:00",
        "references": [
            "https://www.cisa.gov/news-events/ics-advisories/icsa-24-235-04"
        ],
        "summary": "Avtec Outpost uses a default cryptographic key that can be used to decrypt sensitive information."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-04T18:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-8416",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://vuldb.com/?id.276495",
            "https://vuldb.com/?ctiid.276495",
            "https://vuldb.com/?submit.402369",
            "https://github.com/SherlockMA0/cve/blob/main/sql2.md",
            "https://www.sourcecodester.com/"
        ],
        "summary": "A vulnerability was found in SourceCodester Food Ordering Management System 1.0. It has been classified as critical. This affects an unknown part of the file /routers/ticket-status.php. The manipulation of the argument ticket_id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-04T18:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-540",
        "id": "CVE-2024-8417",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://vuldb.com/?id.276496",
            "https://vuldb.com/?ctiid.276496",
            "https://vuldb.com/?submit.402376",
            "https://wiki.shikangsi.com/post/share/d31fefa1-ca08-48d7-a671-727d63bfaf65"
        ],
        "summary": "A vulnerability was found in ?????????? Yunke Online School System up to 1.5.5. It has been declared as problematic. This vulnerability affects unknown code of the file /admin/educloud/videobind.html. The manipulation leads to inclusion of sensitive information in source code. The attack can be initiated remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.5.6 is able to address this issue. It is recommended to upgrade the affected component."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-03T22:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-457",
        "id": "CVE-2024-45615",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-45615",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2309285"
        ],
        "summary": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. \nThe problem is missing  initialization of variables expected to be initialized (as arguments to other functions, etc.)."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-03T22:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-457",
        "id": "CVE-2024-45616",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-45616",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2309290"
        ],
        "summary": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nThe following problems were caused by insufficient control of the response APDU buffer and its length when communicating with the card."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-03T22:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-457",
        "id": "CVE-2024-45618",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-45618",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2309287"
        ],
        "summary": "A vulnerability was found in pkcs15-init in OpenSC. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nInsufficient or missing checking of return values of functions leads to unexpected work with variables that have not been initialized."
    },
    {
        "Modified": "2024-09-04T18:15:00",
        "Published": "2024-09-03T22:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-457",
        "id": "CVE-2024-45617",
        "impact": {},
        "last-modified": "2024-09-04T18:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-45617",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2309286"
        ],
        "summary": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nInsufficient or missing checking of return values of functions leads to unexpected work with variables that have not been initialized."
    },
    {
        "Modified": "2024-09-04T18:02:00",
        "Published": "2024-08-25T01:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-8139",
        "impact": {},
        "last-modified": "2024-09-04T18:02:00",
        "references": [
            "https://vuldb.com/?id.275719",
            "https://vuldb.com/?ctiid.275719",
            "https://vuldb.com/?submit.396842",
            "https://github.com/ppp-src/ha/issues/7",
            "https://itsourcecode.com/"
        ],
        "summary": "A vulnerability has been found in itsourcecode E-Commerce Website 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file search_list.php. The manipulation of the argument user leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T17:57:00",
        "Published": "2024-08-28T17:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-7744",
        "impact": {},
        "last-modified": "2024-09-04T17:57:00",
        "references": [
            "https://community.progress.com/s/article/WS-FTP-Server-Service-Pack-August-2024",
            "https://www.progress.com/ftp-server"
        ],
        "summary": "In WS_FTP Server versions before 8.8.8 (2022.0.8), an Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in the Web Transfer Module allows File Discovery, Probe System Files, User-Controlled Filename, Path Traversal.\n\u00a0\n\nAn authenticated file download flaw has been identified where a user can craft an API call that allows them to download a file from an arbitrary folder on the drive where that user host's root folder is located (by default this is C:)"
    },
    {
        "Modified": "2024-09-04T17:57:00",
        "Published": "2024-08-28T17:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "CWE-287",
        "id": "CVE-2024-7745",
        "impact": {},
        "last-modified": "2024-09-04T17:57:00",
        "references": [
            "https://community.progress.com/s/article/WS-FTP-Server-Service-Pack-August-2024",
            "https://www.progress.com/ftp-server"
        ],
        "summary": "In WS_FTP Server versions before 8.8.8 (2022.0.8), a Missing Critical Step in Multi-Factor Authentication of the Web Transfer Module allows users to skip the second-factor verification and log in with username and password only."
    },
    {
        "Modified": "2024-09-04T17:45:00",
        "Published": "2020-12-09T17:15:00",
        "access": {
            "authentication": "SINGLE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "report@snyk.io",
        "cvss": 3.5,
        "cvss-time": "2024-09-04T17:45:00",
        "cvss-vector": "AV:N/AC:M/Au:S/C:N/I:P/A:N",
        "cwe": "CWE-79",
        "id": "CVE-2020-7776",
        "impact": {
            "availability": "NONE",
            "confidentiality": "NONE",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-09-04T17:45:00",
        "references": [
            "https://snyk.io/vuln/SNYK-PHP-PHPOFFICEPHPSPREADSHEET-1048856",
            "https://github.com/PHPOffice/PhpSpreadsheet/commit/0ed5b800be2136bcb8fa9c1bdf59abc957a98845",
            "https://github.com/PHPOffice/PhpSpreadsheet/blob/master/src/PhpSpreadsheet/Writer/Html.php%23L1792"
        ],
        "summary": "This affects the package phpoffice/phpspreadsheet from 0.0.0. The library is vulnerable to XSS when creating an html output from an excel file by adding a comment on any cell. The root cause of this issue is within the HTML writer where user comments are concatenated as part of link and this is returned as HTML. A fix for this issue is available on commit 0ed5b800be2136bcb8fa9c1bdf59abc957a98845/master branch."
    },
    {
        "Modified": "2024-09-04T17:45:00",
        "Published": "2018-11-14T11:29:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 6.8,
        "cvss-time": "2024-09-04T17:45:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-91",
        "id": "CVE-2018-19277",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-09-04T17:45:00",
        "references": [
            "https://github.com/PHPOffice/PhpSpreadsheet/issues/771",
            "https://www.bishopfox.com/news/2018/11/phpoffice-versions/",
            "https://github.com/MewesK/TwigSpreadsheetBundle/issues/18",
            "https://www.drupal.org/sa-contrib-2021-043"
        ],
        "summary": "securityScan() in PHPOffice PhpSpreadsheet through 1.5.0 allows a bypass of protection mechanisms for XXE via UTF-7 encoding in a .xlsx file"
    },
    {
        "Modified": "2024-09-04T17:45:00",
        "Published": "2019-11-07T15:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 6.8,
        "cvss-time": "2024-09-04T17:45:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-611",
        "id": "CVE-2019-12331",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-09-04T17:45:00",
        "references": [
            "https://herolab.usd.de/security-advisories/usd-2019-0046/",
            "https://github.com/PHPOffice/PhpSpreadsheet/blob/master/CHANGELOG.md#180---2019-07-01"
        ],
        "summary": "PHPOffice PhpSpreadsheet before 1.8.0 has an XXE issue. The XmlScanner decodes the sheet1.xml from an .xlsx to utf-8 if something else than UTF-8 is declared in the header. This was a security measurement to prevent CVE-2018-19277 but the fix is not sufficient. By double-encoding the the xml payload to utf-7 it is possible to bypass the check for the string \u201a<!ENTITY\u2018 and thus allowing for an xml external entity processing (XXE) attack."
    },
    {
        "Modified": "2024-09-04T17:38:00",
        "Published": "2024-08-01T15:15:00",
        "access": {},
        "assigner": "responsibledisclosure@mattermost.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-39837",
        "impact": {},
        "last-modified": "2024-09-04T17:38:00",
        "references": [
            "https://mattermost.com/security-updates"
        ],
        "summary": "Mattermost versions 9.9.x <= 9.9.0, 9.5.x <= 9.5.6 fail to properly restrict channel creation\u00a0which allows\u00a0a malicious remote to create arbitrary channels,\u00a0when shared channels were enabled."
    },
    {
        "Modified": "2024-09-04T17:35:00",
        "Published": "2024-09-04T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44821",
        "impact": {},
        "last-modified": "2024-09-04T17:35:00",
        "references": [
            "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44821%20ZZCMS2023%20%E9%AA%8C%E8%AF%81%E7%A0%81%E5%A4%8D%E7%94%A8%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E.md"
        ],
        "summary": "ZZCMS 2023 contains a vulnerability in the captcha reuse logic located in /inc/function.php. The checkyzm function does not properly refresh the captcha value after a failed validation attempt. As a result, an attacker can exploit this flaw by repeatedly submitting the same incorrect captcha response, allowing them to capture the correct captcha value through error messages."
    },
    {
        "Modified": "2024-09-04T17:35:00",
        "Published": "2024-09-04T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-44817",
        "impact": {},
        "last-modified": "2024-09-04T17:35:00",
        "references": [
            "https://github.com/gkdgkd123/codeAudit/blob/main/CVE-2024-44817%20ZZCMS2023SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E.md"
        ],
        "summary": "SQL Injection vulnerability in ZZCMS v.2023 and before allows a remote attacker to obtain sensitive information via the id parameter in the adv2.php component."
    },
    {
        "Modified": "2024-09-04T17:35:00",
        "Published": "2024-03-29T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27619",
        "impact": {},
        "last-modified": "2024-09-04T17:35:00",
        "references": [
            "https://www.dlink.com/en/security-bulletin/",
            "http://dir-3040us.com",
            "https://github.com/ioprojecton/dir-3040_dos"
        ],
        "summary": "Dlink Dir-3040us A1 1.20b03a hotfix is vulnerable to Buffer Overflow. Any user having read/write access to ftp server can write directly to ram causing buffer overflow if file or files uploaded are greater than available ram. Ftp server allows change of directory to root which is one level up than root of usb flash directory. During upload ram is getting filled and causing system resource exhaustion (no free memory) which causes system to crash and reboot."
    },
    {
        "Modified": "2024-09-04T17:35:00",
        "Published": "2024-03-27T22:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-47438",
        "impact": {},
        "last-modified": "2024-09-04T17:35:00",
        "references": [
            "https://github.com/reportico-web/reportico/issues/52"
        ],
        "summary": "SQL Injection vulnerability in Reportico Till 8.1.0 allows attackers to obtain sensitive information or other system information via the project parameter."
    },
    {
        "Modified": "2024-09-04T17:35:00",
        "Published": "2024-03-26T12:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28093",
        "impact": {},
        "last-modified": "2024-09-04T17:35:00",
        "references": [
            "https://github.com/actuator/cve/blob/main/AdTran/CWE-287",
            "https://github.com/actuator/cve/blob/main/AdTran/CVE-2024-28093",
            "https://supportcommunity.adtran.com/t5/NetVanta-Product-Notices/2019-Q2-NetVanta-3120-3130-EOL/ta-p/35715"
        ],
        "summary": "**UNSUPPORTED WHEN ASSIGNED** The TELNET service of AdTran NetVanta 3120 18.01.01.00.E devices is enabled by default, and has default credentials for a root-level account."
    },
    {
        "Modified": "2024-09-04T17:34:00",
        "Published": "2024-09-02T05:15:00",
        "access": {},
        "assigner": "ART@zuso.ai",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-7871",
        "impact": {},
        "last-modified": "2024-09-04T17:34:00",
        "references": [
            "https://zuso.ai/advisory/za-2024-04"
        ],
        "summary": "SQL Injection in online dictionary function of Easytest Online Test Platform ver.24E01 and earlier allow remote authenticated users to execute arbitrary SQL commands via the word parameter."
    },
    {
        "Modified": "2024-09-04T17:34:00",
        "Published": "2024-08-01T15:15:00",
        "access": {},
        "assigner": "responsibledisclosure@mattermost.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-39839",
        "impact": {},
        "last-modified": "2024-09-04T17:34:00",
        "references": [
            "https://mattermost.com/security-updates"
        ],
        "summary": "Mattermost versions 9.9.x <= 9.9.0, 9.5.x <= 9.5.6, 9.7.x <= 9.7.5, 9.8.x <= 9.8.1 fail to disallow\u00a0users to set their own remote username, when shared channels were enabled, which allows a user on a remote to set their remote username prop to an arbitrary string, which would be then synced to the local server as long as the user hadn't been synced before."
    },
    {
        "Modified": "2024-09-04T17:32:00",
        "Published": "2024-08-28T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-45046",
        "impact": {},
        "last-modified": "2024-09-04T17:32:00",
        "references": [
            "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wgmf-q9vr-vww6",
            "https://github.com/PHPOffice/PhpSpreadsheet/pull/3957",
            "https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667"
        ],
        "summary": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. In affected versions `\\PhpOffice\\PhpSpreadsheet\\Writer\\Html` doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page. As a result an attacker may used a crafted spreadsheet to fully takeover a session of a user viewing spreadsheet files as HTML. This issue has been addressed in release version 2.1.0. All users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-09-04T17:27:00",
        "Published": "2024-08-28T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-611",
        "id": "CVE-2024-45048",
        "impact": {},
        "last-modified": "2024-09-04T17:27:00",
        "references": [
            "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7",
            "https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda"
        ],
        "summary": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. Affected versions are subject to a bypassing of a filter which allows for an XXE-attack. This in turn allows attacker to obtain contents of local files, even if error reporting is muted. This vulnerability has been addressed in release version 2.2.1. All users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-09-04T17:25:00",
        "Published": "2024-08-01T15:15:00",
        "access": {},
        "assigner": "responsibledisclosure@mattermost.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-41144",
        "impact": {},
        "last-modified": "2024-09-04T17:25:00",
        "references": [
            "https://mattermost.com/security-updates"
        ],
        "summary": "Mattermost versions 9.9.x <= 9.9.0, 9.5.x <= 9.5.6, 9.7.x <= 9.7.5, 9.8.x <= 9.8.1 fail to properly validate\u00a0synced posts, when shared channels are enabled,\u00a0\u00a0which allows a malicious remote to create/update/delete arbitrary posts in arbitrary channels"
    },
    {
        "Modified": "2024-09-04T17:21:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "security.cna@qualcomm.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-33038",
        "impact": {},
        "last-modified": "2024-09-04T17:21:00",
        "references": [
            "https://docs.qualcomm.com/product/publicresources/securitybulletin/september-2024-bulletin.html"
        ],
        "summary": "Memory corruption while passing untrusted/corrupted pointers from DSP to EVA."
    },
    {
        "Modified": "2024-09-04T17:20:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "security.cna@qualcomm.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-33045",
        "impact": {},
        "last-modified": "2024-09-04T17:20:00",
        "references": [
            "https://docs.qualcomm.com/product/publicresources/securitybulletin/september-2024-bulletin.html"
        ],
        "summary": "Memory corruption when BTFM client sends new messages over Slimbus to ADSP."
    },
    {
        "Modified": "2024-09-04T17:20:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "security.cna@qualcomm.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-33048",
        "impact": {},
        "last-modified": "2024-09-04T17:20:00",
        "references": [
            "https://docs.qualcomm.com/product/publicresources/securitybulletin/september-2024-bulletin.html"
        ],
        "summary": "Transient DOS while parsing the received TID-to-link mapping element of beacon/probe response frame."
    },
    {
        "Modified": "2024-09-04T17:18:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "security.cna@qualcomm.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-33051",
        "impact": {},
        "last-modified": "2024-09-04T17:18:00",
        "references": [
            "https://docs.qualcomm.com/product/publicresources/securitybulletin/september-2024-bulletin.html"
        ],
        "summary": "Transient DOS while processing TIM IE from beacon frame as there is no check for IE length."
    },
    {
        "Modified": "2024-09-04T17:18:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "security.cna@qualcomm.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-33052",
        "impact": {},
        "last-modified": "2024-09-04T17:18:00",
        "references": [
            "https://docs.qualcomm.com/product/publicresources/securitybulletin/september-2024-bulletin.html"
        ],
        "summary": "Memory corruption when user provides data for FM HCI command control operations."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-20439",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-cslu-7gHMzWmw"
        ],
        "summary": "A vulnerability in Cisco Smart Licensing Utility could allow an unauthenticated, remote attacker to log in to an affected system by using a static administrative credential.\r\n\r\nThis vulnerability is due to an undocumented static user credential for an administrative account. An attacker could exploit this vulnerability by using the static credentials to log in to the affected system. A successful exploit could allow the attacker to log in to the affected system with administrative privileges over the API of the Cisco Smart Licensing Utility application."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-20469",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-ise-injection-6kn9tSxm"
        ],
        "summary": "A vulnerability in specific CLI commands in Cisco Identity Services Engine (ISE) could allow an authenticated, local attacker to perform command injection attacks on the underlying operating system and elevate privileges to root. To exploit this vulnerability, the attacker must have valid Administrator privileges on an affected device.\r\n\r\nThis vulnerability is due to insufficient validation of user-supplied input. An attacker could exploit this vulnerability by submitting a crafted CLI command. A successful exploit could allow the attacker to elevate privileges to root."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-20497",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-expressway-auth-kdFrcZ2j"
        ],
        "summary": "A vulnerability in Cisco Expressway Edge (Expressway-E) could allow an authenticated, remote attacker to masquerade as another user on an affected system.\r\n\r\nThis vulnerability is due to inadequate authorization checks for Mobile and Remote Access (MRA) users. An attacker could exploit this vulnerability by running a series of crafted commands. A successful exploit could allow the attacker to intercept calls that are destined for a particular phone number or to make phone calls and have that phone number appear on the caller ID. To successfully exploit this vulnerability, the attacker must be an MRA user on an affected system."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-20503",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-duo-epic-info-sdLv6h8y"
        ],
        "summary": "A vulnerability in Cisco Duo Epic for Hyperdrive could allow an authenticated, local attacker to view sensitive information in cleartext on an affected system.\r\n\r\nThis vulnerability is due to improper storage of an unencrypted registry key. A low-privileged attacker could exploit this vulnerability by viewing or querying the registry key on the affected system. A successful exploit could allow the attacker to view sensitive information in cleartext."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8414",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://vuldb.com/?id.276493",
            "https://vuldb.com/?ctiid.276493",
            "https://vuldb.com/?submit.402344",
            "https://drive.google.com/file/d/1LMkTt5gbVXnRB9m9o2MdgB1S0fsSAvGL/view",
            "https://www.sourcecodester.com/"
        ],
        "summary": "A vulnerability has been found in SourceCodester Insurance Management System 1.0 and classified as problematic. Affected by this vulnerability is an unknown functionality. The manipulation leads to cross-site request forgery. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-8415",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://vuldb.com/?id.276494",
            "https://vuldb.com/?ctiid.276494",
            "https://vuldb.com/?submit.402345",
            "https://github.com/Niu-zida/cve/blob/main/sql.md",
            "https://www.sourcecodester.com/"
        ],
        "summary": "A vulnerability was found in SourceCodester Food Ordering Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file /routers/add-ticket.php. The manipulation of the argument id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T17:15:00",
        "access": {},
        "assigner": "psirt@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-20440",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-cslu-7gHMzWmw"
        ],
        "summary": "A vulnerability in Cisco Smart Licensing Utility could allow an unauthenticated, remote attacker to access sensitive information.\r\n\r\nThis vulnerability is due to excessive verbosity in a debug log file. An attacker could exploit this vulnerability by sending a crafted HTTP request to an affected device. A successful exploit could allow the attacker to obtain log files that contain sensitive data, including credentials that can be used to access the API."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-287",
        "id": "CVE-2024-7923",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-7923",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2305718",
            "https://access.redhat.com/errata/RHSA-2024:6335",
            "https://access.redhat.com/errata/RHSA-2024:6336",
            "https://access.redhat.com/errata/RHSA-2024:6337"
        ],
        "summary": "An authentication bypass vulnerability has been identified in Pulpcore when deployed with Gunicorn versions prior to 22.0, due to the puppet-pulpcore configuration. This issue arises from Apache's mod_proxy not properly unsetting headers because of restrictions on underscores in HTTP headers, allowing authentication through a malformed header. This flaw impacts all active Satellite deployments (6.13, 6.14 and 6.15) which are using Pulpcore version 3.0+ and could potentially enable unauthorized users to gain administrative access."
    },
    {
        "Modified": "2024-09-04T17:15:00",
        "Published": "2024-09-04T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-287",
        "id": "CVE-2024-7012",
        "impact": {},
        "last-modified": "2024-09-04T17:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-7012",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2299429",
            "https://access.redhat.com/errata/RHSA-2024:6335",
            "https://access.redhat.com/errata/RHSA-2024:6336",
            "https://access.redhat.com/errata/RHSA-2024:6337"
        ],
        "summary": "An authentication bypass vulnerability has been identified in Foreman when deployed with External Authentication, due to the puppet-foreman configuration. This issue arises from Apache's mod_proxy not properly unsetting headers because of restrictions on underscores in HTTP headers, allowing authentication through a malformed header. This flaw impacts all active Satellite deployments (6.13, 6.14 and 6.15) and could potentially enable unauthorized users to gain administrative access."
    }
]