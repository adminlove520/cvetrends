[
    {
        "Modified": "2024-11-29T23:15:00",
        "Published": "2024-11-29T23:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-53623",
        "impact": {},
        "last-modified": "2024-11-29T23:15:00",
        "references": [
            "https://github.com/Crane-c/CVE_Request/blob/main/TP-Link/C7v5/TPLink_ARCHERC7v5_unauthorized_access_vulnerability_first.md"
        ],
        "summary": "Incorrect access control in the component l_0_0.xml of TP-Link ARCHER-C7 v5 allows attackers to access sensitive information."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-15T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-50986",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://github.com/clementine-player/Clementine",
            "https://github.com/riftsandroses/CVE-2024-50986/",
            "https://www.clementine-player.org/"
        ],
        "summary": "An issue in Clementine v.1.3.1 allows a local attacker to execute arbitrary code via a crafted DLL file."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-29T22:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-54159",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://cwe.mitre.org/data/definitions/61.html",
            "https://security.opensuse.org/2024/11/29/stalld-fixed-tmp-file.html",
            "https://www.openwall.com/lists/oss-security/2024/11/29/3"
        ],
        "summary": "stalld through 1.19.7 allows local users to cause a denial of service (file overwrite) via a /tmp/rtthrottle symlink attack."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T23:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9353",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In ihevcd_parse_slice_data of ihevcd_parse_slice.c there is a possible heap buffer out of bound read due to a missing bounds check. This could lead to remote denial of service with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-28T01:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9377",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In BnAudioPolicyService::onTransact of IAudioPolicyService.cpp, there is a\u00a0possible information disclosure due to uninitialized data. This could lead\u00a0to local information disclosure with no additional execution privileges\u00a0needed. User interaction is not needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T22:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9349",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In mv_err_cost of mcomp.c there is a possible out of bounds read due to missing bounds check. This could lead to denial of service with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T23:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9352",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In ihevcd_allocate_dynamic_bufs of ihevcd_api.c there is a possible resource exhaustion due to integer overflow. This could lead to remote denial of service with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T22:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2017-13320",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-05-01"
        ],
        "summary": "In impeg2d_bit_stream_flush() of libmpeg2dec there is a possible OOB read due to a missing bounds check. This could lead to Remote DoS with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T23:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9351",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In ih264e_fmt_conv_420p_to_420sp of ih264e_fmt_conv.c there is a possible out of bound read due to missing bounds check. This could lead to remote denial of service with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-20T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-52769",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://co-a1natas.feishu.cn/docx/Zsd9dnGUvoBW6tx0G5fcVx6vnBb",
            "https://github.com/DedeBIZ/DedeV6/"
        ],
        "summary": "An arbitrary file upload vulnerability in the component /admin/friendlink_edit of DedeBIZ v6.3.0 allows attackers to execute arbitrary code via uploading a crafted file."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T20:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2017-13316",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/security/bulletin/pixel/2018-05-01"
        ],
        "summary": "In checkPermissions of RecognitionService.java, there is a possible\u00a0permissions bypass due to a missing permission check. This could lead to\u00a0local escalation of privilege with no additional execution privileges\u00a0needed. User interaction is not needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T22:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2017-13323",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-05-01"
        ],
        "summary": "In String16 of String16.cpp, there is a possible out of bounds write due to\u00a0an integer overflow. This could lead to local escalation of privilege in an\u00a0unprivileged process with no additional execution privileges needed. User\u00a0interaction is not needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T23:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9354",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In VideoFrameScheduler.cpp of VideoFrameScheduler::PLL::fit, there is a\u00a0possible remote denial of service due to divide by 0. This could lead to\u00a0remote denial of service with no additional execution privileges needed.\u00a0User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T22:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2017-13321",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-05-01"
        ],
        "summary": "In SensorService::isDataInjectionEnabled of\u00a0frameworks/native/services/sensorservice/SensorService.cpp, there is a\u00a0possible out of bounds read due to a missing bounds check. This could lead\u00a0to local information disclosure with no additional execution privileges\u00a0needed. User interaction is not needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T22:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9350",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In ih264d_assign_pic_num of ih264d_utils.c there is a possible out of bound read due to missing bounds check. This could lead to a denial of service with no additional execution privileges needed. User interaction is needed for exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-28T00:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2018-9374",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-06-01"
        ],
        "summary": "In installPackageLI of PackageManagerService.java, there is a possible\u00a0permissions bypass. This could lead to local escalation of privilege with\u00a0User execution privileges needed. User interaction is not needed for\u00a0exploitation."
    },
    {
        "Modified": "2024-11-29T22:15:00",
        "Published": "2024-11-27T20:15:00",
        "access": {},
        "assigner": "security@android.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2017-13319",
        "impact": {},
        "last-modified": "2024-11-29T22:15:00",
        "references": [
            "https://source.android.com/docs/security/bulletin/pixel/2018-05-01"
        ],
        "summary": "In pvmp3_get_main_data_size of pvmp3_get_main_data_size.cpp, there is a\u00a0possible buffer overread due to a missing bounds check. This could lead to\u00a0remote information disclosure of global static variables with no additional\u00a0execution privileges needed. User interaction is not needed for\u00a0exploitation."
    },
    {
        "Modified": "2024-11-29T21:15:00",
        "Published": "2024-11-29T21:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-94",
        "id": "CVE-2024-11995",
        "impact": {},
        "last-modified": "2024-11-29T21:15:00",
        "references": [
            "https://code-projects.org/",
            "https://github.com/5p4rk/cve/blob/main/xss.md",
            "https://vuldb.com/?ctiid.286411",
            "https://vuldb.com/?id.286411",
            "https://vuldb.com/?submit.453639"
        ],
        "summary": "A vulnerability has been found in code-projects Farmacia 1.0 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file /pagamento.php. The manipulation of the argument total leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."
    },
    {
        "Modified": "2024-11-29T21:15:00",
        "Published": "2024-11-27T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31976",
        "impact": {},
        "last-modified": "2024-11-29T21:15:00",
        "references": [
            "https://github.com/actuator/cve/blob/main/Engenius/CVE-2024-31976",
            "https://github.com/actuator/cve/tree/main/EnGenius/EWS356-FIT"
        ],
        "summary": "EnGenius EWS356-FIR 1.1.30 and earlier devices allow a remote attacker to execute arbitrary OS commands via the Controller connectivity parameter."
    },
    {
        "Modified": "2024-11-29T21:15:00",
        "Published": "2024-11-28T03:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38658",
        "impact": {},
        "last-modified": "2024-11-29T21:15:00",
        "references": [
            "https://jvn.jp/en/vu/JVNVU97531313/",
            "https://monitouch.fujielectric.com/site/download-e/03tellus_inf/index.php"
        ],
        "summary": "There is an Out-of-bounds read vulnerability in V-Server (v4.0.19.0 and earlier) and V-Server Lite (v4.0.19.0 and earlier). If a user opens a specially crafted file, information may be disclosed and/or arbitrary code may be executed."
    },
    {
        "Modified": "2024-11-29T21:15:00",
        "Published": "2024-11-28T03:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38389",
        "impact": {},
        "last-modified": "2024-11-29T21:15:00",
        "references": [
            "https://jvn.jp/en/vu/JVNVU97531313/",
            "https://monitouch.fujielectric.com/site/download-e/03tellus_inf/index.php"
        ],
        "summary": "There is an Out-of-bounds read vulnerability in TELLUS (v4.0.19.0 and earlier) and TELLUS Lite (v4.0.19.0 and earlier). If a user opens a specially crafted file, information may be disclosed and/or arbitrary code may be executed."
    },
    {
        "Modified": "2024-11-29T21:15:00",
        "Published": "2024-11-28T03:15:00",
        "access": {},
        "assigner": "vultures@jpcert.or.jp",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38309",
        "impact": {},
        "last-modified": "2024-11-29T21:15:00",
        "references": [
            "https://jvn.jp/en/vu/JVNVU97531313/",
            "https://monitouch.fujielectric.com/site/download-e/03tellus_inf/index.php"
        ],
        "summary": "There are multiple stack-based buffer overflow vulnerabilities in V-SFT (v6.2.2.0 and earlier), TELLUS (v4.0.19.0 and earlier), and TELLUS Lite (v4.0.19.0 and earlier).\r\nIf a user opens a specially crafted file, information may be disclosed and/or arbitrary code may be executed."
    },
    {
        "Modified": "2024-11-29T21:00:00",
        "Published": "2024-11-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-52762",
        "impact": {},
        "last-modified": "2024-11-29T21:00:00",
        "references": [
            "https://github.com/ganglia/ganglia-web/issues/382"
        ],
        "summary": "A cross-site scripting (XSS) vulnerability in the component /master/header.php of Ganglia-web v3.73 to v3.76 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the \"tz\" parameter."
    },
    {
        "Modified": "2024-11-29T21:00:00",
        "Published": "2024-11-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-52763",
        "impact": {},
        "last-modified": "2024-11-29T21:00:00",
        "references": [
            "https://github.com/ganglia/ganglia-web/issues/382"
        ],
        "summary": "A cross-site scripting (XSS) vulnerability in the component /graph_all_periods.php of Ganglia-web v3.73 to v3.75 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the \"g\" parameter."
    },
    {
        "Modified": "2024-11-29T20:59:00",
        "Published": "2024-11-20T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8726",
        "impact": {},
        "last-modified": "2024-11-29T20:59:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/a1a1c5e7-75a4-4ca5-9707-4076b92e0c33?source=cve",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3189361%40mailchimp-forms-by-mailmunch&new=3189361%40mailchimp-forms-by-mailmunch&sfp_email=&sfph_mail="
        ],
        "summary": "The MailChimp Forms by MailMunch plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 3.2.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-11-29T20:58:00",
        "Published": "2024-11-20T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-10900",
        "impact": {},
        "last-modified": "2024-11-29T20:58:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/a0e5fcfa-ebc9-45f6-9cbc-c9e3540baa6f?source=cve",
            "https://plugins.trac.wordpress.org/browser/profilegrid-user-profiles-groups-and-communities/trunk/admin/class-profile-magic-admin.php#L1902",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3190069%40profilegrid-user-profiles-groups-and-communities&new=3190069%40profilegrid-user-profiles-groups-and-communities&sfp_email=&sfph_mail="
        ],
        "summary": "The ProfileGrid \u2013 User Profiles, Groups and Communities plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the pm_remove_file_attachment() function in all versions up to, and including, 5.9.3.6. This makes it possible for authenticated attackers, with subscriber-level access and above, to delete arbitrary user meta which can do things like deny an administrator's access to their site. ."
    },
    {
        "Modified": "2024-11-29T20:57:00",
        "Published": "2024-11-19T13:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-9777",
        "impact": {},
        "last-modified": "2024-11-29T20:57:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/ce6c2f36-9eed-482f-9201-8d26e8c5c369?source=cve",
            "https://wordpress.org/themes/ashe/",
            "https://themes.trac.wordpress.org/browser/ashe/2.242/functions.php#L101",
            "https://themes.trac.wordpress.org/browser/ashe/2.242/functions.php#L112",
            "https://themes.trac.wordpress.org/changeset/248853/"
        ],
        "summary": "The Ashe theme for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.243. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-11-29T20:55:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53913",
        "impact": {},
        "last-modified": "2024-11-29T20:55:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24343. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:55:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53912",
        "impact": {},
        "last-modified": "2024-11-29T20:55:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24341. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:55:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53914",
        "impact": {},
        "last-modified": "2024-11-29T20:55:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24344. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:55:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53915",
        "impact": {},
        "last-modified": "2024-11-29T20:55:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24405. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:55:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53911",
        "impact": {},
        "last-modified": "2024-11-29T20:55:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24339. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:54:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53909",
        "impact": {},
        "last-modified": "2024-11-29T20:54:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24334. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:54:00",
        "Published": "2024-11-24T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-53910",
        "impact": {},
        "last-modified": "2024-11-29T20:54:00",
        "references": [
            "https://www.veritas.com/content/support/en_US/security/VTS24-014"
        ],
        "summary": "An issue was discovered in the server in Veritas Enterprise Vault before 15.2, ZDI-CAN-24336. It allows remote attackers to execute arbitrary code because untrusted data, received on a .NET Remoting TCP port, is deserialized."
    },
    {
        "Modified": "2024-11-29T20:52:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-21419",
        "impact": {},
        "last-modified": "2024-11-29T20:52:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21419",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21419"
        ],
        "summary": "Microsoft Dynamics 365 (on-premises) Cross-site Scripting Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:52:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21400",
        "impact": {},
        "last-modified": "2024-11-29T20:52:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21400",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21400"
        ],
        "summary": "Microsoft Azure Kubernetes Service Confidential Container Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:52:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21334",
        "impact": {},
        "last-modified": "2024-11-29T20:52:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21334",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21334"
        ],
        "summary": "Open Management Infrastructure (OMI) Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:52:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21392",
        "impact": {},
        "last-modified": "2024-11-29T20:52:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21392",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21392"
        ],
        "summary": ".NET and Visual Studio Denial of Service Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:50:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21426",
        "impact": {},
        "last-modified": "2024-11-29T20:50:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21426",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21426"
        ],
        "summary": "Microsoft SharePoint Server Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:49:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21427",
        "impact": {},
        "last-modified": "2024-11-29T20:49:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21427",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21427"
        ],
        "summary": "Windows Kerberos Security Feature Bypass Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:47:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21432",
        "impact": {},
        "last-modified": "2024-11-29T20:47:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21432",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21432"
        ],
        "summary": "Windows Update Stack Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:47:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21433",
        "impact": {},
        "last-modified": "2024-11-29T20:47:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21433",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21433"
        ],
        "summary": "Windows Print Spooler Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:44:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21431",
        "impact": {},
        "last-modified": "2024-11-29T20:44:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21431",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21431"
        ],
        "summary": "Hypervisor-Protected Code Integrity (HVCI) Security Feature Bypass Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:44:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21430",
        "impact": {},
        "last-modified": "2024-11-29T20:44:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21430",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21430"
        ],
        "summary": "Windows USB Attached SCSI (UAS) Protocol Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:43:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21429",
        "impact": {},
        "last-modified": "2024-11-29T20:43:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21429",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21429"
        ],
        "summary": "Windows USB Hub Driver Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:42:00",
        "Published": "2024-02-23T22:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-21423",
        "impact": {},
        "last-modified": "2024-11-29T20:42:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21423",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21423"
        ],
        "summary": "Microsoft Edge (Chromium-based) Information Disclosure Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:41:00",
        "Published": "2024-02-23T23:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-26188",
        "impact": {},
        "last-modified": "2024-11-29T20:41:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26188",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26188"
        ],
        "summary": "Microsoft Edge (Chromium-based) Spoofing Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:41:00",
        "Published": "2024-02-23T23:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-26192",
        "impact": {},
        "last-modified": "2024-11-29T20:41:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26192",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26192"
        ],
        "summary": "Microsoft Edge (Chromium-based) Information Disclosure Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:40:00",
        "Published": "2024-03-12T17:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-20671",
        "impact": {},
        "last-modified": "2024-11-29T20:40:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-20671",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-20671"
        ],
        "summary": "Microsoft Defender Security Feature Bypass Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:40:00",
        "Published": "2024-03-07T21:15:00",
        "access": {},
        "assigner": "secure@microsoft.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-26167",
        "impact": {},
        "last-modified": "2024-11-29T20:40:00",
        "references": [
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26167",
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26167"
        ],
        "summary": "Microsoft Edge for Android Spoofing Vulnerability"
    },
    {
        "Modified": "2024-11-29T20:38:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-50182",
        "impact": {},
        "last-modified": "2024-11-29T20:38:00",
        "references": [
            "https://git.kernel.org/stable/c/d0ae6ffa1aeb297aef89f49cfb894a83c329ebad",
            "https://git.kernel.org/stable/c/5ea0b7af38754d2b45ead9257bca47e84662e926",
            "https://git.kernel.org/stable/c/7caf966390e6e4ebf42775df54e7ee1f280ce677",
            "https://git.kernel.org/stable/c/757786abe4547eb3d9d0e8350a63bdb0f9824af2",
            "https://git.kernel.org/stable/c/532b53cebe58f34ce1c0f34d866f5c0e335c53c6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsecretmem: disable memfd_secret() if arch cannot set direct map\n\nReturn -ENOSYS from memfd_secret() syscall if !can_set_direct_map().  This\nis the case for example on some arm64 configurations, where marking 4k\nPTEs in the direct map not present can only be done if the direct map is\nset up at 4k granularity in the first place (as ARM's break-before-make\nsemantics do not easily allow breaking apart large/gigantic pages).\n\nMore precisely, on arm64 systems with !can_set_direct_map(),\nset_direct_map_invalid_noflush() is a no-op, however it returns success\n(0) instead of an error.  This means that memfd_secret will seemingly\n\"work\" (e.g.  syscall succeeds, you can mmap the fd and fault in pages),\nbut it does not actually achieve its goal of removing its memory from the\ndirect map.\n\nNote that with this patch, memfd_secret() will start erroring on systems\nwhere can_set_direct_map() returns false (arm64 with\nCONFIG_RODATA_FULL_DEFAULT_ENABLED=n, CONFIG_DEBUG_PAGEALLOC=n and\nCONFIG_KFENCE=n), but that still seems better than the current silent\nfailure.  Since CONFIG_RODATA_FULL_DEFAULT_ENABLED defaults to 'y', most\narm64 systems actually have a working memfd_secret() and aren't be\naffected.\n\nFrom going through the iterations of the original memfd_secret patch\nseries, it seems that disabling the syscall in these scenarios was the\nintended behavior [1] (preferred over having\nset_direct_map_invalid_noflush return an error as that would result in\nSIGBUSes at page-fault time), however the check for it got dropped between\nv16 [2] and v17 [3], when secretmem moved away from CMA allocations.\n\n[1]: https://lore.kernel.org/lkml/20201124164930.GK8537@kernel.org/\n[2]: https://lore.kernel.org/lkml/20210121122723.3446-11-rppt@kernel.org/#t\n[3]: https://lore.kernel.org/lkml/20201125092208.12544-10-rppt@kernel.org/"
    },
    {
        "Modified": "2024-11-29T20:36:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-50181",
        "impact": {},
        "last-modified": "2024-11-29T20:36:00",
        "references": [
            "https://git.kernel.org/stable/c/b677b94a9193ec7b6607bd1255172ae59174a382",
            "https://git.kernel.org/stable/c/d18dc8e14b9c794f58dae1577ccb2ab84a4a1b11",
            "https://git.kernel.org/stable/c/11ceb17e6f07cc30410f3a6276cddda248a9b863",
            "https://git.kernel.org/stable/c/339273a9ddfe7632b717c2e13e81cbd5d383e1ff",
            "https://git.kernel.org/stable/c/94f6cdc837e38371324cee97dfd2ef1a99a82c98",
            "https://git.kernel.org/stable/c/a54c441b46a0745683c2eef5a359d22856d27323"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: imx: Remove CLK_SET_PARENT_GATE for DRAM mux for i.MX7D\n\nFor i.MX7D DRAM related mux clock, the clock source change should ONLY\nbe done done in low level asm code without accessing DRAM, and then\ncalling clk API to sync the HW clock status with clk tree, it should never\ntouch real clock source switch via clk API, so CLK_SET_PARENT_GATE flag\nshould NOT be added, otherwise, DRAM's clock parent will be disabled when\nDRAM is active, and system will hang."
    },
    {
        "Modified": "2024-11-29T20:35:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-50180",
        "impact": {},
        "last-modified": "2024-11-29T20:35:00",
        "references": [
            "https://git.kernel.org/stable/c/252f147b1826cbb30ae0304cf86b66d3bb12b743",
            "https://git.kernel.org/stable/c/41cf6f26abe4f491b694c54bd1aa2530369b7510",
            "https://git.kernel.org/stable/c/889304120ecb2ca30674d89cd4ef15990b6a571c",
            "https://git.kernel.org/stable/c/688872c4ea4a528cd6a057d545c83506b533ee1f",
            "https://git.kernel.org/stable/c/11c0d49093b82f6c547fd419c41a982d26bdf5ef",
            "https://git.kernel.org/stable/c/9cf14f5a2746c19455ce9cb44341b5527b5e19c3",
            "https://git.kernel.org/stable/c/433c84c8495008922534c5cafdae6ff970fb3241",
            "https://git.kernel.org/stable/c/57c4f4db0a194416da237fd09dad9527e00cb587"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: sisfb: Fix strbuf array overflow\n\nThe values of the variables xres and yres are placed in strbuf.\nThese variables are obtained from strbuf1.\nThe strbuf1 array contains digit characters\nand a space if the array contains non-digit characters.\nThen, when executing sprintf(strbuf, \"%ux%ux8\", xres, yres);\nmore than 16 bytes will be written to strbuf.\nIt is suggested to increase the size of the strbuf array to 24.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-11-29T20:34:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-50179",
        "impact": {},
        "last-modified": "2024-11-29T20:34:00",
        "references": [
            "https://git.kernel.org/stable/c/f55e003d261baa7c57d51ae5c8ec1f5c26a35c89",
            "https://git.kernel.org/stable/c/f863bfd0a2c6c99011c62ea71ac04f8e78707da9",
            "https://git.kernel.org/stable/c/ea98284fc4fb05f276737d2043b02b62be5a8dfb",
            "https://git.kernel.org/stable/c/11ab19d48ab877430eed0c7d83810970bbcbc4f6",
            "https://git.kernel.org/stable/c/9d4f619153bab7fa59736462967821d6521a38cb",
            "https://git.kernel.org/stable/c/74b302ebad5b43ac17460fa58092d892a3cba6eb",
            "https://git.kernel.org/stable/c/c08dfb1b49492c09cf13838c71897493ea3b424e",
            "https://git.kernel.org/stable/c/c26c5ec832dd9e9dcd0a0a892a485c99889b68f0",
            "https://git.kernel.org/stable/c/126b567a2ef65fc38a71d832bf1216c56816f231"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: remove the incorrect Fw reference check when dirtying pages\n\nWhen doing the direct-io reads it will also try to mark pages dirty,\nbut for the read path it won't hold the Fw caps and there is case\nwill it get the Fw reference."
    },
    {
        "Modified": "2024-11-29T20:33:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2024-50197",
        "impact": {},
        "last-modified": "2024-11-29T20:33:00",
        "references": [
            "https://git.kernel.org/stable/c/be3f7b9f995a6c2ee02767a0319929a2a98adf69",
            "https://git.kernel.org/stable/c/16a6d2e685e8f9a2f51dd5a363d3f97fcad35e22"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: intel: platform: fix error path in device_for_each_child_node()\n\nThe device_for_each_child_node() loop requires calls to\nfwnode_handle_put() upon early returns to decrement the refcount of\nthe child node and avoid leaking memory if that error path is triggered.\n\nThere is one early returns within that loop in\nintel_platform_pinctrl_prepare_community(), but fwnode_handle_put() is\nmissing.\n\nInstead of adding the missing call, the scoped version of the loop can\nbe used to simplify the code and avoid mistakes in the future if new\nearly returns are added, as the child node is only used for parsing, and\nit is never assigned."
    },
    {
        "Modified": "2024-11-29T20:31:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-50198",
        "impact": {},
        "last-modified": "2024-11-29T20:31:00",
        "references": [
            "https://git.kernel.org/stable/c/bf3ab8e1c28f10df0823d4ff312f83c952b06a15",
            "https://git.kernel.org/stable/c/50039aec43a82ad2495f2d0fb0c289c8717b4bb2",
            "https://git.kernel.org/stable/c/bcb90518ccd9e10bf6ab29e31994aab93e4a4361",
            "https://git.kernel.org/stable/c/2cbb41abae65626736b8b52cf3b9339612c5a86a",
            "https://git.kernel.org/stable/c/905166531831beb067fffe2bdfc98031ffe89087",
            "https://git.kernel.org/stable/c/c7c44e57750c31de43906d97813273fdffcf7d02"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: light: veml6030: fix IIO device retrieval from embedded device\n\nThe dev pointer that is received as an argument in the\nin_illuminance_period_available_show function references the device\nembedded in the IIO device, not in the i2c client.\n\ndev_to_iio_dev() must be used to accessthe right data. The current\nimplementation leads to a segmentation fault on every attempt to read\nthe attribute because indio_dev gets a NULL assignment.\n\nThis bug has been present since the first appearance of the driver,\napparently since the last version (V6) before getting applied. A\nconstant attribute was used until then, and the last modifications might\nhave not been tested again."
    },
    {
        "Modified": "2024-11-29T20:28:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-754",
        "id": "CVE-2024-50196",
        "impact": {},
        "last-modified": "2024-11-29T20:28:00",
        "references": [
            "https://git.kernel.org/stable/c/655f5d4662b958122b260be05aa6dfdf8768efe6",
            "https://git.kernel.org/stable/c/4a81800ef05bea5a9896f199677f7b7f5020776a",
            "https://git.kernel.org/stable/c/20728e86289ab463b99b7ab4425515bd26aba417",
            "https://git.kernel.org/stable/c/dcbe9954634807ec54e22bde278b5b269f921381",
            "https://git.kernel.org/stable/c/93b8ddc54507a227087c60a0013ed833b6ae7d3c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: ocelot: fix system hang on level based interrupts\n\nThe current implementation only calls chained_irq_enter() and\nchained_irq_exit() if it detects pending interrupts.\n\n```\nfor (i = 0; i < info->stride; i++) {\n\turegmap_read(info->map, id_reg + 4 * i, &reg);\n\tif (!reg)\n\t\tcontinue;\n\n\tchained_irq_enter(parent_chip, desc);\n```\n\nHowever, in case of GPIO pin configured in level mode and the parent\ncontroller configured in edge mode, GPIO interrupt might be lowered by the\nhardware. In the result, if the interrupt is short enough, the parent\ninterrupt is still pending while the GPIO interrupt is cleared;\nchained_irq_enter() never gets called and the system hangs trying to\nservice the parent interrupt.\n\nMoving chained_irq_enter() and chained_irq_exit() outside the for loop\nensures that they are called even when GPIO interrupt is lowered by the\nhardware.\n\nThe similar code with chained_irq_enter() / chained_irq_exit() functions\nwrapping interrupt checking loop may be found in many other drivers:\n```\ngrep -r -A 10 chained_irq_enter drivers/pinctrl\n```"
    },
    {
        "Modified": "2024-11-29T20:26:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-754",
        "id": "CVE-2024-50195",
        "impact": {},
        "last-modified": "2024-11-29T20:26:00",
        "references": [
            "https://git.kernel.org/stable/c/673a1c5a2998acbd429d6286e6cad10f17f4f073",
            "https://git.kernel.org/stable/c/c8789fbe2bbf75845e45302cba6ffa44e1884d01",
            "https://git.kernel.org/stable/c/27abbde44b6e71ee3891de13e1a228aa7ce95bfe",
            "https://git.kernel.org/stable/c/a3f169e398215e71361774d13bf91a0101283ac2",
            "https://git.kernel.org/stable/c/1ff7247101af723731ea42ed565d54fb8f341264",
            "https://git.kernel.org/stable/c/d8794ac20a299b647ba9958f6d657051fc51a540",
            "https://git.kernel.org/stable/c/29f085345cde24566efb751f39e5d367c381c584",
            "https://git.kernel.org/stable/c/e0c966bd3e31911b57ef76cec4c5796ebd88e512"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nposix-clock: Fix missing timespec64 check in pc_clock_settime()\n\nAs Andrew pointed out, it will make sense that the PTP core\nchecked timespec64 struct's tv_sec and tv_nsec range before calling\nptp->info->settime64().\n\nAs the man manual of clock_settime() said, if tp.tv_sec is negative or\ntp.tv_nsec is outside the range [0..999,999,999], it should return EINVAL,\nwhich include dynamic clocks which handles PTP clock, and the condition is\nconsistent with timespec64_valid(). As Thomas suggested, timespec64_valid()\nonly check the timespec is valid, but not ensure that the time is\nin a valid range, so check it ahead using timespec64_valid_strict()\nin pc_clock_settime() and return -EINVAL if not valid.\n\nThere are some drivers that use tp->tv_sec and tp->tv_nsec directly to\nwrite registers without validity checks and assume that the higher layer\nhas checked it, which is dangerous and will benefit from this, such as\nhclge_ptp_settime(), igb_ptp_settime_i210(), _rcar_gen4_ptp_settime(),\nand some drivers can remove the checks of itself."
    },
    {
        "Modified": "2024-11-29T20:20:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8829",
        "impact": {},
        "last-modified": "2024-11-29T20:20:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1252/"
        ],
        "summary": "PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24314."
    },
    {
        "Modified": "2024-11-29T20:20:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8825",
        "impact": {},
        "last-modified": "2024-11-29T20:20:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1248/"
        ],
        "summary": "PDF-XChange Editor PDF File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of PDF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24263."
    },
    {
        "Modified": "2024-11-29T20:20:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8827",
        "impact": {},
        "last-modified": "2024-11-29T20:20:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1250/"
        ],
        "summary": "PDF-XChange Editor PPM File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of PPM files. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24306."
    },
    {
        "Modified": "2024-11-29T20:20:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8828",
        "impact": {},
        "last-modified": "2024-11-29T20:20:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1251/"
        ],
        "summary": "PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24313."
    },
    {
        "Modified": "2024-11-29T20:19:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8831",
        "impact": {},
        "last-modified": "2024-11-29T20:19:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1254/"
        ],
        "summary": "PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. \n\nThe specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24316."
    },
    {
        "Modified": "2024-11-29T20:19:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8830",
        "impact": {},
        "last-modified": "2024-11-29T20:19:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1253/"
        ],
        "summary": "PDF-XChange Editor XPS File Parsing Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a write  past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24315."
    },
    {
        "Modified": "2024-11-29T20:18:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8833",
        "impact": {},
        "last-modified": "2024-11-29T20:18:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1256/"
        ],
        "summary": "PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24318."
    },
    {
        "Modified": "2024-11-29T20:18:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8832",
        "impact": {},
        "last-modified": "2024-11-29T20:18:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1255/"
        ],
        "summary": "PDF-XChange Editor EMF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of EMF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24317."
    },
    {
        "Modified": "2024-11-29T20:18:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8834",
        "impact": {},
        "last-modified": "2024-11-29T20:18:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1257/"
        ],
        "summary": "PDF-XChange Editor TIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of TIF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24319."
    },
    {
        "Modified": "2024-11-29T20:17:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8835",
        "impact": {},
        "last-modified": "2024-11-29T20:17:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1258/"
        ],
        "summary": "PDF-XChange Editor JB2 File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of JB2 files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated  object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24320."
    },
    {
        "Modified": "2024-11-29T20:17:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-8836",
        "impact": {},
        "last-modified": "2024-11-29T20:17:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1259/"
        ],
        "summary": "PDF-XChange Editor TIF File Parsing Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of TIF files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the current process. Was ZDI-CAN-24354."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35371",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/4eb17867f2e375f4824274c5e7b4d384",
            "https://github.com/ant-media/Ant-Media-Server/blob/ams-v2.8.2/src/main/java/io/antmedia/rest/RestServiceBase.java#L356",
            "https://github.com/ant-media/ant-media-server/commit/4d4763bd4fd06e515c19544e5170ca0f34c9ce45"
        ],
        "summary": "Ant-Media-Serverv2.8.2 is affected by Improper Output Neutralization for Logs. The vulnerability stems from insufficient input sanitization in the logging mechanism. Without proper filtering or validation, user-controllable data, such as identifiers or other sensitive information, can be included in log entries without restrictions."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35366",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/1e72f170d58c2547ebd4db4cdf6cfabf",
            "https://github.com/FFmpeg/FFmpeg/blob/n6.1.1/libavformat/sbgdec.c#L389",
            "https://github.com/ffmpeg/ffmpeg/commit/0bed22d597b78999151e3bde0768b7fe763fc2a6"
        ],
        "summary": "FFmpeg n6.1.1 is Integer Overflow. The vulnerability exists in the parse_options function of sbgdec.c within the libavformat module. When parsing certain options, the software does not adequately validate the input. This allows for negative duration values to be accepted without proper bounds checking."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35367",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/9754a44845578358f6a403447c458ca4",
            "https://github.com/FFmpeg/FFmpeg/blob/n6.1.1/libavcodec/ppc/vp8dsp_altivec.c#L53",
            "https://github.com/ffmpeg/ffmpeg/commit/09e6840cf7a3ee07a73c3ae88a020bf27ca1a667"
        ],
        "summary": "FFmpeg n6.1.1 has an Out-of-bounds Read via libavcodec/ppc/vp8dsp_altivec.c, static const vec_s8 h_subpel_filters_outer"
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35368",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/7e6e47220ae2b2d2fb4611f0d8a31ec5",
            "https://github.com/FFmpeg/FFmpeg/blob/n7.0/libavcodec/rkmppdec.c#L466",
            "https://github.com/ffmpeg/ffmpeg/commit/4513300989502090c4fd6560544dce399a8cd53c"
        ],
        "summary": "FFmpeg n7.0 is affected by a Double Free via the rkmpp_retrieve_frame function within libavcodec/rkmppdec.c."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36610",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/24e93f2905850235e42ad7db6e878bd5",
            "https://github.com/symfony/symfony/blob/v7.0.3/src/Symfony/Component/VarDumper/Cloner/Stub.php#L53",
            "https://github.com/symfony/symfony/commit/3ffd495bb3cc4d2e24e35b2d83c5b909cab7e259"
        ],
        "summary": "A deserialization vulnerability exists in the Stub class of the VarDumper module in Symfony v7.0.3. The vulnerability stems from deficiencies in the original implementation when handling properties with null or uninitialized values. An attacker could construct specific serialized data and use this vulnerability to execute unauthorized code."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36612",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://gist.github.com/1047524396/f7ff51d24ebbb29e21dfb70a0c97302b",
            "https://github.com/zulip/zulip/blob/8.3/web/src/click_handlers.js",
            "https://github.com/zulip/zulip/commit/0a90a13becbf0338a8fc1ad37946e51c2c25b0a5"
        ],
        "summary": "Zulip from 8.0 to 8.3 contains a memory leak vulnerability in the handling of popovers."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-53504",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://github.com/siyuan-note/siyuan/issues/13058",
            "https://github.com/siyuan-note/siyuan/issues/13077"
        ],
        "summary": "A SQL injection vulnerability has been identified in Siyuan 3.1.11 via the notebook parameter in /searchHistory."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-53505",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://github.com/siyuan-note/siyuan/issues/13059",
            "https://github.com/siyuan-note/siyuan/issues/13077"
        ],
        "summary": "A SQL injection vulnerability has been identified in Siyuan 3.1.11 via the id parameter at /getAssetContent."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-53506",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://github.com/siyuan-note/siyuan/issues/13060",
            "https://github.com/siyuan-note/siyuan/issues/13077"
        ],
        "summary": "A SQL injection vulnerability has been identified in Siyuan 3.1.11 via the ids array parameter in /batchGetBlockAttrs."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-29T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-53507",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://github.com/siyuan-note/siyuan/issues/13057",
            "https://github.com/siyuan-note/siyuan/issues/13077"
        ],
        "summary": "A SQL injection vulnerability was discovered in Siyuan 3.1.11 in /getHistoryItems."
    },
    {
        "Modified": "2024-11-29T20:15:00",
        "Published": "2024-11-27T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-51228",
        "impact": {},
        "last-modified": "2024-11-29T20:15:00",
        "references": [
            "https://github.com/yckuo-sdc/totolink-boa-api-vulnerabilities",
            "https://totolink.tw/support_view/A3002RU",
            "https://totolink.tw/support_view/N150RT",
            "https://www.totolink.tw/products_view/N300RT",
            "https://www.totolink.tw/products_view/N302RE"
        ],
        "summary": "An issue in TOTOLINK-CX-A3002RU V1.0.4-B20171106.1512 and TOTOLINK-CX-N150RT V2.1.6-B20171121.1002 and TOTOLINK-CX-N300RT V2.1.6-B20170724.1420 and TOTOLINK-CX-N300RT V2.1.8-B20171113.1408 and TOTOLINK-CX-N300RT V2.1.8-B20191010.1107 and TOTOLINK-CX-N302RE V2.0.2-B20170511.1523 allows a remote attacker to execute arbitrary code via the /boafrm/formSysCmd component."
    },
    {
        "Modified": "2024-11-29T20:10:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8837",
        "impact": {},
        "last-modified": "2024-11-29T20:10:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1260/"
        ],
        "summary": "PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24408."
    },
    {
        "Modified": "2024-11-29T20:08:00",
        "Published": "2024-11-22T21:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-8826",
        "impact": {},
        "last-modified": "2024-11-29T20:08:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-24-1249/"
        ],
        "summary": "PDF-XChange Editor XPS File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PDF-XChange Editor. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of XPS files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated object. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24305."
    },
    {
        "Modified": "2024-11-29T19:33:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-50194",
        "impact": {},
        "last-modified": "2024-11-29T19:33:00",
        "references": [
            "https://git.kernel.org/stable/c/cf60d19d40184e43d9a624e55a0da73be09e938d",
            "https://git.kernel.org/stable/c/14841bb7a531b96e2dde37423a3b33e75147c60d",
            "https://git.kernel.org/stable/c/8165bf83b8a64be801d59cd2532b0d1ffed74d00",
            "https://git.kernel.org/stable/c/3d2530c65be04e93720e30f191a7cf1a3aa8b51c",
            "https://git.kernel.org/stable/c/13f8f1e05f1dc36dbba6cba0ae03354c0dafcde7",
            "https://git.kernel.org/stable/c/b6a638cb600e13f94b5464724eaa6ab7f3349ca2",
            "https://git.kernel.org/stable/c/e6ab336213918575124d6db43dc5d3554526242e",
            "https://git.kernel.org/stable/c/cf9ddf9ed94c15564a05bbf6e9f18dffa0c7df80"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: probes: Fix uprobes for big-endian kernels\n\nThe arm64 uprobes code is broken for big-endian kernels as it doesn't\nconvert the in-memory instruction encoding (which is always\nlittle-endian) into the kernel's native endianness before analyzing and\nsimulating instructions. This may result in a few distinct problems:\n\n* The kernel may may erroneously reject probing an instruction which can\n  safely be probed.\n\n* The kernel may erroneously erroneously permit stepping an\n  instruction out-of-line when that instruction cannot be stepped\n  out-of-line safely.\n\n* The kernel may erroneously simulate instruction incorrectly dur to\n  interpretting the byte-swapped encoding.\n\nThe endianness mismatch isn't caught by the compiler or sparse because:\n\n* The arch_uprobe::{insn,ixol} fields are encoded as arrays of u8, so\n  the compiler and sparse have no idea these contain a little-endian\n  32-bit value. The core uprobes code populates these with a memcpy()\n  which similarly does not handle endianness.\n\n* While the uprobe_opcode_t type is an alias for __le32, both\n  arch_uprobe_analyze_insn() and arch_uprobe_skip_sstep() cast from u8[]\n  to the similarly-named probe_opcode_t, which is an alias for u32.\n  Hence there is no endianness conversion warning.\n\nFix this by changing the arch_uprobe::{insn,ixol} fields to __le32 and\nadding the appropriate __le32_to_cpu() conversions prior to consuming\nthe instruction encoding. The core uprobes copies these fields as opaque\nranges of bytes, and so is unaffected by this change.\n\nAt the same time, remove MAX_UINSN_BYTES and consistently use\nAARCH64_INSN_SIZE for clarity.\n\nTested with the following:\n\n| #include <stdio.h>\n| #include <stdbool.h>\n|\n| #define noinline __attribute__((noinline))\n|\n| static noinline void *adrp_self(void)\n| {\n|         void *addr;\n|\n|         asm volatile(\n|         \"       adrp    %x0, adrp_self\\n\"\n|         \"       add     %x0, %x0, :lo12:adrp_self\\n\"\n|         : \"=r\" (addr));\n| }\n|\n|\n| int main(int argc, char *argv)\n| {\n|         void *ptr = adrp_self();\n|         bool equal = (ptr == adrp_self);\n|\n|         printf(\"adrp_self   => %p\\n\"\n|                \"adrp_self() => %p\\n\"\n|                \"%s\\n\",\n|                adrp_self, ptr, equal ? \"EQUAL\" : \"NOT EQUAL\");\n|\n|         return 0;\n| }\n\n.... where the adrp_self() function was compiled to:\n\n| 00000000004007e0 <adrp_self>:\n|   4007e0:       90000000        adrp    x0, 400000 <__ehdr_start>\n|   4007e4:       911f8000        add     x0, x0, #0x7e0\n|   4007e8:       d65f03c0        ret\n\nBefore this patch, the ADRP is not recognized, and is assumed to be\nsteppable, resulting in corruption of the result:\n\n| # ./adrp-self\n| adrp_self   => 0x4007e0\n| adrp_self() => 0x4007e0\n| EQUAL\n| # echo 'p /root/adrp-self:0x007e0' > /sys/kernel/tracing/uprobe_events\n| # echo 1 > /sys/kernel/tracing/events/uprobes/enable\n| # ./adrp-self\n| adrp_self   => 0x4007e0\n| adrp_self() => 0xffffffffff7e0\n| NOT EQUAL\n\nAfter this patch, the ADRP is correctly recognized and simulated:\n\n| # ./adrp-self\n| adrp_self   => 0x4007e0\n| adrp_self() => 0x4007e0\n| EQUAL\n| #\n| # echo 'p /root/adrp-self:0x007e0' > /sys/kernel/tracing/uprobe_events\n| # echo 1 > /sys/kernel/tracing/events/uprobes/enable\n| # ./adrp-self\n| adrp_self   => 0x4007e0\n| adrp_self() => 0x4007e0\n| EQUAL"
    },
    {
        "Modified": "2024-11-29T19:29:00",
        "Published": "2024-11-08T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-50193",
        "impact": {},
        "last-modified": "2024-11-29T19:29:00",
        "references": [
            "https://git.kernel.org/stable/c/6f44a5fc15b5cece0785bc07453db77d99b0a6de",
            "https://git.kernel.org/stable/c/b6400eb0b347821efc57760221f8fb6d63b9548a",
            "https://git.kernel.org/stable/c/43778de19d2ef129636815274644b9c16e78c66b",
            "https://git.kernel.org/stable/c/227358e89703c344008119be7e8ffa3fdb5b92de",
            "https://git.kernel.org/stable/c/64adf22c4bc73ede920baca5defefb70f190cdbc",
            "https://git.kernel.org/stable/c/48a2440d0f20c826b884e04377ccc1e4696c84e9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/entry_32: Clear CPU buffers after register restore in NMI return\n\nCPU buffers are currently cleared after call to exc_nmi, but before\nregister state is restored. This may be okay for MDS mitigation but not for\nRDFS. Because RDFS mitigation requires CPU buffers to be cleared when\nregisters don't have any sensitive data.\n\nMove CLEAR_CPU_BUFFERS after RESTORE_ALL_NMI."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36615",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://gist.github.com/1047524396/c44e5eaafa8f408eea0c9411205990fb",
            "https://github.com/FFmpeg/FFmpeg/blob/n7.0/libavcodec/vp9.c#L1738",
            "https://github.com/ffmpeg/ffmpeg/commit/0ba058579f332b3060d8470a04ddd3fbf305be61"
        ],
        "summary": "FFmpeg n7.0 has a race condition vulnerability in the VP9 decoder. This could lead to a data race if video encoding parameters were being exported, as the side data would be attached in the decoder thread while being read in the output thread."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36611",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://gist.github.com/1047524396/3581425e0911b716cf8ce4fa30e41e6c",
            "https://github.com/symfony/symfony/blob/v7.0.7/src/Symfony/Component/Security/Http/Authenticator/FormLoginAuthenticator.php#L132",
            "https://github.com/symfony/symfony/commit/a804ca15fcad279d7727b91d12a667fd5b925995"
        ],
        "summary": "In Symfony v7.07, a security vulnerability was identified in the FormLoginAuthenticator component, where it failed to adequately handle cases where the username or password field of a login request is empty. This flaw could lead to various security risks, including improper authentication logic handling or denial of service."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-1321",
        "id": "CVE-2024-52810",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/intlify/vue-i18n/commit/9f20909ef8c9232a1072d7818e12ed6d6451024d",
            "https://github.com/intlify/vue-i18n/security/advisories/GHSA-hjwq-mjwj-4x6c"
        ],
        "summary": "@intlify/shared is a shared library for the intlify project. The latest version of @intlify/shared (10.0.4) is vulnerable to Prototype Pollution through the entry function(s) lib.deepCopy. An attacker can supply a payload with Object.prototype setter to introduce or modify properties within the global prototype chain, causing denial of service (DoS) as the minimum consequence. Moreover, the consequences of this vulnerability can escalate to other injection-based attacks, depending on how the library integrates within the application. For instance, if the polluted property propagates to sensitive Node.js APIs (e.g., exec, eval), it could enable an attacker to execute arbitrary commands within the application's context. This issue has been addressed in versions 9.14.2, and 10.0.5. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-611",
        "id": "CVE-2024-52800",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/veraPDF/veraPDF-library/issues/1488",
            "https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x"
        ],
        "summary": "veraPDF is an open source PDF/A validation library. Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability. This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust. This issue has not yet been patched. Users are advised to be cautious of XSLT code until a patch is available."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-312",
        "id": "CVE-2024-53865",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/zhmcclient/python-zhmcclient/commit/ad32781e782d0f604c6da4680fce48e4cc1f4433",
            "https://github.com/zhmcclient/python-zhmcclient/security/advisories/GHSA-p57h-3cmc-xpjq"
        ],
        "summary": "zhmcclient is a pure Python client library for the IBM Z HMC Web Services API. In affected versions the Python package \"zhmcclient\" writes password-like properties in clear text into its HMC and API logs in the following cases: 1. The 'boot-ftp-password' and 'ssc-master-pw' properties when creating or updating a partition in DPM mode, in the zhmcclient API and HMC logs. 2. The 'ssc-master-pw' and 'zaware-master-pw' properties when updating an LPAR in classic mode, in the zhmcclient API and HMC logs. 3. The 'ssc-master-pw' and 'zaware-master-pw' properties when creating or updating an image activation profile in classic mode, in the zhmcclient API and HMC logs. 4. The 'password' property when creating or updating an HMC user, in the zhmcclient API log. 5. The 'bind-password' property when creating or updating an LDAP server definition, in the zhmcclient API and HMC logs. This issue affects only users of the zhmcclient package that have enabled the Python loggers named \"zhmcclient.api\" (for the API log) or \"zhmcclient.hmc\" (for the HMC log) and that use the functions listed above. This issue has been fixed in zhmcclient version 1.18.1. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-312",
        "id": "CVE-2024-53979",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/zhmcclient/zhmc-ansible-modules/commit/f5579f07da5f02d2496c41a313d4ae7a0a459b1d",
            "https://github.com/zhmcclient/zhmc-ansible-modules/security/advisories/GHSA-mw6c-f428-jx4f"
        ],
        "summary": "ibm.ibm_zhmc is an Ansible collection for the IBM Z HMC. The Ansible collection \"ibm.ibm_zhmc\" writes password-like properties in clear text into its log file and into the output returned by some of its Ansible module in the following cases: 1. The 'boot_ftp_password' and 'ssc_master_pw' properties are passed as input to the zhmc_partition Ansible module. 2. The 'ssc_master_pw' and 'zaware_master_pw' properties are passed as input to the zhmc_lpar Ansible module. 3. The 'password' property is passed as input to the zhmc_user Ansible module (just in log file, not in module output). 4. The 'bind_password' property is passed as input to the zhmc_ldap_server_definition Ansible module. These properties appear in the module output only when they were specified in the module input and when creating or updating the corresponding resources. They do not appear in the output when retrieving facts for the corresponding resources. These properties appear in the log file only when the \"log_file\" module input parameter is used. By default, no log file is created. This issue has been fixed in ibm.ibm_zhmc version 1.9.3. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36616",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://gist.github.com/1047524396/ded3e1509d8296ec4a91817867d108e0",
            "https://github.com/FFmpeg/FFmpeg/blob/n6.1.1/libavformat/westwood_vqa.c#L265",
            "https://github.com/ffmpeg/ffmpeg/commit/86f73277bf014e2ce36dd2594f1e0fb8b3bd6661"
        ],
        "summary": "An integer overflow in the component /libavformat/westwood_vqa.c of FFmpeg n6.1.1 allows attackers to cause a denial of service in the application via a crafted VQA file."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-349",
        "id": "CVE-2024-53848",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/python-jsonschema/check-jsonschema/commit/c52714b85e6725b1b24516fbdedacb333b939152",
            "https://github.com/python-jsonschema/check-jsonschema/security/advisories/GHSA-q6mv-284r-mp36"
        ],
        "summary": "check-jsonschema is a CLI and set of pre-commit hooks for jsonschema validation. The default cache strategy uses the basename of a remote schema as the name of the file in the cache, e.g. `https://example.org/schema.json` will be stored as `schema.json`. This naming allows for conflicts. If an attacker can get a user to run `check-jsonschema` against a malicious schema URL, e.g., `https://example.evil.org/schema.json`, they can insert their own schema into the cache and it will be picked up and used instead of the appropriate schema. Such a cache confusion attack could be used to allow data to pass validation which should have been rejected. This issue has been patched in version 0.30.0. All users are advised to upgrade. A few workarounds exist: 1. Users can use `--no-cache` to disable caching. 2. Users can use `--cache-filename` to select filenames for use in the cache, or to ensure that other usages do not overwrite the cached schema. (Note: this flag is being deprecated as part of the remediation effort.) 3. Users can explicitly download the schema before use as a local file, as in `curl -LOs https://example.org/schema.json; check-jsonschema --schemafile ./schema.json`"
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-53864",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://developers.ibexa.co/security-advisories/ibexa-sa-2024-006-vulnerabilities-in-content-name-pattern-commerce-shop-and-varnish-vhost-templates",
            "https://doc.ibexa.co/en/latest/update_and_migration/from_4.6/update_from_4.6/#v4614",
            "https://github.com/ibexa/admin-ui/commit/8ec824a8cf06c566ed88e4c21cc66f7ed42649fc",
            "https://github.com/ibexa/admin-ui/security/advisories/GHSA-8w3p-gf85-qcch"
        ],
        "summary": "Ibexa Admin UI Bundle is all the necessary parts to run the Ibexa DXP Back Office interface. The Content name pattern is used to build Content names from one or more fields. An XSS vulnerability has been found in this mechanism. Content edit permission is required to exploit it. After the fix, any existing injected XSS will not run. This issue has been patched in version 4.6.14. All users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-918",
        "id": "CVE-2024-53983",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/backstage/backstage/security/advisories/GHSA-qmc2-jpr5-7rg9",
            "https://github.com/backstage/backstage/tree/master/plugins/scaffolder-node"
        ],
        "summary": "The Backstage Scaffolder plugin Houses types and utilities for building scaffolder-related modules. A vulnerability is identified in Backstage Scaffolder template functionality where Server-Side Template Injection (SSTI) can be exploited to perform Git config injection. The vulnerability allows an attacker to capture privileged git tokens used by the Backstage Scaffolder plugin. With these tokens, unauthorized access to sensitive resources in git can be achieved. The impact is considered medium severity as the Backstage Threat Model recommends restricting access to adding and editing templates in the Backstage Catalog plugin. The issue has been resolved in versions `v0.4.12`, `v0.5.1` and `v0.6.1` of the `@backstage/plugin-scaffolder-node` package. Users are encouraged to upgrade to this version to mitigate the vulnerability. Users are advised to upgrade. Users unable to upgrade may ensure that templates do not change git config."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-835",
        "id": "CVE-2024-53980",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/RIOT-OS/RIOT/blob/1a418ccfedeb79dbce1d79f49e63a28906184794/cpu/cc2538/radio/cc2538_rf_radio_ops.c#L183",
            "https://github.com/RIOT-OS/RIOT/blob/1a418ccfedeb79dbce1d79f49e63a28906184794/cpu/cc2538/radio/cc2538_rf_radio_ops.c#L417",
            "https://github.com/RIOT-OS/RIOT/blob/1a418ccfedeb79dbce1d79f49e63a28906184794/cpu/cc2538/radio/cc2538_rf_radio_ops.c#L419",
            "https://github.com/RIOT-OS/RIOT/blob/1a418ccfedeb79dbce1d79f49e63a28906184794/cpu/cc2538/radio/cc2538_rf_radio_ops.c#L421-L422",
            "https://github.com/RIOT-OS/RIOT/blob/1a418ccfedeb79dbce1d79f49e63a28906184794/sys/net/link_layer/ieee802154/submac.c#L149",
            "https://github.com/RIOT-OS/RIOT/pull/20998",
            "https://github.com/RIOT-OS/RIOT/security/advisories/GHSA-m75q-8vj8-wppw"
        ],
        "summary": "RIOT is an open-source microcontroller operating system, designed to match the requirements of Internet of Things (IoT) devices and other embedded devices. A malicious actor can send a IEEE 802.15.4 packet with spoofed length byte and optionally spoofed FCS, which eventually results into an endless loop on a CC2538 as receiver. Before PR #20998, the receiver would check for the location of the CRC bit using the packet length byte by considering all 8 bits, instead of discarding bit 7, which is what the radio does. This then results into reading outside of the RX FIFO.  Although it prints an error when attempting to read outside of the RX FIFO, it will continue doing this. This may lead to a discrepancy in the CRC check according to the firmware and the radio. If the CPU judges the CRC as correct and the radio is set to `AUTO_ACK`, when the packet requests and acknowledgment the CPU will go into the state `CC2538_STATE_TX_ACK`. However, if the radio judged the CRC as incorrect, it will not send an acknowledgment, and thus the `TXACKDONE` event will not fire. It will then never return to the state `CC2538_STATE_READY` since the baseband processing is still disabled. Then the CPU will be in an endless loop. Since setting to idle is not forced, it won't do it if the radio's state is not `CC2538_STATE_READY`. A fix has not yet been made."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-601",
        "id": "CVE-2024-52003",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/traefik/traefik/pull/11253",
            "https://github.com/traefik/traefik/releases/tag/v2.11.14",
            "https://github.com/traefik/traefik/releases/tag/v3.2.1",
            "https://github.com/traefik/traefik/security/advisories/GHSA-h924-8g65-j9wg"
        ],
        "summary": "Traefik (pronounced traffic) is an HTTP reverse proxy and load balancer. There is a vulnerability in Traefik that allows the client to provide the X-Forwarded-Prefix header from an untrusted source. This issue has been addressed in versions 2.11.14 and 3.2.1. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-327",
        "id": "CVE-2024-52801",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/drakkan/sftpgo/commit/f30a9a2095bf90c0661b04fe038e3b7efc788bc6",
            "https://github.com/drakkan/sftpgo/security/advisories/GHSA-6943-qr24-82vx",
            "https://github.com/rs/xid"
        ],
        "summary": "sftpgo is a full-featured and highly configurable event-driven file transfer solution. Server protocols: SFTP, HTTP/S, FTP/S, WebDAV. The OpenID Connect implementation allows authenticated users to brute force session cookies and thereby gain access to other users' data, since the cookies are generated predictably using the xid library and are therefore unique but not cryptographically secure. This issue was fixed in version v2.6.4, where cookies are opaque and cryptographically secure strings. All users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-52809",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/intlify/vue-i18n/commit/72f0d323006fc7363b18cab62d4522dadd874411",
            "https://github.com/intlify/vue-i18n/commit/9f20909ef8c9232a1072d7818e12ed6d6451024d",
            "https://github.com/intlify/vue-i18n/security/advisories/GHSA-9r9m-ffp6-9x4v"
        ],
        "summary": "vue-i18n  is an internationalization plugin for Vue.js. In affected versions vue-i18n can be passed locale messages to `createI18n` or `useI18n`. When locale message ASTs are generated in development mode there is a possibility of Cross-site Scripting attack. This issue has been addressed in versions 9.14.2, and 10.0.5. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T19:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-697",
        "id": "CVE-2024-53861",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://github.com/jpadilla/pyjwt/commit/1570e708672aa9036bc772476beae8bfa48f4131#diff-6893ad4a1c5a36b8af3028db8c8bc3b62418149843fc382faf901eaab008e380R366",
            "https://github.com/jpadilla/pyjwt/commit/33022c25525c1020869c71ce2a4109e44ae4ced1",
            "https://github.com/jpadilla/pyjwt/security/advisories/GHSA-75c5-xw7c-p5pm"
        ],
        "summary": "pyjwt is a JSON Web Token implementation in Python. An incorrect string comparison is run for `iss` checking, resulting in `\"acb\"` being accepted for `\"_abc_\"`. This is a bug introduced in version 2.10.0: checking the \"iss\" claim changed from `isinstance(issuer, list)` to `isinstance(issuer, Sequence)`. Since str is a Sequnce, but not a list, `in` is also used for string comparison. This results in `if \"abc\" not in \"__abcd__\":` being checked instead of `if \"abc\" != \"__abc__\":`. Signature checks are still present so real world impact is likely limited to denial of service scenarios. This issue has been patched in version 2.10.1. All users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-11-29T19:15:00",
        "Published": "2024-11-29T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36624",
        "impact": {},
        "last-modified": "2024-11-29T19:15:00",
        "references": [
            "https://gist.github.com/1047524396/64720d2aa5afd943eb7e5a1ed4808ad6",
            "https://github.com/zulip/zulip/blob/8.3/web/src/copy_and_paste.js#L90",
            "https://github.com/zulip/zulip/commit/e1029b59ede0c4f314c367ffa1ba2904ffaf6768"
        ],
        "summary": "Zulip 8.3 is vulnerable to Cross Site Scripting (XSS) via the construct_copy_div function in copy_and_paste.js."
    }
]