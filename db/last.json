[
    {
        "Modified": "2024-09-13T13:52:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-52897",
        "impact": {},
        "last-modified": "2024-09-13T13:52:00",
        "references": [
            "https://git.kernel.org/stable/c/bb2c2e62539f2b63c5e0beb51501d328260c7595",
            "https://git.kernel.org/stable/c/75181406b4eafacc531ff2ee5fb032bd93317e2b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: do not warn on record without old_roots populated\n\n[BUG]\nThere are some reports from the mailing list that since v6.1 kernel, the\nWARN_ON() inside btrfs_qgroup_account_extent() gets triggered during\nrescan:\n\n  WARNING: CPU: 3 PID: 6424 at fs/btrfs/qgroup.c:2756 btrfs_qgroup_account_extents+0x1ae/0x260 [btrfs]\n  CPU: 3 PID: 6424 Comm: snapperd Tainted: P           OE      6.1.2-1-default #1 openSUSE Tumbleweed 05c7a1b1b61d5627475528f71f50444637b5aad7\n  RIP: 0010:btrfs_qgroup_account_extents+0x1ae/0x260 [btrfs]\n  Call Trace:\n   <TASK>\n  btrfs_commit_transaction+0x30c/0xb40 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]\n   ? start_transaction+0xc3/0x5b0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]\n  btrfs_qgroup_rescan+0x42/0xc0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]\n   btrfs_ioctl+0x1ab9/0x25c0 [btrfs c39c9c546c241c593f03bd6d5f39ea1b676250f6]\n   ? __rseq_handle_notify_resume+0xa9/0x4a0\n   ? mntput_no_expire+0x4a/0x240\n   ? __seccomp_filter+0x319/0x4d0\n   __x64_sys_ioctl+0x90/0xd0\n   do_syscall_64+0x5b/0x80\n   ? syscall_exit_to_user_mode+0x17/0x40\n   ? do_syscall_64+0x67/0x80\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n  RIP: 0033:0x7fd9b790d9bf\n   </TASK>\n\n[CAUSE]\nSince commit e15e9f43c7ca (\"btrfs: introduce\nBTRFS_QGROUP_RUNTIME_FLAG_NO_ACCOUNTING to skip qgroup accounting\"), if\nour qgroup is already in inconsistent state, we will no longer do the\ntime-consuming backref walk.\n\nThis can leave some qgroup records without a valid old_roots ulist.\nNormally this is fine, as btrfs_qgroup_account_extents() would also skip\nthose records if we have NO_ACCOUNTING flag set.\n\nBut there is a small window, if we have NO_ACCOUNTING flag set, and\ninserted some qgroup_record without a old_roots ulist, but then the user\ntriggered a qgroup rescan.\n\nDuring btrfs_qgroup_rescan(), we firstly clear NO_ACCOUNTING flag, then\ncommit current transaction.\n\nAnd since we have a qgroup_record with old_roots = NULL, we trigger the\nWARN_ON() during btrfs_qgroup_account_extents().\n\n[FIX]\nUnfortunately due to the introduction of NO_ACCOUNTING flag, the\nassumption that every qgroup_record would have its old_roots populated\nis no longer correct.\n\nFix the false alerts and drop the WARN_ON()."
    },
    {
        "Modified": "2024-09-13T13:46:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52898",
        "impact": {},
        "last-modified": "2024-09-13T13:46:00",
        "references": [
            "https://git.kernel.org/stable/c/6fac4b5cecb3928a0a81069aaa815a2edc8dd5a1",
            "https://git.kernel.org/stable/c/133b902378e4acbd824c29dd0d48570ad596e368",
            "https://git.kernel.org/stable/c/081105213ff6f661c114781d469233c7d0e09c2e",
            "https://git.kernel.org/stable/c/c462ac871f49753eca86bb960f573b993976a5ea",
            "https://git.kernel.org/stable/c/ea2ee5e9991caf74e0604f994c1831a5867055b2",
            "https://git.kernel.org/stable/c/a2bc47c43e70cf904b1af49f76d572326c08bca7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxhci: Fix null pointer dereference when host dies\n\nMake sure xhci_free_dev() and xhci_kill_endpoint_urbs() do not race\nand cause null pointer dereference when host suddenly dies.\n\nUsb core may call xhci_free_dev() which frees the xhci->devs[slot_id]\nvirt device at the same time that xhci_kill_endpoint_urbs() tries to\nloop through all the device's endpoints, checking if there are any\ncancelled urbs left to give back.\n\nhold the xhci spinlock while freeing the virt device"
    },
    {
        "Modified": "2024-09-13T13:44:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52899",
        "impact": {},
        "last-modified": "2024-09-13T13:44:00",
        "references": [
            "https://git.kernel.org/stable/c/f534dc438828cc3f1f8c6895b8bdfbef079521fb",
            "https://git.kernel.org/stable/c/53dd833fd0a2d8f0118d01ea063a70652689d31e",
            "https://git.kernel.org/stable/c/20d0a6d17e85a8a816a64fa7d7cae616f1617833",
            "https://git.kernel.org/stable/c/5054d001ffaf76155637c5e5b922c11016cd6a5d",
            "https://git.kernel.org/stable/c/51a7ad5b60efac65691729d10745c28fa1016b96",
            "https://git.kernel.org/stable/c/57054fe516d59d03a7bcf1888e82479ccc244f87"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nAdd exception protection processing for vd in axi_chan_handle_err function\n\nSince there is no protection for vd, a kernel panic will be\ntriggered here in exceptional cases.\n\nYou can refer to the processing of axi_chan_block_xfer_complete function\n\nThe triggered kernel panic is as follows:\n\n[   67.848444] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000060\n[   67.848447] Mem abort info:\n[   67.848449]   ESR = 0x96000004\n[   67.848451]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   67.848454]   SET = 0, FnV = 0\n[   67.848456]   EA = 0, S1PTW = 0\n[   67.848458] Data abort info:\n[   67.848460]   ISV = 0, ISS = 0x00000004\n[   67.848462]   CM = 0, WnR = 0\n[   67.848465] user pgtable: 4k pages, 48-bit VAs, pgdp=00000800c4c0b000\n[   67.848468] [0000000000000060] pgd=0000000000000000, p4d=0000000000000000\n[   67.848472] Internal error: Oops: 96000004 [#1] SMP\n[   67.848475] Modules linked in: dmatest\n[   67.848479] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.10.100-emu_x2rc+ #11\n[   67.848483] pstate: 62000085 (nZCv daIf -PAN -UAO +TCO BTYPE=--)\n[   67.848487] pc : axi_chan_handle_err+0xc4/0x230\n[   67.848491] lr : axi_chan_handle_err+0x30/0x230\n[   67.848493] sp : ffff0803fe55ae50\n[   67.848495] x29: ffff0803fe55ae50 x28: ffff800011212200\n[   67.848500] x27: ffff0800c42c0080 x26: ffff0800c097c080\n[   67.848504] x25: ffff800010d33880 x24: ffff80001139d850\n[   67.848508] x23: ffff0800c097c168 x22: 0000000000000000\n[   67.848512] x21: 0000000000000080 x20: 0000000000002000\n[   67.848517] x19: ffff0800c097c080 x18: 0000000000000000\n[   67.848521] x17: 0000000000000000 x16: 0000000000000000\n[   67.848525] x15: 0000000000000000 x14: 0000000000000000\n[   67.848529] x13: 0000000000000000 x12: 0000000000000040\n[   67.848533] x11: ffff0800c0400248 x10: ffff0800c040024a\n[   67.848538] x9 : ffff800010576cd4 x8 : ffff0800c0400270\n[   67.848542] x7 : 0000000000000000 x6 : ffff0800c04003e0\n[   67.848546] x5 : ffff0800c0400248 x4 : ffff0800c4294480\n[   67.848550] x3 : dead000000000100 x2 : dead000000000122\n[   67.848555] x1 : 0000000000000100 x0 : ffff0800c097c168\n[   67.848559] Call trace:\n[   67.848562]  axi_chan_handle_err+0xc4/0x230\n[   67.848566]  dw_axi_dma_interrupt+0xf4/0x590\n[   67.848569]  __handle_irq_event_percpu+0x60/0x220\n[   67.848573]  handle_irq_event+0x64/0x120\n[   67.848576]  handle_fasteoi_irq+0xc4/0x220\n[   67.848580]  __handle_domain_irq+0x80/0xe0\n[   67.848583]  gic_handle_irq+0xc0/0x138\n[   67.848585]  el1_irq+0xc8/0x180\n[   67.848588]  arch_cpu_idle+0x14/0x2c\n[   67.848591]  default_idle_call+0x40/0x16c\n[   67.848594]  do_idle+0x1f0/0x250\n[   67.848597]  cpu_startup_entry+0x2c/0x60\n[   67.848600]  rest_init+0xc0/0xcc\n[   67.848603]  arch_call_rest_init+0x14/0x1c\n[   67.848606]  start_kernel+0x4cc/0x500\n[   67.848610] Code: eb0002ff 9a9f12d6 f2fbd5a2 f2fbd5a3 (a94602c1)\n[   67.848613] ---[ end trace 585a97036f88203a ]---"
    },
    {
        "Modified": "2024-09-13T13:40:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-52900",
        "impact": {},
        "last-modified": "2024-09-13T13:40:00",
        "references": [
            "https://git.kernel.org/stable/c/3c2a2ff67d46106715c2132021b98bd057c27545",
            "https://git.kernel.org/stable/c/d9fde9eab1766170ff2ade67d09178d2cfd78749",
            "https://git.kernel.org/stable/c/b0ba060d3287108eba17603bee3810e4cf2c272d",
            "https://git.kernel.org/stable/c/712bd74eccb9d3626a0a236641962eca8e11a243",
            "https://git.kernel.org/stable/c/45627a1a6450662e1e0f8174ef07b05710a20062",
            "https://git.kernel.org/stable/c/0bf463939c09e5b2c35c71ed74a5fd60a74d6a04",
            "https://git.kernel.org/stable/c/7633355e5c7f29c049a9048e461427d1d8ed3051"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix general protection fault in nilfs_btree_insert()\n\nIf nilfs2 reads a corrupted disk image and tries to reads a b-tree node\nblock by calling __nilfs_btree_get_block() against an invalid virtual\nblock address, it returns -ENOENT because conversion of the virtual block\naddress to a disk block address fails.  However, this return value is the\nsame as the internal code that b-tree lookup routines return to indicate\nthat the block being searched does not exist, so functions that operate on\nthat b-tree may misbehave.\n\nWhen nilfs_btree_insert() receives this spurious 'not found' code from\nnilfs_btree_do_lookup(), it misunderstands that the 'not found' check was\nsuccessful and continues the insert operation using incomplete lookup path\ndata, causing the following crash:\n\n general protection fault, probably for non-canonical address\n 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n ...\n RIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs2/btree.c:418 [inline]\n RIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [inline]\n RIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238\n Code: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89\n ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 <42> 80 3c\n 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02\n ...\n Call Trace:\n <TASK>\n  nilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [inline]\n  nilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147\n  nilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c:101\n  __block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991\n  __block_write_begin fs/buffer.c:2041 [inline]\n  block_write_begin+0x93/0x1e0 fs/buffer.c:2102\n  nilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c:261\n  generic_perform_write+0x2e4/0x5e0 mm/filemap.c:3772\n  __generic_file_write_iter+0x176/0x400 mm/filemap.c:3900\n  generic_file_write_iter+0xab/0x310 mm/filemap.c:3932\n  call_write_iter include/linux/fs.h:2186 [inline]\n  new_sync_write fs/read_write.c:491 [inline]\n  vfs_write+0x7dc/0xc50 fs/read_write.c:584\n  ksys_write+0x177/0x2a0 fs/read_write.c:637\n  do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n  do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n ...\n </TASK>\n\nThis patch fixes the root cause of this problem by replacing the error\ncode that __nilfs_btree_get_block() returns on block address conversion\nfailure from -ENOENT to another internal code -EINVAL which means that the\nb-tree metadata is corrupted.\n\nBy returning -EINVAL, it propagates without glitches, and for all relevant\nb-tree operations, functions in the upper bmap layer output an error\nmessage indicating corrupted b-tree metadata via\nnilfs_bmap_convert_error(), and code -EIO will be eventually returned as\nit should be."
    },
    {
        "Modified": "2024-09-13T13:37:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52901",
        "impact": {},
        "last-modified": "2024-09-13T13:37:00",
        "references": [
            "https://git.kernel.org/stable/c/375be2dd61a072f7b1cac9b17eea59e07b58db3a",
            "https://git.kernel.org/stable/c/2d2820d5f375563690c96e60676855205abfb7f5",
            "https://git.kernel.org/stable/c/9891e5c73cab3fd9ed532dc50e9799e55e974766",
            "https://git.kernel.org/stable/c/66fc1600855c05c4ba4e997184c91cf298e0405c",
            "https://git.kernel.org/stable/c/f39c813af0b64f44af94e435c07bfa1ddc2575f5",
            "https://git.kernel.org/stable/c/08864dc14a6803f0377ca77b9740b26db30c020f",
            "https://git.kernel.org/stable/c/e8fb5bc76eb86437ab87002d4a36d6da02165654"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check endpoint is valid before dereferencing it\n\nWhen the host controller is not responding, all URBs queued to all\nendpoints need to be killed. This can cause a kernel panic if we\ndereference an invalid endpoint.\n\nFix this by using xhci_get_virt_ep() helper to find the endpoint and\nchecking if the endpoint is valid before dereferencing it.\n\n[233311.853271] xhci-hcd xhci-hcd.1.auto: xHCI host controller not responding, assume dead\n[233311.853393] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000e8\n\n[233311.853964] pc : xhci_hc_died+0x10c/0x270\n[233311.853971] lr : xhci_hc_died+0x1ac/0x270\n\n[233311.854077] Call trace:\n[233311.854085]  xhci_hc_died+0x10c/0x270\n[233311.854093]  xhci_stop_endpoint_command_watchdog+0x100/0x1a4\n[233311.854105]  call_timer_fn+0x50/0x2d4\n[233311.854112]  expire_timers+0xac/0x2e4\n[233311.854118]  run_timer_softirq+0x300/0xabc\n[233311.854127]  __do_softirq+0x148/0x528\n[233311.854135]  irq_exit+0x194/0x1a8\n[233311.854143]  __handle_domain_irq+0x164/0x1d0\n[233311.854149]  gic_handle_irq.22273+0x10c/0x188\n[233311.854156]  el1_irq+0xfc/0x1a8\n[233311.854175]  lpm_cpuidle_enter+0x25c/0x418 [msm_pm]\n[233311.854185]  cpuidle_enter_state+0x1f0/0x764\n[233311.854194]  do_idle+0x594/0x6ac\n[233311.854201]  cpu_startup_entry+0x7c/0x80\n[233311.854209]  secondary_start_kernel+0x170/0x198"
    },
    {
        "Modified": "2024-09-13T13:34:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2023-52903",
        "impact": {},
        "last-modified": "2024-09-13T13:34:00",
        "references": [
            "https://git.kernel.org/stable/c/de77faee280163ff03b7ab64af6c9d779a43d4c4",
            "https://git.kernel.org/stable/c/ed4629d1e968359fbb91d0a3780b1e86a2c08845",
            "https://git.kernel.org/stable/c/7fc3990dad04a677606337ebc61964094d6cb41b",
            "https://git.kernel.org/stable/c/544d163d659d45a206d8929370d5a2984e546cb7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: lock overflowing for IOPOLL\n\nsyzbot reports an issue with overflow filling for IOPOLL:\n\nWARNING: CPU: 0 PID: 28 at io_uring/io_uring.c:734 io_cqring_event_overflow+0x1c0/0x230 io_uring/io_uring.c:734\nCPU: 0 PID: 28 Comm: kworker/u4:1 Not tainted 6.2.0-rc3-syzkaller-16369-g358a161a6a9e #0\nWorkqueue: events_unbound io_ring_exit_work\nCall trace:\n\u00a0io_cqring_event_overflow+0x1c0/0x230 io_uring/io_uring.c:734\n\u00a0io_req_cqe_overflow+0x5c/0x70 io_uring/io_uring.c:773\n\u00a0io_fill_cqe_req io_uring/io_uring.h:168 [inline]\n\u00a0io_do_iopoll+0x474/0x62c io_uring/rw.c:1065\n\u00a0io_iopoll_try_reap_events+0x6c/0x108 io_uring/io_uring.c:1513\n\u00a0io_uring_try_cancel_requests+0x13c/0x258 io_uring/io_uring.c:3056\n\u00a0io_ring_exit_work+0xec/0x390 io_uring/io_uring.c:2869\n\u00a0process_one_work+0x2d8/0x504 kernel/workqueue.c:2289\n\u00a0worker_thread+0x340/0x610 kernel/workqueue.c:2436\n\u00a0kthread+0x12c/0x158 kernel/kthread.c:376\n\u00a0ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:863\n\nThere is no real problem for normal IOPOLL as flush is also called with\nuring_lock taken, but it's getting more complicated for IOPOLL|SQPOLL,\nfor which __io_cqring_overflow_flush() happens from the CQ waiting path."
    },
    {
        "Modified": "2024-09-13T13:29:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-401",
        "id": "CVE-2023-52902",
        "impact": {},
        "last-modified": "2024-09-13T13:29:00",
        "references": [
            "https://git.kernel.org/stable/c/1442d51026c58e7c11dd5f9b19650632a48676d4",
            "https://git.kernel.org/stable/c/7f31cced5724e6d414fe750aa1cd7e7b578ec22f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnommu: fix memory leak in do_mmap() error path\n\nThe preallocation of the maple tree nodes may leak if the error path to\n\"error_just_free\" is taken.  Fix this by moving the freeing of the maple\ntree nodes to a shared location for all error paths."
    },
    {
        "Modified": "2024-09-13T13:27:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2023-52905",
        "impact": {},
        "last-modified": "2024-09-13T13:27:00",
        "references": [
            "https://git.kernel.org/stable/c/c8ca0ad10df08ea36bcac1288062d567d22604c9",
            "https://git.kernel.org/stable/c/53da7aec32982f5ee775b69dce06d63992ce4af3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix resource leakage in VF driver unbind\n\nresources allocated like mcam entries to support the Ntuple feature\nand hash tables for the tc feature are not getting freed in driver\nunbind. This patch fixes the issue."
    },
    {
        "Modified": "2024-09-13T13:21:00",
        "Published": "2024-08-21T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-52906",
        "impact": {},
        "last-modified": "2024-09-13T13:21:00",
        "references": [
            "https://git.kernel.org/stable/c/2b157c3c5d6b8ddca48d53c9e662032f65af8d61",
            "https://git.kernel.org/stable/c/453277feb41c2235cf2c0de9209eef962c401457",
            "https://git.kernel.org/stable/c/9e2c38827cdc6fdd3bb375c8607fc04d289756f9",
            "https://git.kernel.org/stable/c/8a97b544b98e44f596219ebb290fd2ba2fd5d644",
            "https://git.kernel.org/stable/c/9e17f99220d111ea031b44153fdfe364b0024ff2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_mpls: Fix warning during failed attribute validation\n\nThe 'TCA_MPLS_LABEL' attribute is of 'NLA_U32' type, but has a\nvalidation type of 'NLA_VALIDATE_FUNCTION'. This is an invalid\ncombination according to the comment above 'struct nla_policy':\n\n\"\nMeaning of `validate' field, use via NLA_POLICY_VALIDATE_FN:\n   NLA_BINARY           Validation function called for the attribute.\n   All other            Unused - but note that it's a union\n\"\n\nThis can trigger the warning [1] in nla_get_range_unsigned() when\nvalidation of the attribute fails. Despite being of 'NLA_U32' type, the\nassociated 'min'/'max' fields in the policy are negative as they are\naliased by the 'validate' field.\n\nFix by changing the attribute type to 'NLA_BINARY' which is consistent\nwith the above comment and all other users of NLA_POLICY_VALIDATE_FN().\nAs a result, move the length validation to the validation function.\n\nNo regressions in MPLS tests:\n\n # ./tdc.py -f tc-tests/actions/mpls.json\n [...]\n # echo $?\n 0\n\n[1]\nWARNING: CPU: 0 PID: 17743 at lib/nlattr.c:118\nnla_get_range_unsigned+0x1d8/0x1e0 lib/nlattr.c:117\nModules linked in:\nCPU: 0 PID: 17743 Comm: syz-executor.0 Not tainted 6.1.0-rc8 #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.13.0-48-gd9c812dda519-prebuilt.qemu.org 04/01/2014\nRIP: 0010:nla_get_range_unsigned+0x1d8/0x1e0 lib/nlattr.c:117\n[...]\nCall Trace:\n <TASK>\n __netlink_policy_dump_write_attr+0x23d/0x990 net/netlink/policy.c:310\n netlink_policy_dump_write_attr+0x22/0x30 net/netlink/policy.c:411\n netlink_ack_tlv_fill net/netlink/af_netlink.c:2454 [inline]\n netlink_ack+0x546/0x760 net/netlink/af_netlink.c:2506\n netlink_rcv_skb+0x1b7/0x240 net/netlink/af_netlink.c:2546\n rtnetlink_rcv+0x18/0x20 net/core/rtnetlink.c:6109\n netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]\n netlink_unicast+0x5e9/0x6b0 net/netlink/af_netlink.c:1345\n netlink_sendmsg+0x739/0x860 net/netlink/af_netlink.c:1921\n sock_sendmsg_nosec net/socket.c:714 [inline]\n sock_sendmsg net/socket.c:734 [inline]\n ____sys_sendmsg+0x38f/0x500 net/socket.c:2482\n ___sys_sendmsg net/socket.c:2536 [inline]\n __sys_sendmsg+0x197/0x230 net/socket.c:2565\n __do_sys_sendmsg net/socket.c:2574 [inline]\n __se_sys_sendmsg net/socket.c:2572 [inline]\n __x64_sys_sendmsg+0x42/0x50 net/socket.c:2572\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd"
    },
    {
        "Modified": "2024-09-13T11:15:00",
        "Published": "2024-06-12T09:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5203",
        "impact": {},
        "last-modified": "2024-09-13T11:15:00",
        "references": [],
        "summary": "Rejected reason: After careful review of CVE-2024-5203, it has been determined that the issue is not exploitable in real-world scenarios. Moreover, the exploit assumes that the attacker has access to a session code parameter that matches a cookie on the Keycloak server. However the attacker does not have access to the cookie, and can therefore not craft a malicious request."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-41874",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/coldfusion/apsb24-71.html"
        ],
        "summary": "ColdFusion versions 2023.9, 2021.15 and earlier are affected by a Deserialization of Untrusted Data vulnerability that could result in arbitrary code execution in the context of the current user. An attacker could exploit this vulnerability by providing crafted input to the application, which when deserialized, leads to execution of malicious code. Exploitation of this issue does not require user interaction."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-43756",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/photoshop/apsb24-72.html"
        ],
        "summary": "Photoshop Desktop versions 24.7.4, 25.11 and earlier are affected by a Heap-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-43760",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/photoshop/apsb24-72.html"
        ],
        "summary": "Photoshop Desktop versions 24.7.4, 25.11 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-45108",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/photoshop/apsb24-72.html"
        ],
        "summary": "Photoshop Desktop versions 24.7.4, 25.11 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-45109",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/photoshop/apsb24-72.html"
        ],
        "summary": "Photoshop Desktop versions 24.7.4, 25.11 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-13T10:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-287",
        "id": "CVE-2024-45113",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/coldfusion/apsb24-14.html"
        ],
        "summary": "ColdFusion versions 2023.6, 2021.12 and earlier are affected by an Improper Authentication vulnerability that could result in privilege escalation. An attacker could exploit this vulnerability to gain unauthorized access and affect the integrity of the application. Exploitation of this issue does not require user interaction."
    },
    {
        "Modified": "2024-09-13T10:15:00",
        "Published": "2024-09-09T03:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2024-8584",
        "impact": {},
        "last-modified": "2024-09-13T10:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-8039-24e48-1.html",
            "https://www.twcert.org.tw/en/cp-139-8040-948ef-2.html"
        ],
        "summary": "Orca HCM from LEARNING DIGITAL does not properly restrict access to a specific functionality, allowing unauthenticated remote attacker to exploit this functionality to create an account with administrator privilege and subsequently use it to log in. (\u00a0The vendor is currently addressing the vulnerability. Once the fix is completed, we will provide information on the affected versions.)"
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-39384",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/premiere_pro/apsb24-58.html"
        ],
        "summary": "Premiere Pro versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-190",
        "id": "CVE-2024-34121",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.6, 27.9.5 and earlier are affected by an Integer Overflow or Wraparound vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-122",
        "id": "CVE-2024-39380",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/after_effects/apsb24-55.html"
        ],
        "summary": "After Effects versions 23.6.6, 24.5 and earlier are affected by a Heap-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39381",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/after_effects/apsb24-55.html"
        ],
        "summary": "After Effects versions 23.6.6, 24.5 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-39382",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/after_effects/apsb24-55.html"
        ],
        "summary": "After Effects versions 23.6.6, 24.5 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-39385",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/premiere_pro/apsb24-58.html"
        ],
        "summary": "Premiere Pro versions 24.5, 23.6.8 and earlier are affected by a Use After Free vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-191",
        "id": "CVE-2024-41857",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.6, 27.9.5 and earlier are affected by an Integer Underflow (Wrap or Wraparound) vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-41859",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/after_effects/apsb24-55.html"
        ],
        "summary": "After Effects versions 23.6.6, 24.5 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-121",
        "id": "CVE-2024-41867",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/after_effects/apsb24-55.html"
        ],
        "summary": "After Effects versions 23.6.6, 24.5 and earlier are affected by a Stack-based Buffer Overflow vulnerability that could lead to arbitrary file system write operations. An attacker could leverage this vulnerability to modify or corrupt files, potentially leading to a compromise of system integrity. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-41869",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/acrobat/apsb24-70.html"
        ],
        "summary": "Acrobat Reader versions 24.002.21005, 24.001.30159, 20.005.30655, 24.003.20054 and earlier are affected by a Use After Free vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-43758",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.6, 27.9.5 and earlier are affected by a Use After Free vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-43759",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.6, 27.9.5 and earlier are affected by a NULL Pointer Dereference vulnerability that could lead to an application denial-of-service (DoS). An attacker could exploit this vulnerability to crash the application, resulting in a DoS condition. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-45111",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.6, 27.9.5 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-843",
        "id": "CVE-2024-45112",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/acrobat/apsb24-70.html"
        ],
        "summary": "Acrobat Reader versions 24.002.21005, 24.001.30159, 20.005.30655, 24.003.20054 and earlier are affected by a Type Confusion vulnerability that could result in arbitrary code execution in the context of the current user. This issue occurs when a resource is accessed using a type that is not compatible with the actual object type, leading to a logic error that an attacker could exploit. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-09-13T09:15:00",
        "access": {},
        "assigner": "cve@usom.gov.tr",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6656",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://www.usom.gov.tr/bildirim/tr-24-1466"
        ],
        "summary": "Use of Hard-coded Credentials vulnerability in TNB Mobile Solutions Cockpit Software allows Read Sensitive Strings Within an Executable.This issue affects Cockpit Software: before v2.13."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-08-14T15:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-367",
        "id": "CVE-2024-39420",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/acrobat/apsb24-70.html"
        ],
        "summary": "Acrobat Reader versions 20.005.30636, 24.002.21005, 24.001.30159, 20.005.30655, 24.002.20965, 24.002.20964, 24.001.30123, 24.003.20054 and earlier are affected by a Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability that could lead to arbitrary code execution. This vulnerability arises when the timing of actions changes the state of a resource between the checking of a condition and the use of the resource, allowing an attacker to manipulate the resource in a harmful way. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T09:15:00",
        "Published": "2024-08-14T15:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-41856",
        "impact": {},
        "last-modified": "2024-09-13T09:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/illustrator/apsb24-66.html"
        ],
        "summary": "Illustrator versions 28.5, 27.9.4, 28.6, 27.9.5 and earlier are affected by an Improper Input Validation vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46701",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/308b4fc2403b335894592ee9dc212a5e58bb309f",
            "https://git.kernel.org/stable/c/64a7ce76fb901bf9f9c36cf5d681328fc0fd4b5a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibfs: fix infinite directory reads for offset dir\n\nAfter we switch tmpfs dir operations from simple_dir_operations to\nsimple_offset_dir_operations, every rename happened will fill new dentry\nto dest dir's maple tree(&SHMEM_I(inode)->dir_offsets->mt) with a free\nkey starting with octx->newx_offset, and then set newx_offset equals to\nfree key + 1. This will lead to infinite readdir combine with rename\nhappened at the same time, which fail generic/736 in xfstests(detail show\nas below).\n\n1. create 5000 files(1 2 3...) under one dir\n2. call readdir(man 3 readdir) once, and get one entry\n3. rename(entry, \"TEMPFILE\"), then rename(\"TEMPFILE\", entry)\n4. loop 2~3, until readdir return nothing or we loop too many\n   times(tmpfs break test with the second condition)\n\nWe choose the same logic what commit 9b378f6ad48cf (\"btrfs: fix infinite\ndirectory reads\") to fix it, record the last_index when we open dir, and\ndo not emit the entry which index >= last_index. The file->private_data\nnow used in offset dir can use directly to do this, and we also update\nthe last_index when we llseek the dir file.\n\n[brauner: only update last_index after seek when offset is zero like Jan suggested]"
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-41870",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/media-encoder/apsb24-53.html"
        ],
        "summary": "Media Encoder versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46704",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/91d09642127a32fde231face2ff489af70eef316",
            "https://git.kernel.org/stable/c/8bc35475ef1a23b0e224f3242eb11c76cab0ea88"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nworkqueue: Fix spruious data race in __flush_work()\n\nWhen flushing a work item for cancellation, __flush_work() knows that it\nexclusively owns the work item through its PENDING bit. 134874e2eee9\n(\"workqueue: Allow cancel_work_sync() and disable_work() from atomic\ncontexts on BH work items\") added a read of @work->data to determine whether\nto use busy wait for BH work items that are being canceled. While the read\nis safe when @from_cancel, @work->data was read before testing @from_cancel\nto simplify code structure:\n\n\tdata = *work_data_bits(work);\n\tif (from_cancel &&\n\t    !WARN_ON_ONCE(data & WORK_STRUCT_PWQ) && (data & WORK_OFFQ_BH)) {\n\nWhile the read data was never used if !@from_cancel, this could trigger\nKCSAN data race detection spuriously:\n\n  ==================================================================\n  BUG: KCSAN: data-race in __flush_work / __flush_work\n\n  write to 0xffff8881223aa3e8 of 8 bytes by task 3998 on cpu 0:\n   instrument_write include/linux/instrumented.h:41 [inline]\n   ___set_bit include/asm-generic/bitops/instrumented-non-atomic.h:28 [inline]\n   insert_wq_barrier kernel/workqueue.c:3790 [inline]\n   start_flush_work kernel/workqueue.c:4142 [inline]\n   __flush_work+0x30b/0x570 kernel/workqueue.c:4178\n   flush_work kernel/workqueue.c:4229 [inline]\n   ...\n\n  read to 0xffff8881223aa3e8 of 8 bytes by task 50 on cpu 1:\n   __flush_work+0x42a/0x570 kernel/workqueue.c:4188\n   flush_work kernel/workqueue.c:4229 [inline]\n   flush_delayed_work+0x66/0x70 kernel/workqueue.c:4251\n   ...\n\n  value changed: 0x0000000000400000 -> 0xffff88810006c00d\n\nReorganize the code so that @from_cancel is tested before @work->data is\naccessed. The only problem is triggering KCSAN detection spuriously. This\nshouldn't need READ_ONCE() or other access qualifiers.\n\nNo functional changes."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46707",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/15818af2f7aa55eff375333cb7689df15d3f24ef",
            "https://git.kernel.org/stable/c/96b076e8ee5bc3a1126848c8add0f74bd30dc9d1",
            "https://git.kernel.org/stable/c/94d4fbad01b19ec5eab3d6b50aaec4f9db8b2d8d",
            "https://git.kernel.org/stable/c/9d7629bec5c3f80bd0e3bf8103c06a2f7046bd92",
            "https://git.kernel.org/stable/c/2073132f6ed3079369e857a8deb33d11bdd983bc",
            "https://git.kernel.org/stable/c/3e6245ebe7ef341639e9a7e402b3ade8ad45a19f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Make ICC_*SGI*_EL1 undef in the absence of a vGICv3\n\nOn a system with a GICv3, if a guest hasn't been configured with\nGICv3 and that the host is not capable of GICv2 emulation,\na write to any of the ICC_*SGI*_EL1 registers is trapped to EL2.\n\nWe therefore try to emulate the SGI access, only to hit a NULL\npointer as no private interrupt is allocated (no GIC, remember?).\n\nThe obvious fix is to give the guest what it deserves, in the\nshape of a UNDEF exception."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46711",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c9c744666f7308a4daba520191e29d395260bcfe",
            "https://git.kernel.org/stable/c/53e2173172d26c0617b29dd83618b71664bed1fb",
            "https://git.kernel.org/stable/c/119806ae4e46cf239db8e6ad92bc2fd3daae86dc",
            "https://git.kernel.org/stable/c/9366922adc6a71378ca01f898c41be295309f044"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: fix ID 0 endp usage after multiple re-creations\n\n'local_addr_used' and 'add_addr_accepted' are decremented for addresses\nnot related to the initial subflow (ID0), because the source and\ndestination addresses of the initial subflows are known from the\nbeginning: they don't count as \"additional local address being used\" or\n\"ADD_ADDR being accepted\".\n\nIt is then required not to increment them when the entrypoint used by\nthe initial subflow is removed and re-added during a connection. Without\nthis modification, this entrypoint cannot be removed and re-added more\nthan once."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-39377",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/media-encoder/apsb24-53.html"
        ],
        "summary": "Media Encoder versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds write vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46712",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c45558414b8f2e0b9dc34eb8f9d4e8359b887681",
            "https://git.kernel.org/stable/c/e9fd436bb8fb9b9d31fdf07bbcdba6d30290c5e4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Disable coherent dumb buffers without 3d\n\nCoherent surfaces make only sense if the host renders to them using\naccelerated apis. Without 3d the entire content of dumb buffers stays\nin the guest making all of the extra work they're doing to synchronize\nbetween guest and host useless.\n\nConfigurations without 3d also tend to run with very low graphics\nmemory limits. The pinned console fb, mob cursors and graphical login\nmanager tend to run out of 16MB graphics memory that those guests use.\n\nFix it by making sure the coherent dumb buffers are only used on\nconfigs with 3d enabled."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-41872",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/media-encoder/apsb24-53.html"
        ],
        "summary": "Media Encoder versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-41871",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/media-encoder/apsb24-53.html"
        ],
        "summary": "Media Encoder versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds read vulnerability when parsing a crafted file, which could result in a read past the end of an allocated memory structure. An attacker could leverage this vulnerability to execute code in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8663",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/cad4300f-02f9-4c9f-9bb3-1c9da8b78ac9?source=cve",
            "https://plugins.trac.wordpress.org/browser/wp-simple-booking-calendar/tags/2.0.10/includes/base/admin/calendar/views/view-edit-calendar.php#L155",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3150474%40wp-simple-booking-calendar&new=3150474%40wp-simple-booking-calendar&sfp_email=&sfph_mail=",
            "https://plugins.trac.wordpress.org/browser/wp-simple-booking-calendar/tags/2.0.10/includes/modules/update-checker/views/view-register-website.php#L21"
        ],
        "summary": "The WP Simple Booking Calendar plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg & remove_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.0.10. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "psirt@adobe.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-41873",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://helpx.adobe.com/security/products/media-encoder/apsb24-53.html"
        ],
        "summary": "Media Encoder versions 24.5, 23.6.8 and earlier are affected by an out-of-bounds read vulnerability that could lead to disclosure of sensitive memory. An attacker could leverage this vulnerability to bypass mitigations such as ASLR. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46702",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/747bc154577de6e6af4bc99abfa859b8419bb4d8",
            "https://git.kernel.org/stable/c/23ce6ba3b95488a2b9e9f6d43b340da0c15395dc",
            "https://git.kernel.org/stable/c/80ac8d194831eca0c2f4fd862f7925532fda320c",
            "https://git.kernel.org/stable/c/18b3ad2a3cc877dd4b16f48d84aa27b78d53bf1d",
            "https://git.kernel.org/stable/c/7ca24cf9163c112bb6b580c6fb57c04a1f8b76e1",
            "https://git.kernel.org/stable/c/e2006140ad2e01a02ed0aff49cc2ae3ceeb11f8d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Mark XDomain as unplugged when router is removed\n\nI noticed that when we do discrete host router NVM upgrade and it gets\nhot-removed from the PCIe side as a result of NVM firmware authentication,\nif there is another host connected with enabled paths we hang in tearing\nthem down. This is due to fact that the Thunderbolt networking driver\nalso tries to cleanup the paths and ends up blocking in\ntb_disconnect_xdomain_paths() waiting for the domain lock.\n\nHowever, at this point we already cleaned the paths in tb_stop() so\nthere is really no need for tb_disconnect_xdomain_paths() to do that\nanymore. Furthermore it already checks if the XDomain is unplugged and\nbails out early so take advantage of that and mark the XDomain as\nunplugged when we remove the parent router."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46703",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/321aecb079e9ca8b1af90778068a6fb40f2bf22d",
            "https://git.kernel.org/stable/c/0863bffda1131fd2fa9c05b653ad9ee3d8db127e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"serial: 8250_omap: Set the console genpd always on if no console suspend\"\n\nThis reverts commit 68e6939ea9ec3d6579eadeab16060339cdeaf940.\n\nKevin reported that this causes a crash during suspend on platforms that\ndont use PM domains."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46706",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8eb92cfca6c2c5a15ab1773f3d18ab8d8f7dbb68",
            "https://git.kernel.org/stable/c/3ecf625d4acb71d726bc0b49403cf68388b3d58d",
            "https://git.kernel.org/stable/c/dc98d76a15bc29a9a4e76f2f65f39f3e590fb15c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: fsl_lpuart: mark last busy before uart_add_one_port\n\nWith \"earlycon initcall_debug=1 loglevel=8\" in bootargs, kernel\nsometimes boot hang. It is because normal console still is not ready,\nbut runtime suspend is called, so early console putchar will hang\nin waiting TRDE set in UARTSTAT.\n\nThe lpuart driver has auto suspend delay set to 3000ms, but during\nuart_add_one_port, a child device serial ctrl will added and probed with\nits pm runtime enabled(see serial_ctrl.c).\nThe runtime suspend call path is:\ndevice_add\n     |-> bus_probe_device\n           |->device_initial_probe\n\t           |->__device_attach\n                         |-> pm_runtime_get_sync(dev->parent);\n\t\t\t |-> pm_request_idle(dev);\n\t\t\t |-> pm_runtime_put(dev->parent);\n\nSo in the end, before normal console ready, the lpuart get runtime\nsuspended. And earlycon putchar will hang.\n\nTo address the issue, mark last busy just after pm_runtime_enable,\nthree seconds is long enough to switch from bootconsole to normal\nconsole."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46705",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b1c9fbed3884d3883021d699c7cdf5253a65543a",
            "https://git.kernel.org/stable/c/c7117419784f612d59ee565145f722e8b5541fe6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: reset mmio mappings with devm\n\nSet our various mmio mappings to NULL. This should make it easier to\ncatch something rogue trying to mess with mmio after device removal. For\nexample, we might unmap everything and then start hitting some mmio\naddress which has already been unmamped by us and then remapped by\nsomething else, causing all kinds of carnage."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46709",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9a9716bbbf3dd6b6cbefba3abcc89af8b72631f4",
            "https://git.kernel.org/stable/c/5c12391ee1ab59cb2f3be3f1f5e6d0fc0c2dc854",
            "https://git.kernel.org/stable/c/50f1199250912568606b3778dc56646c10cb7b04"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix prime with external buffers\n\nMake sure that for external buffers mapping goes through the dma_buf\ninterface instead of trying to access pages directly.\n\nExternal buffers might not provide direct access to readable/writable\npages so to make sure the bo's created from external dma_bufs can be\nread dma_buf interface has to be used.\n\nFixes crashes in IGT's kms_prime with vgem. Regular desktop usage won't\ntrigger this due to the fact that virtual machines will not have\nmultiple GPUs but it enables better test coverage in IGT."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46708",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0197bf772f657fbdea5e9bdec5eea6e67d82cbde",
            "https://git.kernel.org/stable/c/d3692d95cc4d88114b070ee63cffc976f00f207f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: qcom: x1e80100: Fix special pin offsets\n\nRemove the erroneus 0x100000 offset to prevent the boards from crashing\non pin state setting, as well as for the intended state changes to take\neffect."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46710",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d5228d158e4c0b1663b3983044913c15c3d0135e",
            "https://git.kernel.org/stable/c/aba07b9a0587f50e5d3346eaa19019cf3f86c0ea"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Prevent unmapping active read buffers\n\nThe kms paths keep a persistent map active to read and compare the cursor\nbuffer. These maps can race with each other in simple scenario where:\na) buffer \"a\" mapped for update\nb) buffer \"a\" mapped for compare\nc) do the compare\nd) unmap \"a\" for compare\ne) update the cursor\nf) unmap \"a\" for update\nAt step \"e\" the buffer has been unmapped and the read contents is bogus.\n\nPrevent unmapping of active read buffers by simply keeping a count of\nhow many paths have currently active maps and unmap only when the count\nreaches 0."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-5567",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/5dfaa23f-05df-423c-a5f6-02f2b714b5b6?source=cve",
            "https://support.muffingroup.com/changelog/",
            "https://themeforest.net/item/betheme-responsive-multipurpose-wordpress-theme/7758048#item-description__changelog"
        ],
        "summary": "The Betheme theme for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 27.5.5 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-7888",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/494d2e69-0759-419a-a603-e8870c157e49?source=cve",
            "https://plugins.trac.wordpress.org/browser/classified-listing/tags/3.1.6/app/Controllers/Ajax/FormBuilderAdminAjax.php",
            "https://plugins.trac.wordpress.org/changeset/3150743/classified-listing/trunk/app/Controllers/Ajax/FormBuilderAdminAjax.php"
        ],
        "summary": "The Classified Listing \u2013 Classified ads & Business Directory Plugin plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on several functions like export_forms(), import_forms(), update_fb_options(), and many more in all versions up to, and including, 3.1.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to modify forms and various other settings."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8664",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/70c1ee04-cfb1-4819-95ab-497e814da16f?source=cve",
            "https://plugins.trac.wordpress.org/browser/wp-test-email/tags/1.1.7/wp-test-email.php#L189",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3150538%40wp-test-email&new=3150538%40wp-test-email&sfp_email=&sfph_mail="
        ],
        "summary": "The WP Test Email plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.1.7. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8665",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/0828a4a4-2dd5-4dff-8563-c81d6b24b949?source=cve",
            "https://plugins.trac.wordpress.org/browser/yith-custom-login/tags/1.7.3/yit-common/yith-panel.php#L149",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3150123%40yith-custom-login&new=3150123%40yith-custom-login&sfp_email=&sfph_mail=",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3150560%40yith-custom-login&new=3150560%40yith-custom-login&sfp_email=&sfph_mail="
        ],
        "summary": "The YITH Custom Login plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 1.7.3. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-13T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-8742",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/76c292dc-e9da-4256-82df-58ac5def4771?source=cve",
            "https://plugins.trac.wordpress.org/browser/essential-addons-for-elementor-lite/tags/6.0.3/includes/Elements/Filterable_Gallery.php#L566",
            "https://plugins.trac.wordpress.org/changeset/3148624/",
            "https://wordpress.org/plugins/essential-addons-for-elementor-lite/#developers"
        ],
        "summary": "The Essential Addons for Elementor \u2013 Best Elementor Addon, Templates, Widgets, Kits & WooCommerce Builders plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Filterable Gallery widget in all versions up to, and including, 6.0.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "3DS.Information-Security@3ds.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-7932",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.3ds.com/vulnerability/advisories"
        ],
        "summary": "A stored Cross-site Scripting (XSS) vulnerability affecting 3DDashboard in 3DSwymer on Release 3DEXPERIENCE R2024x allows an attacker to execute arbitrary script code in user's browser session."
    },
    {
        "Modified": "2024-09-13T07:15:00",
        "Published": "2024-09-02T12:15:00",
        "access": {},
        "assigner": "3DS.Information-Security@3ds.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-7939",
        "impact": {},
        "last-modified": "2024-09-13T07:15:00",
        "references": [
            "https://www.3ds.com/vulnerability/advisories"
        ],
        "summary": "A stored Cross-site Scripting (XSS) vulnerability affecting 3DSwym in 3DSwymer on Release 3DEXPERIENCE R2024x allows an attacker to execute arbitrary script code in user's browser session."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46675",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/eca3f543f817da87c00d1a5697b473efb548204f",
            "https://git.kernel.org/stable/c/d2afc2bffec77316b90d530b07695e3f534df914",
            "https://git.kernel.org/stable/c/b72da4d89b97da71e056cc4d1429b2bc426a9c2f",
            "https://git.kernel.org/stable/c/111277b881def3153335acfe0d1f43e6cd83ac93",
            "https://git.kernel.org/stable/c/2189fd13c577d7881f94affc09c950a795064c4b",
            "https://git.kernel.org/stable/c/7bb11a75dd4d3612378b90e2a4aa49bdccea28ab",
            "https://git.kernel.org/stable/c/e23f6ad8d110bf632f7471482e10b43dc174fb72",
            "https://git.kernel.org/stable/c/14e497183df28c006603cc67fd3797a537eef7b9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: Prevent USB core invalid event buffer address access\n\nThis commit addresses an issue where the USB core could access an\ninvalid event buffer address during runtime suspend, potentially causing\nSMMU faults and other memory issues in Exynos platforms. The problem\narises from the following sequence.\n        1. In dwc3_gadget_suspend, there is a chance of a timeout when\n        moving the USB core to the halt state after clearing the\n        run/stop bit by software.\n        2. In dwc3_core_exit, the event buffer is cleared regardless of\n        the USB core's status, which may lead to an SMMU faults and\n        other memory issues. if the USB core tries to access the event\n        buffer address.\n\nTo prevent this hardware quirk on Exynos platforms, this commit ensures\nthat the event buffer address is not cleared by software  when the USB\ncore is active during runtime suspend by checking its status before\nclearing the buffer address."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46675",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/eca3f543f817da87c00d1a5697b473efb548204f",
            "https://git.kernel.org/stable/c/d2afc2bffec77316b90d530b07695e3f534df914",
            "https://git.kernel.org/stable/c/b72da4d89b97da71e056cc4d1429b2bc426a9c2f",
            "https://git.kernel.org/stable/c/111277b881def3153335acfe0d1f43e6cd83ac93",
            "https://git.kernel.org/stable/c/2189fd13c577d7881f94affc09c950a795064c4b",
            "https://git.kernel.org/stable/c/7bb11a75dd4d3612378b90e2a4aa49bdccea28ab",
            "https://git.kernel.org/stable/c/e23f6ad8d110bf632f7471482e10b43dc174fb72",
            "https://git.kernel.org/stable/c/14e497183df28c006603cc67fd3797a537eef7b9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: Prevent USB core invalid event buffer address access\n\nThis commit addresses an issue where the USB core could access an\ninvalid event buffer address during runtime suspend, potentially causing\nSMMU faults and other memory issues in Exynos platforms. The problem\narises from the following sequence.\n        1. In dwc3_gadget_suspend, there is a chance of a timeout when\n        moving the USB core to the halt state after clearing the\n        run/stop bit by software.\n        2. In dwc3_core_exit, the event buffer is cleared regardless of\n        the USB core's status, which may lead to an SMMU faults and\n        other memory issues. if the USB core tries to access the event\n        buffer address.\n\nTo prevent this hardware quirk on Exynos platforms, this commit ensures\nthat the event buffer address is not cleared by software  when the USB\ncore is active during runtime suspend by checking its status before\nclearing the buffer address."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46674",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b0979a885b9d4df2a25b88e9d444ccaa5f9f495c",
            "https://git.kernel.org/stable/c/f3498650df0805c75b4e1c94d07423c46cbf4ce1",
            "https://git.kernel.org/stable/c/6aee4c5635d81f4809c3b9f0c198a65adfbb2ada",
            "https://git.kernel.org/stable/c/060f41243ad7f6f5249fa7290dda0c01f723d12d",
            "https://git.kernel.org/stable/c/4c6735299540f3c82a5033d35be76a5c42e0fb18",
            "https://git.kernel.org/stable/c/e1e5e8ea2731150d5ba7c707f9e02fafebcfeb49",
            "https://git.kernel.org/stable/c/1de989668708ce5875efc9d669d227212aeb9a90",
            "https://git.kernel.org/stable/c/ddfcfeba891064b88bb844208b43bef2ef970f0c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: st: fix probed platform device ref count on probe error path\n\nThe probe function never performs any paltform device allocation, thus\nerror path \"undo_platform_dev_alloc\" is entirely bogus.  It drops the\nreference count from the platform device being probed.  If error path is\ntriggered, this will lead to unbalanced device reference counts and\npremature release of device resources, thus possible use-after-free when\nreleasing remaining devm-managed resources."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "security@vmware.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38816",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://spring.io/security/cve-2024-38816"
        ],
        "summary": "Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.\n\nSpecifically, an application is vulnerable when both of the following are true:\n\n  *  the web application uses RouterFunctions\u00a0to serve static resources\n  *  resource handling is explicitly configured with a FileSystemResource\u00a0location\n\n\nHowever, malicious requests are blocked and rejected when any of the following is true:\n\n  *  the  Spring Security HTTP Firewall https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html \u00a0is in use\n  *  the application runs on Tomcat or Jetty"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46676",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c5e05237444f32f6cfe5d907603a232c77a08b31",
            "https://git.kernel.org/stable/c/8ddaea033de051ed61b39f6b69ad54a411172b33",
            "https://git.kernel.org/stable/c/7535db0624a2dede374c42040808ad9a9101d723",
            "https://git.kernel.org/stable/c/7ecd3dd4f8eecd3309432156ccfe24768e009ec4",
            "https://git.kernel.org/stable/c/56ad559cf6d87f250a8d203b555dfc3716afa946",
            "https://git.kernel.org/stable/c/64513d0e546a1f19e390f7e5eba3872bfcbdacf5",
            "https://git.kernel.org/stable/c/febccb39255f9df35527b88c953b2e0deae50e53"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46680",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/662a55986b88807da4d112d838c8aaa05810e938",
            "https://git.kernel.org/stable/c/29a1d9971e38f92c84b363ff50379dd434ddfe1c",
            "https://git.kernel.org/stable/c/35237475384ab3622f63c3c09bdf6af6dacfe9c3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btnxpuart: Fix random crash seen while removing driver\n\nThis fixes the random kernel crash seen while removing the driver, when\nrunning the load/unload test over multiple iterations.\n\n1) modprobe btnxpuart\n2) hciconfig hci0 reset\n3) hciconfig (check hci0 interface up with valid BD address)\n4) modprobe -r btnxpuart\nRepeat steps 1 to 4\n\nThe ps_wakeup() call in btnxpuart_close() schedules the psdata->work(),\nwhich gets scheduled after module is removed, causing a kernel crash.\n\nThis hidden issue got highlighted after enabling Power Save by default\nin 4183a7be7700 (Bluetooth: btnxpuart: Enable Power Save feature on\nstartup)\n\nThe new ps_cleanup() deasserts UART break immediately while closing\nserdev device, cancels any scheduled ps_work and destroys the ps_lock\nmutex.\n\n[   85.884604] Unable to handle kernel paging request at virtual address ffffd4a61638f258\n[   85.884624] Mem abort info:\n[   85.884625]   ESR = 0x0000000086000007\n[   85.884628]   EC = 0x21: IABT (current EL), IL = 32 bits\n[   85.884633]   SET = 0, FnV = 0\n[   85.884636]   EA = 0, S1PTW = 0\n[   85.884638]   FSC = 0x07: level 3 translation fault\n[   85.884642] swapper pgtable: 4k pages, 48-bit VAs, pgdp=0000000041dd0000\n[   85.884646] [ffffd4a61638f258] pgd=1000000095fff003, p4d=1000000095fff003, pud=100000004823d003, pmd=100000004823e003, pte=0000000000000000\n[   85.884662] Internal error: Oops: 0000000086000007 [#1] PREEMPT SMP\n[   85.890932] Modules linked in: algif_hash algif_skcipher af_alg overlay fsl_jr_uio caam_jr caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine authenc libdes crct10dif_ce polyval_ce polyval_generic snd_soc_imx_spdif snd_soc_imx_card snd_soc_ak5558 snd_soc_ak4458 caam secvio error snd_soc_fsl_spdif snd_soc_fsl_micfil snd_soc_fsl_sai snd_soc_fsl_utils gpio_ir_recv rc_core fuse [last unloaded: btnxpuart(O)]\n[   85.927297] CPU: 1 PID: 67 Comm: kworker/1:3 Tainted: G           O       6.1.36+g937b1be4345a #1\n[   85.936176] Hardware name: FSL i.MX8MM EVK board (DT)\n[   85.936182] Workqueue: events 0xffffd4a61638f380\n[   85.936198] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   85.952817] pc : 0xffffd4a61638f258\n[   85.952823] lr : 0xffffd4a61638f258\n[   85.952827] sp : ffff8000084fbd70\n[   85.952829] x29: ffff8000084fbd70 x28: 0000000000000000 x27: 0000000000000000\n[   85.963112] x26: ffffd4a69133f000 x25: ffff4bf1c8540990 x24: ffff4bf215b87305\n[   85.963119] x23: ffff4bf215b87300 x22: ffff4bf1c85409d0 x21: ffff4bf1c8540970\n[   85.977382] x20: 0000000000000000 x19: ffff4bf1c8540880 x18: 0000000000000000\n[   85.977391] x17: 0000000000000000 x16: 0000000000000133 x15: 0000ffffe2217090\n[   85.977399] x14: 0000000000000001 x13: 0000000000000133 x12: 0000000000000139\n[   85.977407] x11: 0000000000000001 x10: 0000000000000a60 x9 : ffff8000084fbc50\n[   85.977417] x8 : ffff4bf215b7d000 x7 : ffff4bf215b83b40 x6 : 00000000000003e8\n[   85.977424] x5 : 00000000410fd030 x4 : 0000000000000000 x3 : 0000000000000000\n[   85.977432] x2 : 0000000000000000 x1 : ffff4bf1c4265880 x0 : 0000000000000000\n[   85.977443] Call trace:\n[   85.977446]  0xffffd4a61638f258\n[   85.977451]  0xffffd4a61638f3e8\n[   85.977455]  process_one_work+0x1d4/0x330\n[   85.977464]  worker_thread+0x6c/0x430\n[   85.977471]  kthread+0x108/0x10c\n[   85.977476]  ret_from_fork+0x10/0x20\n[   85.977488] Code: bad PC value\n[   85.977491] ---[ end trace 0000000000000000 ]---\n\nPreset since v6.9.11"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46680",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/662a55986b88807da4d112d838c8aaa05810e938",
            "https://git.kernel.org/stable/c/29a1d9971e38f92c84b363ff50379dd434ddfe1c",
            "https://git.kernel.org/stable/c/35237475384ab3622f63c3c09bdf6af6dacfe9c3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btnxpuart: Fix random crash seen while removing driver\n\nThis fixes the random kernel crash seen while removing the driver, when\nrunning the load/unload test over multiple iterations.\n\n1) modprobe btnxpuart\n2) hciconfig hci0 reset\n3) hciconfig (check hci0 interface up with valid BD address)\n4) modprobe -r btnxpuart\nRepeat steps 1 to 4\n\nThe ps_wakeup() call in btnxpuart_close() schedules the psdata->work(),\nwhich gets scheduled after module is removed, causing a kernel crash.\n\nThis hidden issue got highlighted after enabling Power Save by default\nin 4183a7be7700 (Bluetooth: btnxpuart: Enable Power Save feature on\nstartup)\n\nThe new ps_cleanup() deasserts UART break immediately while closing\nserdev device, cancels any scheduled ps_work and destroys the ps_lock\nmutex.\n\n[   85.884604] Unable to handle kernel paging request at virtual address ffffd4a61638f258\n[   85.884624] Mem abort info:\n[   85.884625]   ESR = 0x0000000086000007\n[   85.884628]   EC = 0x21: IABT (current EL), IL = 32 bits\n[   85.884633]   SET = 0, FnV = 0\n[   85.884636]   EA = 0, S1PTW = 0\n[   85.884638]   FSC = 0x07: level 3 translation fault\n[   85.884642] swapper pgtable: 4k pages, 48-bit VAs, pgdp=0000000041dd0000\n[   85.884646] [ffffd4a61638f258] pgd=1000000095fff003, p4d=1000000095fff003, pud=100000004823d003, pmd=100000004823e003, pte=0000000000000000\n[   85.884662] Internal error: Oops: 0000000086000007 [#1] PREEMPT SMP\n[   85.890932] Modules linked in: algif_hash algif_skcipher af_alg overlay fsl_jr_uio caam_jr caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine authenc libdes crct10dif_ce polyval_ce polyval_generic snd_soc_imx_spdif snd_soc_imx_card snd_soc_ak5558 snd_soc_ak4458 caam secvio error snd_soc_fsl_spdif snd_soc_fsl_micfil snd_soc_fsl_sai snd_soc_fsl_utils gpio_ir_recv rc_core fuse [last unloaded: btnxpuart(O)]\n[   85.927297] CPU: 1 PID: 67 Comm: kworker/1:3 Tainted: G           O       6.1.36+g937b1be4345a #1\n[   85.936176] Hardware name: FSL i.MX8MM EVK board (DT)\n[   85.936182] Workqueue: events 0xffffd4a61638f380\n[   85.936198] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   85.952817] pc : 0xffffd4a61638f258\n[   85.952823] lr : 0xffffd4a61638f258\n[   85.952827] sp : ffff8000084fbd70\n[   85.952829] x29: ffff8000084fbd70 x28: 0000000000000000 x27: 0000000000000000\n[   85.963112] x26: ffffd4a69133f000 x25: ffff4bf1c8540990 x24: ffff4bf215b87305\n[   85.963119] x23: ffff4bf215b87300 x22: ffff4bf1c85409d0 x21: ffff4bf1c8540970\n[   85.977382] x20: 0000000000000000 x19: ffff4bf1c8540880 x18: 0000000000000000\n[   85.977391] x17: 0000000000000000 x16: 0000000000000133 x15: 0000ffffe2217090\n[   85.977399] x14: 0000000000000001 x13: 0000000000000133 x12: 0000000000000139\n[   85.977407] x11: 0000000000000001 x10: 0000000000000a60 x9 : ffff8000084fbc50\n[   85.977417] x8 : ffff4bf215b7d000 x7 : ffff4bf215b83b40 x6 : 00000000000003e8\n[   85.977424] x5 : 00000000410fd030 x4 : 0000000000000000 x3 : 0000000000000000\n[   85.977432] x2 : 0000000000000000 x1 : ffff4bf1c4265880 x0 : 0000000000000000\n[   85.977443] Call trace:\n[   85.977446]  0xffffd4a61638f258\n[   85.977451]  0xffffd4a61638f3e8\n[   85.977455]  process_one_work+0x1d4/0x330\n[   85.977464]  worker_thread+0x6c/0x430\n[   85.977471]  kthread+0x108/0x10c\n[   85.977476]  ret_from_fork+0x10/0x20\n[   85.977488] Code: bad PC value\n[   85.977491] ---[ end trace 0000000000000000 ]---\n\nPreset since v6.9.11"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46679",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ec7b4f7f644018ac293cb1b02528a40a32917e62",
            "https://git.kernel.org/stable/c/842a40c7273ba1c1cb30dda50405b328de1d860e",
            "https://git.kernel.org/stable/c/7a8d98b6d6484d3ad358510366022da080c37cbc",
            "https://git.kernel.org/stable/c/9bba5955eed160102114d4cc00c3d399be9bdae4",
            "https://git.kernel.org/stable/c/94ab317024ba373d37340893d1c0358638935fbb",
            "https://git.kernel.org/stable/c/1d6d9b5b1b95bfeccb84386a51b7e6c510ec13b2",
            "https://git.kernel.org/stable/c/a699781c79ecf6cfe67fb00a0331b4088c7c8466"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: check device is present when getting link settings\n\nA sysfs reader can race with a device reset or removal, attempting to\nread device state when the device is not actually present. eg:\n\n     [exception RIP: qed_get_current_link+17]\n  #8 [ffffb9e4f2907c48] qede_get_link_ksettings at ffffffffc07a994a [qede]\n  #9 [ffffb9e4f2907cd8] __rh_call_get_link_ksettings at ffffffff992b01a3\n #10 [ffffb9e4f2907d38] __ethtool_get_link_ksettings at ffffffff992b04e4\n #11 [ffffb9e4f2907d90] duplex_show at ffffffff99260300\n #12 [ffffb9e4f2907e38] dev_attr_show at ffffffff9905a01c\n #13 [ffffb9e4f2907e50] sysfs_kf_seq_show at ffffffff98e0145b\n #14 [ffffb9e4f2907e68] seq_read at ffffffff98d902e3\n #15 [ffffb9e4f2907ec8] vfs_read at ffffffff98d657d1\n #16 [ffffb9e4f2907f00] ksys_read at ffffffff98d65c3f\n #17 [ffffb9e4f2907f38] do_syscall_64 at ffffffff98a052fb\n\n crash> struct net_device.state ffff9a9d21336000\n    state = 5,\n\nstate 5 is __LINK_STATE_START (0b1) and __LINK_STATE_NOCARRIER (0b100).\nThe device is not present, note lack of __LINK_STATE_PRESENT (0b10).\n\nThis is the same sort of panic as observed in commit 4224cfd7fb65\n(\"net-sysfs: add check for netdevice being present to speed_show\").\n\nThere are many other callers of __ethtool_get_link_ksettings() which\ndon't have a device presence check.\n\nMove this check into ethtool to protect all callers."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46688",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/49c0e081998008cde0c872c0ff9affa1ece4b878",
            "https://git.kernel.org/stable/c/0005e01e1e875c5e27130c5e2ed0189749d1e08a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix out-of-bound access when z_erofs_gbuf_growsize() partially fails\n\nIf z_erofs_gbuf_growsize() partially fails on a global buffer due to\nmemory allocation failure or fault injection (as reported by syzbot [1]),\nnew pages need to be freed by comparing to the existing pages to avoid\nmemory leaks.\n\nHowever, the old gbuf->pages[] array may not be large enough, which can\nlead to null-ptr-deref or out-of-bound access.\n\nFix this by checking against gbuf->nrpages in advance.\n\n[1] https://lore.kernel.org/r/000000000000f7b96e062018c6e3@google.com"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46688",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/49c0e081998008cde0c872c0ff9affa1ece4b878",
            "https://git.kernel.org/stable/c/0005e01e1e875c5e27130c5e2ed0189749d1e08a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix out-of-bound access when z_erofs_gbuf_growsize() partially fails\n\nIf z_erofs_gbuf_growsize() partially fails on a global buffer due to\nmemory allocation failure or fault injection (as reported by syzbot [1]),\nnew pages need to be freed by comparing to the existing pages to avoid\nmemory leaks.\n\nHowever, the old gbuf->pages[] array may not be large enough, which can\nlead to null-ptr-deref or out-of-bound access.\n\nFix this by checking against gbuf->nrpages in advance.\n\n[1] https://lore.kernel.org/r/000000000000f7b96e062018c6e3@google.com"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46682",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ba0b697de298285301c71c258598226e06494236",
            "https://git.kernel.org/stable/c/a204501e1743d695ca2930ed25a2be9f8ced96d3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: prevent panic for nfsv4.0 closed files in nfs4_show_open\n\nPrior to commit 3f29cc82a84c (\"nfsd: split sc_status out of\nsc_type\") states_show() relied on sc_type field to be of valid\ntype before calling into a subfunction to show content of a\nparticular stateid. From that commit, we split the validity of\nthe stateid into sc_status and no longer changed sc_type to 0\nwhile unhashing the stateid. This resulted in kernel oopsing\nfor nfsv4.0 opens that stay around and in nfs4_show_open()\nwould derefence sc_file which was NULL.\n\nInstead, for closed open stateids forgo displaying information\nthat relies of having a valid sc_file.\n\nTo reproduce: mount the server with 4.0, read and close\na file and then on the server cat /proc/fs/nfsd/clients/2/states\n\n[  513.590804] Call trace:\n[  513.590925]  _raw_spin_lock+0xcc/0x160\n[  513.591119]  nfs4_show_open+0x78/0x2c0 [nfsd]\n[  513.591412]  states_show+0x44c/0x488 [nfsd]\n[  513.591681]  seq_read_iter+0x5d8/0x760\n[  513.591896]  seq_read+0x188/0x208\n[  513.592075]  vfs_read+0x148/0x470\n[  513.592241]  ksys_read+0xcc/0x178"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46678",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6b598069164ac1bb60996d6ff94e7f9169dbd2d3",
            "https://git.kernel.org/stable/c/56354b0a2c24a7828eeed7de4b4dc9652d9affa3",
            "https://git.kernel.org/stable/c/2aeeef906d5a526dc60cf4af92eda69836c39b1f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: change ipsec_lock from spin lock to mutex\n\nIn the cited commit, bond->ipsec_lock is added to protect ipsec_list,\nhence xdo_dev_state_add and xdo_dev_state_delete are called inside\nthis lock. As ipsec_lock is a spin lock and such xfrmdev ops may sleep,\n\"scheduling while atomic\" will be triggered when changing bond's\nactive slave.\n\n[  101.055189] BUG: scheduling while atomic: bash/902/0x00000200\n[  101.055726] Modules linked in:\n[  101.058211] CPU: 3 PID: 902 Comm: bash Not tainted 6.9.0-rc4+ #1\n[  101.058760] Hardware name:\n[  101.059434] Call Trace:\n[  101.059436]  <TASK>\n[  101.060873]  dump_stack_lvl+0x51/0x60\n[  101.061275]  __schedule_bug+0x4e/0x60\n[  101.061682]  __schedule+0x612/0x7c0\n[  101.062078]  ? __mod_timer+0x25c/0x370\n[  101.062486]  schedule+0x25/0xd0\n[  101.062845]  schedule_timeout+0x77/0xf0\n[  101.063265]  ? asm_common_interrupt+0x22/0x40\n[  101.063724]  ? __bpf_trace_itimer_state+0x10/0x10\n[  101.064215]  __wait_for_common+0x87/0x190\n[  101.064648]  ? usleep_range_state+0x90/0x90\n[  101.065091]  cmd_exec+0x437/0xb20 [mlx5_core]\n[  101.065569]  mlx5_cmd_do+0x1e/0x40 [mlx5_core]\n[  101.066051]  mlx5_cmd_exec+0x18/0x30 [mlx5_core]\n[  101.066552]  mlx5_crypto_create_dek_key+0xea/0x120 [mlx5_core]\n[  101.067163]  ? bonding_sysfs_store_option+0x4d/0x80 [bonding]\n[  101.067738]  ? kmalloc_trace+0x4d/0x350\n[  101.068156]  mlx5_ipsec_create_sa_ctx+0x33/0x100 [mlx5_core]\n[  101.068747]  mlx5e_xfrm_add_state+0x47b/0xaa0 [mlx5_core]\n[  101.069312]  bond_change_active_slave+0x392/0x900 [bonding]\n[  101.069868]  bond_option_active_slave_set+0x1c2/0x240 [bonding]\n[  101.070454]  __bond_opt_set+0xa6/0x430 [bonding]\n[  101.070935]  __bond_opt_set_notify+0x2f/0x90 [bonding]\n[  101.071453]  bond_opt_tryset_rtnl+0x72/0xb0 [bonding]\n[  101.071965]  bonding_sysfs_store_option+0x4d/0x80 [bonding]\n[  101.072567]  kernfs_fop_write_iter+0x10c/0x1a0\n[  101.073033]  vfs_write+0x2d8/0x400\n[  101.073416]  ? alloc_fd+0x48/0x180\n[  101.073798]  ksys_write+0x5f/0xe0\n[  101.074175]  do_syscall_64+0x52/0x110\n[  101.074576]  entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\nAs bond_ipsec_add_sa_all and bond_ipsec_del_sa_all are only called\nfrom bond_change_active_slave, which requires holding the RTNL lock.\nAnd bond_ipsec_add_sa and bond_ipsec_del_sa are xfrm state\nxdo_dev_state_add and xdo_dev_state_delete APIs, which are in user\ncontext. So ipsec_lock doesn't have to be spin lock, change it to\nmutex, and thus the above issue can be resolved."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46690",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1b46a871e980e3daa16fd5e77539966492e8910a",
            "https://git.kernel.org/stable/c/40927f3d0972bf86357a32a5749be71a551241b6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix nfsd4_deleg_getattr_conflict in presence of third party lease\n\nIt is not safe to dereference fl->c.flc_owner without first confirming\nfl->fl_lmops is the expected manager.  nfsd4_deleg_getattr_conflict()\ntests fl_lmops but largely ignores the result and assumes that flc_owner\nis an nfs4_delegation anyway.  This is wrong.\n\nWith this patch we restore the \"!= &nfsd_lease_mng_ops\" case to behave\nas it did before the change mentioned below.  This is the same as the\ncurrent code, but without any reference to a possible delegation."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46692",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/cdf7efe4b02aa93813db0bf1ca596ad298ab6b06",
            "https://git.kernel.org/stable/c/e40115c33c0d79c940545b6b12112aace7acd9f5",
            "https://git.kernel.org/stable/c/9960085a3a82c58d3323c1c20b991db6045063b0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Mark get_wq_ctx() as atomic call\n\nCurrently get_wq_ctx() is wrongly configured as a standard call. When two\nSMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to\nresume the corresponding sleeping thread. But if get_wq_ctx() is\ninterrupted, goes to sleep and another SMC call is waiting to be allocated\na waitq context, it leads to a deadlock.\n\nTo avoid this get_wq_ctx() must be an atomic call and can't be a standard\nSMC call. Hence mark get_wq_ctx() as a fast call."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46696",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e0b66698a5ae41078f7490e8b3527013f5fccd6c",
            "https://git.kernel.org/stable/c/1116e0e372eb16dd907ec571ce5d4af325c55c10"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix potential UAF in nfsd4_cb_getattr_release\n\nOnce we drop the delegation reference, the fields embedded in it are no\nlonger safe to access. Do that last."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46696",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e0b66698a5ae41078f7490e8b3527013f5fccd6c",
            "https://git.kernel.org/stable/c/1116e0e372eb16dd907ec571ce5d4af325c55c10"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix potential UAF in nfsd4_cb_getattr_release\n\nOnce we drop the delegation reference, the fields embedded in it are no\nlonger safe to access. Do that last."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46700",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ed37550d7c516017c3b0324bdf144e2fa563ffb0",
            "https://git.kernel.org/stable/c/11752c013f562a1124088a35bd314aa0e9f0e88f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/mes: fix mes ring buffer overflow\n\nwait memory room until enough before writing mes packets\nto avoid ring buffer overflow.\n\nv2: squash in sched_hw_submission fix\n\n(cherry picked from commit 34e087e8920e635c62e2ed6a758b0cd27f836d13)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46683",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/10081b0b0ed201f53e24bd92deb2e0f3c3e713d4",
            "https://git.kernel.org/stable/c/730b72480e29f63fd644f5fa57c9d46109428953"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: prevent UAF around preempt fence\n\nThe fence lock is part of the queue, therefore in the current design\nanything locking the fence should then also hold a ref to the queue to\nprevent the queue from being freed.\n\nHowever, currently it looks like we signal the fence and then drop the\nqueue ref, but if something is waiting on the fence, the waiter is\nkicked to wake up at some later point, where upon waking up it first\ngrabs the lock before checking the fence state. But if we have already\ndropped the queue ref, then the lock might already be freed as part of\nthe queue, leading to uaf.\n\nTo prevent this, move the fence lock into the fence itself so we don't\nrun into lifetime issues. Alternative might be to have device level\nlock, or only release the queue in the fence release callback, however\nthat might require pushing to another worker to avoid locking issues.\n\nReferences: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2454\nReferences: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2342\nReferences: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2020\n(cherry picked from commit 7116c35aacedc38be6d15bd21b2fc936eed0008b)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46700",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ed37550d7c516017c3b0324bdf144e2fa563ffb0",
            "https://git.kernel.org/stable/c/11752c013f562a1124088a35bd314aa0e9f0e88f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/mes: fix mes ring buffer overflow\n\nwait memory room until enough before writing mes packets\nto avoid ring buffer overflow.\n\nv2: squash in sched_hw_submission fix\n\n(cherry picked from commit 34e087e8920e635c62e2ed6a758b0cd27f836d13)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46685",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0a2bab5ed161318f57134716accba0a30f3af191",
            "https://git.kernel.org/stable/c/2cea369a5c2e85ab14ae716da1d1cc6d25c85e11",
            "https://git.kernel.org/stable/c/4e9436375fcc9bd2a60ee96aba6ed53f7a377d10",
            "https://git.kernel.org/stable/c/6341c2856785dca7006820b127278058a180c075",
            "https://git.kernel.org/stable/c/8f0bd526921b6867c2f10a83cd4fd14139adcd92",
            "https://git.kernel.org/stable/c/4ed45fe99ec9e3c9478bd634624cd05a57d002f7",
            "https://git.kernel.org/stable/c/292151af6add3e5ab11b2e9916cffa5f52859a1f",
            "https://git.kernel.org/stable/c/1c38a62f15e595346a1106025722869e87ffe044"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: single: fix potential NULL dereference in pcs_get_function()\n\npinmux_generic_get_function() can return NULL and the pointer 'function'\nwas dereferenced without checking against NULL. Add checking of pointer\n'function' in pcs_get_function().\n\nFound by code review."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6617",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/9c5efe3c-95a8-4647-86c0-20aa7dd92b66/"
        ],
        "summary": "The NinjaTeam Header Footer Custom Code WordPress plugin before 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46687",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/51722b99f41f5e722ffa10b8f61e802a0e70b331",
            "https://git.kernel.org/stable/c/4a3b9e1a8e6cd1a8d427a905e159de58d38941cc",
            "https://git.kernel.org/stable/c/10d9d8c3512f16cad47b2ff81ec6fc4b27d8ee10"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix a use-after-free when hitting errors inside btrfs_submit_chunk()\n\n[BUG]\nThere is an internal report that KASAN is reporting use-after-free, with\nthe following backtrace:\n\n  BUG: KASAN: slab-use-after-free in btrfs_check_read_bio+0xa68/0xb70 [btrfs]\n  Read of size 4 at addr ffff8881117cec28 by task kworker/u16:2/45\n  CPU: 1 UID: 0 PID: 45 Comm: kworker/u16:2 Not tainted 6.11.0-rc2-next-20240805-default+ #76\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\n  Workqueue: btrfs-endio btrfs_end_bio_work [btrfs]\n  Call Trace:\n   dump_stack_lvl+0x61/0x80\n   print_address_description.constprop.0+0x5e/0x2f0\n   print_report+0x118/0x216\n   kasan_report+0x11d/0x1f0\n   btrfs_check_read_bio+0xa68/0xb70 [btrfs]\n   process_one_work+0xce0/0x12a0\n   worker_thread+0x717/0x1250\n   kthread+0x2e3/0x3c0\n   ret_from_fork+0x2d/0x70\n   ret_from_fork_asm+0x11/0x20\n\n  Allocated by task 20917:\n   kasan_save_stack+0x37/0x60\n   kasan_save_track+0x10/0x30\n   __kasan_slab_alloc+0x7d/0x80\n   kmem_cache_alloc_noprof+0x16e/0x3e0\n   mempool_alloc_noprof+0x12e/0x310\n   bio_alloc_bioset+0x3f0/0x7a0\n   btrfs_bio_alloc+0x2e/0x50 [btrfs]\n   submit_extent_page+0x4d1/0xdb0 [btrfs]\n   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]\n   btrfs_readahead+0x29a/0x430 [btrfs]\n   read_pages+0x1a7/0xc60\n   page_cache_ra_unbounded+0x2ad/0x560\n   filemap_get_pages+0x629/0xa20\n   filemap_read+0x335/0xbf0\n   vfs_read+0x790/0xcb0\n   ksys_read+0xfd/0x1d0\n   do_syscall_64+0x6d/0x140\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n  Freed by task 20917:\n   kasan_save_stack+0x37/0x60\n   kasan_save_track+0x10/0x30\n   kasan_save_free_info+0x37/0x50\n   __kasan_slab_free+0x4b/0x60\n   kmem_cache_free+0x214/0x5d0\n   bio_free+0xed/0x180\n   end_bbio_data_read+0x1cc/0x580 [btrfs]\n   btrfs_submit_chunk+0x98d/0x1880 [btrfs]\n   btrfs_submit_bio+0x33/0x70 [btrfs]\n   submit_one_bio+0xd4/0x130 [btrfs]\n   submit_extent_page+0x3ea/0xdb0 [btrfs]\n   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]\n   btrfs_readahead+0x29a/0x430 [btrfs]\n   read_pages+0x1a7/0xc60\n   page_cache_ra_unbounded+0x2ad/0x560\n   filemap_get_pages+0x629/0xa20\n   filemap_read+0x335/0xbf0\n   vfs_read+0x790/0xcb0\n   ksys_read+0xfd/0x1d0\n   do_syscall_64+0x6d/0x140\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n[CAUSE]\nAlthough I cannot reproduce the error, the report itself is good enough\nto pin down the cause.\n\nThe call trace is the regular endio workqueue context, but the\nfree-by-task trace is showing that during btrfs_submit_chunk() we\nalready hit a critical error, and is calling btrfs_bio_end_io() to error\nout.  And the original endio function called bio_put() to free the whole\nbio.\n\nThis means a double freeing thus causing use-after-free, e.g.:\n\n1. Enter btrfs_submit_bio() with a read bio\n   The read bio length is 128K, crossing two 64K stripes.\n\n2. The first run of btrfs_submit_chunk()\n\n2.1 Call btrfs_map_block(), which returns 64K\n2.2 Call btrfs_split_bio()\n    Now there are two bios, one referring to the first 64K, the other\n    referring to the second 64K.\n2.3 The first half is submitted.\n\n3. The second run of btrfs_submit_chunk()\n\n3.1 Call btrfs_map_block(), which by somehow failed\n    Now we call btrfs_bio_end_io() to handle the error\n\n3.2 btrfs_bio_end_io() calls the original endio function\n    Which is end_bbio_data_read(), and it calls bio_put() for the\n    original bio.\n\n    Now the original bio is freed.\n\n4. The submitted first 64K bio finished\n   Now we call into btrfs_check_read_bio() and tries to advance the bio\n   iter.\n   But since the original bio (thus its iter) is already freed, we\n   trigger the above use-after free.\n\n   And even if the memory is not poisoned/corrupted, we will later call\n   the original endio function, causing a double freeing.\n\n[FIX]\nInstead of calling btrfs_bio_end_io(), call btrfs_orig_bbio_end_io(),\nwhich has the extra check on split bios and do the pr\n---truncated---"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-7129",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/00ad9b1a-97a5-425f-841e-ea48f72ecda4/"
        ],
        "summary": "The Appointment Booking Calendar \u2014 Simply Schedule Appointments Booking Plugin WordPress plugin before 1.6.7.43 does not escape template syntax provided via user input, leading to Twig Template Injection which further exploited can result to remote code Execution by high privilege such as admins"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-5628",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/7c23bd29-ba02-4c90-a631-5ce6294d7760?source=cve",
            "https://avada.com/documentation/avada-changelog/",
            "https://avada.com/blog/version-7-11-9-security-update/"
        ],
        "summary": "The Avada | Website Builder For WordPress & eCommerce plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's fusion_button shortcode in all versions up to, and including, 3.11.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. NOTE: This vulnerability was partially fixed in 3.11.9. Additional hardening for alternate attack vectors was added to version 3.11.10."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46689",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0ee9594c974368a17e85a431e9fe1c14fb65c278",
            "https://git.kernel.org/stable/c/f5a5a5a0e95f36e2792d48e6e4b64e665eb01374",
            "https://git.kernel.org/stable/c/eaff392c1e34fb77cc61505a31b0191e5e46e271",
            "https://git.kernel.org/stable/c/d9d48d70e922b272875cda60d2ada89291c840cf",
            "https://git.kernel.org/stable/c/ef80520be0ff78ae5ed44cb6eee1525e65bebe70",
            "https://git.kernel.org/stable/c/62c2d63605ca25b5db78a347ed303c0a0a77d5b4",
            "https://git.kernel.org/stable/c/f9bb896eab221618927ae6a2f1d566567999839d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: cmd-db: Map shared memory as WC, not WB\n\nLinux does not write into cmd-db region. This region of memory is write\nprotected by XPU. XPU may sometime falsely detect clean cache eviction\nas \"write\" into the write protected region leading to secure interrupt\nwhich causes an endless loop somewhere in Trust Zone.\n\nThe only reason it is working right now is because Qualcomm Hypervisor\nmaps the same region as Non-Cacheable memory in Stage 2 translation\ntables. The issue manifests if we want to use another hypervisor (like\nXen or KVM), which does not know anything about those specific mappings.\n\nChanging the mapping of cmd-db memory from MEMREMAP_WB to MEMREMAP_WT/WC\nremoves dependency on correct mappings in Stage 2 tables. This patch\nfixes the issue by updating the mapping to MEMREMAP_WC.\n\nI tested this on SA8155P with Xen."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-7863",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/5e814b02-3870-4742-905d-ec03b0d31add/"
        ],
        "summary": "The Favicon Generator (CLOSED) WordPress plugin before 2.1 does not validate files to be uploaded and does not have CSRF checks, which could allow attackers to make logged in admin upload arbitrary files such as PHP on the server"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46687",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/51722b99f41f5e722ffa10b8f61e802a0e70b331",
            "https://git.kernel.org/stable/c/4a3b9e1a8e6cd1a8d427a905e159de58d38941cc",
            "https://git.kernel.org/stable/c/10d9d8c3512f16cad47b2ff81ec6fc4b27d8ee10"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix a use-after-free when hitting errors inside btrfs_submit_chunk()\n\n[BUG]\nThere is an internal report that KASAN is reporting use-after-free, with\nthe following backtrace:\n\n  BUG: KASAN: slab-use-after-free in btrfs_check_read_bio+0xa68/0xb70 [btrfs]\n  Read of size 4 at addr ffff8881117cec28 by task kworker/u16:2/45\n  CPU: 1 UID: 0 PID: 45 Comm: kworker/u16:2 Not tainted 6.11.0-rc2-next-20240805-default+ #76\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\n  Workqueue: btrfs-endio btrfs_end_bio_work [btrfs]\n  Call Trace:\n   dump_stack_lvl+0x61/0x80\n   print_address_description.constprop.0+0x5e/0x2f0\n   print_report+0x118/0x216\n   kasan_report+0x11d/0x1f0\n   btrfs_check_read_bio+0xa68/0xb70 [btrfs]\n   process_one_work+0xce0/0x12a0\n   worker_thread+0x717/0x1250\n   kthread+0x2e3/0x3c0\n   ret_from_fork+0x2d/0x70\n   ret_from_fork_asm+0x11/0x20\n\n  Allocated by task 20917:\n   kasan_save_stack+0x37/0x60\n   kasan_save_track+0x10/0x30\n   __kasan_slab_alloc+0x7d/0x80\n   kmem_cache_alloc_noprof+0x16e/0x3e0\n   mempool_alloc_noprof+0x12e/0x310\n   bio_alloc_bioset+0x3f0/0x7a0\n   btrfs_bio_alloc+0x2e/0x50 [btrfs]\n   submit_extent_page+0x4d1/0xdb0 [btrfs]\n   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]\n   btrfs_readahead+0x29a/0x430 [btrfs]\n   read_pages+0x1a7/0xc60\n   page_cache_ra_unbounded+0x2ad/0x560\n   filemap_get_pages+0x629/0xa20\n   filemap_read+0x335/0xbf0\n   vfs_read+0x790/0xcb0\n   ksys_read+0xfd/0x1d0\n   do_syscall_64+0x6d/0x140\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n  Freed by task 20917:\n   kasan_save_stack+0x37/0x60\n   kasan_save_track+0x10/0x30\n   kasan_save_free_info+0x37/0x50\n   __kasan_slab_free+0x4b/0x60\n   kmem_cache_free+0x214/0x5d0\n   bio_free+0xed/0x180\n   end_bbio_data_read+0x1cc/0x580 [btrfs]\n   btrfs_submit_chunk+0x98d/0x1880 [btrfs]\n   btrfs_submit_bio+0x33/0x70 [btrfs]\n   submit_one_bio+0xd4/0x130 [btrfs]\n   submit_extent_page+0x3ea/0xdb0 [btrfs]\n   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]\n   btrfs_readahead+0x29a/0x430 [btrfs]\n   read_pages+0x1a7/0xc60\n   page_cache_ra_unbounded+0x2ad/0x560\n   filemap_get_pages+0x629/0xa20\n   filemap_read+0x335/0xbf0\n   vfs_read+0x790/0xcb0\n   ksys_read+0xfd/0x1d0\n   do_syscall_64+0x6d/0x140\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n[CAUSE]\nAlthough I cannot reproduce the error, the report itself is good enough\nto pin down the cause.\n\nThe call trace is the regular endio workqueue context, but the\nfree-by-task trace is showing that during btrfs_submit_chunk() we\nalready hit a critical error, and is calling btrfs_bio_end_io() to error\nout.  And the original endio function called bio_put() to free the whole\nbio.\n\nThis means a double freeing thus causing use-after-free, e.g.:\n\n1. Enter btrfs_submit_bio() with a read bio\n   The read bio length is 128K, crossing two 64K stripes.\n\n2. The first run of btrfs_submit_chunk()\n\n2.1 Call btrfs_map_block(), which returns 64K\n2.2 Call btrfs_split_bio()\n    Now there are two bios, one referring to the first 64K, the other\n    referring to the second 64K.\n2.3 The first half is submitted.\n\n3. The second run of btrfs_submit_chunk()\n\n3.1 Call btrfs_map_block(), which by somehow failed\n    Now we call btrfs_bio_end_io() to handle the error\n\n3.2 btrfs_bio_end_io() calls the original endio function\n    Which is end_bbio_data_read(), and it calls bio_put() for the\n    original bio.\n\n    Now the original bio is freed.\n\n4. The submitted first 64K bio finished\n   Now we call into btrfs_check_read_bio() and tries to advance the bio\n   iter.\n   But since the original bio (thus its iter) is already freed, we\n   trigger the above use-after free.\n\n   And even if the memory is not poisoned/corrupted, we will later call\n   the original endio function, causing a double freeing.\n\n[FIX]\nInstead of calling btrfs_bio_end_io(), call btrfs_orig_bbio_end_io(),\nwhich has the extra check on split bios and do the pr\n---truncated---"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46691",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/095b0001aefddcd9361097c971b7debc84e72714",
            "https://git.kernel.org/stable/c/11bb2ffb679399f99041540cf662409905179e3a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: Move unregister out of atomic section\n\nCommit '9329933699b3 (\"soc: qcom: pmic_glink: Make client-lock\nnon-sleeping\")' moved the pmic_glink client list under a spinlock, as it\nis accessed by the rpmsg/glink callback, which in turn is invoked from\nIRQ context.\n\nThis means that ucsi_unregister() is now called from atomic context,\nwhich isn't feasible as it's expecting a sleepable context. An effort is\nunder way to get GLINK to invoke its callbacks in a sleepable context,\nbut until then lets schedule the unregistration.\n\nA side effect of this is that ucsi_unregister() can now happen\nafter the remote processor, and thereby the communication link with it, is\ngone. pmic_glink_send() is amended with a check to avoid the resulting NULL\npointer dereference.\nThis does however result in the user being informed about this error by\nthe following entry in the kernel log:\n\n  ucsi_glink.pmic_glink_ucsi pmic_glink.ucsi.0: failed to send UCSI write request: -5"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46693",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1efdbf5323c9360e05066049b97414405e94e087",
            "https://git.kernel.org/stable/c/943b0e7cc646a624bb20a68080f8f1a4a55df41c",
            "https://git.kernel.org/stable/c/3568affcddd68743e25aa3ec1647d9b82797757b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: pmic_glink: Fix race during initialization\n\nAs pointed out by Stephen Boyd it is possible that during initialization\nof the pmic_glink child drivers, the protection-domain notifiers fires,\nand the associated work is scheduled, before the client registration\nreturns and as a result the local \"client\" pointer has been initialized.\n\nThe outcome of this is a NULL pointer dereference as the \"client\"\npointer is blindly dereferenced.\n\nTimeline provided by Stephen:\n CPU0                               CPU1\n ----                               ----\n ucsi->client = NULL;\n devm_pmic_glink_register_client()\n  client->pdr_notify(client->priv, pg->client_state)\n   pmic_glink_ucsi_pdr_notify()\n    schedule_work(&ucsi->register_work)\n    <schedule away>\n                                    pmic_glink_ucsi_register()\n                                     ucsi_register()\n                                      pmic_glink_ucsi_read_version()\n                                       pmic_glink_ucsi_read()\n                                        pmic_glink_ucsi_read()\n                                         pmic_glink_send(ucsi->client)\n                                         <client is NULL BAD>\n ucsi->client = client // Too late!\n\nThis code is identical across the altmode, battery manager and usci\nchild drivers.\n\nResolve this by splitting the allocation of the \"client\" object and the\nregistration thereof into two operations.\n\nThis only happens if the protection domain registry is populated at the\ntime of registration, which by the introduction of commit '1ebcde047c54\n(\"soc: qcom: add pd-mapper implementation\")' became much more likely."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46693",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1efdbf5323c9360e05066049b97414405e94e087",
            "https://git.kernel.org/stable/c/943b0e7cc646a624bb20a68080f8f1a4a55df41c",
            "https://git.kernel.org/stable/c/3568affcddd68743e25aa3ec1647d9b82797757b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: pmic_glink: Fix race during initialization\n\nAs pointed out by Stephen Boyd it is possible that during initialization\nof the pmic_glink child drivers, the protection-domain notifiers fires,\nand the associated work is scheduled, before the client registration\nreturns and as a result the local \"client\" pointer has been initialized.\n\nThe outcome of this is a NULL pointer dereference as the \"client\"\npointer is blindly dereferenced.\n\nTimeline provided by Stephen:\n CPU0                               CPU1\n ----                               ----\n ucsi->client = NULL;\n devm_pmic_glink_register_client()\n  client->pdr_notify(client->priv, pg->client_state)\n   pmic_glink_ucsi_pdr_notify()\n    schedule_work(&ucsi->register_work)\n    <schedule away>\n                                    pmic_glink_ucsi_register()\n                                     ucsi_register()\n                                      pmic_glink_ucsi_read_version()\n                                       pmic_glink_ucsi_read()\n                                        pmic_glink_ucsi_read()\n                                         pmic_glink_send(ucsi->client)\n                                         <client is NULL BAD>\n ucsi->client = client // Too late!\n\nThis code is identical across the altmode, battery manager and usci\nchild drivers.\n\nResolve this by splitting the allocation of the \"client\" object and the\nregistration thereof into two operations.\n\nThis only happens if the protection domain registry is populated at the\ntime of registration, which by the introduction of commit '1ebcde047c54\n(\"soc: qcom: add pd-mapper implementation\")' became much more likely."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46698",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/17e78f43de0c6da34204cc858b4cc05671ea9acf",
            "https://git.kernel.org/stable/c/b49420d6a1aeb399e5b107fc6eb8584d0860fbd7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo/aperture: optionally match the device in sysfb_disable()\n\nIn aperture_remove_conflicting_pci_devices(), we currently only\ncall sysfb_disable() on vga class devices.  This leads to the\nfollowing problem when the pimary device is not VGA compatible:\n\n1. A PCI device with a non-VGA class is the boot display\n2. That device is probed first and it is not a VGA device so\n   sysfb_disable() is not called, but the device resources\n   are freed by aperture_detach_platform_device()\n3. Non-primary GPU has a VGA class and it ends up calling sysfb_disable()\n4. NULL pointer dereference via sysfb_disable() since the resources\n   have already been freed by aperture_detach_platform_device() when\n   it was called by the other device.\n\nFix this by passing a device pointer to sysfb_disable() and checking\nthe device to determine if we should execute it or not.\n\nv2: Fix build when CONFIG_SCREEN_INFO is not set\nv3: Move device check into the mutex\n    Drop primary variable in aperture_remove_conflicting_pci_devices()\n    Drop __init on pci sysfb_pci_dev_is_enabled()"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46695",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/459584258d47ec3cc6245a82e8a49c9d08eb8b57",
            "https://git.kernel.org/stable/c/f71ec019257ba4f7ab198bd948c5902a207bad96",
            "https://git.kernel.org/stable/c/76a0e79bc84f466999fa501fce5bf7a07641b8a7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux,smack: don't bypass permissions check in inode_setsecctx hook\n\nMarek Gresko reports that the root user on an NFS client is able to\nchange the security labels on files on an NFS filesystem that is\nexported with root squashing enabled.\n\nThe end of the kerneldoc comment for __vfs_setxattr_noperm() states:\n\n *  This function requires the caller to lock the inode's i_mutex before it\n *  is executed. It also assumes that the caller will make the appropriate\n *  permission checks.\n\nnfsd_setattr() does do permissions checking via fh_verify() and\nnfsd_permission(), but those don't do all the same permissions checks\nthat are done by security_inode_setxattr() and its related LSM hooks do.\n\nSince nfsd_setattr() is the only consumer of security_inode_setsecctx(),\nsimplest solution appears to be to replace the call to\n__vfs_setxattr_noperm() with a call to __vfs_setxattr_locked().  This\nfixes the above issue and has the added benefit of causing nfsd to\nrecall conflicting delegations on a file when a client tries to change\nits security label."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46697",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/dd65b324174a64558a16ebbf4c3266e5701185d0",
            "https://git.kernel.org/stable/c/f58bab6fd4063913bd8321e99874b8239e9ba726"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: ensure that nfsd4_fattr_args.context is zeroed out\n\nIf nfsd4_encode_fattr4 ends up doing a \"goto out\" before we get to\nchecking for the security label, then args.context will be set to\nuninitialized junk on the stack, which we'll then try to free.\nInitialize it early."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46694",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/093ee72ed35c2338c87c26b6ba6f0b7789c9e14e",
            "https://git.kernel.org/stable/c/f6f5e39a3fe7cbdba190f42b28b40bdff03c8cf0",
            "https://git.kernel.org/stable/c/49e1b214f3239b78967c6ddb8f8ec47ae047b051",
            "https://git.kernel.org/stable/c/3b9a33235c773c7a3768060cf1d2cf8a9153bc37"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: avoid using null object of framebuffer\n\nInstead of using state->fb->obj[0] directly, get object from framebuffer\nby calling drm_gem_fb_get_obj() and return error code when object is\nnull to avoid using null object of framebuffer.\n\n(cherry picked from commit 73dd0ad9e5dad53766ea3e631303430116f834b3)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6493",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/0e3128ef-901a-42aa-9d74-c69d3241dc07/"
        ],
        "summary": "The NinjaTeam Header Footer Custom Code WordPress plugin before 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6850",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/c06995cb-1685-4751-811f-aead52a597a7/"
        ],
        "summary": "The Carousel Slider WordPress plugin before 2.2.4 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-7133",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/c81c1622-33d1-41f2-ba63-f06bd4c125ab/"
        ],
        "summary": "The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.3 does not validate and escape some of its settings before outputting them back in the page, which could allow users with a high role to perform Stored Cross-Site Scripting attacks."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46699",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1e93467ef20308da5a94cde548ee17d523e8ba7b",
            "https://git.kernel.org/stable/c/9d824c7fce58f59982228aa85b0376b113cdfa35"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/v3d: Disable preemption while updating GPU stats\n\nWe forgot to disable preemption around the write_seqcount_begin/end() pair\nwhile updating GPU stats:\n\n  [ ] WARNING: CPU: 2 PID: 12 at include/linux/seqlock.h:221 __seqprop_assert.isra.0+0x128/0x150 [v3d]\n  [ ] Workqueue: v3d_bin drm_sched_run_job_work [gpu_sched]\n <...snip...>\n  [ ] Call trace:\n  [ ]  __seqprop_assert.isra.0+0x128/0x150 [v3d]\n  [ ]  v3d_job_start_stats.isra.0+0x90/0x218 [v3d]\n  [ ]  v3d_bin_job_run+0x23c/0x388 [v3d]\n  [ ]  drm_sched_run_job_work+0x520/0x6d0 [gpu_sched]\n  [ ]  process_one_work+0x62c/0xb48\n  [ ]  worker_thread+0x468/0x5b0\n  [ ]  kthread+0x1c4/0x1e0\n  [ ]  ret_from_fork+0x10/0x20\n\nFix it."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-7864",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/6ce62e78-04a4-46b2-b97f-c4ef8f3258c3/"
        ],
        "summary": "The Favicon Generator (CLOSED) WordPress plugin before 2.1 does not have CSRF and path validation in the output_sub_admin_page_0() function, allowing attackers to make logged in admins delete arbitrary files on the server"
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6723",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/fbd2152e-0aa1-4b56-a6a3-2e6ec78e08a5/"
        ],
        "summary": "The AI Engine WordPress plugin before 2.4.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by admin users when viewing chatbot discussions."
    },
    {
        "Modified": "2024-09-13T06:15:00",
        "Published": "2024-09-13T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-46673",
        "impact": {},
        "last-modified": "2024-09-13T06:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d237c7d06ffddcdb5d36948c527dc01284388218",
            "https://git.kernel.org/stable/c/564e1986b00c5f05d75342f8407f75f0a17b94df",
            "https://git.kernel.org/stable/c/9e96dea7eff6f2bbcd0b42a098012fc66af9eb69",
            "https://git.kernel.org/stable/c/85449b28ff6a89c4513115e43ddcad949b5890c9",
            "https://git.kernel.org/stable/c/60962c3d8e18e5d8dfa16df788974dd7f35bd87a",
            "https://git.kernel.org/stable/c/8a3995a3ffeca280a961b59f5c99843d81b15929",
            "https://git.kernel.org/stable/c/4b540ec7c0045c2d01c4e479f34bbc8f147afa4c",
            "https://git.kernel.org/stable/c/919ddf8336f0b84c0453bac583808c9f165a85c2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: aacraid: Fix double-free on probe failure\n\naac_probe_one() calls hardware-specific init functions through the\naac_driver_ident::init pointer, all of which eventually call down to\naac_init_adapter().\n\nIf aac_init_adapter() fails after allocating memory for aac_dev::queues,\nit frees the memory but does not clear that member.\n\nAfter the hardware-specific init function returns an error,\naac_probe_one() goes down an error path that frees the memory pointed to\nby aac_dev::queues, resulting.in a double-free."
    }
]