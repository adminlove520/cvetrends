[
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26995",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f3da3192cdd3fefe213390e976eec424a8e270b5",
            "https://git.kernel.org/stable/c/c4128304c2169b4664ed6fb6200f228cead2ab70"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: Correct the PDO counting in pd_set\n\nOff-by-one errors happen because nr_snk_pdo and nr_src_pdo are\nincorrectly added one. The index of the loop is equal to the number of\nPDOs to be updated when leaving the loop and it doesn't need to be added\none.\n\nWhen doing the power negotiation, TCPM relies on the \"nr_snk_pdo\" as\nthe size of the local sink PDO array to match the Source capabilities\nof the partner port. If the off-by-one overflow occurs, a wrong RDO\nmight be sent and unexpected power transfer might happen such as over\nvoltage or over current (than expected).\n\n\"nr_src_pdo\" is used to set the Rp level when the port is in Source\nrole. It is also the array size of the local Source capabilities when\nfilling up the buffer which will be sent as the Source PDOs (such as\nin Power Negotiation). If the off-by-one overflow occurs, a wrong Rp\nlevel might be set and wrong Source PDOs will be sent to the partner\nport. This could potentially cause over current or port resets."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27009",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3076b3c38a704e10df5e143c213653309d532538",
            "https://git.kernel.org/stable/c/559f3a6333397ab6cd4a696edd65a70b6be62c6e",
            "https://git.kernel.org/stable/c/2df56f4ea769ff81e51bbb05699989603bde9c49",
            "https://git.kernel.org/stable/c/a4234decd0fe429832ca81c4637be7248b88b49e",
            "https://git.kernel.org/stable/c/2d8527f2f911fab84aec04df4788c0c23af3df48"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27014",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/46efa4d5930cf3c2af8c01f75e0a47e4fc045e3b",
            "https://git.kernel.org/stable/c/48c4bb81df19402d4346032353d0795260255e3b",
            "https://git.kernel.org/stable/c/0080bf99499468030248ebd25dd645e487dcecdc",
            "https://git.kernel.org/stable/c/fef965764cf562f28afb997b626fc7c3cec99693"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Prevent deadlock while disabling aRFS\n\nWhen disabling aRFS under the `priv->state_lock`, any scheduled\naRFS works are canceled using the `cancel_work_sync` function,\nwhich waits for the work to end if it has already started.\nHowever, while waiting for the work handler, the handler will\ntry to acquire the `state_lock` which is already acquired.\n\nThe worker acquires the lock to delete the rules if the state\nis down, which is not the worker's responsibility since\ndisabling aRFS deletes the rules.\n\nAdd an aRFS state variable, which indicates whether the aRFS is\nenabled and prevent adding rules when the aRFS is disabled.\n\nKernel log:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.7.0-rc4_net_next_mlx5_5483eb2 #1 Tainted: G          I\n------------------------------------------------------\nethtool/386089 is trying to acquire lock:\nffff88810f21ce68 ((work_completion)(&rule->arfs_work)){+.+.}-{0:0}, at: __flush_work+0x74/0x4e0\n\nbut task is already holding lock:\nffff8884a1808cc0 (&priv->state_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&priv->state_lock){+.+.}-{3:3}:\n       __mutex_lock+0x80/0xc90\n       arfs_handle_work+0x4b/0x3b0 [mlx5_core]\n       process_one_work+0x1dc/0x4a0\n       worker_thread+0x1bf/0x3c0\n       kthread+0xd7/0x100\n       ret_from_fork+0x2d/0x50\n       ret_from_fork_asm+0x11/0x20\n\n-> #0 ((work_completion)(&rule->arfs_work)){+.+.}-{0:0}:\n       __lock_acquire+0x17b4/0x2c80\n       lock_acquire+0xd0/0x2b0\n       __flush_work+0x7a/0x4e0\n       __cancel_work_timer+0x131/0x1c0\n       arfs_del_rules+0x143/0x1e0 [mlx5_core]\n       mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n       mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n       ethnl_set_channels+0x28f/0x3b0\n       ethnl_default_set_doit+0xec/0x240\n       genl_family_rcv_msg_doit+0xd0/0x120\n       genl_rcv_msg+0x188/0x2c0\n       netlink_rcv_skb+0x54/0x100\n       genl_rcv+0x24/0x40\n       netlink_unicast+0x1a1/0x270\n       netlink_sendmsg+0x214/0x460\n       __sock_sendmsg+0x38/0x60\n       __sys_sendto+0x113/0x170\n       __x64_sys_sendto+0x20/0x30\n       do_syscall_64+0x40/0xe0\n       entry_SYSCALL_64_after_hwframe+0x46/0x4e\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&priv->state_lock);\n                               lock((work_completion)(&rule->arfs_work));\n                               lock(&priv->state_lock);\n  lock((work_completion)(&rule->arfs_work));\n\n *** DEADLOCK ***\n\n3 locks held by ethtool/386089:\n #0: ffffffff82ea7210 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\n #1: ffffffff82e94c88 (rtnl_mutex){+.+.}-{3:3}, at: ethnl_default_set_doit+0xd3/0x240\n #2: ffff8884a1808cc0 (&priv->state_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nstack backtrace:\nCPU: 15 PID: 386089 Comm: ethtool Tainted: G          I        6.7.0-rc4_net_next_mlx5_5483eb2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x60/0xa0\n check_noncircular+0x144/0x160\n __lock_acquire+0x17b4/0x2c80\n lock_acquire+0xd0/0x2b0\n ? __flush_work+0x74/0x4e0\n ? save_trace+0x3e/0x360\n ? __flush_work+0x74/0x4e0\n __flush_work+0x7a/0x4e0\n ? __flush_work+0x74/0x4e0\n ? __lock_acquire+0xa78/0x2c80\n ? lock_acquire+0xd0/0x2b0\n ? mark_held_locks+0x49/0x70\n __cancel_work_timer+0x131/0x1c0\n ? mark_held_locks+0x49/0x70\n arfs_del_rules+0x143/0x1e0 [mlx5_core]\n mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n ethnl_set_channels+0x28f/0x3b0\n ethnl_default_set_doit+0xec/0x240\n genl_family_rcv_msg_doit+0xd0/0x120\n genl_rcv_msg+0x188/0x2c0\n ? ethn\n---truncated---"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27021",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/53d986f39acd8ea11c9e460732bfa5add66360d9",
            "https://git.kernel.org/stable/c/19fa4f2a85d777a8052e869c1b892a2f7556569d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nr8169: fix LED-related deadlock on module removal\n\nBinding devm_led_classdev_register() to the netdev is problematic\nbecause on module removal we get a RTNL-related deadlock. Fix this\nby avoiding the device-managed LED functions.\n\nNote: We can safely call led_classdev_unregister() for a LED even\nif registering it failed, because led_classdev_unregister() detects\nthis and is a no-op in this case."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26947",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0c027c2bad7f5111c51a358b5d392e1a695dabff",
            "https://git.kernel.org/stable/c/9f7ddc222cae8254e93d5c169a8ae11a49d912a7",
            "https://git.kernel.org/stable/c/fb3a122a978626b33de3367ee1762da934c0f512",
            "https://git.kernel.org/stable/c/0c66c6f4e21cb22220cbd8821c5c73fc157d20dc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9359/1: flush: check if the folio is reserved for no-mapping addresses\n\nSince commit a4d5613c4dc6 (\"arm: extend pfn_valid to take into account\nfreed memory map alignment\") changes the semantics of pfn_valid() to check\npresence of the memory map for a PFN. A valid page for an address which\nis reserved but not mapped by the kernel[1], the system crashed during\nsome uio test with the following memory layout:\n\n node   0: [mem 0x00000000c0a00000-0x00000000cc8fffff]\n node   0: [mem 0x00000000d0000000-0x00000000da1fffff]\n the uio layout is:0xc0900000, 0x100000\n\nthe crash backtrace like:\n\n  Unable to handle kernel paging request at virtual address bff00000\n  [...]\n  CPU: 1 PID: 465 Comm: startapp.bin Tainted: G           O      5.10.0 #1\n  Hardware name: Generic DT based system\n  PC is at b15_flush_kern_dcache_area+0x24/0x3c\n  LR is at __sync_icache_dcache+0x6c/0x98\n  [...]\n   (b15_flush_kern_dcache_area) from (__sync_icache_dcache+0x6c/0x98)\n   (__sync_icache_dcache) from (set_pte_at+0x28/0x54)\n   (set_pte_at) from (remap_pfn_range+0x1a0/0x274)\n   (remap_pfn_range) from (uio_mmap+0x184/0x1b8 [uio])\n   (uio_mmap [uio]) from (__mmap_region+0x264/0x5f4)\n   (__mmap_region) from (__do_mmap_mm+0x3ec/0x440)\n   (__do_mmap_mm) from (do_mmap+0x50/0x58)\n   (do_mmap) from (vm_mmap_pgoff+0xfc/0x188)\n   (vm_mmap_pgoff) from (ksys_mmap_pgoff+0xac/0xc4)\n   (ksys_mmap_pgoff) from (ret_fast_syscall+0x0/0x5c)\n  Code: e0801001 e2423001 e1c00003 f57ff04f (ee070f3e)\n  ---[ end trace 09cf0734c3805d52 ]---\n  Kernel panic - not syncing: Fatal exception\n\nSo check if PG_reserved was set to solve this issue.\n\n[1]: https://lore.kernel.org/lkml/Zbtdue57RO0QScJM@linux.ibm.com/"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26986",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aa02d43367a9adf8c85fb382fea4171fb266c8d0",
            "https://git.kernel.org/stable/c/0dcd876411644da98a6b4d5a18d32ca94c15bdb5",
            "https://git.kernel.org/stable/c/18921b205012568b45760753ad3146ddb9e2d4e2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix memory leak in create_process failure\n\nFix memory leak due to a leaked mmget reference on an error handling\ncode path that is triggered when attempting to create KFD processes\nwhile a GPU reset is in progress."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26989",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/813f5213f2c612dc800054859aaa396ec8ad7069",
            "https://git.kernel.org/stable/c/f7e71a7cf399f53ff9fc314ca3836dc913b05bd6",
            "https://git.kernel.org/stable/c/31f815cb436082e72d34ed2e8a182140a73ebdf4",
            "https://git.kernel.org/stable/c/022b19ebc31cce369c407617041a3db810db23b3",
            "https://git.kernel.org/stable/c/50449ca66cc5a8cbc64749cf4b9f3d3fc5f4b457"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: hibernate: Fix level3 translation fault in swsusp_save()\n\nOn arm64 machines, swsusp_save() faults if it attempts to access\nMEMBLOCK_NOMAP memory ranges. This can be reproduced in QEMU using UEFI\nwhen booting with rodata=off debug_pagealloc=off and CONFIG_KFENCE=n:\n\n  Unable to handle kernel paging request at virtual address ffffff8000000000\n  Mem abort info:\n    ESR = 0x0000000096000007\n    EC = 0x25: DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x07: level 3 translation fault\n  Data abort info:\n    ISV = 0, ISS = 0x00000007, ISS2 = 0x00000000\n    CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n    GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n  swapper pgtable: 4k pages, 39-bit VAs, pgdp=00000000eeb0b000\n  [ffffff8000000000] pgd=180000217fff9803, p4d=180000217fff9803, pud=180000217fff9803, pmd=180000217fff8803, pte=0000000000000000\n  Internal error: Oops: 0000000096000007 [#1] SMP\n  Internal error: Oops: 0000000096000007 [#1] SMP\n  Modules linked in: xt_multiport ipt_REJECT nf_reject_ipv4 xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c iptable_filter bpfilter rfkill at803x snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg dwmac_generic stmmac_platform snd_hda_codec stmmac joydev pcs_xpcs snd_hda_core phylink ppdev lp parport ramoops reed_solomon ip_tables x_tables nls_iso8859_1 vfat multipath linear amdgpu amdxcp drm_exec gpu_sched drm_buddy hid_generic usbhid hid radeon video drm_suballoc_helper drm_ttm_helper ttm i2c_algo_bit drm_display_helper cec drm_kms_helper drm\n  CPU: 0 PID: 3663 Comm: systemd-sleep Not tainted 6.6.2+ #76\n  Source Version: 4e22ed63a0a48e7a7cff9b98b7806d8d4add7dc0\n  Hardware name: Greatwall GW-XXXXXX-XXX/GW-XXXXXX-XXX, BIOS KunLun BIOS V4.0 01/19/2021\n  pstate: 600003c5 (nZCv DAIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : swsusp_save+0x280/0x538\n  lr : swsusp_save+0x280/0x538\n  sp : ffffffa034a3fa40\n  x29: ffffffa034a3fa40 x28: ffffff8000001000 x27: 0000000000000000\n  x26: ffffff8001400000 x25: ffffffc08113e248 x24: 0000000000000000\n  x23: 0000000000080000 x22: ffffffc08113e280 x21: 00000000000c69f2\n  x20: ffffff8000000000 x19: ffffffc081ae2500 x18: 0000000000000000\n  x17: 6666662074736420 x16: 3030303030303030 x15: 3038666666666666\n  x14: 0000000000000b69 x13: ffffff9f89088530 x12: 00000000ffffffea\n  x11: 00000000ffff7fff x10: 00000000ffff7fff x9 : ffffffc08193f0d0\n  x8 : 00000000000bffe8 x7 : c0000000ffff7fff x6 : 0000000000000001\n  x5 : ffffffa0fff09dc8 x4 : 0000000000000000 x3 : 0000000000000027\n  x2 : 0000000000000000 x1 : 0000000000000000 x0 : 000000000000004e\n  Call trace:\n   swsusp_save+0x280/0x538\n   swsusp_arch_suspend+0x148/0x190\n   hibernation_snapshot+0x240/0x39c\n   hibernate+0xc4/0x378\n   state_store+0xf0/0x10c\n   kobj_attr_store+0x14/0x24\n\nThe reason is swsusp_save() -> copy_data_pages() -> page_is_saveable()\n-> kernel_page_present() assuming that a page is always present when\ncan_set_direct_map() is false (all of rodata_full,\ndebug_pagealloc_enabled() and arm64_kfence_can_set_direct_map() false),\nirrespective of the MEMBLOCK_NOMAP ranges. Such MEMBLOCK_NOMAP regions\nshould not be saved during hibernation.\n\nThis problem was introduced by changes to the pfn_valid() logic in\ncommit a7d9f306ba70 (\"arm64: drop pfn_valid_within() and simplify\npfn_valid()\").\n\nSimilar to other architectures, drop the !can_set_direct_map() check in\nkernel_page_present() so that page_is_savable() skips such pages.\n\n[catalin.marinas@arm.com: rework commit message]"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26980",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b80ba648714e6d790d69610cf14656be222d0248",
            "https://git.kernel.org/stable/c/3160d9734453a40db248487f8204830879c207f1",
            "https://git.kernel.org/stable/c/0977f89722eceba165700ea384f075143f012085",
            "https://git.kernel.org/stable/c/c119f4ede3fa90a9463f50831761c28f989bfb20"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix slab-out-of-bounds in smb2_allocate_rsp_buf\n\nIf ->ProtocolId is SMB2_TRANSFORM_PROTO_NUM, smb2 request size\nvalidation could be skipped. if request size is smaller than\nsizeof(struct smb2_query_info_req), slab-out-of-bounds read can happen in\nsmb2_allocate_rsp_buf(). This patch allocate response buffer after\ndecrypting transform request. smb3_decrypt_req() will validate transform\nrequest size and avoid slab-out-of-bound in smb2_allocate_rsp_buf()."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26983",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1e7feb31a18c197d63a5e606025ed63c762f8918",
            "https://git.kernel.org/stable/c/e46d3be714ad9652480c6db129ab8125e2d20ab7",
            "https://git.kernel.org/stable/c/5a7dfb8fcd3f29fc93161100179b27f24f3d5f35",
            "https://git.kernel.org/stable/c/89f9a1e876b5a7ad884918c03a46831af202c8a0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbootconfig: use memblock_free_late to free xbc memory to buddy\n\nOn the time to free xbc memory in xbc_exit(), memblock may has handed\nover memory to buddy allocator. So it doesn't make sense to free memory\nback to memblock. memblock_free() called by xbc_exit() even causes UAF bugs\non architectures with CONFIG_ARCH_KEEP_MEMBLOCK disabled like x86.\nFollowing KASAN logs shows this case.\n\nThis patch fixes the xbc memory free problem by calling memblock_free()\nin early xbc init error rewind path and calling memblock_free_late() in\nxbc exit path to free memory to buddy allocator.\n\n[    9.410890] ==================================================================\n[    9.418962] BUG: KASAN: use-after-free in memblock_isolate_range+0x12d/0x260\n[    9.426850] Read of size 8 at addr ffff88845dd30000 by task swapper/0/1\n\n[    9.435901] CPU: 9 PID: 1 Comm: swapper/0 Tainted: G     U             6.9.0-rc3-00208-g586b5dfb51b9 #5\n[    9.446403] Hardware name: Intel Corporation RPLP LP5 (CPU:RaptorLake)/RPLP LP5 (ID:13), BIOS IRPPN02.01.01.00.00.19.015.D-00000000 Dec 28 2023\n[    9.460789] Call Trace:\n[    9.463518]  <TASK>\n[    9.465859]  dump_stack_lvl+0x53/0x70\n[    9.469949]  print_report+0xce/0x610\n[    9.473944]  ? __virt_addr_valid+0xf5/0x1b0\n[    9.478619]  ? memblock_isolate_range+0x12d/0x260\n[    9.483877]  kasan_report+0xc6/0x100\n[    9.487870]  ? memblock_isolate_range+0x12d/0x260\n[    9.493125]  memblock_isolate_range+0x12d/0x260\n[    9.498187]  memblock_phys_free+0xb4/0x160\n[    9.502762]  ? __pfx_memblock_phys_free+0x10/0x10\n[    9.508021]  ? mutex_unlock+0x7e/0xd0\n[    9.512111]  ? __pfx_mutex_unlock+0x10/0x10\n[    9.516786]  ? kernel_init_freeable+0x2d4/0x430\n[    9.521850]  ? __pfx_kernel_init+0x10/0x10\n[    9.526426]  xbc_exit+0x17/0x70\n[    9.529935]  kernel_init+0x38/0x1e0\n[    9.533829]  ? _raw_spin_unlock_irq+0xd/0x30\n[    9.538601]  ret_from_fork+0x2c/0x50\n[    9.542596]  ? __pfx_kernel_init+0x10/0x10\n[    9.547170]  ret_from_fork_asm+0x1a/0x30\n[    9.551552]  </TASK>\n\n[    9.555649] The buggy address belongs to the physical page:\n[    9.561875] page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x1 pfn:0x45dd30\n[    9.570821] flags: 0x200000000000000(node=0|zone=2)\n[    9.576271] page_type: 0xffffffff()\n[    9.580167] raw: 0200000000000000 ffffea0011774c48 ffffea0012ba1848 0000000000000000\n[    9.588823] raw: 0000000000000001 0000000000000000 00000000ffffffff 0000000000000000\n[    9.597476] page dumped because: kasan: bad access detected\n\n[    9.605362] Memory state around the buggy address:\n[    9.610714]  ffff88845dd2ff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    9.618786]  ffff88845dd2ff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    9.626857] >ffff88845dd30000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.634930]                    ^\n[    9.638534]  ffff88845dd30080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.646605]  ffff88845dd30100: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.654675] =================================================================="
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26985",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7d8ac0942c312abda43b407eff72d31747a7b472",
            "https://git.kernel.org/stable/c/652ead9b746a63e4e79d7ad66d3edf0a8a5b0c2f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Fix bo leak in intel_fb_bo_framebuffer_init\n\nAdd a unreference bo in the error path, to prevent leaking a bo ref.\n\nReturn 0 on success to clarify the success path.\n\n(cherry picked from commit a2f3d731be3893e730417ae3190760fcaffdf549)"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26991",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/048cc4a028e635d339687ed968985d2d1669494c",
            "https://git.kernel.org/stable/c/992b54bd083c5bee24ff7cc35991388ab08598c4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: x86: Don't overflow lpage_info when checking attributes\n\nFix KVM_SET_MEMORY_ATTRIBUTES to not overflow lpage_info array and trigger\nKASAN splat, as seen in the private_mem_conversions_test selftest.\n\nWhen memory attributes are set on a GFN range, that range will have\nspecific properties applied to the TDP. A huge page cannot be used when\nthe attributes are inconsistent, so they are disabled for those the\nspecific huge pages. For internal KVM reasons, huge pages are also not\nallowed to span adjacent memslots regardless of whether the backing memory\ncould be mapped as huge.\n\nWhat GFNs support which huge page sizes is tracked by an array of arrays\n'lpage_info' on the memslot, of \u2018kvm_lpage_info\u2019 structs. Each index of\nlpage_info contains a vmalloc allocated array of these for a specific\nsupported page size. The kvm_lpage_info denotes whether a specific huge\npage (GFN and page size) on the memslot is supported. These arrays include\nindices for unaligned head and tail huge pages.\n\nPreventing huge pages from spanning adjacent memslot is covered by\nincrementing the count in head and tail kvm_lpage_info when the memslot is\nallocated, but disallowing huge pages for memory that has mixed attributes\nhas to be done in a more complicated way. During the\nKVM_SET_MEMORY_ATTRIBUTES ioctl KVM updates lpage_info for each memslot in\nthe range that has mismatched attributes. KVM does this a memslot at a\ntime, and marks a special bit, KVM_LPAGE_MIXED_FLAG, in the kvm_lpage_info\nfor any huge page. This bit is essentially a permanently elevated count.\nSo huge pages will not be mapped for the GFN at that page size if the\ncount is elevated in either case: a huge head or tail page unaligned to\nthe memslot or if KVM_LPAGE_MIXED_FLAG is set because it has mixed\nattributes.\n\nTo determine whether a huge page has consistent attributes, the\nKVM_SET_MEMORY_ATTRIBUTES operation checks an xarray to make sure it\nconsistently has the incoming attribute. Since level - 1 huge pages are\naligned to level huge pages, it employs an optimization. As long as the\nlevel - 1 huge pages are checked first, it can just check these and assume\nthat if each level - 1 huge page contained within the level sized huge\npage is not mixed, then the level size huge page is not mixed. This\noptimization happens in the helper hugepage_has_attrs().\n\nUnfortunately, although the kvm_lpage_info array representing page size\n'level' will contain an entry for an unaligned tail page of size level,\nthe array for level - 1  will not contain an entry for each GFN at page\nsize level. The level - 1 array will only contain an index for any\nunaligned region covered by level - 1 huge page size, which can be a\nsmaller region. So this causes the optimization to overflow the level - 1\nkvm_lpage_info and perform a vmalloc out of bounds read.\n\nIn some cases of head and tail pages where an overflow could happen,\ncallers skip the operation completely as KVM_LPAGE_MIXED_FLAG is not\nrequired to prevent huge pages as discussed earlier. But for memslots that\nare smaller than the 1GB page size, it does call hugepage_has_attrs(). In\nthis case the huge page is both the head and tail page. The issue can be\nobserved simply by compiling the kernel with CONFIG_KASAN_VMALLOC and\nrunning the selftest \u201cprivate_mem_conversions_test\u201d, which produces the\noutput like the following:\n\nBUG: KASAN: vmalloc-out-of-bounds in hugepage_has_attrs+0x7e/0x110\nRead of size 4 at addr ffffc900000a3008 by task private_mem_con/169\nCall Trace:\n  dump_stack_lvl\n  print_report\n  ? __virt_addr_valid\n  ? hugepage_has_attrs\n  ? hugepage_has_attrs\n  kasan_report\n  ? hugepage_has_attrs\n  hugepage_has_attrs\n  kvm_arch_post_set_memory_attributes\n  kvm_vm_ioctl\n\nIt is a little ambiguous whether the unaligned head page (in the bug case\nalso the tail page) should be expected to have KVM_LPAGE_MIXED_FLAG set.\nIt is not functionally required, as the unal\n---truncated---"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26987",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5ef7ba2799a3b5ed292b8f6407376e2c25ef002e",
            "https://git.kernel.org/stable/c/882e1180c83f5b75bae03d0ccc31ccedfe5159de",
            "https://git.kernel.org/stable/c/49955b24002dc16a0ae2e83a57a2a6c863a1845c",
            "https://git.kernel.org/stable/c/1983184c22dd84a4d95a71e5c6775c2638557dc7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/memory-failure: fix deadlock when hugetlb_optimize_vmemmap is enabled\n\nWhen I did hard offline test with hugetlb pages, below deadlock occurs:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-11409-gf6cef5f8c37f #1 Not tainted\n------------------------------------------------------\nbash/46904 is trying to acquire lock:\nffffffffabe68910 (cpu_hotplug_lock){++++}-{0:0}, at: static_key_slow_dec+0x16/0x60\n\nbut task is already holding lock:\nffffffffabf92ea8 (pcp_batch_high_lock){+.+.}-{3:3}, at: zone_pcp_disable+0x16/0x40\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (pcp_batch_high_lock){+.+.}-{3:3}:\n       __mutex_lock+0x6c/0x770\n       page_alloc_cpu_online+0x3c/0x70\n       cpuhp_invoke_callback+0x397/0x5f0\n       __cpuhp_invoke_callback_range+0x71/0xe0\n       _cpu_up+0xeb/0x210\n       cpu_up+0x91/0xe0\n       cpuhp_bringup_mask+0x49/0xb0\n       bringup_nonboot_cpus+0xb7/0xe0\n       smp_init+0x25/0xa0\n       kernel_init_freeable+0x15f/0x3e0\n       kernel_init+0x15/0x1b0\n       ret_from_fork+0x2f/0x50\n       ret_from_fork_asm+0x1a/0x30\n\n-> #0 (cpu_hotplug_lock){++++}-{0:0}:\n       __lock_acquire+0x1298/0x1cd0\n       lock_acquire+0xc0/0x2b0\n       cpus_read_lock+0x2a/0xc0\n       static_key_slow_dec+0x16/0x60\n       __hugetlb_vmemmap_restore_folio+0x1b9/0x200\n       dissolve_free_huge_page+0x211/0x260\n       __page_handle_poison+0x45/0xc0\n       memory_failure+0x65e/0xc70\n       hard_offline_page_store+0x55/0xa0\n       kernfs_fop_write_iter+0x12c/0x1d0\n       vfs_write+0x387/0x550\n       ksys_write+0x64/0xe0\n       do_syscall_64+0xca/0x1e0\n       entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(pcp_batch_high_lock);\n                               lock(cpu_hotplug_lock);\n                               lock(pcp_batch_high_lock);\n  rlock(cpu_hotplug_lock);\n\n *** DEADLOCK ***\n\n5 locks held by bash/46904:\n #0: ffff98f6c3bb23f0 (sb_writers#5){.+.+}-{0:0}, at: ksys_write+0x64/0xe0\n #1: ffff98f6c328e488 (&of->mutex){+.+.}-{3:3}, at: kernfs_fop_write_iter+0xf8/0x1d0\n #2: ffff98ef83b31890 (kn->active#113){.+.+}-{0:0}, at: kernfs_fop_write_iter+0x100/0x1d0\n #3: ffffffffabf9db48 (mf_mutex){+.+.}-{3:3}, at: memory_failure+0x44/0xc70\n #4: ffffffffabf92ea8 (pcp_batch_high_lock){+.+.}-{3:3}, at: zone_pcp_disable+0x16/0x40\n\nstack backtrace:\nCPU: 10 PID: 46904 Comm: bash Kdump: loaded Not tainted 6.8.0-11409-gf6cef5f8c37f #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x68/0xa0\n check_noncircular+0x129/0x140\n __lock_acquire+0x1298/0x1cd0\n lock_acquire+0xc0/0x2b0\n cpus_read_lock+0x2a/0xc0\n static_key_slow_dec+0x16/0x60\n __hugetlb_vmemmap_restore_folio+0x1b9/0x200\n dissolve_free_huge_page+0x211/0x260\n __page_handle_poison+0x45/0xc0\n memory_failure+0x65e/0xc70\n hard_offline_page_store+0x55/0xa0\n kernfs_fop_write_iter+0x12c/0x1d0\n vfs_write+0x387/0x550\n ksys_write+0x64/0xe0\n do_syscall_64+0xca/0x1e0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7fc862314887\nCode: 10 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 48 89 54 24 18 48 89 74 24\nRSP: 002b:00007fff19311268 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007fc862314887\nRDX: 000000000000000c RSI: 000056405645fe10 RDI: 0000000000000001\nRBP: 000056405645fe10 R08: 00007fc8623d1460 R09: 000000007fffffff\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000000000c\nR13: 00007fc86241b780 R14: 00007fc862417600 R15: 00007fc862416a00\n\nIn short, below scene breaks the \n---truncated---"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26998",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7ae7104d54342433a3a73975f6569beefdd86350",
            "https://git.kernel.org/stable/c/bb1118905e875c111d7ccef9aee86ac5e4e7f985",
            "https://git.kernel.org/stable/c/9cf7ea2eeb745213dc2a04103e426b960e807940"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: core: Clearing the circular buffer before NULLifying it\n\nThe circular buffer is NULLified in uart_tty_port_shutdown()\nunder the spin lock. However, the PM or other timer based callbacks\nmay still trigger after this event without knowning that buffer pointer\nis not valid. Since the serial code is a bit inconsistent in checking\nthe buffer state (some rely on the head-tail positions, some on the\nbuffer pointer), it's better to have both aligned, i.e. buffer pointer\nto be NULL and head-tail possitions to be the same, meaning it's empty.\nThis will prevent asynchronous calls to dereference NULL pointer as\nreported recently in 8250 case:\n\n  BUG: kernel NULL pointer dereference, address: 00000cf5\n  Workqueue: pm pm_runtime_work\n  EIP: serial8250_tx_chars (drivers/tty/serial/8250/8250_port.c:1809)\n  ...\n  ? serial8250_tx_chars (drivers/tty/serial/8250/8250_port.c:1809)\n  __start_tx (drivers/tty/serial/8250/8250_port.c:1551)\n  serial8250_start_tx (drivers/tty/serial/8250/8250_port.c:1654)\n  serial_port_runtime_suspend (include/linux/serial_core.h:667 drivers/tty/serial/serial_port.c:63)\n  __rpm_callback (drivers/base/power/runtime.c:393)\n  ? serial_port_remove (drivers/tty/serial/serial_port.c:50)\n  rpm_suspend (drivers/base/power/runtime.c:447)\n\nThe proposed change will prevent ->start_tx() to be called during\nsuspend on shut down port."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26990",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/cdf811a937471af2d1facdf8ae80e5e68096f1ed",
            "https://git.kernel.org/stable/c/e20bff0f1b2de9cfe303dd35ff46470104a87404",
            "https://git.kernel.org/stable/c/2673dfb591a359c75080dd5af3da484b89320d22"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: Write-protect L2 SPTEs in TDP MMU when clearing dirty status\n\nCheck kvm_mmu_page_ad_need_write_protect() when deciding whether to\nwrite-protect or clear D-bits on TDP MMU SPTEs, so that the TDP MMU\naccounts for any role-specific reasons for disabling D-bit dirty logging.\n\nSpecifically, TDP MMU SPTEs must be write-protected when the TDP MMU is\nbeing used to run an L2 (i.e. L1 has disabled EPT) and PML is enabled.\nKVM always disables PML when running L2, even when L1 and L2 GPAs are in\nthe some domain, so failing to write-protect TDP MMU SPTEs will cause\nwrites made by L2 to not be reflected in the dirty log.\n\n[sean: massage shortlog and changelog, tweak ternary op formatting]"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27002",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/165d226472575b213dd90dfda19d1605dd7c19a8",
            "https://git.kernel.org/stable/c/c0dcd5c072e2a3fff886f673e6a5d9bf8090c4cc",
            "https://git.kernel.org/stable/c/b62ed25feb342eab052822eff0c554873799a4f5",
            "https://git.kernel.org/stable/c/2f7b1d8b5505efb0057cd1ab85fca206063ea4c3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: Do a runtime PM get on controllers during probe\n\nmt8183-mfgcfg has a mutual dependency with genpd during the probing\nstage, which leads to a deadlock in the following call stack:\n\nCPU0:  genpd_lock --> clk_prepare_lock\ngenpd_power_off_work_fn()\n genpd_lock()\n generic_pm_domain::power_off()\n    clk_unprepare()\n      clk_prepare_lock()\n\nCPU1: clk_prepare_lock --> genpd_lock\nclk_register()\n  __clk_core_init()\n    clk_prepare_lock()\n    clk_pm_runtime_get()\n      genpd_lock()\n\nDo a runtime PM get at the probe function to make sure clk_register()\nwon't acquire the genpd lock. Instead of only modifying mt8183-mfgcfg,\ndo this on all mediatek clock controller probings because we don't\nbelieve this would cause any regression.\n\nVerified on MT8183 and MT8192 Chromebooks."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27003",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/83ada89e4a86e2b28ea2b5113c76d6dc7560a4d0",
            "https://git.kernel.org/stable/c/2c077fdfd09dffb31a890e5095c8ab205138a42e",
            "https://git.kernel.org/stable/c/b457105309d388e4081c716cf7b81d517ff74db4",
            "https://git.kernel.org/stable/c/9d1e795f754db1ac3344528b7af0b17b8146f321"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Get runtime PM before walking tree for clk_summary\n\nSimilar to the previous commit, we should make sure that all devices are\nruntime resumed before printing the clk_summary through debugfs. Failure\nto do so would result in a deadlock if the thread is resuming a device\nto print clk state and that device is also runtime resuming in another\nthread, e.g the screen is turning on and the display driver is starting\nup. We remove the calls to clk_pm_runtime_{get,put}() in this path\nbecause they're superfluous now that we know the devices are runtime\nresumed. This also squashes a bug where the return value of\nclk_pm_runtime_get() wasn't checked, leading to an RPM count underflow\non error paths."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26992",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0fb74c00d140a66128afc0003785dcc57e69d312",
            "https://git.kernel.org/stable/c/037e48ceccf163899374b601afb6ae8d0bf1d2ac",
            "https://git.kernel.org/stable/c/7a7650b3ac23e5fc8c990f00e94f787dc84e3175",
            "https://git.kernel.org/stable/c/9e985cbf2942a1bb8fcef9adc2a17d90fd7ca8ee"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/pmu: Disable support for adaptive PEBS\n\nDrop support for virtualizing adaptive PEBS, as KVM's implementation is\narchitecturally broken without an obvious/easy path forward, and because\nexposing adaptive PEBS can leak host LBRs to the guest, i.e. can leak\nhost kernel addresses to the guest.\n\nBug #1 is that KVM doesn't account for the upper 32 bits of\nIA32_FIXED_CTR_CTRL when (re)programming fixed counters, e.g\nfixed_ctrl_field() drops the upper bits, reprogram_fixed_counters()\nstores local variables as u8s and truncates the upper bits too, etc.\n\nBug #2 is that, because KVM _always_ sets precise_ip to a non-zero value\nfor PEBS events, perf will _always_ generate an adaptive record, even if\nthe guest requested a basic record.  Note, KVM will also enable adaptive\nPEBS in individual *counter*, even if adaptive PEBS isn't exposed to the\nguest, but this is benign as MSR_PEBS_DATA_CFG is guaranteed to be zero,\ni.e. the guest will only ever see Basic records.\n\nBug #3 is in perf.  intel_pmu_disable_fixed() doesn't clear the upper\nbits either, i.e. leaves ICL_FIXED_0_ADAPTIVE set, and\nintel_pmu_enable_fixed() effectively doesn't clear ICL_FIXED_0_ADAPTIVE\neither.  I.e. perf _always_ enables ADAPTIVE counters, regardless of what\nKVM requests.\n\nBug #4 is that adaptive PEBS *might* effectively bypass event filters set\nby the host, as \"Updated Memory Access Info Group\" records information\nthat might be disallowed by userspace via KVM_SET_PMU_EVENT_FILTER.\n\nBug #5 is that KVM doesn't ensure LBR MSRs hold guest values (or at least\nzeros) when entering a vCPU with adaptive PEBS, which allows the guest\nto read host LBRs, i.e. host RIPs/addresses, by enabling \"LBR Entries\"\nrecords.\n\nDisable adaptive PEBS support as an immediate fix due to the severity of\nthe LBR leak in particular, and because fixing all of the bugs will be\nnon-trivial, e.g. not suitable for backporting to stable kernels.\n\nNote!  This will break live migration, but trying to make KVM play nice\nwith live migration would be quite complicated, wouldn't be guaranteed to\nwork (i.e. KVM might still kill/confuse the guest), and it's not clear\nthat there are any publicly available VMMs that support adaptive PEBS,\nlet alone live migrate VMs that support adaptive PEBS, e.g. QEMU doesn't\nsupport PEBS in any capacity."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27005",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d0d04efa2e367921654b5106cc5c05e3757c2b42",
            "https://git.kernel.org/stable/c/4c65507121ea8e0b47fae6d2049c8688390d46b6",
            "https://git.kernel.org/stable/c/de1bf25b6d771abdb52d43546cf57ad775fb68a1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ninterconnect: Don't access req_list while it's being manipulated\n\nThe icc_lock mutex was split into separate icc_lock and icc_bw_lock\nmutexes in [1] to avoid lockdep splats. However, this didn't adequately\nprotect access to icc_node::req_list.\n\nThe icc_set_bw() function will eventually iterate over req_list while\nonly holding icc_bw_lock, but req_list can be modified while only\nholding icc_lock. This causes races between icc_set_bw(), of_icc_get(),\nand icc_put().\n\nExample A:\n\n  CPU0                               CPU1\n  ----                               ----\n  icc_set_bw(path_a)\n    mutex_lock(&icc_bw_lock);\n                                     icc_put(path_b)\n                                       mutex_lock(&icc_lock);\n    aggregate_requests()\n      hlist_for_each_entry(r, ...\n                                       hlist_del(...\n        <r = invalid pointer>\n\nExample B:\n\n  CPU0                               CPU1\n  ----                               ----\n  icc_set_bw(path_a)\n    mutex_lock(&icc_bw_lock);\n                                     path_b = of_icc_get()\n                                       of_icc_get_by_index()\n                                         mutex_lock(&icc_lock);\n                                         path_find()\n                                           path_init()\n    aggregate_requests()\n      hlist_for_each_entry(r, ...\n                                             hlist_add_head(...\n        <r = invalid pointer>\n\nFix this by ensuring icc_bw_lock is always held before manipulating\nicc_node::req_list. The additional places icc_bw_lock is held don't\nperform any memory allocations, so we should still be safe from the\noriginal lockdep splats that motivated the separate locks.\n\n[1] commit af42269c3523 (\"interconnect: Fix locking for runpm vs reclaim\")"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27007",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/df5f6e683e7f21a15d8be6e7a0c7a46436963ebe",
            "https://git.kernel.org/stable/c/c0205eaf3af9f5db14d4b5ee4abacf4a583c3c50"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: change src_folio after ensuring it's unpinned in UFFDIO_MOVE\n\nCommit d7a08838ab74 (\"mm: userfaultfd: fix unexpected change to src_folio\nwhen UFFDIO_MOVE fails\") moved the src_folio->{mapping, index} changing to\nafter clearing the page-table and ensuring that it's not pinned.  This\navoids failure of swapout+migration and possibly memory corruption.\n\nHowever, the commit missed fixing it in the huge-page case."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26996",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7f67c2020cb08499c400abf0fc32c65e4d9a09ca",
            "https://git.kernel.org/stable/c/0588bbbd718a8130b98c54518f1e0b569ce60a93",
            "https://git.kernel.org/stable/c/f356fd0cbd9c9cbd0854657a80d1608d0d732db3",
            "https://git.kernel.org/stable/c/7250326cbb1f4f90391ac511a126b936cefb5bb7",
            "https://git.kernel.org/stable/c/6334b8e4553cc69f51e383c9de545082213d785e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error\n\nWhen ncm function is working and then stop usb0 interface for link down,\neth_stop() is called. At this piont, accidentally if usb transport error\nshould happen in usb_ep_enable(), 'in_ep' and/or 'out_ep' may not be enabled.\n\nAfter that, ncm_disable() is called to disable for ncm unbind\nbut gether_disconnect() is never called since 'in_ep' is not enabled.\n\nAs the result, ncm object is released in ncm unbind\nbut 'dev->port_usb' associated to 'ncm->port' is not NULL.\n\nAnd when ncm bind again to recover netdev, ncm object is reallocated\nbut usb0 interface is already associated to previous released ncm object.\n\nTherefore, once usb0 interface is up and eth_start_xmit() is called,\nreleased ncm object is dereferrenced and it might cause use-after-free memory.\n\n[function unlink via configfs]\n  usb0: eth_stop dev->port_usb=ffffff9b179c3200\n  --> error happens in usb_ep_enable().\n  NCM: ncm_disable: ncm=ffffff9b179c3200\n  --> no gether_disconnect() since ncm->port.in_ep->enabled is false.\n  NCM: ncm_unbind: ncm unbind ncm=ffffff9b179c3200\n  NCM: ncm_free: ncm free ncm=ffffff9b179c3200   <-- released ncm\n\n[function link via configfs]\n  NCM: ncm_alloc: ncm alloc ncm=ffffff9ac4f8a000\n  NCM: ncm_bind: ncm bind ncm=ffffff9ac4f8a000\n  NCM: ncm_set_alt: ncm=ffffff9ac4f8a000 alt=0\n  usb0: eth_open dev->port_usb=ffffff9b179c3200  <-- previous released ncm\n  usb0: eth_start dev->port_usb=ffffff9b179c3200 <--\n  eth_start_xmit()\n  --> dev->wrap()\n  Unable to handle kernel paging request at virtual address dead00000000014f\n\nThis patch addresses the issue by checking if 'ncm->netdev' is not NULL at\nncm_disable() to call gether_disconnect() to deassociate 'dev->port_usb'.\nIt's more reasonable to check 'ncm->netdev' to call gether_connect/disconnect\nrather than check 'ncm->port.in_ep->enabled' since it might not be enabled\nbut the gether connection might be established."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27010",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e6b90468da4dae2281a6e381107f411efb48b0ef",
            "https://git.kernel.org/stable/c/0f022d32c3eca477fbf79a205243a6123ed0fe11"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Fix mirred deadlock on device recursion\n\nWhen the mirred action is used on a classful egress qdisc and a packet is\nmirrored or redirected to self we hit a qdisc lock deadlock.\nSee trace below.\n\n[..... other info removed for brevity....]\n[   82.890906]\n[   82.890906] ============================================\n[   82.890906] WARNING: possible recursive locking detected\n[   82.890906] 6.8.0-05205-g77fadd89fe2d-dirty #213 Tainted: G        W\n[   82.890906] --------------------------------------------\n[   82.890906] ping/418 is trying to acquire lock:\n[   82.890906] ffff888006994110 (&sch->q.lock){+.-.}-{3:3}, at:\n__dev_queue_xmit+0x1778/0x3550\n[   82.890906]\n[   82.890906] but task is already holding lock:\n[   82.890906] ffff888006994110 (&sch->q.lock){+.-.}-{3:3}, at:\n__dev_queue_xmit+0x1778/0x3550\n[   82.890906]\n[   82.890906] other info that might help us debug this:\n[   82.890906]  Possible unsafe locking scenario:\n[   82.890906]\n[   82.890906]        CPU0\n[   82.890906]        ----\n[   82.890906]   lock(&sch->q.lock);\n[   82.890906]   lock(&sch->q.lock);\n[   82.890906]\n[   82.890906]  *** DEADLOCK ***\n[   82.890906]\n[..... other info removed for brevity....]\n\nExample setup (eth0->eth0) to recreate\ntc qdisc add dev eth0 root handle 1: htb default 30\ntc filter add dev eth0 handle 1: protocol ip prio 2 matchall \\\n     action mirred egress redirect dev eth0\n\nAnother example(eth0->eth1->eth0) to recreate\ntc qdisc add dev eth0 root handle 1: htb default 30\ntc filter add dev eth0 handle 1: protocol ip prio 2 matchall \\\n     action mirred egress redirect dev eth1\n\ntc qdisc add dev eth1 root handle 1: htb default 30\ntc filter add dev eth1 handle 1: protocol ip prio 2 matchall \\\n     action mirred egress redirect dev eth0\n\nWe fix this by adding an owner field (CPU id) to struct Qdisc set after\nroot qdisc is entered. When the softirq enters it a second time, if the\nqdisc owner is the same CPU, the packet is dropped to break the loop."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27011",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/49d0e656d19dfb2d4d7c230e4a720d37b3decff6",
            "https://git.kernel.org/stable/c/86a1471d7cde792941109b93b558b5dc078b9ee9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memleak in map from abort path\n\nThe delete set command does not rely on the transaction object for\nelement removal, therefore, a combination of delete element + delete set\nfrom the abort path could result in restoring twice the refcount of the\nmapping.\n\nCheck for inactive element in the next generation for the delete element\ncommand in the abort path, skip restoring state if next generation bit\nhas been already cleared. This is similar to the activate logic using\nthe set walk iterator.\n\n[ 6170.286929] ------------[ cut here ]------------\n[ 6170.286939] WARNING: CPU: 6 PID: 790302 at net/netfilter/nf_tables_api.c:2086 nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.287071] Modules linked in: [...]\n[ 6170.287633] CPU: 6 PID: 790302 Comm: kworker/6:2 Not tainted 6.9.0-rc3+ #365\n[ 6170.287768] RIP: 0010:nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.287886] Code: df 48 8d 7d 58 e8 69 2e 3b df 48 8b 7d 58 e8 80 1b 37 df 48 8d 7d 68 e8 57 2e 3b df 48 8b 7d 68 e8 6e 1b 37 df 48 89 ef eb c4 <0f> 0b 48 83 c4 08 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 0f\n[ 6170.287895] RSP: 0018:ffff888134b8fd08 EFLAGS: 00010202\n[ 6170.287904] RAX: 0000000000000001 RBX: ffff888125bffb28 RCX: dffffc0000000000\n[ 6170.287912] RDX: 0000000000000003 RSI: ffffffffa20298ab RDI: ffff88811ebe4750\n[ 6170.287919] RBP: ffff88811ebe4700 R08: ffff88838e812650 R09: fffffbfff0623a55\n[ 6170.287926] R10: ffffffff8311d2af R11: 0000000000000001 R12: ffff888125bffb10\n[ 6170.287933] R13: ffff888125bffb10 R14: dead000000000122 R15: dead000000000100\n[ 6170.287940] FS:  0000000000000000(0000) GS:ffff888390b00000(0000) knlGS:0000000000000000\n[ 6170.287948] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 6170.287955] CR2: 00007fd31fc00710 CR3: 0000000133f60004 CR4: 00000000001706f0\n[ 6170.287962] Call Trace:\n[ 6170.287967]  <TASK>\n[ 6170.287973]  ? __warn+0x9f/0x1a0\n[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288092]  ? report_bug+0x1b1/0x1e0\n[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288092]  ? report_bug+0x1b1/0x1e0\n[ 6170.288104]  ? handle_bug+0x3c/0x70\n[ 6170.288112]  ? exc_invalid_op+0x17/0x40\n[ 6170.288120]  ? asm_exc_invalid_op+0x1a/0x20\n[ 6170.288132]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]\n[ 6170.288243]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288366]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]\n[ 6170.288483]  nf_tables_trans_destroy_work+0x588/0x590 [nf_tables]"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27012",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/86658fc7414d4b9e25c2699d751034537503d637",
            "https://git.kernel.org/stable/c/e79b47a8615d42c68aaeb68971593333667382ed"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: restore set elements when delete set fails\n\nFrom abort path, nft_mapelem_activate() needs to restore refcounters to\nthe original state. Currently, it uses the set->ops->walk() to iterate\nover these set elements. The existing set iterator skips inactive\nelements in the next generation, this does not work from the abort path\nto restore the original state since it has to skip active elements\ninstead (not inactive ones).\n\nThis patch moves the check for inactive elements to the set iterator\ncallback, then it reverses the logic for the .activate case which\nneeds to skip active elements.\n\nToggle next generation bit for elements when delete set command is\ninvoked and call nft_clear() from .activate (abort) path to restore the\nnext generation bit.\n\nThe splat below shows an object in mappings memleak:\n\n[43929.457523] ------------[ cut here ]------------\n[43929.457532] WARNING: CPU: 0 PID: 1139 at include/net/netfilter/nf_tables.h:1237 nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[...]\n[43929.458014] RIP: 0010:nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458076] Code: 83 f8 01 77 ab 49 8d 7c 24 08 e8 37 5e d0 de 49 8b 6c 24 08 48 8d 7d 50 e8 e9 5c d0 de 8b 45 50 8d 50 ff 89 55 50 85 c0 75 86 <0f> 0b eb 82 0f 0b eb b3 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90\n[43929.458081] RSP: 0018:ffff888140f9f4b0 EFLAGS: 00010246\n[43929.458086] RAX: 0000000000000000 RBX: ffff8881434f5288 RCX: dffffc0000000000\n[43929.458090] RDX: 00000000ffffffff RSI: ffffffffa26d28a7 RDI: ffff88810ecc9550\n[43929.458093] RBP: ffff88810ecc9500 R08: 0000000000000001 R09: ffffed10281f3e8f\n[43929.458096] R10: 0000000000000003 R11: ffff0000ffff0000 R12: ffff8881434f52a0\n[43929.458100] R13: ffff888140f9f5f4 R14: ffff888151c7a800 R15: 0000000000000002\n[43929.458103] FS:  00007f0c687c4740(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[43929.458107] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[43929.458111] CR2: 00007f58dbe5b008 CR3: 0000000123602005 CR4: 00000000001706f0\n[43929.458114] Call Trace:\n[43929.458118]  <TASK>\n[43929.458121]  ? __warn+0x9f/0x1a0\n[43929.458127]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458188]  ? report_bug+0x1b1/0x1e0\n[43929.458196]  ? handle_bug+0x3c/0x70\n[43929.458200]  ? exc_invalid_op+0x17/0x40\n[43929.458211]  ? nft_setelem_data_deactivate+0xd7/0xf0 [nf_tables]\n[43929.458271]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458332]  nft_mapelem_deactivate+0x24/0x30 [nf_tables]\n[43929.458392]  nft_rhash_walk+0xdd/0x180 [nf_tables]\n[43929.458453]  ? __pfx_nft_rhash_walk+0x10/0x10 [nf_tables]\n[43929.458512]  ? rb_insert_color+0x2e/0x280\n[43929.458520]  nft_map_deactivate+0xdc/0x1e0 [nf_tables]\n[43929.458582]  ? __pfx_nft_map_deactivate+0x10/0x10 [nf_tables]\n[43929.458642]  ? __pfx_nft_mapelem_deactivate+0x10/0x10 [nf_tables]\n[43929.458701]  ? __rcu_read_unlock+0x46/0x70\n[43929.458709]  nft_delset+0xff/0x110 [nf_tables]\n[43929.458769]  nft_flush_table+0x16f/0x460 [nf_tables]\n[43929.458830]  nf_tables_deltable+0x501/0x580 [nf_tables]"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27006",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9c8215d32e730b597c809a9d2090bf8ec1b79fcf",
            "https://git.kernel.org/stable/c/b552f63cd43735048bbe9bfbb7a9dcfce166fbdd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal/debugfs: Add missing count increment to thermal_debug_tz_trip_up()\n\nThe count field in struct trip_stats, representing the number of times\nthe zone temperature was above the trip point, needs to be incremented\nin thermal_debug_tz_trip_up(), for two reasons.\n\nFirst, if a trip point is crossed on the way up for the first time,\nthermal_debug_update_temp() called from update_temperature() does\nnot see it because it has not been added to trips_crossed[] array\nin the thermal zone's struct tz_debugfs object yet.  Therefore, when\nthermal_debug_tz_trip_up() is called after that, the trip point's\ncount value is 0, and the attempt to divide by it during the average\ntemperature computation leads to a divide error which causes the kernel\nto crash.  Setting the count to 1 before the division by incrementing it\nfixes this problem.\n\nSecond, if a trip point is crossed on the way up, but it has been\ncrossed on the way up already before, its count value needs to be\nincremented to make a record of the fact that the zone temperature is\nabove the trip now.  Without doing that, if the mitigations applied\nafter crossing the trip cause the zone temperature to drop below its\nthreshold, the count will not be updated for this episode at all and\nthe average temperature in the trip statistics record will be somewhat\nhigher than it should be.\n\nCc :6.8+ <stable@vger.kernel.org> # 6.8+"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27015",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e719b52d0c56989b0f3475a03a6d64f182c85b56",
            "https://git.kernel.org/stable/c/f1c3c61701a0b12f4906152c1626a5de580ea3d2",
            "https://git.kernel.org/stable/c/4ed82dd368ad883dc4284292937b882f044e625d",
            "https://git.kernel.org/stable/c/e3f078103421642fcd5f05c5e70777feb10f000d",
            "https://git.kernel.org/stable/c/6db5dc7b351b9569940cd1cf445e237c42cd6d27"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: incorrect pppoe tuple\n\npppoe traffic reaching ingress path does not match the flowtable entry\nbecause the pppoe header is expected to be at the network header offset.\nThis bug causes a mismatch in the flow table lookup, so pppoe packets\nenter the classical forwarding path."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27016",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d06977b9a4109f8738bb276125eb6a0b772bc433",
            "https://git.kernel.org/stable/c/8bf7c76a2a207ca2b4cfda0a279192adf27678d7",
            "https://git.kernel.org/stable/c/a2471d271042ea18e8a6babc132a8716bb2f08b9",
            "https://git.kernel.org/stable/c/cf366ee3bc1b7d1c76a882640ba3b3f8f1039163",
            "https://git.kernel.org/stable/c/87b3593bed1868b2d9fe096c01bcdf0ea86cbebf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: validate pppoe header\n\nEnsure there is sufficient room to access the protocol field of the\nPPPoe header. Validate it once before the flowtable lookup, then use a\nhelper function to access protocol field."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27017",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/721715655c72640567e8742567520c99801148ed",
            "https://git.kernel.org/stable/c/29b359cf6d95fd60730533f7f10464e95bd17c73"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: walk over current view on netlink dump\n\nThe generation mask can be updated while netlink dump is in progress.\nThe pipapo set backend walk iterator cannot rely on it to infer what\nview of the datastructure is to be used. Add notation to specify if user\nwants to read/update the set.\n\nBased on patch from Florian Westphal."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27018",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/dceb683ab87ca3666a9bb5c0158528b646faedc4",
            "https://git.kernel.org/stable/c/b13db0d16bc7b2a52abcf5cb71334f63faa5dbd6",
            "https://git.kernel.org/stable/c/3f59ac29dea0921637053908fe99268d157bbb9d",
            "https://git.kernel.org/stable/c/43193174510ea4f3ce09b796e559a2fd9f148615",
            "https://git.kernel.org/stable/c/751de2012eafa4d46d8081056761fa0e9cc8a178"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: br_netfilter: skip conntrack input hook for promisc packets\n\nFor historical reasons, when bridge device is in promisc mode, packets\nthat are directed to the taps follow bridge input hook path. This patch\nadds a workaround to reset conntrack for these packets.\n\nJianbo Liu reports warning splats in their test infrastructure where\ncloned packets reach the br_netfilter input hook to confirm the\nconntrack object.\n\nScratch one bit from BR_INPUT_SKB_CB to annotate that this packet has\nreached the input hook because it is passed up to the bridge device to\nreach the taps.\n\n[   57.571874] WARNING: CPU: 1 PID: 0 at net/bridge/br_netfilter_hooks.c:616 br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.572749] Modules linked in: xt_MASQUERADE nf_conntrack_netlink nfnetlink iptable_nat xt_addrtype xt_conntrack nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry overlay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_isc si ib_umad rdma_cm ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5ctl mlx5_core\n[   57.575158] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 6.8.0+ #19\n[   57.575700] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n[   57.576662] RIP: 0010:br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.577195] Code: fe ff ff 41 bd 04 00 00 00 be 04 00 00 00 e9 4a ff ff ff be 04 00 00 00 48 89 ef e8 f3 a9 3c e1 66 83 ad b4 00 00 00 04 eb 91 <0f> 0b e9 f1 fe ff ff 0f 0b e9 df fe ff ff 48 89 df e8 b3 53 47 e1\n[   57.578722] RSP: 0018:ffff88885f845a08 EFLAGS: 00010202\n[   57.579207] RAX: 0000000000000002 RBX: ffff88812dfe8000 RCX: 0000000000000000\n[   57.579830] RDX: ffff88885f845a60 RSI: ffff8881022dc300 RDI: 0000000000000000\n[   57.580454] RBP: ffff88885f845a60 R08: 0000000000000001 R09: 0000000000000003\n[   57.581076] R10: 00000000ffff1300 R11: 0000000000000002 R12: 0000000000000000\n[   57.581695] R13: ffff8881047ffe00 R14: ffff888108dbee00 R15: ffff88814519b800\n[   57.582313] FS:  0000000000000000(0000) GS:ffff88885f840000(0000) knlGS:0000000000000000\n[   57.583040] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   57.583564] CR2: 000000c4206aa000 CR3: 0000000103847001 CR4: 0000000000370eb0\n[   57.584194] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[   57.584820] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[   57.585440] Call Trace:\n[   57.585721]  <IRQ>\n[   57.585976]  ? __warn+0x7d/0x130\n[   57.586323]  ? br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.586811]  ? report_bug+0xf1/0x1c0\n[   57.587177]  ? handle_bug+0x3f/0x70\n[   57.587539]  ? exc_invalid_op+0x13/0x60\n[   57.587929]  ? asm_exc_invalid_op+0x16/0x20\n[   57.588336]  ? br_nf_local_in+0x157/0x180 [br_netfilter]\n[   57.588825]  nf_hook_slow+0x3d/0xd0\n[   57.589188]  ? br_handle_vlan+0x4b/0x110\n[   57.589579]  br_pass_frame_up+0xfc/0x150\n[   57.589970]  ? br_port_flags_change+0x40/0x40\n[   57.590396]  br_handle_frame_finish+0x346/0x5e0\n[   57.590837]  ? ipt_do_table+0x32e/0x430\n[   57.591221]  ? br_handle_local_finish+0x20/0x20\n[   57.591656]  br_nf_hook_thresh+0x4b/0xf0 [br_netfilter]\n[   57.592286]  ? br_handle_local_finish+0x20/0x20\n[   57.592802]  br_nf_pre_routing_finish+0x178/0x480 [br_netfilter]\n[   57.593348]  ? br_handle_local_finish+0x20/0x20\n[   57.593782]  ? nf_nat_ipv4_pre_routing+0x25/0x60 [nf_nat]\n[   57.594279]  br_nf_pre_routing+0x24c/0x550 [br_netfilter]\n[   57.594780]  ? br_nf_hook_thresh+0xf0/0xf0 [br_netfilter]\n[   57.595280]  br_handle_frame+0x1f3/0x3d0\n[   57.595676]  ? br_handle_local_finish+0x20/0x20\n[   57.596118]  ? br_handle_frame_finish+0x5e0/0x5e0\n[   57.596566]  __netif_receive_skb_core+0x25b/0xfc0\n[   57.597017]  ? __napi_build_skb+0x37/0x40\n[   57.597418]  __netif_receive_skb_list_core+0xfb/0x220"
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27019",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/379bf7257bc5f2a1b1ca8514e08a871b7bf6d920",
            "https://git.kernel.org/stable/c/df7c0fb8c2b9f9cac65659332581b19682a71349",
            "https://git.kernel.org/stable/c/ad333578f736d56920e090d7db1f8dec891d815e",
            "https://git.kernel.org/stable/c/4ca946b19caf655a08d5e2266d4d5526025ebb73",
            "https://git.kernel.org/stable/c/d78d867dcea69c328db30df665be5be7d0148484"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_obj_type_get()\n\nnft_unregister_obj() can concurrent with __nft_obj_type_get(),\nand there is not any protection when iterate over nf_tables_objects\nlist in __nft_obj_type_get(). Therefore, there is potential data-race\nof nf_tables_objects list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_objects\nlist in __nft_obj_type_get(), and use rcu_read_lock() in the caller\nnft_obj_type_get() to protect the entire type query process."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-04-25T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26925",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/61ac7284346c32f9a8c8ceac56102f7914060428",
            "https://git.kernel.org/stable/c/2cee2ff7f8cce12a63a0a23ffe27f08d99541494",
            "https://git.kernel.org/stable/c/eb769ff4e281f751adcaf4f4445cbf30817be139",
            "https://git.kernel.org/stable/c/8d3a58af50e46167b6f1db47adadad03c0045dae",
            "https://git.kernel.org/stable/c/8038ee3c3e5b59bcd78467686db5270c68544e30",
            "https://git.kernel.org/stable/c/a34ba4bdeec0c3b629160497594908dc820110f1",
            "https://git.kernel.org/stable/c/0d459e2ffb541841714839e8228b845458ed3b27"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: release mutex after nft_gc_seq_end from abort path\n\nThe commit mutex should not be released during the critical section\nbetween nft_gc_seq_begin() and nft_gc_seq_end(), otherwise, async GC\nworker could collect expired objects and get the released commit lock\nwithin the same GC sequence.\n\nnf_tables_module_autoload() temporarily releases the mutex to load\nmodule dependencies, then it goes back to replay the transaction again.\nMove it at the end of the abort phase after nft_gc_seq_end() is called."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-04-13T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26817",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e6721ea845fcb93a764a92bd40f1afc0d6c69751",
            "https://git.kernel.org/stable/c/8b0564704255c6b3c6a7188e86939f754e1577c0",
            "https://git.kernel.org/stable/c/fcbd99b3c73309107e3be71f20dff9414df64f91",
            "https://git.kernel.org/stable/c/cbac7de1d9901521e78cdc34e15451df3611f2ad",
            "https://git.kernel.org/stable/c/e6768c6737f4c02cba193a3339f0cc2907f0b86a",
            "https://git.kernel.org/stable/c/315eb3c2df7e4cb18e3eacfa18a53a46f2bf0ef7",
            "https://git.kernel.org/stable/c/0c33d11153949310d76631d8f4a4736519eacd3a",
            "https://git.kernel.org/stable/c/3b0daecfeac0103aba8b293df07a0cbaf8b43f29"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\namdkfd: use calloc instead of kzalloc to avoid integer overflow\n\nThis uses calloc instead of doing the multiplication which might\noverflow."
    },
    {
        "Modified": "2024-05-13T08:15:00",
        "Published": "2024-03-27T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26651",
        "impact": {},
        "last-modified": "2024-05-13T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/424eba06ed405d557077339edb19ce0ebe39e7c7",
            "https://git.kernel.org/stable/c/8a8b6a24684bc278036c3f159f7b3a31ad89546a",
            "https://git.kernel.org/stable/c/6b4a39acafaf0186ed8e97c16e0aa6fca0e52009",
            "https://git.kernel.org/stable/c/276873ae26c8d75b00747c1dadb9561d6ef20581",
            "https://git.kernel.org/stable/c/9c402819620a842cbfe39359a3ddfaac9adc8384",
            "https://git.kernel.org/stable/c/e39a3a14eafcf17f03c037290b78c8f483529028",
            "https://git.kernel.org/stable/c/efba65777f98457773c5b65e3135c6132d3b015f",
            "https://git.kernel.org/stable/c/f546cc19f9b82975238d0ba413adc27714750774",
            "https://git.kernel.org/stable/c/07161b2416f740a2cb87faa5566873f401440a61"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsr9800: Add check for usbnet_get_endpoints\n\nAdd check for usbnet_get_endpoints() and return the error if it fails\nin order to transfer the error."
    },
    {
        "Modified": "2024-05-10T18:15:00",
        "Published": "2024-01-17T21:15:00",
        "access": {},
        "assigner": "secure@citrix.com",
        "cvss": null,
        "cwe": "CWE-119",
        "id": "CVE-2023-6549",
        "impact": {},
        "last-modified": "2024-05-10T18:15:00",
        "references": [
            "https://support.citrix.com/article/CTX584986/netscaler-adc-and-netscaler-gateway-security-bulletin-for-cve20236548-and-cve20236549"
        ],
        "summary": "Improper Restriction of Operations within the Bounds of a Memory Buffer in NetScaler ADC and NetScaler Gateway allows Unauthenticated Denial of Service and\u00a0Out-Of-Bounds Memory Read\n"
    },
    {
        "Modified": "2024-05-10T16:15:00",
        "Published": "2024-04-09T19:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-6799",
        "impact": {},
        "last-modified": "2024-05-10T16:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/68f41e88-ed36-4361-bddd-41495a540cd9?source=cve",
            "https://plugins.trac.wordpress.org/changeset?old_path=/wp-reset/tags/1.99&old=3059287&new_path=/wp-reset/tags/2.0&new=3059287&sfp_email=&sfph_mail=",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3071811%40wp-reset&new=3071811%40wp-reset&sfp_email=&sfph_mail="
        ],
        "summary": "The WP Reset \u2013 Most Advanced WordPress Reset Tool plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 2.0 via the use of insufficiently random snapshot names. This makes it possible for unauthenticated attackers to extract sensitive data including site backups by brute-forcing the snapshot filenames. Please note that the vendor does not plan to do any further hardening on this functionality."
    },
    {
        "Modified": "2024-05-10T15:15:00",
        "Published": "2024-04-16T00:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-29",
        "id": "CVE-2024-1561",
        "impact": {},
        "last-modified": "2024-05-10T15:15:00",
        "references": [
            "https://huntr.com/bounties/4acf584e-2fe8-490e-878d-2d9bf2698338",
            "https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2",
            "https://www.gradio.app/changelog#4-13-0"
        ],
        "summary": "An issue was discovered in gradio-app/gradio, where the `/component_server` endpoint improperly allows the invocation of any method on a `Component` class with attacker-controlled arguments. Specifically, by exploiting the `move_resource_to_block_cache()` method of the `Block` class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via `launch(share=True)`, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on `huggingface.co` are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables."
    },
    {
        "Modified": "2024-05-10T14:33:00",
        "Published": "2024-04-15T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-338",
        "id": "CVE-2024-31497",
        "impact": {},
        "last-modified": "2024-05-10T14:33:00",
        "references": [
            "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
            "https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-p521-bias.html",
            "https://www.openwall.com/lists/oss-security/2024/04/15/6",
            "https://filezilla-project.org/versions.php",
            "https://tartarus.org/~simon/putty-snapshots/htmldoc/Chapter9.html#pageant-forward",
            "https://docs.ccv.brown.edu/oscar/connecting-to-oscar/ssh/ssh-agent-forwarding/key-generation-and-agent-forwarding-with-putty",
            "https://news.ycombinator.com/item?id=40044665",
            "https://winscp.net/eng/news.php",
            "https://tortoisegit.org",
            "https://github.com/advisories/GHSA-6p4c-r453-8743",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2275183",
            "https://bugzilla.suse.com/show_bug.cgi?id=1222864",
            "https://security-tracker.debian.org/tracker/CVE-2024-31497",
            "https://twitter.com/lambdafu/status/1779969509522133272",
            "https://git.tartarus.org/?h=c193fe9848f50a88a4089aac647fecc31ae96d27&p=simon/putty.git",
            "https://www.reddit.com/r/sysadmin/comments/1c4wmoj/putty_vulnerability_affecting_v068_to_v08/",
            "https://github.com/daedalus/BreakingECDSAwithLLL",
            "https://www.bleepingcomputer.com/news/security/putty-ssh-client-flaw-allows-recovery-of-cryptographic-private-keys/",
            "https://twitter.com/CCBalert/status/1780229237569470549",
            "https://securityonline.info/cve-2024-31497-critical-putty-vulnerability-exposes-private-keys-immediate-action-required/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WMJH7M663BVO3SY6MFAW2FAZWLLXAPRQ/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MMHILY2K7HQGQRHOC375KRRG2M6625RD/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IZS3B37GNGWOOV7QU7B7JFK76U4TOP4V/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WFDZBV7ZCAZ6AH3VCQ34SSY7L3J7VZXZ/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PUOTQVGC4DISVHQGSPUYGXO6TLDK65LA/",
            "http://www.openwall.com/lists/oss-security/2024/04/15/6"
        ],
        "summary": "In PuTTY 0.68 through 0.80 before 0.81, biased ECDSA nonce generation allows an attacker to recover a user's NIST P-521 secret key via a quick attack in approximately 60 signatures. This is especially important in a scenario where an adversary is able to read messages signed by PuTTY or Pageant. The required set of signed messages may be publicly readable because they are stored in a public Git service that supports use of SSH for commit signing, and the signatures were made by Pageant through an agent-forwarding mechanism. In other words, an adversary may already have enough signature information to compromise a victim's private key, even if there is no further use of vulnerable PuTTY versions. After a key compromise, an adversary may be able to conduct supply-chain attacks on software maintained in Git. A second, independent scenario is that the adversary is an operator of an SSH server to which the victim authenticates (for remote login or file copy), even though this server is not fully trusted by the victim, and the victim uses the same private key for SSH connections to other services operated by other entities. Here, the rogue server operator (who would otherwise have no way to determine the victim's private key) can derive the victim's private key, and then use it for unauthorized access to those other services. If the other services include Git services, then again it may be possible to conduct supply-chain attacks on software maintained in Git. This also affects, for example, FileZilla before 3.67.0, WinSCP before 6.3.3, TortoiseGit before 2.15.0.1, and TortoiseSVN through 1.14.6."
    },
    {
        "Modified": "2024-05-09T23:15:00",
        "Published": "2024-05-03T02:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-35743",
        "impact": {},
        "last-modified": "2024-05-09T23:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1248/",
            "https://supportannouncement.us.dlink.com/announcement/publication.aspx?name=SAP10349"
        ],
        "summary": "D-Link DAP-2622 DDP Configuration Restore Auth Password Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of D-Link DAP-2622 routers. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the DDP service. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.\n. Was ZDI-CAN-20070."
    },
    {
        "Modified": "2024-05-09T23:15:00",
        "Published": "2024-05-03T02:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-38097",
        "impact": {},
        "last-modified": "2024-05-09T23:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-919/",
            "https://kb.netgear.com/000065707/Security-Advisory-for-Multiple-Vulnerabilities-on-the-ProSAFE-Network-Management-System-PSV-2023-0024-PSV-2023-0025"
        ],
        "summary": "NETGEAR ProSAFE Network Management System BkreProcessThread Exposed Dangerous Function Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of NETGEAR ProSAFE Network Management System. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.\n\nThe specific flaw exists within the BkreProcessThread class. The issue results from an exposed dangerous function. An attacker can leverage this vulnerability to execute code in the context of SYSTEM.\n. Was ZDI-CAN-19719."
    },
    {
        "Modified": "2024-05-09T23:15:00",
        "Published": "2024-05-03T03:16:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-51606",
        "impact": {},
        "last-modified": "2024-05-09T23:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1907/"
        ],
        "summary": "Kofax Power PDF U3D File Parsing Out-Of-Bounds Read Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Kofax Power PDF. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of U3D files. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this vulnerability to execute code in the context of the current process.\n. Was ZDI-CAN-21759."
    },
    {
        "Modified": "2024-05-09T23:15:00",
        "Published": "2024-05-03T03:15:00",
        "access": {},
        "assigner": "zdi-disclosures@trendmicro.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-39472",
        "impact": {},
        "last-modified": "2024-05-09T23:15:00",
        "references": [
            "https://www.zerodayinitiative.com/advisories/ZDI-23-1048/"
        ],
        "summary": "Inductive Automation Ignition SimpleXMLReader XML External Entity Processing Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Inductive Automation Ignition. Authentication is required to exploit this vulnerability.\n\nThe specific flaw exists within the SimpleXMLReader class. Due to the improper restriction of XML External Entity (XXE) references, a crafted document specifying a URI causes the XML parser to access the URI and embed the contents back into the XML document for further processing. An attacker can leverage this vulnerability to disclose information in the context of the SYSTEM.\n. Was ZDI-CAN-17571."
    },
    {
        "Modified": "2024-05-09T22:15:00",
        "Published": "2024-04-26T04:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-77",
        "id": "CVE-2024-3154",
        "impact": {},
        "last-modified": "2024-05-09T22:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-3154",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2272532",
            "https://github.com/cri-o/cri-o/security/advisories/GHSA-2cgq-h8xw-2v5j",
            "https://github.com/opencontainers/runc/pull/4217",
            "https://github.com/opencontainers/runtime-spec/blob/main/features.md#unsafe-annotations-in-configjson",
            "https://access.redhat.com/errata/RHSA-2024:2669",
            "https://access.redhat.com/errata/RHSA-2024:2672"
        ],
        "summary": "A flaw was found in cri-o, where an arbitrary systemd property can be injected via a Pod annotation. Any user who can create a pod with an arbitrary annotation may perform an arbitrary action on the host system."
    },
    {
        "Modified": "2024-05-09T22:15:00",
        "Published": "2024-03-18T15:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-269",
        "id": "CVE-2024-1753",
        "impact": {},
        "last-modified": "2024-05-09T22:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-1753",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2265513",
            "https://github.com/containers/buildah/security/advisories/GHSA-pmf3-c36m-g5cf",
            "https://github.com/containers/podman/security/advisories/GHSA-874v-pj72-92f3",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVBSVZGVABPYIHK5HZM472NPGWMI7WXH/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KOYMVMQ7RWMDTSKQTBO734BE3WQPI2AJ/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FCRZVUDOFM5CPREQKBEU2VK2QK62PSBP/",
            "https://access.redhat.com/errata/RHSA-2024:2055",
            "https://access.redhat.com/errata/RHSA-2024:2064",
            "https://access.redhat.com/errata/RHSA-2024:2066",
            "https://access.redhat.com/errata/RHSA-2024:2077",
            "https://access.redhat.com/errata/RHSA-2024:2097",
            "https://access.redhat.com/errata/RHSA-2024:2098",
            "https://access.redhat.com/errata/RHSA-2024:2084",
            "https://access.redhat.com/errata/RHSA-2024:2548",
            "https://access.redhat.com/errata/RHSA-2024:2089",
            "https://access.redhat.com/errata/RHSA-2024:2090",
            "https://access.redhat.com/errata/RHSA-2024:2645",
            "https://access.redhat.com/errata/RHSA-2024:2049",
            "https://access.redhat.com/errata/RHSA-2024:2669",
            "https://access.redhat.com/errata/RHSA-2024:2672"
        ],
        "summary": "A flaw was found in Buildah (and subsequently Podman Build) which allows containers to mount arbitrary locations on the host filesystem into build containers. A malicious Containerfile can use a dummy image with a symbolic link to the root filesystem as a mount source and cause the mount operation to mount the host root filesystem inside the RUN step. The commands inside the RUN step will then have read-write access to the host filesystem, allowing for full container escape at build time."
    },
    {
        "Modified": "2024-05-09T18:37:00",
        "Published": "2023-03-10T22:15:00",
        "access": {},
        "assigner": "support@hackerone.com",
        "cvss": null,
        "cwe": "CWE-306",
        "id": "CVE-2023-27532",
        "impact": {},
        "last-modified": "2024-05-09T18:37:00",
        "references": [
            "https://www.veeam.com/kb4424"
        ],
        "summary": "Vulnerability in Veeam Backup & Replication component allows encrypted credentials stored in the configuration database to be obtained. This may lead to gaining access to the backup infrastructure hosts."
    },
    {
        "Modified": "2024-05-09T18:37:00",
        "Published": "2022-03-17T21:15:00",
        "access": {
            "authentication": "SINGLE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 6.5,
        "cvss-time": "2024-05-09T18:37:00",
        "cvss-vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
        "cwe": "CWE-22",
        "id": "CVE-2022-26500",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-05-09T18:37:00",
        "references": [
            "https://www.veeam.com/kb4288",
            "https://veeam.com"
        ],
        "summary": "Improper limitation of path names in Veeam Backup & Replication 9.5U3, 9.5U4,10.x, and 11.x allows remote authenticated users access to internal API functions that allows attackers to upload and execute arbitrary code."
    },
    {
        "Modified": "2024-05-09T18:37:00",
        "Published": "2022-03-17T21:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 10.0,
        "cvss-time": "2024-05-09T18:37:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-306",
        "id": "CVE-2022-26501",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-05-09T18:37:00",
        "references": [
            "https://www.veeam.com/kb4288",
            "https://veeam.com"
        ],
        "summary": "Veeam Backup & Replication 10.x and 11.x has Incorrect Access Control (issue 1 of 2)."
    },
    {
        "Modified": "2024-05-09T18:37:00",
        "Published": "2022-03-17T21:15:00",
        "access": {
            "authentication": "SINGLE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 9.0,
        "cvss-time": "2024-05-09T18:37:00",
        "cvss-vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C",
        "cwe": "CWE-287",
        "id": "CVE-2022-26504",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-05-09T18:37:00",
        "references": [
            "https://www.veeam.com/kb4290",
            "https://veeam.com"
        ],
        "summary": "Improper authentication in Veeam Backup & Replication 9.5U3, 9.5U4,10.x and 11.x component used for Microsoft System Center Virtual Machine Manager (SCVMM) allows attackers execute arbitrary code via Veeam.Backup.PSManager.exe"
    },
    {
        "Modified": "2024-05-09T18:37:00",
        "Published": "2015-10-16T20:59:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "cve@mitre.org",
        "cvss": 2.1,
        "cvss-time": "2024-05-09T18:37:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
        "cwe": "CWE-200",
        "id": "CVE-2015-5742",
        "impact": {
            "availability": "NONE",
            "confidentiality": "PARTIAL",
            "integrity": "NONE"
        },
        "last-modified": "2024-05-09T18:37:00",
        "references": [
            "http://packetstormsecurity.com/files/133906/Veeam-Backup-And-Replication-6-7-8-Privilege-Escalation.html",
            "http://www.veeam.com/kb2068",
            "http://www.ush.it/2015/10/08/veeam-backup-replication-6-7-8-local-privilege-escalation-vulnerability/",
            "http://seclists.org/fulldisclosure/2015/Oct/44",
            "https://www.veeam.com/kb2180",
            "http://www.securityfocus.com/archive/1/536647/100/0/threaded"
        ],
        "summary": "VeeamVixProxy in Veeam Backup & Replication (B&R) before 8.0 update 3 stores local administrator credentials in log files with world-readable permissions, which allows local users to obtain sensitive information by reading the files."
    },
    {
        "Modified": "2024-05-09T16:15:00",
        "Published": "2024-04-04T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-526",
        "id": "CVE-2024-2700",
        "impact": {},
        "last-modified": "2024-05-09T16:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-2700",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2273281",
            "https://access.redhat.com/errata/RHSA-2024:2705"
        ],
        "summary": "A vulnerability was found in the quarkus-core component. Quarkus captures local environment variables from the Quarkus namespace during the application's build, therefore, running the resulting application inherits the values captured at build time. Some local environment variables may have been set by the developer or CI environment for testing purposes, such as dropping the database during application startup or trusting all TLS certificates to accept self-signed certificates. If these properties are configured using environment variables or the .env facility, they are captured into the built application, which can lead to dangerous behavior if the application does not override these values. This behavior only happens for configuration properties from the `quarkus.*` namespace. Application-specific properties are not captured."
    },
    {
        "Modified": "2024-05-09T15:23:00",
        "Published": "2024-01-25T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-23817",
        "impact": {},
        "last-modified": "2024-05-09T15:23:00",
        "references": [
            "https://github.com/Dolibarr/dolibarr/security/advisories/GHSA-7947-48q7-cp5m"
        ],
        "summary": "Dolibarr is an enterprise resource planning (ERP) and customer relationship management (CRM) software package. Version 18.0.4 has a HTML Injection vulnerability in the Home page of the Dolibarr Application. This vulnerability allows an attacker to inject arbitrary HTML tags and manipulate the rendered content in the application's response. Specifically, I was able to successfully inject a new HTML tag into the returned document and, as a result, was able to comment out some part of the Dolibarr App Home page HTML code. This behavior can be exploited to perform various attacks like Cross-Site Scripting (XSS). To remediate the issue, validate and sanitize all user-supplied input, especially within HTML attributes, to prevent HTML injection attacks; and implement proper output encoding when rendering user-provided data to ensure it is treated as plain text rather than executable HTML."
    },
    {
        "Modified": "2024-05-09T14:15:00",
        "Published": "2024-05-06T18:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-639",
        "id": "CVE-2024-34383",
        "impact": {},
        "last-modified": "2024-05-09T14:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/wp-seopress/wordpress-seopress-plugin-7-6-1-sensitive-data-exposure-vulnerability?_s_id=cve"
        ],
        "summary": "Authorization Bypass Through User-Controlled Key vulnerability in The SEO Guys at SEOPress SEOPress.This issue affects SEOPress: from n/a through 7.7.1.\n\n"
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25528",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#wf_work_stat_settingaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the id parameter at /PersonalAffair/worklog_template_show.aspx."
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25532",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#get_dictaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the bt_id parameter at /include/get_dict.aspx."
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25533",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#information-leakage-and-unauthorized-access-to-sensitive-data"
        ],
        "summary": "Error messages in RuvarOA v6.01 and v12.01 were discovered to leak the physical path of the website (/WorkFlow/OfficeFileUpdate.aspx). This vulnerability can allow attackers to write files to the server or execute arbitrary commands via crafted SQL statements."
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33382",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://github.com/open5gs/open5gs/issues/2733"
        ],
        "summary": "An issue in Open5GS v.2.7.0 allows an attacker to cause a denial of service via the 64 unsuccessful UE/gnb registration"
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34244",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://github.com/stephane/libmodbus/issues/743"
        ],
        "summary": "libmodbus v3.1.10 is vulnerable to Buffer Overflow via the modbus_write_bits function. This issue can be triggered when the function is fed with specially crafted input, which leads to out-of-bounds read and can potentially cause a crash or other unintended behaviors."
    },
    {
        "Modified": "2024-05-09T13:05:00",
        "Published": "2024-05-08T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34257",
        "impact": {},
        "last-modified": "2024-05-09T13:05:00",
        "references": [
            "https://immense-mirror-b42.notion.site/TOTOLINK-EX1800T-has-an-unauthorized-arbitrary-command-execution-vulnerability-2f3e308f5e1d45a2b8a64f198cacc350"
        ],
        "summary": "TOTOLINK EX1800T V9.1.0cu.2112_B20220316 has a vulnerability in the apcliEncrypType parameter that allows unauthorized execution of arbitrary commands, allowing an attacker to obtain device administrator privileges."
    },
    {
        "Modified": "2024-05-09T09:15:00",
        "Published": "2024-05-08T11:15:00",
        "access": {},
        "assigner": "cve-coordination@incibe.es",
        "cvss": null,
        "cwe": "CWE-269",
        "id": "CVE-2024-3507",
        "impact": {},
        "last-modified": "2024-05-09T09:15:00",
        "references": [
            "https://www.incibe.es/en/incibe-cert/notices/aviso/privilege-escalation-vulnerability-lunar"
        ],
        "summary": "Improper privilege management vulnerability in Lunar software that affects versions 6.0.2 through 6.6.0. This vulnerability allows an attacker to perform a secondary process injection into the Lunar application and abuse those rights to access sensitive user information."
    },
    {
        "Modified": "2024-05-09T01:15:00",
        "Published": "2024-04-26T15:15:00",
        "access": {},
        "assigner": "security@qnap.com",
        "cvss": null,
        "cwe": "CWE-122",
        "id": "CVE-2023-50364",
        "impact": {},
        "last-modified": "2024-05-09T01:15:00",
        "references": [
            "https://www.qnap.com/en/security-advisory/qsa-24-20"
        ],
        "summary": "A buffer copy without checking size of input vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow authenticated users to execute code via a network.\n\nWe have already fixed the vulnerability in the following versions:\nQTS 5.1.6.2722 build 20240402 and later\nQuTS hero h5.1.6.2734 build 20240414 and later\n"
    },
    {
        "Modified": "2024-05-08T22:15:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-26579",
        "impact": {},
        "last-modified": "2024-05-08T22:15:00",
        "references": [
            "https://lists.apache.org/thread/d2hndtvh6bll4pkl91o2oqxyynhr54k3",
            "https://github.com/advisories/GHSA-fgh3-pwmp-3qw3"
        ],
        "summary": "Deserialization of Untrusted Data vulnerability in Apache InLong.This issue affects Apache InLong: from 1.7.0 through 1.11.0,\u00a0\n\n the attackers can bypass using malicious parameters.\n\nUsers are advised to upgrade to Apache InLong's 1.12.0 or cherry-pick [1], [2] to solve it.\n\n[1]  https://github.com/apache/inlong/pull/9694 \n\n[2]\u00a0 https://github.com/apache/inlong/pull/9707 \n\n"
    },
    {
        "Modified": "2024-05-08T22:15:00",
        "Published": "2024-05-06T19:15:00",
        "access": {},
        "assigner": "cisa@example.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3661",
        "impact": {},
        "last-modified": "2024-05-08T22:15:00",
        "references": [
            "https://datatracker.ietf.org/doc/html/rfc2131#section-7",
            "https://datatracker.ietf.org/doc/html/rfc3442#section-7",
            "https://tunnelvisionbug.com/",
            "https://www.leviathansecurity.com/research/tunnelvision",
            "https://news.ycombinator.com/item?id=40279632",
            "https://arstechnica.com/security/2024/05/novel-attack-against-virtually-all-vpn-apps-neuters-their-entire-purpose/",
            "https://krebsonsecurity.com/2024/05/why-your-vpn-may-not-be-as-secure-as-it-claims/",
            "https://issuetracker.google.com/issues/263721377",
            "https://mullvad.net/en/blog/evaluating-the-impact-of-tunnelvision",
            "https://www.zscaler.com/blogs/security-research/cve-2024-3661-k-tunnelvision-exposes-vpn-bypass-vulnerability",
            "https://lowendtalk.com/discussion/188857/a-rogue-dhcp-server-within-your-network-can-and-will-hijack-your-vpn-traffic",
            "https://news.ycombinator.com/item?id=40284111",
            "https://www.agwa.name/blog/post/hardening_openvpn_for_def_con",
            "https://www.theregister.com/2024/05/07/vpn_tunnelvision_dhcp/"
        ],
        "summary": "DHCP can add routes to a client\u2019s routing table via the classless static route option (121). VPN-based security solutions that rely on routes to redirect traffic can be forced to leak traffic over the physical interface. An attacker on the same local network can read, disrupt, or possibly modify network traffic that was expected to be protected by the VPN."
    },
    {
        "Modified": "2024-05-08T22:15:00",
        "Published": "2024-05-01T16:15:00",
        "access": {},
        "assigner": "talos-cna@cisco.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-40533",
        "impact": {},
        "last-modified": "2024-05-08T22:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID is a duplicate of CVE-2022-40468\n"
    },
    {
        "Modified": "2024-05-08T17:15:00",
        "Published": "2024-02-12T21:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-24",
        "id": "CVE-2024-1459",
        "impact": {},
        "last-modified": "2024-05-08T17:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-1459",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2259475",
            "https://access.redhat.com/errata/RHSA-2024:2763",
            "https://access.redhat.com/errata/RHSA-2024:2764"
        ],
        "summary": "A path traversal vulnerability was found in Undertow. This issue may allow a remote attacker to append a specially-crafted sequence to an HTTP request for an application deployed to JBoss EAP, which may permit access to privileged or restricted files and directories."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2024-22460",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000224843/dsa-2024-083-security-update-for-dell-powerprotect-data-manager-appliance-for-multiple-vulnerabilities"
        ],
        "summary": "Dell PowerProtect DM5500 version 5.15.0.0 and prior contains an insecure deserialization Vulnerability. A remote attacker with high privileges could potentially exploit this vulnerability, leading to arbitrary code execution on the vulnerable application."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "security@golang.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-24787",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://go.dev/issue/67119",
            "https://go.dev/cl/583815",
            "https://groups.google.com/g/golang-announce/c/wkkO4P9stm0",
            "https://pkg.go.dev/vuln/GO-2024-2825"
        ],
        "summary": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "security@golang.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-24788",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://go.dev/issue/66754",
            "https://go.dev/cl/578375",
            "https://groups.google.com/g/golang-announce/c/wkkO4P9stm0",
            "https://pkg.go.dev/vuln/GO-2024-2824"
        ],
        "summary": "A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-24908",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000224843/dsa-2024-083-security-update-for-dell-powerprotect-data-manager-appliance-for-multiple-vulnerabilities"
        ],
        "summary": "Dell PowerProtect DM5500 version 5.15.0.0 and prior contain an Arbitrary File Delete via Path Traversal vulnerability. A remote attacker with high privileges could potentially exploit this vulnerability to deletion of arbitrary files stored on the server filesystem."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25527",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#worklog_template_showaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the id parameter at /PersonalAffair/worklog_template_show.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25529",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#wf_office_file_history_showaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the id parameter at /WorkFlow/wf_office_file_history_show.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25530",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#get_find_condictionaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the PageID parameter at /WebUtility/get_find_condiction.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25531",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#searchcondictionaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the PageID parameter at /WebUtility/SearchCondiction.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "secure@dell.com",
        "cvss": null,
        "cwe": "CWE-256",
        "id": "CVE-2024-28971",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://www.dell.com/support/kbdoc/en-us/000224849/dsa-2024-209-security-update-for-dell-update-manager-plugin-vulnerability"
        ],
        "summary": "Dell Update Manager Plugin, versions 1.4.0 through 1.5.0, contains a Plain-text Password Storage Vulnerability in Log file. A remote high privileged attacker could potentially exploit this vulnerability, leading to the disclosure of certain user credentials. The attacker may be able to use the exposed credentials to access the vulnerable application with privileges of the compromised account."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31961",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://bugs.sonic-technology.com/cve-2024-31961.html"
        ],
        "summary": "A SQL injection vulnerability in unit.php in Sonic Shopfloor.guide before 3.1.3 allows remote attackers to execute arbitrary SQL commands via the level2 parameter."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-30459",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://patchstack.com/database/vulnerability/ai-wp-writer/wordpress-ai-wp-writer-plugin-3-6-5-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in AIpost AI WP Writer.This issue affects AI WP Writer: from n/a through 3.6.5.\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T14:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2024-33574",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://patchstack.com/database/vulnerability/vitepos-lite/wordpress-vitepos-plugin-3-0-1-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in appsbd Vitepos.This issue affects Vitepos: from n/a through 3.0.1.\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T14:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4650",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://vuldb.com/?id.263494",
            "https://vuldb.com/?ctiid.263494",
            "https://vuldb.com/?submit.330124",
            "https://github.com/E1CHO/cve_hub/blob/main/Complete%20Web-Based%20School%20Management%20System%20-%20xss/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2019.pdf"
        ],
        "summary": "A vulnerability classified as problematic was found in Campcodes Complete Web-Based School Management System 1.0. This vulnerability affects unknown code of the file /view/student_due_payment.php. The manipulation of the argument due_month leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-263494 is the identifier assigned to this vulnerability."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T14:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4652",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://vuldb.com/?id.263496",
            "https://vuldb.com/?ctiid.263496",
            "https://vuldb.com/?submit.330126",
            "https://github.com/E1CHO/cve_hub/blob/main/Complete%20Web-Based%20School%20Management%20System%20-%20xss/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2021.pdf"
        ],
        "summary": "A vulnerability, which was classified as problematic, was found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file /view/show_teacher2.php. The manipulation of the argument month leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-263496."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25517",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#mfaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the tbTable argument at /WebUtility/MF.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25518",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#wf_get_fields_approveaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the template_id parameter at /WorkFlow/wf_get_fields_approve.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25520",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#sys_blogtemplate_newaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the id parameter at /SysManage/sys_blogtemplate_new.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25521",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#get_companyaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the txt_keyword parameter at get_company.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25522",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#wf_work_form_saveaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the office_missive_id parameter at /WorkFlow/wf_work_form_save.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25523",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#file_memoaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the file_id parameter at /filemanage/file_memo.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25524",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#workplanattachdownloadaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the sys_file_storage_id parameter at /WorkPlan/WorkPlanAttachDownLoad.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25525",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#officefiledownloadaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the filename parameter at /WorkFlow/OfficeFileDownload.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25526",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://gist.github.com/Mr-xn/bc8261a5c3e35a72768723acf1da358d#pm_gatt_incaspx"
        ],
        "summary": "RuvarOA v6.01 and v12.01 were discovered to contain a SQL injection vulnerability via the project_id parameter at /ProjectManage/pm_gatt_inc.aspx."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-25560",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000139037"
        ],
        "summary": "\nWhen BIG-IP AFM is licensed and provisioned, undisclosed DNS traffic can cause the Traffic Management Microkernel (TMM) to terminate.\n\n \n\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26026",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138733"
        ],
        "summary": "\n\n\nAn SQL injection vulnerability exists in the BIG-IP Next Central Manager API (URI).\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27202",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138520"
        ],
        "summary": "\nA DOM-based cross-site scripting (XSS) vulnerability exists in an undisclosed page of the BIG-IP Configuration utility that allows an attacker to run JavaScript in the context of the currently logged-in user.\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28132",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138913"
        ],
        "summary": "\nExposure of Sensitive Information vulnerability exists in the GSLB container, which may allow an authenticated attacker with local access to view sensitive information.\u00a0\u00a0Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28883",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138744"
        ],
        "summary": "An origin validation vulnerability exists in \n\nBIG-IP APM browser network access VPN client \n\n\n\n for Windows, macOS and Linux which may allow an attacker to bypass F5 endpoint inspection. \n\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28889",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138912"
        ],
        "summary": "\n\n\nWhen an SSL profile with alert timeout is configured with a non-default value on a virtual server, undisclosed traffic along with conditions beyond the attacker's control can cause the Traffic Management Microkernel (TMM) to terminate.\u00a0\u00a0Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31156",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138636"
        ],
        "summary": "\nA stored cross-site scripting (XSS) vulnerability exists in an undisclosed page of the BIG-IP Configuration utility that allows an attacker to run JavaScript in the context of the currently logged-in user.\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32049",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138634"
        ],
        "summary": "BIG-IP Next Central Manager (CM) may allow an unauthenticated, remote attacker to obtain the BIG-IP Next LTM/WAF instance credentials.\u00a0\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-32113",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://ofbiz.apache.org/download.html",
            "https://ofbiz.apache.org/security.html",
            "https://issues.apache.org/jira/browse/OFBIZ-13006",
            "https://lists.apache.org/thread/w6s60okgkxp2th1sr8vx0ndmgk68fqrd"
        ],
        "summary": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in Apache OFBiz.This issue affects Apache OFBiz: before 18.12.13.\n\nUsers are recommended to upgrade to version 18.12.13, which fixes the issue.\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32761",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000139217"
        ],
        "summary": "\nUnder certain conditions, a potential data leak may occur in the Traffic Management Microkernels (TMMs) of BIG-IP tenants running on VELOS and rSeries platforms. However, this issue cannot be exploited by an attacker because it is not consistently reproducible and is beyond an attacker's control.\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32980",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://github.com/fermyon/spin/security/advisories/GHSA-f3h7-gpjj-wcvh",
            "https://github.com/fermyon/spin/commit/b3db535c9edb72278d4db3a201f0ed214e561354"
        ],
        "summary": "Spin is the developer tool for building and running serverless applications powered by WebAssembly. Prior to 2.4.3, some specifically configured Spin applications that use `self` requests without a specified URL authority can be induced to make requests to arbitrary hosts via the `Host` HTTP header. The following conditions need to be met for an application to be vulnerable: 1. The environment Spin is deployed in routes requests to the Spin runtime based on the request URL instead of the `Host` header, and leaves the `Host` header set to its original value; 2. The Spin application's component handling the incoming request is configured with an `allow_outbound_hosts` list containing `\"self\"`; and 3. In reaction to an incoming request, the component makes an outbound request whose URL doesn't include the hostname/port. Spin 2.4.3 has been released to fix this issue."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33604",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138894"
        ],
        "summary": "\nA reflected cross-site scripting (XSS) vulnerability exist in undisclosed page of the BIG-IP Configuration utility that allows an attacker to run JavaScript in the context of the currently logged-in user.\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33608",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000138728"
        ],
        "summary": "When IPsec is configured on a virtual server, undisclosed traffic can cause the Traffic Management Microkernel (TMM) to terminate. \n\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated."
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "f5sirt@f5.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33612",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://my.f5.com/manage/s/article/K000139012"
        ],
        "summary": "\n\n\nAn improper certificate validation vulnerability exists in BIG-IP Next Central Manager and may allow an attacker to impersonate an Instance Provider system. A successful exploit of this vulnerability can allow the attacker to cross a security boundary.\u00a0\u00a0Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n"
    },
    {
        "Modified": "2024-05-08T17:05:00",
        "Published": "2024-05-08T15:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34347",
        "impact": {},
        "last-modified": "2024-05-08T17:05:00",
        "references": [
            "https://github.com/hoppscotch/hoppscotch/security/advisories/GHSA-qmmm-73r2-f8xr",
            "https://github.com/hoppscotch/hoppscotch/commit/22c6eabd133195d22874250a5ae40cb26b851b01"
        ],
        "summary": "@hoppscotch/cli is a CLI to run Hoppscotch Test Scripts in CI environments. Prior to 0.8.0, the @hoppscotch/js-sandbox package provides a Javascript sandbox that uses the Node.js vm module. However, the vm module is not safe for sandboxing untrusted Javascript code. This is because code inside the vm context can break out if it can get a hold of any reference to an object created outside of the vm. In the case of @hoppscotch/js-sandbox, multiple references to external objects are passed into the vm context to allow pre-request scripts interactions with environment variables and more. But this also allows the pre-request script to escape the sandbox. This vulnerability is fixed in 0.8.0."
    }
]