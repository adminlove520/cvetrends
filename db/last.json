[
    {
        "Modified": "2024-07-15T09:15:00",
        "Published": "2024-07-15T09:15:00",
        "access": {},
        "assigner": "responsibledisclosure@mattermost.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32945",
        "impact": {},
        "last-modified": "2024-07-15T09:15:00",
        "references": [
            "https://mattermost.com/security-updates"
        ],
        "summary": "Mattermost Mobile Apps versions <=2.16.0 fail to protect against abuse of a globally shared MathJax state\u00a0which allows an attacker to change the contents of a LateX post, by creating another post with specific  macro definitions."
    },
    {
        "Modified": "2024-07-15T09:15:00",
        "Published": "2024-07-15T09:15:00",
        "access": {},
        "assigner": "responsibledisclosure@mattermost.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39767",
        "impact": {},
        "last-modified": "2024-07-15T09:15:00",
        "references": [
            "https://mattermost.com/security-updates"
        ],
        "summary": "Mattermost Mobile Apps versions <=2.16.0 fail to validate that the push notifications received for a server actually came from this serve that which allows a malicious server to send push notifications with another server\u2019s diagnostic ID or server URL and have them show up in mobile apps as that server\u2019s push notifications."
    },
    {
        "Modified": "2024-07-15T09:15:00",
        "Published": "2024-07-15T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41007",
        "impact": {},
        "last-modified": "2024-07-15T09:15:00",
        "references": [
            "https://git.kernel.org/stable/c/97a9063518f198ec0adb2ecb89789de342bb8283"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: avoid too many retransmit packets\n\nIf a TCP socket is using TCP_USER_TIMEOUT, and the other peer\nretracted its window to zero, tcp_retransmit_timer() can\nretransmit a packet every two jiffies (2 ms for HZ=1000),\nfor about 4 minutes after TCP_USER_TIMEOUT has 'expired'.\n\nThe fix is to make sure tcp_rtx_probe0_timed_out() takes\nicsk->icsk_user_timeout into account.\n\nBefore blamed commit, the socket would not timeout after\nicsk->icsk_user_timeout, but would use standard exponential\nbackoff for the retransmits.\n\nAlso worth noting that before commit e89688e3e978 (\"net: tcp:\nfix unexcepted socket die when snd_wnd is 0\"), the issue\nwould last 2 minutes instead of 4."
    },
    {
        "Modified": "2024-07-15T09:15:00",
        "Published": "2024-07-15T09:15:00",
        "access": {},
        "assigner": "trellixpsirt@trellix.com",
        "cvss": null,
        "cwe": "CWE-200",
        "id": "CVE-2024-6398",
        "impact": {},
        "last-modified": "2024-07-15T09:15:00",
        "references": [
            "https://thrive.trellix.com/s/article/000013694"
        ],
        "summary": "An information disclosure vulnerability in SWG in versions 12.x prior to 12.2.10 and 11.x prior to 11.2.24 allows information stored in a customizable block page to be disclosed to third-party websites due to Same Origin Policy Bypass of browsers in certain scenarios. The risk is low, because other recommended default security policies such as URL categorization and GTI are in place in most policies to block access to uncategorized/high risk websites. Any information disclosed depends on how the customers have customized the block pages."
    },
    {
        "Modified": "2024-07-15T09:15:00",
        "Published": "2024-07-15T09:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-693",
        "id": "CVE-2024-6741",
        "impact": {},
        "last-modified": "2024-07-15T09:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7940-0177a-1.html",
            "https://www.twcert.org.tw/en/cp-139-7941-b66e7-2.html",
            "https://www.openfind.com.tw/taiwan/download/Openfind_OF-ISAC-24-007.pdf"
        ],
        "summary": "Openfind's Mail2000 has a vulnerability that allows the HttpOnly flag to be bypassed. Unauthenticated remote attackers can exploit this vulnerability using specific JavaScript code to obtain the session cookie with the HttpOnly flag enabled."
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-552",
        "id": "CVE-2023-41916",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://lists.apache.org/thread/dxkpwyoxy1jpdwlpqp15zvo0jxn4v729"
        ],
        "summary": "\nIn Apache Linkis =1.4.0, due to the lack of effective filtering\nof parameters, an attacker configuring malicious Mysql JDBC parameters in the DataSource Manager Module will trigger\u00a0arbitrary file reading. Therefore, the parameters in the Mysql JDBC URL should be blacklisted. This attack requires the attacker to obtain an authorized account from Linkis before it can be carried out. Versions of Apache Linkis = 1.4.0 will be affected.\u00a0\nWe recommend users upgrade the version of Linkis to version 1.5.0.\n\n"
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2023-46801",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://lists.apache.org/thread/0dnzh64xy1n7qo3rgo2loz9zn7m9xgdx"
        ],
        "summary": "\nIn Apache Linkis <= 1.5.0, data source management module, when adding Mysql data source, exists remote code execution vulnerability for java version < 1.8.0_241. The deserialization vulnerability exploited through jrmp can inject malicious files into the server and execute them. \n\nThis attack requires the attacker to obtain an authorized account from Linkis before it can be carried out.\u00a0 We recommend that users upgrade the java version to >= 1.8.0_241. Or users upgrade Linkis to version 1.6.0.\n\n"
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-502",
        "id": "CVE-2023-49566",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://lists.apache.org/thread/t68yy52lmv7pxgrxnq6rw7rwvk9tb1xj"
        ],
        "summary": "\nIn Apache Linkis <=1.5.0, due to the lack of effective filtering\nof parameters, an attacker configuring malicious \n\ndb2\n\n parameters in the DataSource Manager Module will result\u00a0in jndi injection. Therefore, the parameters in the DB2 URL should be blacklisted.\u00a0\n\nThis attack requires the attacker to obtain an authorized account from Linkis before it can be carried out.\n\n Versions of Apache Linkis \n\n<=1.5.0\n\n will be affected.\nWe recommend users upgrade the version of Linkis to version 1.6.0.\n"
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "security@otrs.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-23794",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://otrs.com/release-notes/otrs-security-advisory-2024-06/"
        ],
        "summary": "An incorrect privilege assignment vulnerability in the inline editing functionality of OTRS can lead to privilege escalation. This flaw allows an agent with read-only permissions to gain full access to a ticket. This issue arises in very rare instances when an admin has previously enabled the setting 'RequiredLock' of 'AgentFrontend::Ticket::InlineEditing::Property###Watch' in the system configuration.This issue affects OTRS:\u00a0\n\n  *  8.0.X\n  *  2023.X\n  *  from 2024.X through 2024.4.x\n\n"
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "security@otrs.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6540",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://otrs.com/release-notes/otrs-security-advisory-2024-07/"
        ],
        "summary": "Improper filtering of fields when using the export function in the ticket overview of the external interface could allow an authorized user to download a list of tickets containing information about tickets of other customers. The problem only occurs if the TicketSearchLegacyEngine has been disabled by the administrator.\nThis issue affects OTRS: 8.0.X, 2023.X, from 2024.X through 2024.4.x\n\n"
    },
    {
        "Modified": "2024-07-15T08:15:00",
        "Published": "2024-07-15T08:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6740",
        "impact": {},
        "last-modified": "2024-07-15T08:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7938-d9c97-1.html",
            "https://www.twcert.org.tw/en/cp-139-7939-3423f-2.html",
            "https://www.openfind.com.tw/taiwan/download/Openfind_OF-ISAC-24-007.pdf"
        ],
        "summary": "Openfind's Mail2000 does not properly validate email atachments, allowing unauthenticated remote attackers to inject JavaScript code within the attachment and perform Stored Cross-site scripting attacks."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-07-15T07:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-121",
        "id": "CVE-2024-6744",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7936-f6381-1.html",
            "https://www.twcert.org.tw/en/cp-139-7937-acbb5-2.html"
        ],
        "summary": "The SMTP Listener of Secure Email Gateway from Cellopoint does not properly validate user input, leading to a Buffer Overflow vulnerability. An unauthenticated remote attacker can exploit this vulnerability to execute arbitrary system commands on the remote server."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-07-15T07:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6743",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7932-a6d4d-1.html",
            "https://www.twcert.org.tw/en/cp-139-7933-9a38d-2.html"
        ],
        "summary": "AguardNet's Space Management System does not properly validate user input, allowing unauthenticated remote attackers to inject arbitrary SQL commands to read, modify, and delete database contents."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-07-12T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-40946",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-07-06T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39486",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/16682588ead4a593cf1aebb33b36df4d1e9e4ffa",
            "https://git.kernel.org/stable/c/0acce2a5c619ef1abdee783d7fea5eac78ce4844",
            "https://git.kernel.org/stable/c/4f2a129b33a2054e62273edd5a051c34c08d96e9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/drm_file: Fix pid refcounting race\n\n<maarten.lankhorst@linux.intel.com>, Maxime Ripard\n<mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>\n\nfilp->pid is supposed to be a refcounted pointer; however, before this\npatch, drm_file_update_pid() only increments the refcount of a struct\npid after storing a pointer to it in filp->pid and dropping the\ndev->filelist_mutex, making the following race possible:\n\nprocess A               process B\n=========               =========\n                        begin drm_file_update_pid\n                        mutex_lock(&dev->filelist_mutex)\n                        rcu_replace_pointer(filp->pid, <pid B>, 1)\n                        mutex_unlock(&dev->filelist_mutex)\nbegin drm_file_update_pid\nmutex_lock(&dev->filelist_mutex)\nrcu_replace_pointer(filp->pid, <pid A>, 1)\nmutex_unlock(&dev->filelist_mutex)\nget_pid(<pid A>)\nsynchronize_rcu()\nput_pid(<pid B>)   *** pid B reaches refcount 0 and is freed here ***\n                        get_pid(<pid B>)   *** UAF ***\n                        synchronize_rcu()\n                        put_pid(<pid A>)\n\nAs far as I know, this race can only occur with CONFIG_PREEMPT_RCU=y\nbecause it requires RCU to detect a quiescent state in code that is not\nexplicitly calling into the scheduler.\n\nThis race leads to use-after-free of a \"struct pid\".\nIt is probably somewhat hard to hit because process A has to pass\nthrough a synchronize_rcu() operation while process B is between\nmutex_unlock() and get_pid().\n\nFix it by ensuring that by the time a pointer to the current task's pid\nis stored in the file, an extra reference to the pid has been taken.\n\nThis fix also removes the condition for synchronize_rcu(); I think\nthat optimization is unnecessary complexity, since in that case we\nwould usually have bailed out on the lockless check above."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-24T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-415",
        "id": "CVE-2024-39292",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/66ea9a7c6824821476914bed21a476cd20094f33",
            "https://git.kernel.org/stable/c/dc1ff95602ee908fcd7d8acee7a0dadb61b1a0c0",
            "https://git.kernel.org/stable/c/351d1a64544944b44732f6a64ed65573b00b9e14",
            "https://git.kernel.org/stable/c/31960d991e43c8d6dc07245f19fc13398e90ead2",
            "https://git.kernel.org/stable/c/0c02d425a2fbe52643a5859a779db0329e7dddd4",
            "https://git.kernel.org/stable/c/434a06c38ee1217a8baa0dd7c37cc85d50138fb0",
            "https://git.kernel.org/stable/c/73b8e21f76c7dda4905655d2e2c17dc5a73b87f1",
            "https://git.kernel.org/stable/c/a0fbbd36c156b9f7b2276871d499c9943dfe5101"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\num: Add winch to winch_handlers before registering winch IRQ\n\nRegistering a winch IRQ is racy, an interrupt may occur before the winch is\nadded to the winch_handlers list.\n\nIf that happens, register_winch_irq() adds to that list a winch that is\nscheduled to be (or has already been) freed, causing a panic later in\nwinch_cleanup().\n\nAvoid the race by adding the winch to the winch_handlers list before\nregistering the IRQ, and rolling back if um_request_irq() fails."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-835",
        "id": "CVE-2024-36288",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/57ff6c0a175930856213b2aa39f8c845a53e5b1c",
            "https://git.kernel.org/stable/c/6ed45d20d30005bed94c8c527ce51d5ad8121018",
            "https://git.kernel.org/stable/c/4cefcd0af7458bdeff56a9d8dfc6868ce23d128a",
            "https://git.kernel.org/stable/c/b4878ea99f2b40ef1925720b1b4ca7f4af1ba785",
            "https://git.kernel.org/stable/c/f9977e4e0cd98a5f06f2492b4f3547db58deabf5",
            "https://git.kernel.org/stable/c/af628d43a822b78ad8d4a58d8259f8bf8bc71115",
            "https://git.kernel.org/stable/c/0a1cb0c6102bb4fd310243588d39461da49497ad",
            "https://git.kernel.org/stable/c/4a77c3dead97339478c7422eb07bf4bf63577008"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix loop termination condition in gss_free_in_token_pages()\n\nThe in_token->pages[] array is not NULL terminated. This results in\nthe following KASAN splat:\n\n  KASAN: maybe wild-memory-access in range [0x04a2013400000008-0x04a201340000000f]"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T12:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2024-38780",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1ff116f68560a25656933d5a18e7619cb6773d8a",
            "https://git.kernel.org/stable/c/165b25e3ee9333f7b04f8db43895beacb51582ed",
            "https://git.kernel.org/stable/c/ae6fc4e6a3322f6d1c8ff59150d8469487a73dd8",
            "https://git.kernel.org/stable/c/9d75fab2c14a25553a1664586ed122c316bd1878",
            "https://git.kernel.org/stable/c/242b30466879e6defa521573c27e12018276c33a",
            "https://git.kernel.org/stable/c/a4ee78244445ab73af22bfc5a5fc543963b25aef",
            "https://git.kernel.org/stable/c/8a283cdfc8beeb14024387a925247b563d614e1e",
            "https://git.kernel.org/stable/c/b794918961516f667b0c745aebdfebbb8a98df39"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf/sw-sync: don't enable IRQ from sync_print_obj()\n\nSince commit a6aa8fca4d79 (\"dma-buf/sw-sync: Reduce irqsave/irqrestore from\nknown context\") by error replaced spin_unlock_irqrestore() with\nspin_unlock_irq() for both sync_debugfs_show() and sync_print_obj() despite\nsync_print_obj() is called from sync_debugfs_show(), lockdep complains\ninconsistent lock state warning.\n\nUse plain spin_{lock,unlock}() for sync_print_obj(), for\nsync_debugfs_show() is already using spin_{lock,unlock}_irq()."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36286",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8658bd777cbfcb0c13df23d0ea120e70517761b9",
            "https://git.kernel.org/stable/c/3989b817857f4890fab9379221a9d3f52bf5c256",
            "https://git.kernel.org/stable/c/e01065b339e323b3dfa1be217fd89e9b3208b0ab",
            "https://git.kernel.org/stable/c/25ea5377e3d2921a0f96ae2551f5ab1b36825dd4",
            "https://git.kernel.org/stable/c/68f40354a3851df46c27be96b84f11ae193e36c5",
            "https://git.kernel.org/stable/c/8f365564af898819a523f1a8cf5c6ce053e9f718",
            "https://git.kernel.org/stable/c/215df6490e208bfdd5b3012f5075e7f8736f3e7a",
            "https://git.kernel.org/stable/c/dc21c6cc3d6986d938efbf95de62473982c98dec"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nfnetlink_queue: acquire rcu_read_lock() in instance_destroy_rcu()\n\nsyzbot reported that nf_reinject() could be called without rcu_read_lock() :\n\nWARNING: suspicious RCU usage\n6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0 Not tainted\n\nnet/netfilter/nfnetlink_queue.c:263 suspicious rcu_dereference_check() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by syz-executor.4/13427:\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_lock_acquire include/linux/rcupdate.h:329 [inline]\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_do_batch kernel/rcu/tree.c:2190 [inline]\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_core+0xa86/0x1830 kernel/rcu/tree.c:2471\n  #1: ffff88801ca92958 (&inst->lock){+.-.}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]\n  #1: ffff88801ca92958 (&inst->lock){+.-.}-{2:2}, at: nfqnl_flush net/netfilter/nfnetlink_queue.c:405 [inline]\n  #1: ffff88801ca92958 (&inst->lock){+.-.}-{2:2}, at: instance_destroy_rcu+0x30/0x220 net/netfilter/nfnetlink_queue.c:172\n\nstack backtrace:\nCPU: 0 PID: 13427 Comm: syz-executor.4 Not tainted 6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\nCall Trace:\n <IRQ>\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  lockdep_rcu_suspicious+0x221/0x340 kernel/locking/lockdep.c:6712\n  nf_reinject net/netfilter/nfnetlink_queue.c:323 [inline]\n  nfqnl_reinject+0x6ec/0x1120 net/netfilter/nfnetlink_queue.c:397\n  nfqnl_flush net/netfilter/nfnetlink_queue.c:410 [inline]\n  instance_destroy_rcu+0x1ae/0x220 net/netfilter/nfnetlink_queue.c:172\n  rcu_do_batch kernel/rcu/tree.c:2196 [inline]\n  rcu_core+0xafd/0x1830 kernel/rcu/tree.c:2471\n  handle_softirqs+0x2d6/0x990 kernel/softirq.c:554\n  __do_softirq kernel/softirq.c:588 [inline]\n  invoke_softirq kernel/softirq.c:428 [inline]\n  __irq_exit_rcu+0xf4/0x1c0 kernel/softirq.c:637\n  irq_exit_rcu+0x9/0x30 kernel/softirq.c:649\n  instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]\n  sysvec_apic_timer_interrupt+0xa6/0xc0 arch/x86/kernel/apic/apic.c:1043\n </IRQ>\n <TASK>"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37356",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/06d0fe049b51b0a92a70df8333fd85c4ba3eb2c6",
            "https://git.kernel.org/stable/c/6aacaa80d962f4916ccf90e2080306cec6c90fcf",
            "https://git.kernel.org/stable/c/e9b2f60636d18dfd0dd4965b3316f88dfd6a2b31",
            "https://git.kernel.org/stable/c/8602150286a2a860a1dc55cbd04f99316f19b40a",
            "https://git.kernel.org/stable/c/e65d13ec00a738fa7661925fd5929ab3c765d4be",
            "https://git.kernel.org/stable/c/02261d3f9dc7d1d7be7d778f839e3404ab99034c",
            "https://git.kernel.org/stable/c/237340dee373b97833a491d2e99fcf1d4a9adafd",
            "https://git.kernel.org/stable/c/3ebc46ca8675de6378e3f8f40768e180bb8afa66"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix shift-out-of-bounds in dctcp_update_alpha().\n\nIn dctcp_update_alpha(), we use a module parameter dctcp_shift_g\nas follows:\n\n  alpha -= min_not_zero(alpha, alpha >> dctcp_shift_g);\n  ...\n  delivered_ce <<= (10 - dctcp_shift_g);\n\nIt seems syzkaller started fuzzing module parameters and triggered\nshift-out-of-bounds [0] by setting 100 to dctcp_shift_g:\n\n  memcpy((void*)0x20000080,\n         \"/sys/module/tcp_dctcp/parameters/dctcp_shift_g\\000\", 47);\n  res = syscall(__NR_openat, /*fd=*/0xffffffffffffff9cul, /*file=*/0x20000080ul,\n                /*flags=*/2ul, /*mode=*/0ul);\n  memcpy((void*)0x20000000, \"100\\000\", 4);\n  syscall(__NR_write, /*fd=*/r[0], /*val=*/0x20000000ul, /*len=*/4ul);\n\nLet's limit the max value of dctcp_shift_g by param_set_uint_minmax().\n\nWith this patch:\n\n  # echo 10 > /sys/module/tcp_dctcp/parameters/dctcp_shift_g\n  # cat /sys/module/tcp_dctcp/parameters/dctcp_shift_g\n  10\n  # echo 11 > /sys/module/tcp_dctcp/parameters/dctcp_shift_g\n  -bash: echo: write error: Invalid argument\n\n[0]:\nUBSAN: shift-out-of-bounds in net/ipv4/tcp_dctcp.c:143:12\nshift exponent 100 is too large for 32-bit type 'u32' (aka 'unsigned int')\nCPU: 0 PID: 8083 Comm: syz-executor345 Not tainted 6.9.0-05151-g1b294a1f3561 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.13.0-1ubuntu1.1 04/01/2014\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x201/0x300 lib/dump_stack.c:114\n ubsan_epilogue lib/ubsan.c:231 [inline]\n __ubsan_handle_shift_out_of_bounds+0x346/0x3a0 lib/ubsan.c:468\n dctcp_update_alpha+0x540/0x570 net/ipv4/tcp_dctcp.c:143\n tcp_in_ack_event net/ipv4/tcp_input.c:3802 [inline]\n tcp_ack+0x17b1/0x3bc0 net/ipv4/tcp_input.c:3948\n tcp_rcv_state_process+0x57a/0x2290 net/ipv4/tcp_input.c:6711\n tcp_v4_do_rcv+0x764/0xc40 net/ipv4/tcp_ipv4.c:1937\n sk_backlog_rcv include/net/sock.h:1106 [inline]\n __release_sock+0x20f/0x350 net/core/sock.c:2983\n release_sock+0x61/0x1f0 net/core/sock.c:3549\n mptcp_subflow_shutdown+0x3d0/0x620 net/mptcp/protocol.c:2907\n mptcp_check_send_data_fin+0x225/0x410 net/mptcp/protocol.c:2976\n __mptcp_close+0x238/0xad0 net/mptcp/protocol.c:3072\n mptcp_close+0x2a/0x1a0 net/mptcp/protocol.c:3127\n inet_release+0x190/0x1f0 net/ipv4/af_inet.c:437\n __sock_release net/socket.c:659 [inline]\n sock_close+0xc0/0x240 net/socket.c:1421\n __fput+0x41b/0x890 fs/file_table.c:422\n task_work_run+0x23b/0x300 kernel/task_work.c:180\n exit_task_work include/linux/task_work.h:38 [inline]\n do_exit+0x9c8/0x2540 kernel/exit.c:878\n do_group_exit+0x201/0x2b0 kernel/exit.c:1027\n __do_sys_exit_group kernel/exit.c:1038 [inline]\n __se_sys_exit_group kernel/exit.c:1036 [inline]\n __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1036\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xe4/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x67/0x6f\nRIP: 0033:0x7f6c2b5005b6\nCode: Unable to access opcode bytes at 0x7f6c2b50058c.\nRSP: 002b:00007ffe883eb948 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7\nRAX: ffffffffffffffda RBX: 00007f6c2b5862f0 RCX: 00007f6c2b5005b6\nRDX: 0000000000000001 RSI: 000000000000003c RDI: 0000000000000001\nRBP: 0000000000000001 R08: 00000000000000e7 R09: ffffffffffffffc0\nR10: 0000000000000006 R11: 0000000000000246 R12: 00007f6c2b5862f0\nR13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000001\n </TASK>"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38381",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/406cfac9debd4a6d3dc5d9258ee086372a8c08b6",
            "https://git.kernel.org/stable/c/485ded868ed62ceb2acb3a459d7843fd71472619",
            "https://git.kernel.org/stable/c/f80b786ab0550d0020191a59077b2c7e069db2d1",
            "https://git.kernel.org/stable/c/ad4d196d2008c7f413167f0a693feb4f0439d7fe",
            "https://git.kernel.org/stable/c/e8c8e0d0d214c877fbad555df5b3ed558cd9b0c3",
            "https://git.kernel.org/stable/c/e53a7f8afcbd2886f2a94c5d56757328109730ea",
            "https://git.kernel.org/stable/c/017ff397624930fd7ac7f1761f3c9d6a7100f68c",
            "https://git.kernel.org/stable/c/e4a87abf588536d1cdfb128595e6e680af5cf3ed"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_rx_work\n\nsyzbot reported the following uninit-value access issue [1]\n\nnci_rx_work() parses received packet from ndev->rx_q. It should be\nvalidated header size, payload size and total packet size before\nprocessing the packet. If an invalid packet is detected, it should be\nsilently discarded."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38621",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f6a392266276730bea893b55d12940e32a25f56a",
            "https://git.kernel.org/stable/c/ecf4ddc3aee8ade504c4d36b7b4053ce6093e200",
            "https://git.kernel.org/stable/c/a16775828aaed1c54ff4e6fe83e8e4d5c6a50cb7",
            "https://git.kernel.org/stable/c/7532bcec0797adfa08791301c3bcae14141db3bd",
            "https://git.kernel.org/stable/c/b504518a397059e1d55c521ba0ea2b545a6c4b52",
            "https://git.kernel.org/stable/c/d410017a7181cb55e4a5c810b32b75e4416c6808",
            "https://git.kernel.org/stable/c/a08492832cc4cacc24e0612f483c86ca899b9261",
            "https://git.kernel.org/stable/c/faa4364bef2ec0060de381ff028d1d836600a381"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: stk1160: fix bounds checking in stk1160_copy_video()\n\nThe subtract in this condition is reversed.  The ->length is the length\nof the buffer.  The ->bytesused is how many bytes we have copied thus\nfar.  When the condition is reversed that means the result of the\nsubtraction is always negative but since it's unsigned then the result\nis a very high positive value.  That means the overflow check is never\ntrue.\n\nAdditionally, the ->bytesused doesn't actually work for this purpose\nbecause we're not writing to \"buf->mem + buf->bytesused\".  Instead, the\nmath to calculate the destination where we are writing is a bit\ninvolved.  You calculate the number of full lines already written,\nmultiply by two, skip a line if necessary so that we start on an odd\nnumbered line, and add the offset into the line.\n\nTo fix this buffer overflow, just take the actual destination where we\nare writing, if the offset is already out of bounds print an error and\nreturn.  Otherwise, write up to buf->length bytes."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38627",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6cc30ef8eb6d8f8d6df43152264bbf8835d99931",
            "https://git.kernel.org/stable/c/a0450d3f38e7c6c0a7c0afd4182976ee15573695",
            "https://git.kernel.org/stable/c/713fc00c571dde4af3db2dbd5d1b0eadc327817b",
            "https://git.kernel.org/stable/c/7419df1acffbcc90037f6b5a2823e81389659b36",
            "https://git.kernel.org/stable/c/4bfd48bb6e62512b9c392c5002c11e1e3b18d247",
            "https://git.kernel.org/stable/c/370c480410f60b90ba3e96abe73ead21ec827b20",
            "https://git.kernel.org/stable/c/d782a2db8f7ac49c33b9ca3e835500a28667d1be",
            "https://git.kernel.org/stable/c/3df463865ba42b8f88a590326f4c9ea17a1ce459"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nstm class: Fix a double free in stm_register_device()\n\nThe put_device(&stm->dev) call will trigger stm_device_release() which\nfrees \"stm\" so the vfree(stm) on the next line is a double free."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38633",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/21a61a7fbcfdd3493cede43ebc7c4dfae2147a8b",
            "https://git.kernel.org/stable/c/9db4222ed8cd3e50b81c8b910ae74c26427a4003",
            "https://git.kernel.org/stable/c/e8e2a4339decad7e59425b594a98613402652d72",
            "https://git.kernel.org/stable/c/361a92c9038e8c8c3996f8eeaa14522a8ad90752",
            "https://git.kernel.org/stable/c/b6eb7aff23e05f362e8c9b560f6ac5e727b70e00",
            "https://git.kernel.org/stable/c/e8a10089eddba40d4b2080c9d3fc2d2b2488f762",
            "https://git.kernel.org/stable/c/fa84ca78b048dfb00df0ef446f5c35e0a98ca6a0",
            "https://git.kernel.org/stable/c/712a1fcb38dc7cac6da63ee79a88708fbf9c45ec"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max3100: Update uart_driver_registered on driver removal\n\nThe removal of the last MAX3100 device triggers the removal of\nthe driver. However, code doesn't update the respective global\nvariable and after insmod \u2014 rmmod \u2014 insmod cycle the kernel\noopses:\n\n  max3100 spi-PRP0001:01: max3100_probe: adding port 0\n  BUG: kernel NULL pointer dereference, address: 0000000000000408\n  ...\n  RIP: 0010:serial_core_register_port+0xa0/0x840\n  ...\n   max3100_probe+0x1b6/0x280 [max3100]\n   spi_probe+0x8d/0xb0\n\nUpdate the actual state so next time UART driver will be registered\nagain.\n\nHugo also noticed, that the error path in the probe also affected\nby having the variable set, and not cleared. Instead of clearing it\nmove the assignment after the successfull uart_register_driver() call."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38634",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/44b38924135d2093e2ec1812969464845dd66dc9",
            "https://git.kernel.org/stable/c/ea9b35372b58ac2931bfc1d5bc25e839d1221e30",
            "https://git.kernel.org/stable/c/cc121e3722a0a2c8f716ef991e5425b180a5fb94",
            "https://git.kernel.org/stable/c/78dbda51bb4241b88a52d71620f06231a341f9ba",
            "https://git.kernel.org/stable/c/8296bb9e5925b6634259c5d4daee88f0cc0884ec",
            "https://git.kernel.org/stable/c/93df2fba6c7dfa9a2f08546ea9a5ca4728758458",
            "https://git.kernel.org/stable/c/865b30c8661924ee9145f442bf32cea549faa869",
            "https://git.kernel.org/stable/c/77ab53371a2066fdf9b895246505f5ef5a4b5d47"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max3100: Lock port->lock when calling uart_handle_cts_change()\n\nuart_handle_cts_change() has to be called with port lock taken,\nSince we run it in a separate work, the lock may not be taken at\nthe time of running. Make sure that it's taken by explicitly doing\nthat. Without it we got a splat:\n\n  WARNING: CPU: 0 PID: 10 at drivers/tty/serial/serial_core.c:3491 uart_handle_cts_change+0xa6/0xb0\n  ...\n  Workqueue: max3100-0 max3100_work [max3100]\n  RIP: 0010:uart_handle_cts_change+0xa6/0xb0\n  ...\n   max3100_handlerx+0xc5/0x110 [max3100]\n   max3100_work+0x12a/0x340 [max3100]"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38637",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8f4a76d477f0cc3c54d512f07f6f88c8e1c1e07b",
            "https://git.kernel.org/stable/c/e2c64246e5dc8c0d35ec41770b85e2b4cafdff21",
            "https://git.kernel.org/stable/c/eac10cf3a97ffd4b4deb0a29f57c118225a42850",
            "https://git.kernel.org/stable/c/330f6bcdcef03f70f81db5f2ed6747af656a09f2",
            "https://git.kernel.org/stable/c/9b41a9b9c8be8c552f10633453fdb509e83b66f8",
            "https://git.kernel.org/stable/c/518e2c46b5dbce40b1aa0100001d03c3ceaa7d38",
            "https://git.kernel.org/stable/c/895cdd9aa9546523df839f9cc1488a0ecc1e0731",
            "https://git.kernel.org/stable/c/a1ba19a1ae7cd1e324685ded4ab563e78fe68648"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngreybus: lights: check return of get_channel_from_mode\n\nIf channel for the given node is not found we return null from\nget_channel_from_mode. Make sure we validate the return pointer\nbefore using it in two of the missing places.\n\nThis was originally reported in [0]:\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n[0] https://lore.kernel.org/all/20240301190425.120605-1-m.lobanov@rosalinux.ru"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38659",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2b649d7e0cb42a660f0260ef25fd55fdc9c6c600",
            "https://git.kernel.org/stable/c/ca63fb7af9d3e531aa25f7ae187bfc6c7166ec2d",
            "https://git.kernel.org/stable/c/3c0d36972edbe56fcf98899622d9b90ac9965227",
            "https://git.kernel.org/stable/c/25571a12fbc8a1283bd8380d461267956fd426f7",
            "https://git.kernel.org/stable/c/7077c22f84f41974a711604a42fd0e0684232ee5",
            "https://git.kernel.org/stable/c/f6638e955ca00c489894789492776842e102af9c",
            "https://git.kernel.org/stable/c/aee1955a1509a921c05c70dad5d6fc8563dfcb31",
            "https://git.kernel.org/stable/c/e8021b94b0412c37bcc79027c2e382086b6ce449"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nenic: Validate length of nl attributes in enic_set_vf_port\n\nenic_set_vf_port assumes that the nl attribute IFLA_PORT_PROFILE\nis of length PORT_PROFILE_MAX and that the nl attributes\nIFLA_PORT_INSTANCE_UUID, IFLA_PORT_HOST_UUID are of length PORT_UUID_MAX.\nThese attributes are validated (in the function do_setlink in rtnetlink.c)\nusing the nla_policy ifla_port_policy. The policy defines IFLA_PORT_PROFILE\nas NLA_STRING, IFLA_PORT_INSTANCE_UUID as NLA_BINARY and\nIFLA_PORT_HOST_UUID as NLA_STRING. That means that the length validation\nusing the policy is for the max size of the attributes and not on exact\nsize so the length of these attributes might be less than the sizes that\nenic_set_vf_port expects. This might cause an out of bands\nread access in the memcpys of the data of these\nattributes in enic_set_vf_port."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31076",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a40209d355afe4ed6d533507838c9e5cd70a76d8",
            "https://git.kernel.org/stable/c/f5f4675960609d8c5ee95f027fbf6ce380f98372",
            "https://git.kernel.org/stable/c/6752dfcfff3ac3e16625ebd3f0ad9630900e7e76",
            "https://git.kernel.org/stable/c/9eeda3e0071a329af1eba15f4e57dc39576bb420",
            "https://git.kernel.org/stable/c/e9c96d01d520498b169ce734a8ad1142bef86a30",
            "https://git.kernel.org/stable/c/59f86a2908380d09cdc726461c0fbb8d8579c99f",
            "https://git.kernel.org/stable/c/ebfb16fc057a016abb46a9720a54abf0d4f6abe1",
            "https://git.kernel.org/stable/c/a6c11c0a5235fb144a65e0cb2ffd360ddc1f6c32"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngenirq/cpuhotplug, x86/vector: Prevent vector leak during CPU offline\n\nThe absence of IRQD_MOVE_PCNTXT prevents immediate effectiveness of\ninterrupt affinity reconfiguration via procfs. Instead, the change is\ndeferred until the next instance of the interrupt being triggered on the\noriginal CPU.\n\nWhen the interrupt next triggers on the original CPU, the new affinity is\nenforced within __irq_move_irq(). A vector is allocated from the new CPU,\nbut the old vector on the original CPU remains and is not immediately\nreclaimed. Instead, apicd->move_in_progress is flagged, and the reclaiming\nprocess is delayed until the next trigger of the interrupt on the new CPU.\n\nUpon the subsequent triggering of the interrupt on the new CPU,\nirq_complete_move() adds a task to the old CPU's vector_cleanup list if it\nremains online. Subsequently, the timer on the old CPU iterates over its\nvector_cleanup list, reclaiming old vectors.\n\nHowever, a rare scenario arises if the old CPU is outgoing before the\ninterrupt triggers again on the new CPU.\n\nIn that case irq_force_complete_move() is not invoked on the outgoing CPU\nto reclaim the old apicd->prev_vector because the interrupt isn't currently\naffine to the outgoing CPU, and irq_needs_fixup() returns false. Even\nthough __vector_schedule_cleanup() is later called on the new CPU, it\ndoesn't reclaim apicd->prev_vector; instead, it simply resets both\napicd->move_in_progress and apicd->prev_vector to 0.\n\nAs a result, the vector remains unreclaimed in vector_matrix, leading to a\nCPU vector leak.\n\nTo address this issue, move the invocation of irq_force_complete_move()\nbefore the irq_needs_fixup() call to reclaim apicd->prev_vector, if the\ninterrupt is currently or used to be affine to the outgoing CPU.\n\nAdditionally, reclaim the vector in __vector_schedule_cleanup() as well,\nfollowing a warning message, although theoretically it should never see\napicd->move_in_progress with apicd->prev_cpu pointing to an offline CPU."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33621",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0049a623dfbbb49888de7f0c2f33a582b5ead989",
            "https://git.kernel.org/stable/c/54768bacfde60e8e4757968d79f8726711dd2cf5",
            "https://git.kernel.org/stable/c/1abbf079da59ef559d0ab4219d2a0302f7970761",
            "https://git.kernel.org/stable/c/183c4b416454b9983dc1b8aa0022b748911adc48",
            "https://git.kernel.org/stable/c/cb53706a3403ba67f4040b2a82d9cf79e11b1a48",
            "https://git.kernel.org/stable/c/54213c09801e0bd2549ac42961093be36f65a7d0",
            "https://git.kernel.org/stable/c/13c4543db34e0da5a7d2f550b6262d860f248381",
            "https://git.kernel.org/stable/c/b3dc6e8003b500861fa307e9a3400c52e78e4d3a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: Dont Use skb->sk in ipvlan_process_v{4,6}_outbound\n\nRaw packet from PF_PACKET socket ontop of an IPv6-backed ipvlan device will\nhit WARN_ON_ONCE() in sk_mc_loop() through sch_direct_xmit() path.\n\nWARNING: CPU: 2 PID: 0 at net/core/sock.c:775 sk_mc_loop+0x2d/0x70\nModules linked in: sch_netem ipvlan rfkill cirrus drm_shmem_helper sg drm_kms_helper\nCPU: 2 PID: 0 Comm: swapper/2 Kdump: loaded Not tainted 6.9.0+ #279\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nRIP: 0010:sk_mc_loop+0x2d/0x70\nCode: fa 0f 1f 44 00 00 65 0f b7 15 f7 96 a3 4f 31 c0 66 85 d2 75 26 48 85 ff 74 1c\nRSP: 0018:ffffa9584015cd78 EFLAGS: 00010212\nRAX: 0000000000000011 RBX: ffff91e585793e00 RCX: 0000000002c6a001\nRDX: 0000000000000000 RSI: 0000000000000040 RDI: ffff91e589c0f000\nRBP: ffff91e5855bd100 R08: 0000000000000000 R09: 3d00545216f43d00\nR10: ffff91e584fdcc50 R11: 00000060dd8616f4 R12: ffff91e58132d000\nR13: ffff91e584fdcc68 R14: ffff91e5869ce800 R15: ffff91e589c0f000\nFS:  0000000000000000(0000) GS:ffff91e898100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f788f7c44c0 CR3: 0000000008e1a000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<IRQ>\n ? __warn (kernel/panic.c:693)\n ? sk_mc_loop (net/core/sock.c:760)\n ? report_bug (lib/bug.c:201 lib/bug.c:219)\n ? handle_bug (arch/x86/kernel/traps.c:239)\n ? exc_invalid_op (arch/x86/kernel/traps.c:260 (discriminator 1))\n ? asm_exc_invalid_op (./arch/x86/include/asm/idtentry.h:621)\n ? sk_mc_loop (net/core/sock.c:760)\n ip6_finish_output2 (net/ipv6/ip6_output.c:83 (discriminator 1))\n ? nf_hook_slow (net/netfilter/core.c:626)\n ip6_finish_output (net/ipv6/ip6_output.c:222)\n ? __pfx_ip6_finish_output (net/ipv6/ip6_output.c:215)\n ipvlan_xmit_mode_l3 (drivers/net/ipvlan/ipvlan_core.c:602) ipvlan\n ipvlan_start_xmit (drivers/net/ipvlan/ipvlan_main.c:226) ipvlan\n dev_hard_start_xmit (net/core/dev.c:3594)\n sch_direct_xmit (net/sched/sch_generic.c:343)\n __qdisc_run (net/sched/sch_generic.c:416)\n net_tx_action (net/core/dev.c:5286)\n handle_softirqs (kernel/softirq.c:555)\n __irq_exit_rcu (kernel/softirq.c:589)\n sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1043)\n\nThe warning triggers as this:\npacket_sendmsg\n   packet_snd //skb->sk is packet sk\n      __dev_queue_xmit\n         __dev_xmit_skb //q->enqueue is not NULL\n             __qdisc_run\n               sch_direct_xmit\n                 dev_hard_start_xmit\n                   ipvlan_start_xmit\n                      ipvlan_xmit_mode_l3 //l3 mode\n                        ipvlan_process_outbound //vepa flag\n                          ipvlan_process_v6_outbound\n                            ip6_local_out\n                                __ip6_finish_output\n                                  ip6_finish_output2 //multicast packet\n                                    sk_mc_loop //sk->sk_family is AF_PACKET\n\nCall ip{6}_local_out() with NULL sk in ipvlan as other tunnels to fix this."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-21T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37353",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/cb7a7c8144b434e06aba99b13b045a7efe859587",
            "https://git.kernel.org/stable/c/43a9aaf63254ab821f0f25fea25698ebe69ea16a",
            "https://git.kernel.org/stable/c/7fbe54f02a5c77ff5dd65e8ed0b58e3bd8c43e9c",
            "https://git.kernel.org/stable/c/42d30da50d5c1ec433fd9551bfddd6887407c352",
            "https://git.kernel.org/stable/c/abf001651acd1858252764fa39d79e3d0b5c86b2",
            "https://git.kernel.org/stable/c/04207a9c64e0b16dac842e5b2ecfa53af25bdea7",
            "https://git.kernel.org/stable/c/bb61a84793858330ba2ca1d202d3779096f6fb54",
            "https://git.kernel.org/stable/c/89875151fccdd024d571aa884ea97a0128b968b6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio: delete vq in vp_find_vqs_msix() when request_irq() fails\n\nWhen request_irq() fails, error path calls vp_del_vqs(). There, as vq is\npresent in the list, free_irq() is called for the same vector. That\ncauses following splat:\n\n[    0.414355] Trying to free already-free IRQ 27\n[    0.414403] WARNING: CPU: 1 PID: 1 at kernel/irq/manage.c:1899 free_irq+0x1a1/0x2d0\n[    0.414510] Modules linked in:\n[    0.414540] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 6.9.0-rc4+ #27\n[    0.414540] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-1.fc39 04/01/2014\n[    0.414540] RIP: 0010:free_irq+0x1a1/0x2d0\n[    0.414540] Code: 1e 00 48 83 c4 08 48 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 90 8b 74 24 04 48 c7 c7 98 80 6c b1 e8 00 c9 f7 ff 90 <0f> 0b 90 90 48 89 ee 4c 89 ef e8 e0 20 b8 00 49 8b 47 40 48 8b 40\n[    0.414540] RSP: 0000:ffffb71480013ae0 EFLAGS: 00010086\n[    0.414540] RAX: 0000000000000000 RBX: ffffa099c2722000 RCX: 0000000000000000\n[    0.414540] RDX: 0000000000000000 RSI: ffffb71480013998 RDI: 0000000000000001\n[    0.414540] RBP: 0000000000000246 R08: 00000000ffffdfff R09: 0000000000000001\n[    0.414540] R10: 00000000ffffdfff R11: ffffffffb18729c0 R12: ffffa099c1c91760\n[    0.414540] R13: ffffa099c1c916a4 R14: ffffa099c1d2f200 R15: ffffa099c1c91600\n[    0.414540] FS:  0000000000000000(0000) GS:ffffa099fec40000(0000) knlGS:0000000000000000\n[    0.414540] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    0.414540] CR2: 0000000000000000 CR3: 0000000008e3e001 CR4: 0000000000370ef0\n[    0.414540] Call Trace:\n[    0.414540]  <TASK>\n[    0.414540]  ? __warn+0x80/0x120\n[    0.414540]  ? free_irq+0x1a1/0x2d0\n[    0.414540]  ? report_bug+0x164/0x190\n[    0.414540]  ? handle_bug+0x3b/0x70\n[    0.414540]  ? exc_invalid_op+0x17/0x70\n[    0.414540]  ? asm_exc_invalid_op+0x1a/0x20\n[    0.414540]  ? free_irq+0x1a1/0x2d0\n[    0.414540]  vp_del_vqs+0xc1/0x220\n[    0.414540]  vp_find_vqs_msix+0x305/0x470\n[    0.414540]  vp_find_vqs+0x3e/0x1a0\n[    0.414540]  vp_modern_find_vqs+0x1b/0x70\n[    0.414540]  init_vqs+0x387/0x600\n[    0.414540]  virtnet_probe+0x50a/0xc80\n[    0.414540]  virtio_dev_probe+0x1e0/0x2b0\n[    0.414540]  really_probe+0xc0/0x2c0\n[    0.414540]  ? __pfx___driver_attach+0x10/0x10\n[    0.414540]  __driver_probe_device+0x73/0x120\n[    0.414540]  driver_probe_device+0x1f/0xe0\n[    0.414540]  __driver_attach+0x88/0x180\n[    0.414540]  bus_for_each_dev+0x85/0xd0\n[    0.414540]  bus_add_driver+0xec/0x1f0\n[    0.414540]  driver_register+0x59/0x100\n[    0.414540]  ? __pfx_virtio_net_driver_init+0x10/0x10\n[    0.414540]  virtio_net_driver_init+0x90/0xb0\n[    0.414540]  do_one_initcall+0x58/0x230\n[    0.414540]  kernel_init_freeable+0x1a3/0x2d0\n[    0.414540]  ? __pfx_kernel_init+0x10/0x10\n[    0.414540]  kernel_init+0x1a/0x1c0\n[    0.414540]  ret_from_fork+0x31/0x50\n[    0.414540]  ? __pfx_kernel_init+0x10/0x10\n[    0.414540]  ret_from_fork_asm+0x1a/0x30\n[    0.414540]  </TASK>\n\nFix this by calling deleting the current vq when request_irq() fails."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38549",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/79078880795478d551a05acc41f957700030d364",
            "https://git.kernel.org/stable/c/be34a1b351ea7faeb15dde8c44fe89de3980ae67",
            "https://git.kernel.org/stable/c/d17b75ee9c2e44d3a3682c4ea5ab713ea6073350",
            "https://git.kernel.org/stable/c/0e3b6f9123726858cac299e1654e3d20424cabe4",
            "https://git.kernel.org/stable/c/13562c2d48c9ee330de1077d00146742be368f05",
            "https://git.kernel.org/stable/c/af26ea99019caee1500bf7e60c861136c0bf8594",
            "https://git.kernel.org/stable/c/9489951e3ae505534c4013db4e76b1b5a3151ac7",
            "https://git.kernel.org/stable/c/fb4aabdb1b48c25d9e1ee28f89440fd2ce556405",
            "https://git.kernel.org/stable/c/1e4350095e8ab2577ee05f8c3b044e661b5af9a0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Add 0 size check to mtk_drm_gem_obj\n\nAdd a check to mtk_drm_gem_init if we attempt to allocate a GEM object\nof 0 bytes. Currently, no such check exists and the kernel will panic if\na userspace application attempts to allocate a 0x0 GBM buffer.\n\nTested by attempting to allocate a 0x0 GBM buffer on an MT8188 and\nverifying that we now return EINVAL."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38578",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1c125b9287e58f364d82174efb167414b92b11f1",
            "https://git.kernel.org/stable/c/235b85981051cd68fc215fd32a81c6f116bfc4df",
            "https://git.kernel.org/stable/c/edbfc42ab080e78c6907d40a42c9d10b69e445c1",
            "https://git.kernel.org/stable/c/12db25a54ce6bb22b0af28010fff53ef9cb3fe93",
            "https://git.kernel.org/stable/c/0d0f8ba042af16519f1ef7dd10463a33b21b677c",
            "https://git.kernel.org/stable/c/2ed750b7ae1b5dc72896d7dd114c419afd3d1910",
            "https://git.kernel.org/stable/c/a20f09452e2f58f761d11ad7b96b5c894c91030e",
            "https://git.kernel.org/stable/c/f6008487f1eeb8693f8d2a36a89c87d9122ddf74",
            "https://git.kernel.org/stable/c/85a6a1aff08ec9f5b929d345d066e2830e8818e5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\necryptfs: Fix buffer size for tag 66 packet\n\nThe 'TAG 66 Packet Format' description is missing the cipher code and\nchecksum fields that are packed into the message packet. As a result,\nthe buffer allocated for the packet is 3 bytes too small and\nwrite_tag_66_packet() will write up to 3 bytes past the end of the\nbuffer.\n\nFix this by increasing the size of the allocation so the whole packet\nwill always fit in the buffer.\n\nThis fixes the below kasan slab-out-of-bounds bug:\n\n  BUG: KASAN: slab-out-of-bounds in ecryptfs_generate_key_packet_set+0x7d6/0xde0\n  Write of size 1 at addr ffff88800afbb2a5 by task touch/181\n\n  CPU: 0 PID: 181 Comm: touch Not tainted 6.6.13-gnu #1 4c9534092be820851bb687b82d1f92a426598dc6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2/GNU Guix 04/01/2014\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x4c/0x70\n   print_report+0xc5/0x610\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? kasan_complete_mode_report_info+0x44/0x210\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   kasan_report+0xc2/0x110\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   __asan_store1+0x62/0x80\n   ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? __pfx_ecryptfs_generate_key_packet_set+0x10/0x10\n   ? __alloc_pages+0x2e2/0x540\n   ? __pfx_ovl_open+0x10/0x10 [overlay 30837f11141636a8e1793533a02e6e2e885dad1d]\n   ? dentry_open+0x8f/0xd0\n   ecryptfs_write_metadata+0x30a/0x550\n   ? __pfx_ecryptfs_write_metadata+0x10/0x10\n   ? ecryptfs_get_lower_file+0x6b/0x190\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   ? __pfx_path_openat+0x10/0x10\n   do_filp_open+0x15e/0x290\n   ? __pfx_do_filp_open+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? _raw_spin_lock+0x86/0xf0\n   ? __pfx__raw_spin_lock+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? alloc_fd+0xf4/0x330\n   do_sys_openat2+0x122/0x160\n   ? __pfx_do_sys_openat2+0x10/0x10\n   __x64_sys_openat+0xef/0x170\n   ? __pfx___x64_sys_openat+0x10/0x10\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n  RIP: 0033:0x7f00a703fd67\n  Code: 25 00 00 41 00 3d 00 00 41 00 74 37 64 8b 04 25 18 00 00 00 85 c0 75 5b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 85 00 00 00 48 83 c4 68 5d 41 5c c3 0f 1f\n  RSP: 002b:00007ffc088e30b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101\n  RAX: ffffffffffffffda RBX: 00007ffc088e3368 RCX: 00007f00a703fd67\n  RDX: 0000000000000941 RSI: 00007ffc088e48d7 RDI: 00000000ffffff9c\n  RBP: 00007ffc088e48d7 R08: 0000000000000001 R09: 0000000000000000\n  R10: 00000000000001b6 R11: 0000000000000246 R12: 0000000000000941\n  R13: 0000000000000000 R14: 00007ffc088e48d7 R15: 00007f00a7180040\n   </TASK>\n\n  Allocated by task 181:\n   kasan_save_stack+0x2f/0x60\n   kasan_set_track+0x29/0x40\n   kasan_save_alloc_info+0x25/0x40\n   __kasan_kmalloc+0xc5/0xd0\n   __kmalloc+0x66/0x160\n   ecryptfs_generate_key_packet_set+0x6d2/0xde0\n   ecryptfs_write_metadata+0x30a/0x550\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   do_filp_open+0x15e/0x290\n   do_sys_openat2+0x122/0x160\n   __x64_sys_openat+0xef/0x170\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38560",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/481fc0c8617304a67649027c4a44723a139a0462",
            "https://git.kernel.org/stable/c/595a6b98deec01b6dbb20139f71edcd5fb760ec2",
            "https://git.kernel.org/stable/c/00b425ff0891283207d7bad607a2412225274d7a",
            "https://git.kernel.org/stable/c/1708e3cf2488788cba5489e4f913d227de757baf",
            "https://git.kernel.org/stable/c/7d3e694c4fe30f3aba9cd5ae86fb947a54c3db5c",
            "https://git.kernel.org/stable/c/204714e68015d6946279719fd464ecaf57240f35",
            "https://git.kernel.org/stable/c/7510fab46b1cbd1680e2a096e779aec3334b4143",
            "https://git.kernel.org/stable/c/ecb76200f5557a2886888aaa53702da1ab9e6cdf",
            "https://git.kernel.org/stable/c/13d0cecb4626fae67c00c84d3c7851f6b62f7df3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul instead\nof memdup_user."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38552",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/604c506ca43fce52bb882cff9c1fdf2ec3b4029c",
            "https://git.kernel.org/stable/c/e280ab978c81443103d7c61bdd1d8d708cf6ed6d",
            "https://git.kernel.org/stable/c/04bc4d1090c343025d69149ca669a27c5b9c34a7",
            "https://git.kernel.org/stable/c/ced9c4e2289a786b8fa684d8893b7045ea53ef7e",
            "https://git.kernel.org/stable/c/98b8a6bfd30d07a19cfacdf82b50f84bf3360869",
            "https://git.kernel.org/stable/c/4e8c8b37ee84b3b19c448d2b8e4c916d2f5b9c86",
            "https://git.kernel.org/stable/c/123edbae64f4d21984359b99c6e79fcde31c6123",
            "https://git.kernel.org/stable/c/7226ddf3311c5e5a7726ad7d4e7b079bb3cfbb29",
            "https://git.kernel.org/stable/c/63ae548f1054a0b71678d0349c7dc9628ddd42ca"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix potential index out of bounds in color transformation function\n\nFixes index out of bounds issue in the color transformation function.\nThe issue could occur when the index 'i' exceeds the number of transfer\nfunction points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, an error message is\nlogged and the function returns false to indicate an error.\n\nReported by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:405 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:406 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:407 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38559",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1f84a2744ad813be23fc4be99fb74bfb24aadb95",
            "https://git.kernel.org/stable/c/a75001678e1d38aa607d5b898ec7ff8ed0700d59",
            "https://git.kernel.org/stable/c/769b9fd2af02c069451fe9108dba73355d9a021c",
            "https://git.kernel.org/stable/c/dccd97b39ab2f2b1b9a47a1394647a4d65815255",
            "https://git.kernel.org/stable/c/d93318f19d1e1a6d5f04f5d965eaa9055bb7c613",
            "https://git.kernel.org/stable/c/563e609275927c0b75fbfd0d90441543aa7b5e0d",
            "https://git.kernel.org/stable/c/4907f5ad246fa9b51093ed7dfc7da9ebbd3f20b8",
            "https://git.kernel.org/stable/c/177f43c6892e6055de6541fe9391a8a3d1f95fc9",
            "https://git.kernel.org/stable/c/d0184a375ee797eb657d74861ba0935b6e405c62"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count from\nuserspace to that buffer. Later, we use kstrtouint on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can\nlead to OOB read when using kstrtouint. Fix this issue by using\nmemdup_user_nul instead of memdup_user."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38583",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/822ae5a8eac30478578a75f7e064f0584931bf2d",
            "https://git.kernel.org/stable/c/82933c84f188dcfe89eb26b0b48ab5d1ca99d164",
            "https://git.kernel.org/stable/c/67fa90d4a2ccd9ebb0e1e168c7d0b5d0cf3c7148",
            "https://git.kernel.org/stable/c/e65ccf3a4de4f0c763d94789615b83e11f204438",
            "https://git.kernel.org/stable/c/86a30d6302deddb9fb97ba6fc4b04d0e870b582a",
            "https://git.kernel.org/stable/c/f9186bba4ea282b07293c1c892441df3a5441cb0",
            "https://git.kernel.org/stable/c/2f12b2c03c5dae1a0de0a9e5853177e3d6eee3c6",
            "https://git.kernel.org/stable/c/68e738be5c518fc3c4e9146b66f67c8fee0135fb",
            "https://git.kernel.org/stable/c/f5d4e04634c9cf68bdf23de08ada0bb92e8befe7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix use-after-free of timer for log writer thread\n\nPatch series \"nilfs2: fix log writer related issues\".\n\nThis bug fix series covers three nilfs2 log writer-related issues,\nincluding a timer use-after-free issue and potential deadlock issue on\nunmount, and a potential freeze issue in event synchronization found\nduring their analysis.  Details are described in each commit log.\n\n\nThis patch (of 3):\n\nA use-after-free issue has been reported regarding the timer sc_timer on\nthe nilfs_sc_info structure.\n\nThe problem is that even though it is used to wake up a sleeping log\nwriter thread, sc_timer is not shut down until the nilfs_sc_info structure\nis about to be freed, and is used regardless of the thread's lifetime.\n\nFix this issue by limiting the use of sc_timer only while the log writer\nthread is alive."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38589",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b9d663fbf74290cb68fbc66ae4367bd56837ad1d",
            "https://git.kernel.org/stable/c/1fbfb483c1a290dce3f41f52d45cc46dd88b7691",
            "https://git.kernel.org/stable/c/b117e5b4f27c2c9076561b6be450a9619f0b79de",
            "https://git.kernel.org/stable/c/421c50fa81836775bf0fd6ce0e57a6eb27af24d5",
            "https://git.kernel.org/stable/c/3db2fc45d1d2a6457f06ebdfd45b9820e5b5c2b7",
            "https://git.kernel.org/stable/c/f28bdc2ee5d9300cc77bd3d97b5b3cdd14960fd8",
            "https://git.kernel.org/stable/c/5fb7e2a4335fc67d6952ad2a6613c46e0b05f7c5",
            "https://git.kernel.org/stable/c/5bc50a705cfac8f64ce51c95611c3dd0554ef9c3",
            "https://git.kernel.org/stable/c/e03e7f20ebf7e1611d40d1fdc1bde900fd3335f6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: fix possible dead-lock in nr_rt_ioctl()\n\nsyzbot loves netrom, and found a possible deadlock in nr_rt_ioctl [1]\n\nMake sure we always acquire nr_node_list_lock before nr_node_lock(nr_node)\n\n[1]\nWARNING: possible circular locking dependency detected\n6.9.0-rc7-syzkaller-02147-g654de42f3fc6 #0 Not tainted\n------------------------------------------------------\nsyz-executor350/5129 is trying to acquire lock:\n ffff8880186e2070 (&nr_node->node_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]\n ffff8880186e2070 (&nr_node->node_lock){+...}-{2:2}, at: nr_node_lock include/net/netrom.h:152 [inline]\n ffff8880186e2070 (&nr_node->node_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:464 [inline]\n ffff8880186e2070 (&nr_node->node_lock){+...}-{2:2}, at: nr_rt_ioctl+0x1bb/0x1090 net/netrom/nr_route.c:697\n\nbut task is already holding lock:\n ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]\n ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:462 [inline]\n ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_rt_ioctl+0x10a/0x1090 net/netrom/nr_route.c:697\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (nr_node_list_lock){+...}-{2:2}:\n        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5754\n        __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]\n        _raw_spin_lock_bh+0x35/0x50 kernel/locking/spinlock.c:178\n        spin_lock_bh include/linux/spinlock.h:356 [inline]\n        nr_remove_node net/netrom/nr_route.c:299 [inline]\n        nr_del_node+0x4b4/0x820 net/netrom/nr_route.c:355\n        nr_rt_ioctl+0xa95/0x1090 net/netrom/nr_route.c:683\n        sock_do_ioctl+0x158/0x460 net/socket.c:1222\n        sock_ioctl+0x629/0x8e0 net/socket.c:1341\n        vfs_ioctl fs/ioctl.c:51 [inline]\n        __do_sys_ioctl fs/ioctl.c:904 [inline]\n        __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:890\n        do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n        do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n-> #0 (&nr_node->node_lock){+...}-{2:2}:\n        check_prev_add kernel/locking/lockdep.c:3134 [inline]\n        check_prevs_add kernel/locking/lockdep.c:3253 [inline]\n        validate_chain+0x18cb/0x58e0 kernel/locking/lockdep.c:3869\n        __lock_acquire+0x1346/0x1fd0 kernel/locking/lockdep.c:5137\n        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5754\n        __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]\n        _raw_spin_lock_bh+0x35/0x50 kernel/locking/spinlock.c:178\n        spin_lock_bh include/linux/spinlock.h:356 [inline]\n        nr_node_lock include/net/netrom.h:152 [inline]\n        nr_dec_obs net/netrom/nr_route.c:464 [inline]\n        nr_rt_ioctl+0x1bb/0x1090 net/netrom/nr_route.c:697\n        sock_do_ioctl+0x158/0x460 net/socket.c:1222\n        sock_ioctl+0x629/0x8e0 net/socket.c:1341\n        vfs_ioctl fs/ioctl.c:51 [inline]\n        __do_sys_ioctl fs/ioctl.c:904 [inline]\n        __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:890\n        do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n        do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(nr_node_list_lock);\n                               lock(&nr_node->node_lock);\n                               lock(nr_node_list_lock);\n  lock(&nr_node->node_lock);\n\n *** DEADLOCK ***\n\n1 lock held by syz-executor350/5129:\n  #0: ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]\n  #0: ffffffff8f7053b8 (nr_node_list_lock){+...}-{2:2}, at: nr_dec_obs net/netrom/nr_route.c:462 [inline]\n  #0: ffffffff8f70\n---truncated---"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38558",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6a51ac92bf35d34b4996d6eb67e2fe469f573b11",
            "https://git.kernel.org/stable/c/0b532f59437f688563e9c58bdc1436fefa46e3b5",
            "https://git.kernel.org/stable/c/5ab6aecbede080b44b8e34720ab72050bf1e6982",
            "https://git.kernel.org/stable/c/483eb70f441e2df66ade78aa7217e6e4caadfef3",
            "https://git.kernel.org/stable/c/9ec8b0ccadb908d92f7ee211a4eff05fd932f3f6",
            "https://git.kernel.org/stable/c/78741b4caae1e880368cb2f5110635f3ce45ecfd",
            "https://git.kernel.org/stable/c/431e9215576d7b728f3f53a704d237a520092120",
            "https://git.kernel.org/stable/c/d73fb8bddf89503c9fae7c42e50d44c89909aad6",
            "https://git.kernel.org/stable/c/7c988176b6c16c516474f6fceebe0f055af5eb56"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix overwriting ct original tuple for ICMPv6\n\nOVS_PACKET_CMD_EXECUTE has 3 main attributes:\n - OVS_PACKET_ATTR_KEY - Packet metadata in a netlink format.\n - OVS_PACKET_ATTR_PACKET - Binary packet content.\n - OVS_PACKET_ATTR_ACTIONS - Actions to execute on the packet.\n\nOVS_PACKET_ATTR_KEY is parsed first to populate sw_flow_key structure\nwith the metadata like conntrack state, input port, recirculation id,\netc.  Then the packet itself gets parsed to populate the rest of the\nkeys from the packet headers.\n\nWhenever the packet parsing code starts parsing the ICMPv6 header, it\nfirst zeroes out fields in the key corresponding to Neighbor Discovery\ninformation even if it is not an ND packet.\n\nIt is an 'ipv6.nd' field.  However, the 'ipv6' is a union that shares\nthe space between 'nd' and 'ct_orig' that holds the original tuple\nconntrack metadata parsed from the OVS_PACKET_ATTR_KEY.\n\nND packets should not normally have conntrack state, so it's fine to\nshare the space, but normal ICMPv6 Echo packets or maybe other types of\nICMPv6 can have the state attached and it should not be overwritten.\n\nThe issue results in all but the last 4 bytes of the destination\naddress being wiped from the original conntrack tuple leading to\nincorrect packet matching and potentially executing wrong actions\nin case this packet recirculates within the datapath or goes back\nto userspace.\n\nND fields should not be accessed in non-ND packets, so not clearing\nthem should be fine.  Executing memset() only for actual ND packets to\navoid the issue.\n\nInitializing the whole thing before parsing is needed because ND packet\nmay not contain all the options.\n\nThe issue only affects the OVS_PACKET_CMD_EXECUTE path and doesn't\naffect packets entering OVS datapath from network interfaces, because\nin this case CT metadata is populated from skb after the packet is\nalready parsed."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38567",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/eb0f2fc3ff5806cc572cd9055ce7c52a01e97645",
            "https://git.kernel.org/stable/c/ac3ed46a8741d464bc70ebdf7433c1d786cf329d",
            "https://git.kernel.org/stable/c/8650725bb0a48b206d5a8ddad3a7488f9a5985b7",
            "https://git.kernel.org/stable/c/6a9892bf24c906b4d6b587f8759ca38bff672582",
            "https://git.kernel.org/stable/c/265c3cda471c26e0f25d0c755da94e1eb15d7a0c",
            "https://git.kernel.org/stable/c/62eb07923f3693d55b0c2d9a5a4f1ad72cb6b8fd",
            "https://git.kernel.org/stable/c/03ddc74bdfd71b84a55c9f2185d8787f258422cd",
            "https://git.kernel.org/stable/c/0fa08a55201ab9be72bacb8ea93cf752d338184f",
            "https://git.kernel.org/stable/c/b6dd09b3dac89b45d1ea3e3bd035a3859c0369a0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: carl9170: add a proper sanity check for endpoints\n\nSyzkaller reports [1] hitting a warning which is caused by presence\nof a wrong endpoint type at the URB sumbitting stage. While there\nwas a check for a specific 4th endpoint, since it can switch types\nbetween bulk and interrupt, other endpoints are trusted implicitly.\nSimilar warning is triggered in a couple of other syzbot issues [2].\n\nFix the issue by doing a comprehensive check of all endpoints\ntaking into account difference between high- and full-speed\nconfiguration.\n\n[1] Syzkaller report:\n...\nWARNING: CPU: 0 PID: 4721 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n <TASK>\n carl9170_usb_send_rx_irq_urb+0x273/0x340 drivers/net/wireless/ath/carl9170/usb.c:504\n carl9170_usb_init_device drivers/net/wireless/ath/carl9170/usb.c:939 [inline]\n carl9170_usb_firmware_finish drivers/net/wireless/ath/carl9170/usb.c:999 [inline]\n carl9170_usb_firmware_step2+0x175/0x240 drivers/net/wireless/ath/carl9170/usb.c:1028\n request_firmware_work_func+0x130/0x240 drivers/base/firmware_loader/main.c:1107\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308\n </TASK>\n\n[2] Related syzkaller crashes:"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38596",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fca6072e1a7b1e709ada5604b951513b89b4bd0a",
            "https://git.kernel.org/stable/c/de6641d213373fbde9bbdd7c4b552254bc9f82fe",
            "https://git.kernel.org/stable/c/4d51845d734a4c5d079e56e0916f936a55e15055",
            "https://git.kernel.org/stable/c/9aa8773abfa0e954136875b4cbf2df4cf638e8a5",
            "https://git.kernel.org/stable/c/8299e4d778f664b31b67cf4cf3d5409de2ecb92c",
            "https://git.kernel.org/stable/c/0688d4e499bee3f2749bca27329bd128686230cb",
            "https://git.kernel.org/stable/c/a4c88072abcaca593cefe70f90e9d3707526e8f9",
            "https://git.kernel.org/stable/c/a52fa2addfcccc2c5a0217fd45562605088c018b",
            "https://git.kernel.org/stable/c/540bf24fba16b88c1b3b9353927204b4f1074e25"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -> 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38599",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2904e1d9b64f72d291095e3cbb31634f08788b11",
            "https://git.kernel.org/stable/c/526235dffcac74c7823ed504dfac4f88d84ba5df",
            "https://git.kernel.org/stable/c/f0eea095ce8c959b86e1e57fe36ca4fea5ae54f8",
            "https://git.kernel.org/stable/c/a1d21bcd78cf4a4353e1e835789429c6b76aca8b",
            "https://git.kernel.org/stable/c/f06969df2e40ab1dc8f4364a5de967830c74a098",
            "https://git.kernel.org/stable/c/af82d8d2179b7277ad627c39e7e0778f1c86ccdb",
            "https://git.kernel.org/stable/c/8d431391320c5c5398ff966fb3a95e68a7def275",
            "https://git.kernel.org/stable/c/978a12c91b38bf1a213e567f3c20e2beef215f07",
            "https://git.kernel.org/stable/c/c6854e5a267c28300ff045480b5a7ee7f6f1d913"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: prevent xattr node from overflowing the eraseblock\n\nAdd a check to make sure that the requested xattr node size is no larger\nthan the eraseblock minus the cleanmarker.\n\nUnlike the usual inode nodes, the xattr nodes aren't split into parts\nand spread across multiple eraseblocks, which means that a xattr node\nmust not occupy more than one eraseblock. If the requested xattr value is\ntoo large, the xattr node can spill onto the next eraseblock, overwriting\nthe nodes and causing errors such as:\n\njffs2: argh. node added in wrong place at 0x0000b050(2)\njffs2: nextblock 0x0000a000, expected at 0000b00c\njffs2: error: (823) do_verify_xattr_datum: node CRC failed at 0x01e050,\nread=0xfc892c93, calc=0x000000\njffs2: notice: (823) jffs2_get_inode_nodes: Node header CRC failed\nat 0x01e00c. {848f,2fc4,0fef511f,59a3d171}\njffs2: Node at 0x0000000c with length 0x00001044 would run over the\nend of the erase block\njffs2: Perhaps the file system was created with the wrong erase size?\njffs2: jffs2_scan_eraseblock(): Magic bitmask 0x1985 not found\nat 0x00000010: 0x1044 instead\n\nThis breaks the filesystem and can lead to KASAN crashes such as:\n\nBUG: KASAN: slab-out-of-bounds in jffs2_sum_add_kvec+0x125e/0x15d0\nRead of size 4 at addr ffff88802c31e914 by task repro/830\nCPU: 0 PID: 830 Comm: repro Not tainted 6.9.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS Arch Linux 1.16.3-1-1 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0xc6/0x120\n print_report+0xc4/0x620\n ? __virt_addr_valid+0x308/0x5b0\n kasan_report+0xc1/0xf0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_flash_direct_writev+0xa8/0xd0\n jffs2_flash_writev+0x9c9/0xef0\n ? __x64_sys_setxattr+0xc4/0x160\n ? do_syscall_64+0x69/0x140\n ? entry_SYSCALL_64_after_hwframe+0x76/0x7e\n [...]\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38579",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c256b616067bfd6d274c679c06986b78d2402434",
            "https://git.kernel.org/stable/c/e719c8991c161977a67197775067ab456b518c7b",
            "https://git.kernel.org/stable/c/ebed0d666fa709bae9e8cafa8ec6e7ebd1d318c6",
            "https://git.kernel.org/stable/c/c69a1e4b419c2c466dd8c5602bdebadc353973dd",
            "https://git.kernel.org/stable/c/49833a8da6407e7e9b532cc4054fdbcaf78f5fdd",
            "https://git.kernel.org/stable/c/d0f14ae223c2421b334c1f1a9e48f1e809aee3a0",
            "https://git.kernel.org/stable/c/c0082ee420639a97e40cae66778b02b341b005e5",
            "https://git.kernel.org/stable/c/3b7a40740f04e2f27114dfd6225c5e721dda9d57",
            "https://git.kernel.org/stable/c/2b3460cbf454c6b03d7429e9ffc4fe09322eb1a9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: bcm - Fix pointer arithmetic\n\nIn spu2_dump_omd() value of ptr is increased by ciph_key_len\ninstead of hash_iv_len which could lead to going beyond the\nbuffer boundaries.\nFix this bug by changing ciph_key_len to hash_iv_len.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38582",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/911d38be151921a5d152bb55e81fd752384c6830",
            "https://git.kernel.org/stable/c/bc9cee50a4a4ca23bdc49f75ea8242d8a2193b3b",
            "https://git.kernel.org/stable/c/eff7cdf890b02596b8d73e910bdbdd489175dbdb",
            "https://git.kernel.org/stable/c/06afce714d87c7cd1dcfccbcd800c5c5d2cf1cfd",
            "https://git.kernel.org/stable/c/1c3844c5f4eac043954ebf6403fa9fd1f0e9c1c0",
            "https://git.kernel.org/stable/c/a8799662fed1f8747edae87a1937549288baca6a",
            "https://git.kernel.org/stable/c/6e5c8e8e024e147b834f56f2115aad241433679b",
            "https://git.kernel.org/stable/c/c516db6ab9eabbedbc430b4f93b0d8728e9b427f",
            "https://git.kernel.org/stable/c/eb85dace897c5986bc2f36b3c783c6abb8a4292e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential hang in nilfs_detach_log_writer()\n\nSyzbot has reported a potential hang in nilfs_detach_log_writer() called\nduring nilfs2 unmount.\n\nAnalysis revealed that this is because nilfs_segctor_sync(), which\nsynchronizes with the log writer thread, can be called after\nnilfs_segctor_destroy() terminates that thread, as shown in the call trace\nbelow:\n\nnilfs_detach_log_writer\n  nilfs_segctor_destroy\n    nilfs_segctor_kill_thread  --> Shut down log writer thread\n    flush_work\n      nilfs_iput_work_func\n        nilfs_dispose_list\n          iput\n            nilfs_evict_inode\n              nilfs_transaction_commit\n                nilfs_construct_segment (if inode needs sync)\n                  nilfs_segctor_sync  --> Attempt to synchronize with\n                                          log writer thread\n                           *** DEADLOCK ***\n\nFix this issue by changing nilfs_segctor_sync() so that the log writer\nthread returns normally without synchronizing after it terminates, and by\nforcing tasks that are already waiting to complete once after the thread\nterminates.\n\nThe skipped inode metadata flushout will then be processed together in the\nsubsequent cleanup work in nilfs_segctor_destroy()."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38565",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/79ddf5f2020fd593d50f1363bb5131283d74f78f",
            "https://git.kernel.org/stable/c/68a5a00c5d38978a3f8460c6f182f7beec8688ff",
            "https://git.kernel.org/stable/c/ee25389df80138907bc9dcdf4a2be2067cde9a81",
            "https://git.kernel.org/stable/c/b4c24de37a6bb383394a6fef2b85a6db41d426f5",
            "https://git.kernel.org/stable/c/34f7ebff1b9699e0b89fa58b693bc098c2f5ec72",
            "https://git.kernel.org/stable/c/b33a81e4ecfb022b028cae37d1c1ce28ac1b359d",
            "https://git.kernel.org/stable/c/beeed260b92af158592f5e8d2dab65dae45c6f70",
            "https://git.kernel.org/stable/c/7bbf76c9bb2c58375e183074e44f9712483f0603",
            "https://git.kernel.org/stable/c/e120b6388d7d88635d67dcae6483f39c37111850"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ar5523: enable proper endpoint verification\n\nSyzkaller reports [1] hitting a warning about an endpoint in use\nnot having an expected type to it.\n\nFix the issue by checking for the existence of all proper\nendpoints with their according types intact.\n\nSadly, this patch has not been tested on real hardware.\n\n[1] Syzkaller report:\n------------[ cut here ]------------\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 0 PID: 3643 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n <TASK>\n ar5523_cmd+0x41b/0x780 drivers/net/wireless/ath/ar5523/ar5523.c:275\n ar5523_cmd_read drivers/net/wireless/ath/ar5523/ar5523.c:302 [inline]\n ar5523_host_available drivers/net/wireless/ath/ar5523/ar5523.c:1376 [inline]\n ar5523_probe+0x14b0/0x1d10 drivers/net/wireless/ath/ar5523/ar5523.c:1655\n usb_probe_interface+0x30f/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_set_configuration+0x101d/0x1900 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xbe/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd8/0x2c0 drivers/usb/core/driver.c:293\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_new_device.cold+0x685/0x10ad drivers/usb/core/hub.c:2573\n hub_port_connect drivers/usb/core/hub.c:5353 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5497 [inline]\n port_event drivers/usb/core/hub.c:5653 [inline]\n hub_event+0x26cb/0x45d0 drivers/usb/core/hub.c:5735\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n </TASK>"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38587",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/42f0a3f67158ed6b2908d2b9ffbf7e96d23fd358",
            "https://git.kernel.org/stable/c/cd7f3978c2ec741aedd1d860b2adb227314cf996",
            "https://git.kernel.org/stable/c/07ef95cc7a579731198c93beed281e3a79a0e586",
            "https://git.kernel.org/stable/c/504178fb7d9f6cdb0496d5491efb05f45597e535",
            "https://git.kernel.org/stable/c/3726f75a1ccc16cd335c0ccfad1d92ee08ecba5e",
            "https://git.kernel.org/stable/c/c6e1650cf5df1bd6638eeee231a683ef30c7d4eb",
            "https://git.kernel.org/stable/c/eb1ea64328d4cc7d7a912c563f8523d5259716ef",
            "https://git.kernel.org/stable/c/d52c04474feac8e305814a5228e622afe481b2ef",
            "https://git.kernel.org/stable/c/008ab3c53bc4f0b2f20013c8f6c204a3203d0b8b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspeakup: Fix sizeof() vs ARRAY_SIZE() bug\n\nThe \"buf\" pointer is an array of u16 values.  This code should be\nusing ARRAY_SIZE() (which is 256) instead of sizeof() (which is 512),\notherwise it can the still got out of bounds."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38601",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b50932ea673b5a089a4bb570a8a868d95c72854e",
            "https://git.kernel.org/stable/c/c68b7a442ee61d04ca58b2b5cb5ea7cb8230f84a",
            "https://git.kernel.org/stable/c/1e160196042cac946798ac192a0bc3398f1aa66b",
            "https://git.kernel.org/stable/c/595363182f28786d641666a09e674b852c83b4bb",
            "https://git.kernel.org/stable/c/54c64967ba5f8658ae7da76005024ebd3d9d8f6e",
            "https://git.kernel.org/stable/c/af3274905b3143ea23142bbf77bd9b610c54e533",
            "https://git.kernel.org/stable/c/5ef9e330406d3fb4f4b2c8bca2c6b8a93bae32d1",
            "https://git.kernel.org/stable/c/79b52013429a42b8efdb0cda8bb0041386abab87",
            "https://git.kernel.org/stable/c/c2274b908db05529980ec056359fae916939fdaa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix a race between readers and resize checks\n\nThe reader code in rb_get_reader_page() swaps a new reader page into the\nring buffer by doing cmpxchg on old->list.prev->next to point it to the\nnew page. Following that, if the operation is successful,\nold->list.next->prev gets updated too. This means the underlying\ndoubly-linked list is temporarily inconsistent, page->prev->next or\npage->next->prev might not be equal back to page for some page in the\nring buffer.\n\nThe resize operation in ring_buffer_resize() can be invoked in parallel.\nIt calls rb_check_pages() which can detect the described inconsistency\nand stop further tracing:\n\n[  190.271762] ------------[ cut here ]------------\n[  190.271771] WARNING: CPU: 1 PID: 6186 at kernel/trace/ring_buffer.c:1467 rb_check_pages.isra.0+0x6a/0xa0\n[  190.271789] Modules linked in: [...]\n[  190.271991] Unloaded tainted modules: intel_uncore_frequency(E):1 skx_edac(E):1\n[  190.272002] CPU: 1 PID: 6186 Comm: cmd.sh Kdump: loaded Tainted: G            E      6.9.0-rc6-default #5 158d3e1e6d0b091c34c3b96bfd99a1c58306d79f\n[  190.272011] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552c-rebuilt.opensuse.org 04/01/2014\n[  190.272015] RIP: 0010:rb_check_pages.isra.0+0x6a/0xa0\n[  190.272023] Code: [...]\n[  190.272028] RSP: 0018:ffff9c37463abb70 EFLAGS: 00010206\n[  190.272034] RAX: ffff8eba04b6cb80 RBX: 0000000000000007 RCX: ffff8eba01f13d80\n[  190.272038] RDX: ffff8eba01f130c0 RSI: ffff8eba04b6cd00 RDI: ffff8eba0004c700\n[  190.272042] RBP: ffff8eba0004c700 R08: 0000000000010002 R09: 0000000000000000\n[  190.272045] R10: 00000000ffff7f52 R11: ffff8eba7f600000 R12: ffff8eba0004c720\n[  190.272049] R13: ffff8eba00223a00 R14: 0000000000000008 R15: ffff8eba067a8000\n[  190.272053] FS:  00007f1bd64752c0(0000) GS:ffff8eba7f680000(0000) knlGS:0000000000000000\n[  190.272057] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  190.272061] CR2: 00007f1bd6662590 CR3: 000000010291e001 CR4: 0000000000370ef0\n[  190.272070] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  190.272073] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  190.272077] Call Trace:\n[  190.272098]  <TASK>\n[  190.272189]  ring_buffer_resize+0x2ab/0x460\n[  190.272199]  __tracing_resize_ring_buffer.part.0+0x23/0xa0\n[  190.272206]  tracing_resize_ring_buffer+0x65/0x90\n[  190.272216]  tracing_entries_write+0x74/0xc0\n[  190.272225]  vfs_write+0xf5/0x420\n[  190.272248]  ksys_write+0x67/0xe0\n[  190.272256]  do_syscall_64+0x82/0x170\n[  190.272363]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  190.272373] RIP: 0033:0x7f1bd657d263\n[  190.272381] Code: [...]\n[  190.272385] RSP: 002b:00007ffe72b643f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[  190.272391] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f1bd657d263\n[  190.272395] RDX: 0000000000000002 RSI: 0000555a6eb538e0 RDI: 0000000000000001\n[  190.272398] RBP: 0000555a6eb538e0 R08: 000000000000000a R09: 0000000000000000\n[  190.272401] R10: 0000555a6eb55190 R11: 0000000000000246 R12: 00007f1bd6662500\n[  190.272404] R13: 0000000000000002 R14: 00007f1bd6667c00 R15: 0000000000000002\n[  190.272412]  </TASK>\n[  190.272414] ---[ end trace 0000000000000000 ]---\n\nNote that ring_buffer_resize() calls rb_check_pages() only if the parent\ntrace_buffer has recording disabled. Recent commit d78ab792705c\n(\"tracing: Stop current tracer when resizing buffer\") causes that it is\nnow always the case which makes it more likely to experience this issue.\n\nThe window to hit this race is nonetheless very small. To help\nreproducing it, one can add a delay loop in rb_get_reader_page():\n\n ret = rb_head_page_replace(reader, cpu_buffer->reader_page);\n if (!ret)\n \tgoto spin;\n for (unsigned i = 0; i < 1U << 26; i++)  /* inserted delay loop */\n \t__asm__ __volatile__ (\"\" : : : \"memory\");\n rb_list_head(reader->list.next)->prev = &cpu_buffer->reader_page->list;\n\n.. \n---truncated---"
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38618",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/68396c825c43664b20a3a1ba546844deb2b4e48f",
            "https://git.kernel.org/stable/c/74bfb8d90f2601718ae203faf45a196844c01fa1",
            "https://git.kernel.org/stable/c/bdd0aa055b8ec7e24bbc19513f3231958741d0ab",
            "https://git.kernel.org/stable/c/83f0ba8592b9e258fd80ac6486510ab1dcd7ad6e",
            "https://git.kernel.org/stable/c/ceab795a67dd28dd942d0d8bba648c6c0f7a044b",
            "https://git.kernel.org/stable/c/2c95241ac5fc90c929d6c0c023e84bf0d30e84c3",
            "https://git.kernel.org/stable/c/abb1ad69d98cf1ff25bb14fff0e7c3f66239e1cd",
            "https://git.kernel.org/stable/c/4a63bd179fa8d3fcc44a0d9d71d941ddd62f0c4e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: timer: Set lower bound of start tick time\n\nCurrently ALSA timer doesn't have the lower limit of the start tick\ntime, and it allows a very small size, e.g. 1 tick with 1ns resolution\nfor hrtimer.  Such a situation may lead to an unexpected RCU stall,\nwhere  the callback repeatedly queuing the expire update, as reported\nby fuzzer.\n\nThis patch introduces a sanity check of the timer start tick time, so\nthat the system returns an error when a too small start size is set.\nAs of this patch, the lower limit is hard-coded to 100us, which is\nsmall enough but can still work somehow."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38598",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798",
            "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce",
            "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3",
            "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492",
            "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f",
            "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1",
            "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482",
            "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b",
            "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-19T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38612",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/10610575a3ac2a702bf5c57aa931beaf847949c7",
            "https://git.kernel.org/stable/c/646cd236c55e2cb5f146fc41bbe4034c4af5b2a4",
            "https://git.kernel.org/stable/c/00e6335329f23ac6cf3105931691674e28bc598c",
            "https://git.kernel.org/stable/c/1a63730fb315bb1bab97edd69ff58ad45e04bb01",
            "https://git.kernel.org/stable/c/e77a3ec7ada84543e75722a1283785a6544de925",
            "https://git.kernel.org/stable/c/3398a40dccb88d3a7eef378247a023a78472db66",
            "https://git.kernel.org/stable/c/85a70ff1e572160f1eeb096ed48d09a1c9d4d89a",
            "https://git.kernel.org/stable/c/c04d6a914e890ccea4a9d11233009a2ee7978bf4",
            "https://git.kernel.org/stable/c/160e9d2752181fcf18c662e74022d77d3164cd45"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix invalid unregister error path\n\nThe error path of seg6_init() is wrong in case CONFIG_IPV6_SEG6_LWTUNNEL\nis not defined. In that case if seg6_hmac_init() fails, the\ngenl_unregister_family() isn't called.\n\nThis issue exist since commit 46738b1317e1 (\"ipv6: sr: add option to control\nlwtunnel support\"), and commit 5559cea2d5aa (\"ipv6: sr: fix possible\nuse-after-free and null-ptr-deref\") replaced unregister_pernet_subsys()\nwith genl_unregister_family() in this error path."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-06-10T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-36971",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/92f1655aa2b2294d0b49925f3b875a634bd3b59e",
            "https://git.kernel.org/stable/c/b8af8e6118a6605f0e495a58d591ca94a85a50fc",
            "https://git.kernel.org/stable/c/051c0bde9f0450a2ec3d62a86d2a0d2fad117f13",
            "https://git.kernel.org/stable/c/db0082825037794c5dba9959c9de13ca34cc5e72",
            "https://git.kernel.org/stable/c/2295a7ef5c8c49241bff769e7826ef2582e532a6",
            "https://git.kernel.org/stable/c/eacb8b195579c174a6d3e12a9690b206eb7f28cf",
            "https://git.kernel.org/stable/c/81dd3c82a456b0015461754be7cb2693991421b4",
            "https://git.kernel.org/stable/c/5af198c387128a9d2ddd620b0f0803564a4d4508"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix __dst_negative_advice() race\n\n__dst_negative_advice() does not enforce proper RCU rules when\nsk->dst_cache must be cleared, leading to possible UAF.\n\nRCU rules are that we must first clear sk->sk_dst_cache,\nthen call dst_release(old_dst).\n\nNote that sk_dst_reset(sk) is implementing this protocol correctly,\nwhile __dst_negative_advice() uses the wrong order.\n\nGiven that ip6_negative_advice() has special logic\nagainst RTF_CACHE, this means each of the three ->negative_advice()\nexisting methods must perform the sk_dst_reset() themselves.\n\nNote the check against NULL dst is centralized in\n__dst_negative_advice(), there is no need to duplicate\nit in various callbacks.\n\nMany thanks to Clement Lecigne for tracking this issue.\n\nThis old bug became visible after the blamed commit, using UDP sockets."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-05-30T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36031",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ad2011ea787928b2accb5134f1e423b11fe80a8a",
            "https://git.kernel.org/stable/c/ed79b93f725cd0da39a265dc23d77add1527b9be",
            "https://git.kernel.org/stable/c/e4519a016650e952ad9eb27937f8c447d5a4e06d",
            "https://git.kernel.org/stable/c/25777f3f4e1f371d16a594925f31e37ce07b6ec7",
            "https://git.kernel.org/stable/c/939a08bcd4334bad4b201e60bd0ae1f278d71d41",
            "https://git.kernel.org/stable/c/cc219cb8afbc40ec100c0de941047bb29373126a",
            "https://git.kernel.org/stable/c/9da27fb65a14c18efd4473e2e82b76b53ba60252"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkeys: Fix overwrite of key expiration on instantiation\n\nThe expiry time of a key is unconditionally overwritten during\ninstantiation, defaulting to turn it permanent. This causes a problem\nfor DNS resolution as the expiration set by user-space is overwritten to\nTIME64_MAX, disabling further DNS updates. Fix this by restoring the\ncondition that key_set_expiry is only called when the pre-parser sets a\nspecific expiry."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-05-29T19:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36016",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/47388e807f85948eefc403a8a5fdc5b406a65d5a",
            "https://git.kernel.org/stable/c/f126ce7305fe88f49cdabc6db4168b9318898ea3",
            "https://git.kernel.org/stable/c/b890d45aaf02b564e6cae2d2a590f9649330857d",
            "https://git.kernel.org/stable/c/46f52c89a7e7d2691b97a9728e4591d071ca8abc",
            "https://git.kernel.org/stable/c/774d83b008eccb1c48c14dc5486e7aa255731350",
            "https://git.kernel.org/stable/c/9513d4148950b05bc99fa7314dc883cc0e1605e5",
            "https://git.kernel.org/stable/c/b229bc6c6ea9fe459fc3fa94fd0a27a2f32aca56",
            "https://git.kernel.org/stable/c/0fb736c9931e02dbc7d9a75044c8e1c039e50f04",
            "https://git.kernel.org/stable/c/4c267110fc110390704cc065edb9817fdd10ff54"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n\nAssuming the following:\n- side A configures the n_gsm in basic option mode\n- side B sends the header of a basic option mode frame with data length 1\n- side A switches to advanced option mode\n- side B sends 2 data bytes which exceeds gsm->len\n  Reason: gsm->len is not used in advanced option mode.\n- side A switches to basic option mode\n- side B keeps sending until gsm0_receive() writes past gsm->buf\n  Reason: Neither gsm->state nor gsm->len have been reset after\n  reconfiguration.\n\nFix this by changing gsm->count to gsm->len comparison from equal to less\nthan. Also add upper limit checks against the constant MAX_MRU in\ngsm0_receive() and gsm1_receive() to harden against memory corruption of\ngsm->len and gsm->mru.\n\nAll other checks remain as we still need to limit the data according to the\nuser configuration and actual payload size."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-05-29T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36014",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a1f95aede6285dba6dd036d907196f35ae3a11ea",
            "https://git.kernel.org/stable/c/b77620730f614059db2470e8ebab3e725280fc6d",
            "https://git.kernel.org/stable/c/93f76ec1eddce60dbb5885cbc0d7df54adee4639",
            "https://git.kernel.org/stable/c/e4b52d49383306ef73fd1bd9102538beebb0fe07",
            "https://git.kernel.org/stable/c/335cc45ef2b81b68be63c698b4f867a530bdf7a5",
            "https://git.kernel.org/stable/c/b6cc5dd06336ed8bb3a7a1fc5aaf7d5e88bc0818",
            "https://git.kernel.org/stable/c/565d9ad7e5a18eb69ed8b66a9e9bb3f45346520c",
            "https://git.kernel.org/stable/c/a5fa5b40a278a3ca978fed64707bd27614adb1eb",
            "https://git.kernel.org/stable/c/3e54d4e95120641216dfe91a6c49f116a9f68490"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/arm/malidp: fix a possible null pointer dereference\n\nIn malidp_mw_connector_reset, new memory is allocated with kzalloc, but\nno check is performed. In order to prevent null pointer dereferencing,\nensure that mw_state is checked before calling\n__drm_atomic_helper_connector_reset."
    },
    {
        "Modified": "2024-07-15T07:15:00",
        "Published": "2024-05-29T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36015",
        "impact": {},
        "last-modified": "2024-07-15T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fbf740aeb86a4fe82ad158d26d711f2f3be79b3e",
            "https://git.kernel.org/stable/c/df9329247dbbf00f6057e002139ab3fa529ad828",
            "https://git.kernel.org/stable/c/ec3468221efec6660ff656e9ebe51ced3520fc57",
            "https://git.kernel.org/stable/c/5d5b24edad1107a2ffa99058f20f6aeeafeb5d39",
            "https://git.kernel.org/stable/c/65cd017d43f4319a56747d38308b0a24cf57299e",
            "https://git.kernel.org/stable/c/b8c6b83cc3adff3ddf403c8c7063fe6d08b2b9d9",
            "https://git.kernel.org/stable/c/d32caf51379a4d71db03d3d4d7c22d27cdf7f68b",
            "https://git.kernel.org/stable/c/b65d0410b879af0295d22438a4a32012786d152a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nppdev: Add an error check in register_device\n\nIn register_device, the return value of ida_simple_get is unchecked,\nin witch ida_simple_get will use an invalid index value.\n\nTo address this issue, index should be checked after ida_simple_get. When\nthe index value is abnormal, a warning message should be printed, the port\nshould be dropped, and the value should be recorded."
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6072",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/1d8a344b-37e9-41e8-9de0-c67b7ca8e21b/"
        ],
        "summary": "The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers"
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6074",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/e518af46-cb8e-43ff-a7c1-5300b36d9113/"
        ],
        "summary": "The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6289",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/fd6d0362-df1d-4416-b8b5-6e5d0ce84793/"
        ],
        "summary": "The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page."
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6742",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7930-e0368-1.html",
            "https://www.twcert.org.tw/en/cp-139-7931-608eb-2.html"
        ],
        "summary": "AguardNet Technology's Space Management System does not properly filter user input, allowing remote attackers with regular privileges to inject JavaScript and perform Reflected Cross-site scripting attacks."
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5630",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/538c875f-4c20-4be0-8098-5bddb7aecff4/"
        ],
        "summary": "The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites."
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6073",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/f04994bc-9eef-46de-995b-8598f7a749c4/"
        ],
        "summary": "The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6075",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/b0e2658a-b075-48b6-a9d9-e141194117fc/"
        ],
        "summary": "The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks"
    },
    {
        "Modified": "2024-07-15T06:15:00",
        "Published": "2024-07-15T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6076",
        "impact": {},
        "last-modified": "2024-07-15T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/8369a2d8-1780-40c3-90ff-a826b9e9afd4/"
        ],
        "summary": "The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"
    },
    {
        "Modified": "2024-07-15T05:15:00",
        "Published": "2024-07-15T05:15:00",
        "access": {},
        "assigner": "report@snyk.io",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-21513",
        "impact": {},
        "last-modified": "2024-07-15T05:15:00",
        "references": [
            "https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAINEXPERIMENTAL-7278171",
            "https://github.com/langchain-ai/langchain/blob/672907bbbb7c38bf19787b78e4ffd7c8a9026fe4/libs/experimental/langchain_experimental/sql/vector_sql.py%23L81",
            "https://github.com/langchain-ai/langchain/commit/7b13292e3544b2f5f2bfb8a27a062ea2b0c34561"
        ],
        "summary": "Versions of the package langchain-experimental from 0.0.15 and before 0.0.21 are vulnerable to Arbitrary Code Execution when retrieving values from the database, the code will attempt to call 'eval' on all values. An attacker can exploit this vulnerability and execute arbitrary python code if they can control the input prompt and the server is configured with VectorSQLDatabaseChain.\r\r**Notes:**\r\rImpact on the Confidentiality, Integrity and Availability of the vulnerable component:\r\rConfidentiality: Code execution happens within the impacted component, in this case langchain-experimental, so all resources are necessarily accessible.\r\rIntegrity: There is nothing protected by the impacted component inherently. Although anything returned from the component counts as 'information' for which the trustworthiness can be compromised.\r\rAvailability: The loss of availability isn't caused by the attack itself, but it happens as a result during the attacker's post-exploitation steps.\r\r\rImpact on the Confidentiality, Integrity and Availability of the subsequent system:\r\rAs a legitimate low-privileged user of the package (PR:L) the attacker does not have more access to data owned by the package as a result of this vulnerability than they did with normal usage (e.g. can query the DB). The unintended action that one can perform by breaking out of the app environment and exfiltrating files, making remote connections etc. happens during the post exploitation phase in the subsequent system - in this case, the OS.\r\rAT:P: An attacker needs to be able to influence the input prompt, whilst the server is configured with the VectorSQLDatabaseChain plugin."
    },
    {
        "Modified": "2024-07-15T04:15:00",
        "Published": "2024-07-15T04:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-1004",
        "id": "CVE-2024-6739",
        "impact": {},
        "last-modified": "2024-07-15T04:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7927-03837-1.html",
            "https://www.twcert.org.tw/en/cp-139-7928-04e8a-2.html",
            "https://www.openfind.com.tw/taiwan/download/Openfind_OF-ISAC-24-007.pdf"
        ],
        "summary": "The session cookie in MailGates and MailAudit from Openfind does not have the HttpOnly flag enabled, allowing remote attackers to potentially steal the session cookie via XSS."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-540",
        "id": "CVE-2024-39729",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/295968"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 could allow an authenticated user to obtain sensitive information from source code that could be used in further attacks against the system.  IBM X-Force ID:  295968."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39735",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296002"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 is vulnerable to cross-site scripting. This vulnerability allows an authenticated user to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  296002."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-497",
        "id": "CVE-2024-39740",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296009"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 displays version information in HTTP requests that could allow an attacker to gather information for future attacks against the system.  IBM X-Force ID:  296009."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-39741",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296010"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 could allow a remote attacker to traverse directories on the system. An attacker could send a specially crafted URL request containing \"dot dot\" sequences (/../) to view arbitrary files on the system.  IBM X-Force ID:  296010."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-6737",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7923-46df3-1.html",
            "https://www.twcert.org.tw/en/cp-139-7924-85606-2.html"
        ],
        "summary": "The access control in the Electronic Official Document Management System from 2100 TECHNOLOGY  is not properly implemented, allowing remote attackers with regular privileges to access the account settings functionality and create an administrator account."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-07-15T03:15:00",
        "access": {},
        "assigner": "cve@cert.org.tw",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-6738",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://www.twcert.org.tw/tw/cp-132-7925-97e1c-1.html",
            "https://www.twcert.org.tw/en/cp-139-7926-f7914-2.html"
        ],
        "summary": "The tumbnail API of Tronclass from WisdomGarden lacks proper access control, allowing unauthenticated remote attackers to obtain certain specific files by modifying the URL."
    },
    {
        "Modified": "2024-07-15T03:15:00",
        "Published": "2024-03-02T22:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26621",
        "impact": {},
        "last-modified": "2024-07-15T03:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7432376c913381c5f24d373a87ff629bbde94b47",
            "https://git.kernel.org/stable/c/4ef9ad19e17676b9ef071309bc62020e2373705d",
            "https://git.kernel.org/stable/c/87632bc9ecff5ded93433bc0fca428019bdd1cfe",
            "https://zolutal.github.io/aslrnt/",
            "http://www.openwall.com/lists/oss-security/2024/07/08/3",
            "http://www.openwall.com/lists/oss-security/2024/07/08/5",
            "http://www.openwall.com/lists/oss-security/2024/07/08/4",
            "http://www.openwall.com/lists/oss-security/2024/07/08/6",
            "http://www.openwall.com/lists/oss-security/2024/07/08/7",
            "http://www.openwall.com/lists/oss-security/2024/07/08/8",
            "http://www.openwall.com/lists/oss-security/2024/07/09/1",
            "http://www.openwall.com/lists/oss-security/2024/07/10/5",
            "http://www.openwall.com/lists/oss-security/2024/07/10/7",
            "http://www.openwall.com/lists/oss-security/2024/07/10/8",
            "http://www.openwall.com/lists/oss-security/2024/07/11/4",
            "http://www.openwall.com/lists/oss-security/2024/07/11/5",
            "http://www.openwall.com/lists/oss-security/2024/07/11/7",
            "http://www.openwall.com/lists/oss-security/2024/07/12/3",
            "http://www.openwall.com/lists/oss-security/2024/07/13/2",
            "http://www.openwall.com/lists/oss-security/2024/07/13/7",
            "http://www.openwall.com/lists/oss-security/2024/07/15/2",
            "http://www.openwall.com/lists/oss-security/2024/07/15/1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: huge_memory: don't force huge page alignment on 32 bit\n\ncommit efa7df3e3bb5 (\"mm: align larger anonymous mappings on THP\nboundaries\") caused two issues [1] [2] reported on 32 bit system or compat\nuserspace.\n\nIt doesn't make too much sense to force huge page alignment on 32 bit\nsystem due to the constrained virtual address space.\n\n[1] https://lore.kernel.org/linux-mm/d0a136a0-4a31-46bc-adf4-2db109a61672@kernel.org/\n[2] https://lore.kernel.org/linux-mm/CAJuCfpHXLdQy1a2B6xN2d7quTYwg2OoZseYPZTRpU0eHHKD-sQ@mail.gmail.com/"
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2024-07-15T02:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-39728",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/295967"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 is vulnerable to stored cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session.  IBM X-Force ID:  295967."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2024-07-15T02:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-39731",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/295970"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.  IBM X-Force ID:  295970."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2024-07-15T02:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-644",
        "id": "CVE-2024-39736",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296003"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers. This could allow an attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking. IBM X-Force ID: 296003."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2024-07-15T02:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-209",
        "id": "CVE-2024-39737",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296004"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser.  This information could be used in further attacks against the system.  IBM X-Force ID:  296004."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2024-07-15T02:15:00",
        "access": {},
        "assigner": "psirt@us.ibm.com",
        "cvss": null,
        "cwe": "CWE-918",
        "id": "CVE-2024-39739",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://www.ibm.com/support/pages/node/7160185",
            "https://exchange.xforce.ibmcloud.com/vulnerabilities/296008"
        ],
        "summary": "IBM Datacap Navigator 9.1.5, 9.1.6, 9.1.7, 9.1.8, and 9.1.9 is vulnerable to server-side request forgery (SSRF). This may allow an authenticated attacker to send unauthorized requests from the system, potentially leading to network enumeration or facilitating other attacks.  IBM X-Force ID:  296008."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-44460",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107685"
        ],
        "summary": "Improper access control in Odoo Community 13.0 and earlier and Odoo Enterprise 13.0 and earlier allows users with deactivated accounts to access the system with the deactivated account and any permission it still holds, via crafted RPC requests."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-44465",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107692"
        ],
        "summary": "Improper access control in Odoo Community 13.0 and earlier and Odoo Enterprise 13.0 and earlier allows authenticated attackers to subscribe to receive future notifications and comments related to arbitrary business records in the system, via crafted RPC requests."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-44547",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107696"
        ],
        "summary": "A sandboxing issue in Odoo Community 15.0 and Odoo Enterprise 15.0 allows authenticated administrators to executed arbitrary code, leading to privilege escalation."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-23166",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107687",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "A sandboxing issue in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows authenticated administrators to read and write local files on the server."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2021-44461",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107686"
        ],
        "summary": "Cross-site scripting (XSS) issue in Accounting app of Odoo Enterprise 13.0 through 15.0, allows remote attackers who are able to control the contents of accounting journal entries to inject arbitrary web script in the browser of a victim."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-23176",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107682",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Improper access control in reporting engine of l10n_fr_fec module in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows remote authenticated users to extract accounting information via crafted RPC packets."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-23178",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107690",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Improper access control in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows attackers to validate online payments with a tokenized payment method that belongs to another user, causing the victim's payment method to be charged instead."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-23186",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107688",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "A sandboxing issue in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows authenticated administrators to access and modify database contents of other tenants, in a multi-tenant system."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2021-23203",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107695",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Improper access control in reporting engine of Odoo Community 14.0 through 15.0, and Odoo Enterprise 14.0 through 15.0, allows remote attackers to download PDF reports for arbitrary documents, via crafted requests."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2021-26263",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107693",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Cross-site scripting (XSS) issue in Discuss app of Odoo Community 14.0 through 15.0, and Odoo Enterprise 14.0 through 15.0, allows remote attackers to inject arbitrary web script in the browser of a victim, by posting crafted contents."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2021-26947",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107694",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Cross-site scripting (XSS) issue Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier, allows remote attackers to inject arbitrary web script in the browser of a victim, via a crafted link."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-44476",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107684",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "A sandboxing issue in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows authenticated administrators to read local files on the server, including sensitive configuration files."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2021-44775",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107691",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Cross-site scripting (XSS) issue in Website app of Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier, allows remote attackers to inject arbitrary web script in the browser of a victim, by posting crafted contents."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2021-45071",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107697",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Cross-site scripting (XSS) issue Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier, allows remote attackers to inject arbitrary web script in the browser of a victim, via crafted uploaded file names."
    },
    {
        "Modified": "2024-07-15T02:15:00",
        "Published": "2023-04-25T19:15:00",
        "access": {},
        "assigner": "security@odoo.com",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-45111",
        "impact": {},
        "last-modified": "2024-07-15T02:15:00",
        "references": [
            "https://github.com/odoo/odoo/issues/107683",
            "https://www.debian.org/security/2023/dsa-5399"
        ],
        "summary": "Improper access control in Odoo Community 15.0 and earlier and Odoo Enterprise 15.0 and earlier allows remote authenticated users to trigger the creation of demonstration data, including user accounts with known credentials."
    },
    {
        "Modified": "2024-07-15T01:15:00",
        "Published": "2024-07-15T01:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-94",
        "id": "CVE-2024-6345",
        "impact": {},
        "last-modified": "2024-07-15T01:15:00",
        "references": [
            "https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5",
            "https://github.com/pypa/setuptools/commit/88807c7062788254f654ea8c03427adc859321f0"
        ],
        "summary": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0."
    },
    {
        "Modified": "2024-07-15T01:15:00",
        "Published": "2024-07-15T01:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6736",
        "impact": {},
        "last-modified": "2024-07-15T01:15:00",
        "references": [
            "https://vuldb.com/?id.271457",
            "https://vuldb.com/?ctiid.271457",
            "https://vuldb.com/?submit.374485",
            "https://github.com/ljllll123/cve/blob/main/sql.md"
        ],
        "summary": "A vulnerability was found in SourceCodester Employee and Visitor Gate Pass Logging System 1.0. It has been rated as critical. This issue affects some unknown processing of the file view_employee.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-271457 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-07-15T00:15:00",
        "Published": "2024-07-15T00:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6735",
        "impact": {},
        "last-modified": "2024-07-15T00:15:00",
        "references": [
            "https://vuldb.com/?id.271456",
            "https://vuldb.com/?ctiid.271456",
            "https://vuldb.com/?submit.374516",
            "https://github.com/xzyxiaohaha/cve/issues/1"
        ],
        "summary": "A vulnerability was found in itsourcecode Tailoring Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file setgeneral.php. The manipulation of the argument sitename/email/mobile/sms/currency leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-271456."
    },
    {
        "Modified": "2024-07-15T00:15:00",
        "Published": "2024-07-15T00:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6734",
        "impact": {},
        "last-modified": "2024-07-15T00:15:00",
        "references": [
            "https://vuldb.com/?id.271455",
            "https://vuldb.com/?ctiid.271455",
            "https://vuldb.com/?submit.374464",
            "https://github.com/jiaoyanshuai/cve/issues/2"
        ],
        "summary": "A vulnerability was found in itsourcecode Tailoring Management System 1.0. It has been classified as critical. This affects an unknown part of the file templateadd.php. The manipulation of the argument title/msg leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-271455."
    },
    {
        "Modified": "2024-07-14T23:15:00",
        "Published": "2024-07-14T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6732",
        "impact": {},
        "last-modified": "2024-07-14T23:15:00",
        "references": [
            "https://vuldb.com/?id.271450",
            "https://vuldb.com/?ctiid.271450",
            "https://vuldb.com/?submit.374370",
            "https://reports-kunull.vercel.app/CVE%20research/Student-study-center-desk-management-system-save_user"
        ],
        "summary": "A vulnerability classified as critical was found in SourceCodester Student Study Center Desk Management System 1.0. This vulnerability affects unknown code of the file /sscdms/classes/Users.php?f=save. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-271450 is the identifier assigned to this vulnerability."
    },
    {
        "Modified": "2024-07-14T23:15:00",
        "Published": "2024-07-14T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6733",
        "impact": {},
        "last-modified": "2024-07-14T23:15:00",
        "references": [
            "https://vuldb.com/?id.271454",
            "https://vuldb.com/?ctiid.271454",
            "https://vuldb.com/?submit.374463",
            "https://github.com/jiaoyanshuai/cve/issues/1"
        ],
        "summary": "A vulnerability was found in itsourcecode Tailoring Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file templateedit.php. The manipulation of the argument id/title/msg leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-271454 is the identifier assigned to this vulnerability."
    },
    {
        "Modified": "2024-07-14T22:15:00",
        "Published": "2024-07-14T22:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6731",
        "impact": {},
        "last-modified": "2024-07-14T22:15:00",
        "references": [
            "https://vuldb.com/?id.271449",
            "https://vuldb.com/?ctiid.271449",
            "https://vuldb.com/?submit.374362",
            "https://reports-kunull.vercel.app/CVE%20research/student-study-center-desk-management-system-save_student"
        ],
        "summary": "A vulnerability classified as critical has been found in SourceCodester Student Study Center Desk Management System 1.0. This affects an unknown part of the file /Master.php?f=save_student. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-271449 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-07-14T22:15:00",
        "Published": "2024-04-04T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-526",
        "id": "CVE-2024-2700",
        "impact": {},
        "last-modified": "2024-07-14T22:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-2700",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2273281",
            "https://access.redhat.com/errata/RHSA-2024:2705",
            "https://access.redhat.com/errata/RHSA-2024:3527",
            "https://access.redhat.com/errata/RHSA-2024:4028",
            "https://access.redhat.com/errata/RHSA-2024:2106"
        ],
        "summary": "A vulnerability was found in the quarkus-core component. Quarkus captures local environment variables from the Quarkus namespace during the application's build, therefore, running the resulting application inherits the values captured at build time. Some local environment variables may have been set by the developer or CI environment for testing purposes, such as dropping the database during application startup or trusting all TLS certificates to accept self-signed certificates. If these properties are configured using environment variables or the .env facility, they are captured into the built application, which can lead to dangerous behavior if the application does not override these values. This behavior only happens for configuration properties from the `quarkus.*` namespace. Application-specific properties are not captured."
    },
    {
        "Modified": "2024-07-14T19:15:00",
        "Published": "2024-04-04T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31082",
        "impact": {},
        "last-modified": "2024-07-14T19:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-31082",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2271999",
            "http://www.openwall.com/lists/oss-security/2024/04/03/13",
            "http://www.openwall.com/lists/oss-security/2024/04/12/10",
            "https://lists.x.org/archives/xorg-announce/2024-April/003497.html"
        ],
        "summary": "A heap-based buffer over-read vulnerability was found in the X.org server's ProcAppleDRICreatePixmap() function. This issue occurs when byte-swapped length values are used in replies, potentially leading to memory leakage and segmentation faults, particularly when triggered by a client with a different endianness. This vulnerability could be exploited by an attacker to cause the X server to read heap memory values and then transmit them back to the client until encountering an unmapped page, resulting in a crash. Despite the attacker's inability to control the specific memory copied into the replies, the small length values typically stored in a 32-bit integer can result in significant attempted out-of-bounds reads."
    }
]