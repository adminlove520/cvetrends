[
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5012",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, there is a\u00a0missing authentication vulnerability in WUGDataAccess.Credentials. This\u00a0vulnerability allows\u00a0unauthenticated attackers to disclose Windows Credentials stored in the product Credential Library."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5013",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0an unauthenticated Denial of Service \n\nvulnerability was identified.\u00a0An unauthenticated attacker can put the application into the SetAdminPassword installation step, which renders the application non-accessible."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5014",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, a Server Side Request Forgery vulnerability exists in the\u00a0GetASPReport feature. This allows any authenticated user to retrieve ASP reports from an HTML form."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5015",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0an authenticated SSRF vulnerability in Wug.UI.Areas.Wug.Controllers.SessionControler.Update allows a low privileged user to chain this SSRF with an Improper Access Control vulnerability. This can be used to escalate privileges to Admin."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5016",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, Distributed Edition installations can be exploited by using a deserialization\u00a0tool to achieve a Remote Code Execution as SYSTEM.\u00a0\nThe vulnerability exists in the main message processing routines\u00a0NmDistributed.DistributedServiceBehavior.OnMessage for server and NmDistributed.DistributedClient.OnMessage for clients."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5017",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, a path traversal vulnerability exists.\u00a0A specially crafted unauthenticated HTTP request\u00a0to AppProfileImport can lead can lead to information disclosure."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5018",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, an unauthenticated Path Traversal vulnerability exists Wug.UI.Areas.Wug.Controllers.SessionController.LoadNMScript. This allows allows reading of any file from the applications web-root directory ."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T21:16:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5019",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0\n\nan unauthenticated Arbitrary File Read issue exists in Wug.UI.Areas.Wug.Controllers.SessionController.CachedCSS. This\u00a0vulnerability allows reading of any file with iisapppool\\NmConsole privileges."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-25T17:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6308",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://vuldb.com/?id.269620",
            "https://vuldb.com/?ctiid.269620",
            "https://vuldb.com/?submit.363955",
            "https://github.com/L1OudFd8cl09/CVE/blob/main/25_06_2024_a.md"
        ],
        "summary": "A vulnerability was found in itsourcecode Simple Online Hotel Reservation System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file index.php. The manipulation of the argument username leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269620."
    },
    {
        "Modified": "2024-06-25T21:16:00",
        "Published": "2024-06-20T12:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-78",
        "id": "CVE-2024-6185",
        "impact": {},
        "last-modified": "2024-06-25T21:16:00",
        "references": [
            "https://vuldb.com/?id.269156",
            "https://vuldb.com/?ctiid.269156",
            "https://vuldb.com/?submit.354121",
            "https://github.com/L1OudFd8cl09/CVE/blob/main/11_06_2024_b.md"
        ],
        "summary": "A vulnerability, which was classified as critical, has been found in Ruijie RG-UAC 1.0. Affected by this issue is the function get_ip_addr_details of the file /view/dhcp/dhcpConfig/commit.php. The manipulation of the argument ethname leads to os command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269156. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-21741",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://tches.iacr.org/index.php/TCHES/article/view/11422/10927"
        ],
        "summary": "GigaDevice GD32E103C8T6 devices have Incorrect Access Control."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35526",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://bastionsecurity.co.nz/advisories/farcry-core-multiple.html"
        ],
        "summary": "An issue in Daemon PTY Limited FarCry Core framework before 7.2.14 allows attackers to access sensitive information in the /facade directory."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37843",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql"
        ],
        "summary": "Craft CMS up to v3.7.31 was discovered to contain a SQL injection vulnerability via the GraphQL API endpoint."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37855",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://github.com/sudo-subho/nepstech-xpon-router-rce"
        ],
        "summary": "An issue in Nepstech Wifi Router xpon (terminal) NTPL-Xpon1GFEVN, hardware verstion 1.0 firmware 2.0.1 allows a remote attacker to execute arbitrary code via the router's Telnet port 2345 without requiring authentication credentials."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38516",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://github.com/aimeos/ai-client-html/security/advisories/GHSA-ppm5-jv84-2xg2",
            "https://github.com/aimeos/ai-client-html/commit/bb389620ffc3cf4a2f29c11a1e5f512049e0c132"
        ],
        "summary": "ai-client-html is an Aimeos e-commerce HTML client component. Debug information revealed sensitive information from environment variables in error log. This issue has been patched in versions 2024.04.7, 2023.10.15, 2022.10.13 and 2021.10.22."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26727",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3f5d47eb163bceb1b9e613c9003bae5fefc0046f",
            "https://git.kernel.org/stable/c/e31546b0f34af21738c4ceac47d662c00ee6382f",
            "https://git.kernel.org/stable/c/66b317a2fc45b2ef66527ee3f8fa08fb5beab88d",
            "https://git.kernel.org/stable/c/833775656d447c545133a744a0ed1e189ce61430",
            "https://git.kernel.org/stable/c/5a172344bfdabb46458e03708735d7b1a918c468",
            "https://git.kernel.org/stable/c/e03ee2fe873eb68c1f9ba5112fee70303ebf9dfb",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not ASSERT() if the newly created subvolume already got read\n\n[BUG]\nThere is a syzbot crash, triggered by the ASSERT() during subvolume\ncreation:\n\n assertion failed: !anon_dev, in fs/btrfs/disk-io.c:1319\n ------------[ cut here ]------------\n kernel BUG at fs/btrfs/disk-io.c:1319!\n invalid opcode: 0000 [#1] PREEMPT SMP KASAN\n RIP: 0010:btrfs_get_root_ref.part.0+0x9aa/0xa60\n  <TASK>\n  btrfs_get_new_fs_root+0xd3/0xf0\n  create_subvol+0xd02/0x1650\n  btrfs_mksubvol+0xe95/0x12b0\n  __btrfs_ioctl_snap_create+0x2f9/0x4f0\n  btrfs_ioctl_snap_create+0x16b/0x200\n  btrfs_ioctl+0x35f0/0x5cf0\n  __x64_sys_ioctl+0x19d/0x210\n  do_syscall_64+0x3f/0xe0\n  entry_SYSCALL_64_after_hwframe+0x63/0x6b\n ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nDuring create_subvol(), after inserting root item for the newly created\nsubvolume, we would trigger btrfs_get_new_fs_root() to get the\nbtrfs_root of that subvolume.\n\nThe idea here is, we have preallocated an anonymous device number for\nthe subvolume, thus we can assign it to the new subvolume.\n\nBut there is really nothing preventing things like backref walk to read\nthe new subvolume.\nIf that happens before we call btrfs_get_new_fs_root(), the subvolume\nwould be read out, with a new anonymous device number assigned already.\n\nIn that case, we would trigger ASSERT(), as we really expect no one to\nread out that subvolume (which is not yet accessible from the fs).\nBut things like backref walk is still possible to trigger the read on\nthe subvolume.\n\nThus our assumption on the ASSERT() is not correct in the first place.\n\n[FIX]\nFix it by removing the ASSERT(), and just free the @anon_dev, reset it\nto 0, and continue.\n\nIf the subvolume tree is read out by something else, it should have\nalready get a new anon_dev assigned thus we only need to free the\npreallocated one."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-03T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26748",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aad6132ae6e4809e375431f8defd1521985e44e7",
            "https://git.kernel.org/stable/c/1e204a8e9eb514e22a6567fb340ebb47df3f3a48",
            "https://git.kernel.org/stable/c/3a2a909942b5335b7ea66366d84261b3ed5f89c8",
            "https://git.kernel.org/stable/c/9a52b694b066f299d8b9800854a8503457a8b64c",
            "https://git.kernel.org/stable/c/70e8038813f9d3e72df966748ebbc40efe466019",
            "https://git.kernel.org/stable/c/92d20406a3d4ff3e8be667c79209dc9ed31df5b3",
            "https://git.kernel.org/stable/c/5fd9e45f1ebcd57181358af28506e8a661a260b3",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdns3: fix memory double free when handle zero packet\n\n829  if (request->complete) {\n830          spin_unlock(&priv_dev->lock);\n831          usb_gadget_giveback_request(&priv_ep->endpoint,\n832                                    request);\n833          spin_lock(&priv_dev->lock);\n834  }\n835\n836  if (request->buf == priv_dev->zlp_buf)\n837      cdns3_gadget_ep_free_request(&priv_ep->endpoint, request);\n\nDriver append an additional zero packet request when queue a packet, which\nlength mod max packet size is 0. When transfer complete, run to line 831,\nusb_gadget_giveback_request() will free this requestion. 836 condition is\ntrue, so cdns3_gadget_ep_free_request() free this request again.\n\nLog:\n\n[ 1920.140696][  T150] BUG: KFENCE: use-after-free read in cdns3_gadget_giveback+0x134/0x2c0 [cdns3]\n[ 1920.140696][  T150]\n[ 1920.151837][  T150] Use-after-free read at 0x000000003d1cd10b (in kfence-#36):\n[ 1920.159082][  T150]  cdns3_gadget_giveback+0x134/0x2c0 [cdns3]\n[ 1920.164988][  T150]  cdns3_transfer_completed+0x438/0x5f8 [cdns3]\n\nAdd check at line 829, skip call usb_gadget_giveback_request() if it is\nadditional zero length packet request. Needn't call\nusb_gadget_giveback_request() because it is allocated in this driver."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-21739",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://tches.iacr.org/index.php/TCHES/article/view/11422/10927"
        ],
        "summary": "Geehy APM32F103CCT6, APM32F103RCT6, APM32F103RCT7, and APM32F103VCT6 devices have Incorrect Access Control."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-21740",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://tches.iacr.org/index.php/TCHES/article/view/11422/10927"
        ],
        "summary": "Artery AT32F415CBT7 and AT32F421C8T7 devices have Incorrect Access Control."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-25T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34400",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://download.virtosoftware.com/Manuals/nu_ncsc_virto_one_kanban_board_5.3.3_pt_disclosure.pdf"
        ],
        "summary": "An issue was discovered in VirtoSoftware Virto Kanban Board Web Part before 5.3.5.1 for SharePoint 2019. There is /_layouts/15/Virto.KanbanTaskManager/api/KanbanData.ashx LinkTitle2 XSS."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-03T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26720",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c593d26fb5d577ef31b6e49a31e08ae3ebc1bc1e",
            "https://git.kernel.org/stable/c/1f12e4b3284d6c863f272eb2de0d4248ed211cf4",
            "https://git.kernel.org/stable/c/81e7d2530d458548b90a5c5e76b77ad5e5d1c0df",
            "https://git.kernel.org/stable/c/5099871b370335809c0fd1abad74d9c7c205d43f",
            "https://git.kernel.org/stable/c/16b1025eaa8fc223ab4273ece20d1c3a4211a95d",
            "https://git.kernel.org/stable/c/ec18ec230301583395576915d274b407743d8f6c",
            "https://git.kernel.org/stable/c/65977bed167a92e87085e757fffa5798f7314c9f",
            "https://git.kernel.org/stable/c/9319b647902cbd5cc884ac08a8a6d54ce111fc78",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\n\n(struct dirty_throttle_control *)->thresh is an unsigned long, but is\npassed as the u32 divisor argument to div_u64().  On architectures where\nunsigned long is 64 bytes, the argument will be implicitly truncated.\n\nUse div64_u64() instead of div_u64() so that the value used in the \"is\nthis a safe division\" check is the same as the divisor.\n\nAlso, remove redundant cast of the numerator to u64, as that should happen\nimplicitly.\n\nThis would be difficult to exploit in memcg domain, given the ratio-based\narithmetic domain_drity_limits() uses, but is much easier in global\nwriteback domain with a BDI_CAP_STRICTLIMIT-backing device, using e.g. \nvm.dirty_bytes=(1<<32)*PAGE_SIZE so that dtc->thresh == (1<<32)"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-49928",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/"
        ],
        "summary": "An issue was discovered in Samsung Mobile Processor, Wearable Processor, and Modem Exynos 980, Exynos 990, Exynos 850, Exynos 1080, Exynos 2100, Exynos 2200, Exynos 1280, Exynos 1380, Exynos 1330, Exynos 9110, Exynos W920, Exynos Modem 5123, Exynos Modem 5300. The baseband software does not properly check states specified by the RRC. This can lead to disclosure of sensitive information."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-06-05T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-50803",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://semiconductor.samsung.com/support/quality-support/product-security-updates/"
        ],
        "summary": "An issue was discovered in Samsung Mobile Processor, and Modem Exynos 9820, Exynos 9825, Exynos 980, Exynos 990, Exynos 850, Exynos 1080, Exynos 2100, Exynos 2200, Exynos 1280, Exynos 1380, Exynos 1330, Exynos Modem 5123, Exynos Modem 5300. The baseband software does not properly check replay protection specified by the NAS (Non-Access-Stratum) module. This can lead to denial of service."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35958",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b26aa765f7437e1bbe8db4c1641b12bd5dd378f0",
            "https://git.kernel.org/stable/c/fdfbf54d128ab6ab255db138488f9650485795a2",
            "https://git.kernel.org/stable/c/19ff8fed3338898b70b2aad831386c78564912e1",
            "https://git.kernel.org/stable/c/5c7f2240d9835a7823d87f7460d8eae9f4e504c7",
            "https://git.kernel.org/stable/c/c31baa07f01307b7ae05f3ce32b89d8e2ba0cc1d",
            "https://git.kernel.org/stable/c/bf02d9fe00632d22fa91d34749c7aacf397b6cde",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36005",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e4bb6da24de336a7899033a65490ed2d892efa5b",
            "https://git.kernel.org/stable/c/5c45feb3c288cf44a529e2657b36c259d86497d2",
            "https://git.kernel.org/stable/c/13ba94f6cc820fdea15efeaa17d4c722874eebf9",
            "https://git.kernel.org/stable/c/8260c980aee7d8d8a3db39faf19c391d2f898816",
            "https://git.kernel.org/stable/c/ca34c40d1c22c555fa7f4a21a1c807fea7290a0a",
            "https://git.kernel.org/stable/c/8e30abc9ace4f0add4cd761dfdbfaebae5632dd2",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: honor table dormant flag from netdev release event path\n\nCheck for table dormant flag otherwise netdev release event path tries\nto unregister an already unregistered hook.\n\n[524854.857999] ------------[ cut here ]------------\n[524854.858010] WARNING: CPU: 0 PID: 3386599 at net/netfilter/core.c:501 __nf_unregister_net_hook+0x21a/0x260\n[...]\n[524854.858848] CPU: 0 PID: 3386599 Comm: kworker/u32:2 Not tainted 6.9.0-rc3+ #365\n[524854.858869] Workqueue: netns cleanup_net\n[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a/0x260\n[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff <0f> 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41\n[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246\n[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a\n[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438\n[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34\n[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005\n[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00\n[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0\n[524854.859000] Call Trace:\n[524854.859006]  <TASK>\n[524854.859013]  ? __warn+0x9f/0x1a0\n[524854.859027]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859044]  ? report_bug+0x1b1/0x1e0\n[524854.859060]  ? handle_bug+0x3c/0x70\n[524854.859071]  ? exc_invalid_op+0x17/0x40\n[524854.859083]  ? asm_exc_invalid_op+0x1a/0x20\n[524854.859100]  ? __nf_unregister_net_hook+0x6a/0x260\n[524854.859116]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859135]  nf_tables_netdev_event+0x337/0x390 [nf_tables]\n[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859461]  ? packet_notifier+0xb3/0x360\n[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11/0x40\n[524854.859489]  ? dcbnl_netdevice_event+0x35/0x140\n[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859661]  notifier_call_chain+0x7d/0x140\n[524854.859677]  unregister_netdevice_many_notify+0x5e1/0xae0"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-19T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35922",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1fb52bc1de55e9e0bdf71fe078efd4da0889710f",
            "https://git.kernel.org/stable/c/72d091b7515e0532ee015e144c906f3bcfdd6270",
            "https://git.kernel.org/stable/c/951838fee462aa01fa2a6a91d56f9a495082e7f0",
            "https://git.kernel.org/stable/c/48d6bcfc31751ca2e753d901a2d82f27edf8a029",
            "https://git.kernel.org/stable/c/664206ff8b019bcd1e55b10b2eea3add8761b971",
            "https://git.kernel.org/stable/c/3d4b909704bf2114f64f87363fa22b5ef8ac4a33",
            "https://git.kernel.org/stable/c/1b107d637fed68a787da77a3514ad06e57abd0b4",
            "https://git.kernel.org/stable/c/c2d953276b8b27459baed1277a4fdd5dd9bd4126",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbmon: prevent division by zero in fb_videomode_from_videomode()\n\nThe expression htotal * vtotal can have a zero value on\noverflow. It is necessary to prevent division by zero like in\nfb_var_to_videomode().\n\nFound by Linux Verification Center (linuxtesting.org) with Svace."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-19T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35893",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f190a4aa03cbd518bd9c62a66e1233984f5fd2ec",
            "https://git.kernel.org/stable/c/f356eb2fb567e0931143ac1769ac802d3b3e2077",
            "https://git.kernel.org/stable/c/5e45dc4408857305f4685abfd7a528a1e58b51b5",
            "https://git.kernel.org/stable/c/a097fc199ab5f4b5392c5144034c0d2148b55a14",
            "https://git.kernel.org/stable/c/55d3fe7b2b7bc354e7cbc1f7b8f98a29ccd5a366",
            "https://git.kernel.org/stable/c/729ad2ac2a2cdc9f4a4bdfd40bfd276e6bc33924",
            "https://git.kernel.org/stable/c/7bb2c7103d8c13b06a57bf997b8cdbe93cd7283c",
            "https://git.kernel.org/stable/c/d313eb8b77557a6d5855f42d2234bd592c7b50dd",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_skbmod: prevent kernel-infoleak\n\nsyzbot found that tcf_skbmod_dump() was copying four bytes\nfrom kernel stack to user space [1].\n\nThe issue here is that 'struct tc_skbmod' has a four bytes hole.\n\nWe need to clear the structure before filling fields.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n BUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n  copy_to_user_iter lib/iov_iter.c:24 [inline]\n  iterate_ubuf include/linux/iov_iter.h:29 [inline]\n  iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n  iterate_and_advance include/linux/iov_iter.h:271 [inline]\n  _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  copy_to_iter include/linux/uio.h:196 [inline]\n  simple_copy_to_iter net/core/datagram.c:532 [inline]\n  __skb_datagram_iter+0x185/0x1000 net/core/datagram.c:420\n  skb_copy_datagram_iter+0x5c/0x200 net/core/datagram.c:546\n  skb_copy_datagram_msg include/linux/skbuff.h:4050 [inline]\n  netlink_recvmsg+0x432/0x1610 net/netlink/af_netlink.c:1962\n  sock_recvmsg_nosec net/socket.c:1046 [inline]\n  sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n  __sys_recvfrom+0x35a/0x5f0 net/socket.c:2242\n  __do_sys_recvfrom net/socket.c:2260 [inline]\n  __se_sys_recvfrom net/socket.c:2256 [inline]\n  __x64_sys_recvfrom+0x126/0x1d0 net/socket.c:2256\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  pskb_expand_head+0x30f/0x19d0 net/core/skbuff.c:2253\n  netlink_trim+0x2c2/0x330 net/netlink/af_netlink.c:1317\n  netlink_unicast+0x9f/0x1260 net/netlink/af_netlink.c:1351\n  nlmsg_unicast include/net/netlink.h:1144 [inline]\n  nlmsg_notify+0x21d/0x2f0 net/netlink/af_netlink.c:2610\n  rtnetlink_send+0x73/0x90 net/core/rtnetlink.c:741\n  rtnetlink_maybe_send include/linux/rtnetlink.h:17 [inline]\n  tcf_add_notify net/sched/act_api.c:2048 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x146e/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2559\n  rtnetlink_rcv+0x34/0x40 net/core/rtnetlink.c:6613\n  netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n  netlink_unicast+0xf4c/0x1260 net/netlink/af_netlink.c:1361\n  netlink_sendmsg+0x10df/0x11f0 net/netlink/af_netlink.c:1905\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n  __sys_sendmsg net/socket.c:2667 [inline]\n  __do_sys_sendmsg net/socket.c:2676 [inline]\n  __se_sys_sendmsg net/socket.c:2674 [inline]\n  __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2674\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  __nla_put lib/nlattr.c:1041 [inline]\n  nla_put+0x1c6/0x230 lib/nlattr.c:1099\n  tcf_skbmod_dump+0x23f/0xc20 net/sched/act_skbmod.c:256\n  tcf_action_dump_old net/sched/act_api.c:1191 [inline]\n  tcf_action_dump_1+0x85e/0x970 net/sched/act_api.c:1227\n  tcf_action_dump+0x1fd/0x460 net/sched/act_api.c:1251\n  tca_get_fill+0x519/0x7a0 net/sched/act_api.c:1628\n  tcf_add_notify_msg net/sched/act_api.c:2023 [inline]\n  tcf_add_notify net/sched/act_api.c:2042 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x1365/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netli\n---truncated---"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52686",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8422d179cf46889c15ceff9ede48c5bfa4e7f0b4",
            "https://git.kernel.org/stable/c/e93d7cf4c1ddbcd846739e7ad849f955a4f18031",
            "https://git.kernel.org/stable/c/e6ad05e3ae9c84c5a71d7bb2d44dc845ae7990cf",
            "https://git.kernel.org/stable/c/c0b111ea786ddcc8be0682612830796ece9436c7",
            "https://git.kernel.org/stable/c/9a523e1da6d88c2034f946adfa4f74b236c95ca9",
            "https://git.kernel.org/stable/c/a14c55eb461d630b836f80591d8caf1f74e62877",
            "https://git.kernel.org/stable/c/e08c2e275fa1874de945b87093f925997722ee42",
            "https://git.kernel.org/stable/c/8649829a1dd25199bbf557b2621cedb4bf9b3050",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_event_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52696",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9da4a56dd3772570512ca58aa8832b052ae910dc",
            "https://git.kernel.org/stable/c/a67a04ad05acb56640798625e73fa54d6d41cce1",
            "https://git.kernel.org/stable/c/6b58d16037217d0c64a2a09b655f370403ec7219",
            "https://git.kernel.org/stable/c/f152a6bfd187f67afeffc9fd68cbe46f51439be0",
            "https://git.kernel.org/stable/c/69f95c5e9220f77ce7c540686b056c2b49e9a664",
            "https://git.kernel.org/stable/c/b02ecc35d01a76b4235e008d2dd292895b28ecab",
            "https://git.kernel.org/stable/c/e123015c0ba859cf48aa7f89c5016cc6e98e018d",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_powercap_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52690",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f84c1446daa552e9699da8d1f8375eac0f65edc7",
            "https://git.kernel.org/stable/c/1eefa93faf69188540b08b024794fa90b1d82e8b",
            "https://git.kernel.org/stable/c/2a82c4439b903639e0a1f21990cd399fb0a49c19",
            "https://git.kernel.org/stable/c/ed8d023cfa97b559db58c0e1afdd2eec7a83d8f2",
            "https://git.kernel.org/stable/c/dd8422ff271c22058560832fc3006324ded895a9",
            "https://git.kernel.org/stable/c/a9c05cbb6644a2103c75b6906e9dafb9981ebd13",
            "https://git.kernel.org/stable/c/9a260f2dd827bbc82cc60eb4f4d8c22707d80742",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check to scom_debug_init_one()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.\nAdd a null pointer check, and release 'ent' to avoid memory leaks."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T14:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35819",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2b3fede8225133671ce837c0d284804aa3bc7a02",
            "https://git.kernel.org/stable/c/ff50716b7d5b7985979a5b21163cd79fb3d21d59",
            "https://git.kernel.org/stable/c/32edca2f03a6cc42c650ddc3ad83d086e3f365d1",
            "https://git.kernel.org/stable/c/9a3ca8292ce9fdcce122706c28c3f07bc857fe5e",
            "https://git.kernel.org/stable/c/d6b5aac451c9cc12e43ab7308e0e2ddc52c62c14",
            "https://git.kernel.org/stable/c/54d26adf64c04f186098b39dba86b86037084baa",
            "https://git.kernel.org/stable/c/f39d36b7540cf0088ed7ce2de2794f2aa237f6df",
            "https://git.kernel.org/stable/c/cd53a8ae5aacb4ecd25088486dea1cd02e74b506",
            "https://git.kernel.org/stable/c/fbec4e7fed89b579f2483041fabf9650fb0dd6bc",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: fsl: qbman: Use raw spinlock for cgr_lock\n\nsmp_call_function always runs its callback in hard IRQ context, even on\nPREEMPT_RT, where spinlocks can sleep. So we need to use a raw spinlock\nfor cgr_lock to ensure we aren't waiting on a sleeping task.\n\nAlthough this bug has existed for a while, it was not apparent until\ncommit ef2a8d5478b9 (\"net: dpaa: Adjust queue depth on rate change\")\nwhich invokes smp_call_function_single via qman_update_cgr_safe every\ntime a link goes up or down."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52698",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9a8f811a146aa2a0230f8edb2e9f4b6609aab8da",
            "https://git.kernel.org/stable/c/36e19f84634aaa94f543fedc0a07588949638d53",
            "https://git.kernel.org/stable/c/44a88650ba55e6a7f2ec485d2c2413ba7e216f01",
            "https://git.kernel.org/stable/c/a4529a08d3704c17ea9c7277d180e46b99250ded",
            "https://git.kernel.org/stable/c/321b3a5592c8a9d6b654c7c64833ea67dbb33149",
            "https://git.kernel.org/stable/c/408bbd1e1746fe33e51f4c81c2febd7d3841d031",
            "https://git.kernel.org/stable/c/f14d36e6e97fe935a20e0ceb159c100f90b6627c",
            "https://git.kernel.org/stable/c/ec4e9d630a64df500641892f4e259e8149594a99",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: fix memory leak in netlbl_calipso_add_pass()\n\nIf IPv6 support is disabled at boot (ipv6.disable=1),\nthe calipso_init() -> netlbl_calipso_ops_register() function isn't called,\nand the netlbl_calipso_ops_get() function always returns NULL.\nIn this case, the netlbl_calipso_add_pass() function allocates memory\nfor the doi_def variable but doesn't free it with the calipso_doi_free().\n\nBUG: memory leak\nunreferenced object 0xffff888011d68180 (size 64):\n  comm \"syz-executor.1\", pid 10746, jiffies 4295410986 (age 17.928s)\n  hex dump (first 32 bytes):\n    00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<...>] kmalloc include/linux/slab.h:552 [inline]\n    [<...>] netlbl_calipso_add_pass net/netlabel/netlabel_calipso.c:76 [inline]\n    [<...>] netlbl_calipso_add+0x22e/0x4f0 net/netlabel/netlabel_calipso.c:111\n    [<...>] genl_family_rcv_msg_doit+0x22f/0x330 net/netlink/genetlink.c:739\n    [<...>] genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]\n    [<...>] genl_rcv_msg+0x341/0x5a0 net/netlink/genetlink.c:800\n    [<...>] netlink_rcv_skb+0x14d/0x440 net/netlink/af_netlink.c:2515\n    [<...>] genl_rcv+0x29/0x40 net/netlink/genetlink.c:811\n    [<...>] netlink_unicast_kernel net/netlink/af_netlink.c:1313 [inline]\n    [<...>] netlink_unicast+0x54b/0x800 net/netlink/af_netlink.c:1339\n    [<...>] netlink_sendmsg+0x90a/0xdf0 net/netlink/af_netlink.c:1934\n    [<...>] sock_sendmsg_nosec net/socket.c:651 [inline]\n    [<...>] sock_sendmsg+0x157/0x190 net/socket.c:671\n    [<...>] ____sys_sendmsg+0x712/0x870 net/socket.c:2342\n    [<...>] ___sys_sendmsg+0xf8/0x170 net/socket.c:2396\n    [<...>] __sys_sendmsg+0xea/0x1b0 net/socket.c:2429\n    [<...>] do_syscall_64+0x30/0x40 arch/x86/entry/common.c:46\n    [<...>] entry_SYSCALL_64_after_hwframe+0x61/0xc6\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller\n\n[PM: merged via the LSM tree at Jakub Kicinski request]"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35852",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/51cefc9da400b953fee749c9e5d26cd4a2b5d758",
            "https://git.kernel.org/stable/c/857ed800133ffcfcee28582090b63b0cbb8ba59d",
            "https://git.kernel.org/stable/c/63d814d93c5cce4c18284adc810028f28dca493f",
            "https://git.kernel.org/stable/c/5bfe7bf9656ed2633718388f12b7c38b86414a04",
            "https://git.kernel.org/stable/c/de1aaefa75be9d0ec19c9a3e0e2f9696de20c6ab",
            "https://git.kernel.org/stable/c/d72dd6fcd7886d0523afbab8b4a4b22d17addd7d",
            "https://git.kernel.org/stable/c/fb4e2b70a7194b209fc7320bbf33b375f7114bd5",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix memory leak when canceling rehash work\n\nThe rehash delayed work is rescheduled with a delay if the number of\ncredits at end of the work is not negative as supposedly it means that\nthe migration ended. Otherwise, it is rescheduled immediately.\n\nAfter \"mlxsw: spectrum_acl_tcam: Fix possible use-after-free during\nrehash\" the above is no longer accurate as a non-negative number of\ncredits is no longer indicative of the migration being done. It can also\nhappen if the work encountered an error in which case the migration will\nresume the next time the work is scheduled.\n\nThe significance of the above is that it is possible for the work to be\npending and associated with hints that were allocated when the migration\nstarted. This leads to the hints being leaked [1] when the work is\ncanceled while pending as part of ACL region dismantle.\n\nFix by freeing the hints if hints are associated with a work that was\ncanceled while pending.\n\nBlame the original commit since the reliance on not having a pending\nwork associated with hints is fragile.\n\n[1]\nunreferenced object 0xffff88810e7c3000 (size 256):\n  comm \"kworker/0:16\", pid 176, jiffies 4295460353\n  hex dump (first 32 bytes):\n    00 30 95 11 81 88 ff ff 61 00 00 00 00 00 00 80  .0......a.......\n    00 00 61 00 40 00 00 00 00 00 00 00 04 00 00 00  ..a.@...........\n  backtrace (crc 2544ddb9):\n    [<00000000cf8cfab3>] kmalloc_trace+0x23f/0x2a0\n    [<000000004d9a1ad9>] objagg_hints_get+0x42/0x390\n    [<000000000b143cf3>] mlxsw_sp_acl_erp_rehash_hints_get+0xca/0x400\n    [<0000000059bdb60a>] mlxsw_sp_acl_tcam_vregion_rehash_work+0x868/0x1160\n    [<00000000e81fd734>] process_one_work+0x59c/0xf20\n    [<00000000ceee9e81>] worker_thread+0x799/0x12c0\n    [<00000000bda6fe39>] kthread+0x246/0x300\n    [<0000000070056d23>] ret_from_fork+0x34/0x70\n    [<00000000dea2b93e>] ret_from_fork_asm+0x1a/0x30"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52693",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/556f02699d33c1f40b1b31bd25828ce08fa165d8",
            "https://git.kernel.org/stable/c/1e3a2b9b4039bb4d136dca59fb31e06465e056f3",
            "https://git.kernel.org/stable/c/c4e1a0ef0b4782854c9b77a333ca912b392bed2f",
            "https://git.kernel.org/stable/c/3a370502a5681986f9828e43be75ce26c6ab24af",
            "https://git.kernel.org/stable/c/2124c5bc22948fc4d09a23db4a8acdccc7d21e95",
            "https://git.kernel.org/stable/c/39af144b6d01d9b40f52e5d773e653957e6c379c",
            "https://git.kernel.org/stable/c/72884ce4e10417b1233b614bf134da852df0f15f",
            "https://git.kernel.org/stable/c/ccd45faf4973746c4f30ea41eec864e5cf191099",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: video: check for error while searching for backlight device parent\n\nIf acpi_get_parent() called in acpi_video_dev_register_backlight()\nfails, for example, because acpi_ut_acquire_mutex() fails inside\nacpi_get_parent), this can lead to incorrect (uninitialized)\nacpi_parent handle being passed to acpi_get_pci_dev() for detecting\nthe parent pci device.\n\nCheck acpi_get_parent() result and set parent device only in case of success.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52679",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/26b4d702c44f9e5cf3c5c001ae619a4a001889db",
            "https://git.kernel.org/stable/c/a0a061151a6200c13149dbcdb6c065203c8425d2",
            "https://git.kernel.org/stable/c/d5f490343c77e6708b6c4aa7dbbfbcbb9546adea",
            "https://git.kernel.org/stable/c/4541004084527ce9e95a818ebbc4e6b293ffca21",
            "https://git.kernel.org/stable/c/b9d760dae5b10e73369b769073525acd7b3be2bd",
            "https://git.kernel.org/stable/c/b64d09a4e8596f76d27f4b4a90a1cf6baf6a82f8",
            "https://git.kernel.org/stable/c/cafa992134124e785609a406da4ff2b54052aff7",
            "https://git.kernel.org/stable/c/4dde83569832f9377362e50f7748463340c5db6b",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: Fix double free in of_parse_phandle_with_args_map\n\nIn of_parse_phandle_with_args_map() the inner loop that\niterates through the map entries calls of_node_put(new)\nto free the reference acquired by the previous iteration\nof the inner loop. This assumes that the value of \"new\" is\nNULL on the first iteration of the inner loop.\n\nMake sure that this is true in all iterations of the outer\nloop by setting \"new\" to NULL after its value is assigned to \"cur\".\n\nExtend the unittest to detect the double free and add an additional\ntest case that actually triggers this path."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52683",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/647d1d50c31e60ef9ccb9756a8fdf863329f7aee",
            "https://git.kernel.org/stable/c/6c38e791bde07d6ca2a0a619ff9b6837e0d5f9ad",
            "https://git.kernel.org/stable/c/f39c3d578c7d09a18ceaf56750fc7f20b02ada63",
            "https://git.kernel.org/stable/c/c1814a4ffd016ce5392c6767d22ef3aa2f0d4bd1",
            "https://git.kernel.org/stable/c/72222dfd76a79d9666ab3117fcdd44ca8cd0c4de",
            "https://git.kernel.org/stable/c/d1ac288b2742aa4af746c5613bac71760fadd1c4",
            "https://git.kernel.org/stable/c/b7aab9d906e2e252a7783f872406033ec49b6dae",
            "https://git.kernel.org/stable/c/56d2eeda87995245300836ee4dbd13b002311782",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: LPIT: Avoid u32 multiplication overflow\n\nIn lpit_update_residency() there is a possibility of overflow\nin multiplication, if tsc_khz is large enough (> UINT_MAX/1000).\n\nChange multiplication to mul_u32_u32().\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52675",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/75fc599bcdcb1de093c9ced2e3cccc832f3787f3",
            "https://git.kernel.org/stable/c/1e80aa25d186a7aa212df5acd8c75f55ac8dae34",
            "https://git.kernel.org/stable/c/5a669f3511d273c8c1ab1c1d268fbcdf53fc7a05",
            "https://git.kernel.org/stable/c/f105c263009839d80fad6998324a4e1b3511cba0",
            "https://git.kernel.org/stable/c/a2da3f9b1a1019c887ee1d164475a8fcdb0a3fec",
            "https://git.kernel.org/stable/c/024352f7928b28f53609660663329d8c0f4ad032",
            "https://git.kernel.org/stable/c/c7d828e12b326ea50fb80c369d7aa87519ed14c6",
            "https://git.kernel.org/stable/c/0a233867a39078ebb0f575e2948593bbff5826b3",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/imc-pmu: Add a null pointer check in update_events_in_group()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52691",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/afe9f5b871f86d58ecdc45b217b662227d7890d0",
            "https://git.kernel.org/stable/c/06d95c99d5a4f5accdb79464076efe62e668c706",
            "https://git.kernel.org/stable/c/aeed2b4e4a70c7568d4a5eecd6a109713c0dfbf4",
            "https://git.kernel.org/stable/c/2bf47c89bbaca2bae16581ef1b28aaec0ade0334",
            "https://git.kernel.org/stable/c/f957a1be647f7fc65926cbf572992ec2747a93f2",
            "https://git.kernel.org/stable/c/fb1936cb587262cd539e84b34541abb06e42b2f9",
            "https://git.kernel.org/stable/c/ca8e2e251c65e5a712f6025e27bd9b26d16e6f4a",
            "https://git.kernel.org/stable/c/ac16667237a82e2597e329eb9bc520d1cf9dff30",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: fix a double-free in si_dpm_init\n\nWhen the allocation of\nadev->pm.dpm.dyn_state.vddc_dependency_on_dispclk.entries fails,\namdgpu_free_extended_power_table is called to free some fields of adev.\nHowever, when the control flow returns to si_dpm_sw_init, it goes to\nlabel dpm_failed and calls si_dpm_fini, which calls\namdgpu_free_extended_power_table again and free those fields again. Thus\na double-free is triggered."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-17T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52694",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/53926e2a39629702f7f809d614b3ca89c2478205",
            "https://git.kernel.org/stable/c/08ccff6ece35f08e8107e975903c370d849089e5",
            "https://git.kernel.org/stable/c/81f1bd85960b7a089a91e679ff7cd2524390bbf1",
            "https://git.kernel.org/stable/c/a8657406e12aa10412134622c58977ac657f16d2",
            "https://git.kernel.org/stable/c/e00ec5901954d85b39b5f10f94e60ab9af463eb1",
            "https://git.kernel.org/stable/c/ce3e112e7ae854249d8755906acc5f27e1542114",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: tpd12s015: Drop buggy __exit annotation for remove function\n\nWith tpd12s015_remove() marked with __exit this function is discarded\nwhen the driver is compiled as a built-in. The result is that when the\ndriver unbinds there is no cleanup done which results in resource\nleakage or worse."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-01T13:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27038",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d7ae7d1265686b55832a445b1db8cdd69738ac07",
            "https://git.kernel.org/stable/c/239174535dba11f7b83de0eaaa27909024f8c185",
            "https://git.kernel.org/stable/c/0efb9ef6fb95384ba631d6819e66f10392aabfa2",
            "https://git.kernel.org/stable/c/a8b2b26fdd011ebe36d68a9a321ca45801685959",
            "https://git.kernel.org/stable/c/a5d9b1aa61b401867b9066d54086b3e4ee91f8ed",
            "https://git.kernel.org/stable/c/c554badcae9c45b737a22d23454170c6020b90e6",
            "https://git.kernel.org/stable/c/6f073b24a9e2becd25ac4505a9780a87e621bb51",
            "https://git.kernel.org/stable/c/e97fe4901e0f59a0bfd524578fe3768f8ca42428",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Fix clk_core_get NULL dereference\n\nIt is possible for clk_core_get to dereference a NULL in the following\nsequence:\n\nclk_core_get()\n    of_clk_get_hw_from_clkspec()\n        __of_clk_get_hw_from_provider()\n            __clk_get_hw()\n\n__clk_get_hw() can return NULL which is dereferenced by clk_core_get() at\nhw->core.\n\nPrior to commit dde4eff47c82 (\"clk: Look for parents with clkdev based\nclk_lookups\") the check IS_ERR_OR_NULL() was performed which would have\ncaught the NULL.\n\nReading the description of this function it talks about returning NULL but\nthat cannot be so at the moment.\n\nUpdate the function to check for hw before dereferencing it and return NULL\nif hw is NULL."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-05-01T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26935",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac",
            "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1",
            "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee",
            "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889",
            "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c",
            "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320",
            "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7",
            "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix unremoved procfs host directory regression\n\nCommit fc663711b944 (\"scsi: core: Remove the /proc/scsi/${proc_name}\ndirectory earlier\") fixed a bug related to modules loading/unloading, by\nadding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led\nto a potential duplicate call to the hostdir_rm() routine, since it's also\ncalled from scsi_host_dev_release(). That triggered a regression report,\nwhich was then fixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host\ndirectory removal regression\"). The fix just dropped the hostdir_rm() call\nfrom dev_release().\n\nBut it happens that this proc directory is created on scsi_host_alloc(),\nand that function \"pairs\" with scsi_host_dev_release(), while\nscsi_remove_host() pairs with scsi_add_host(). In other words, it seems the\nreason for removing the proc directory on dev_release() was meant to cover\ncases in which a SCSI host structure was allocated, but the call to\nscsi_add_host() didn't happen. And that pattern happens to exist in some\nerror paths, for example.\n\nSyzkaller causes that by using USB raw gadget device, error'ing on\nusb-storage driver, at usb_stor_probe2(). By checking that path, we can see\nthat the BadDevice label leads to a scsi_host_put() after a SCSI host\nallocation, but there's no call to scsi_add_host() in such path. That leads\nto messages like this in dmesg (and a leak of the SCSI host proc\nstructure):\n\nusb-storage 4-1:87.51: USB Mass Storage device detected\nproc_dir_entry 'scsi/usb-storage' already registered\nWARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376\n\nThe proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),\nbut guard that with the state check for SHOST_CREATED; there is even a\ncomment in scsi_host_dev_release() detailing that: such conditional is\nmeant for cases where the SCSI host was allocated but there was no calls to\n{add,remove}_host(), like the usb-storage case.\n\nThis is what we propose here and with that, the error path of usb-storage\ndoes not trigger the warning anymore."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2023-11-09T20:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-39198",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2023-39198",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2218332",
            "https://access.redhat.com/errata/RHSA-2024:2394",
            "https://access.redhat.com/errata/RHSA-2024:2950",
            "https://access.redhat.com/errata/RHSA-2024:3138",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A race condition was found in the QXL driver in the Linux kernel. The qxl_mode_dumb_create() function dereferences the qobj returned by the qxl_gem_object_create_with_handle(), but the handle is the only one holding a reference to it. This flaw allows an attacker to guess the returned handle value and trigger a use-after-free issue, potentially leading to a denial of service or privilege escalation."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-25T06:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26925",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/61ac7284346c32f9a8c8ceac56102f7914060428",
            "https://git.kernel.org/stable/c/2cee2ff7f8cce12a63a0a23ffe27f08d99541494",
            "https://git.kernel.org/stable/c/eb769ff4e281f751adcaf4f4445cbf30817be139",
            "https://git.kernel.org/stable/c/8d3a58af50e46167b6f1db47adadad03c0045dae",
            "https://git.kernel.org/stable/c/8038ee3c3e5b59bcd78467686db5270c68544e30",
            "https://git.kernel.org/stable/c/a34ba4bdeec0c3b629160497594908dc820110f1",
            "https://git.kernel.org/stable/c/0d459e2ffb541841714839e8228b845458ed3b27",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: release mutex after nft_gc_seq_end from abort path\n\nThe commit mutex should not be released during the critical section\nbetween nft_gc_seq_begin() and nft_gc_seq_end(), otherwise, async GC\nworker could collect expired objects and get the released commit lock\nwithin the same GC sequence.\n\nnf_tables_module_autoload() temporarily releases the mutex to load\nmodule dependencies, then it goes back to replay the transaction again.\nMove it at the end of the abort phase after nft_gc_seq_end() is called."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-17T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52644",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1824f942527f784a19e01eac2d9679a21623d010",
            "https://git.kernel.org/stable/c/31aaf17200c336fe258b70d39c40645ae19d0240",
            "https://git.kernel.org/stable/c/49f067726ab01c87cf57566797a8a719badbbf08",
            "https://git.kernel.org/stable/c/04a2b6eff2ae1c19cb7f41e803bcbfaf94c06455",
            "https://git.kernel.org/stable/c/c67698325c68f8768db858f5c87c34823421746d",
            "https://git.kernel.org/stable/c/bc845e2e42cae95172c04bf29807c480f51a2a83",
            "https://git.kernel.org/stable/c/4049a9f80513a6739c5677736a4c88f96df1b436",
            "https://git.kernel.org/stable/c/f1cf77bb870046a6111a604f7f7fe83d1c8c9610",
            "https://git.kernel.org/stable/c/9636951e4468f02c72cc75a82dc65d003077edbc",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: b43: Stop/wake correct queue in DMA Tx path when QoS is disabled\n\nWhen QoS is disabled, the queue priority value will not map to the correct\nieee80211 queue since there is only one queue. Stop/wake queue 0 when QoS\nis disabled to prevent trying to stop/wake a non-existent queue and failing\nto stop/wake the actual queue instantiated.\n\nLog of issue before change (with kernel parameter qos=0):\n    [  +5.112651] ------------[ cut here ]------------\n    [  +0.000005] WARNING: CPU: 7 PID: 25513 at net/mac80211/util.c:449 __ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000067] Modules linked in: b43(O) snd_seq_dummy snd_hrtimer snd_seq snd_seq_device nft_chain_nat xt_MASQUERADE nf_nat xfrm_user xfrm_algo xt_addrtype overlay ccm af_packet amdgpu snd_hda_codec_cirrus snd_hda_codec_generic ledtrig_audio drm_exec amdxcp gpu_sched xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip6t_rpfilter ipt_rpfilter xt_pkttype xt_LOG nf_log_syslog xt_tcpudp nft_compat nf_tables nfnetlink sch_fq_codel btusb uinput iTCO_wdt ctr btrtl intel_pmc_bxt i915 intel_rapl_msr mei_hdcp mei_pxp joydev at24 watchdog btintel atkbd libps2 serio radeon btbcm vivaldi_fmap btmtk intel_rapl_common snd_hda_codec_hdmi bluetooth uvcvideo nls_iso8859_1 applesmc nls_cp437 x86_pkg_temp_thermal snd_hda_intel intel_powerclamp vfat videobuf2_vmalloc coretemp fat snd_intel_dspcfg crc32_pclmul uvc polyval_clmulni snd_intel_sdw_acpi loop videobuf2_memops snd_hda_codec tun drm_suballoc_helper polyval_generic drm_ttm_helper drm_buddy tap ecdh_generic videobuf2_v4l2 gf128mul macvlan ttm ghash_clmulni_intel ecc tg3\n    [  +0.000044]  videodev bridge snd_hda_core rapl crc16 drm_display_helper cec mousedev snd_hwdep evdev intel_cstate bcm5974 hid_appleir videobuf2_common stp mac_hid libphy snd_pcm drm_kms_helper acpi_als mei_me intel_uncore llc mc snd_timer intel_gtt industrialio_triggered_buffer apple_mfi_fastcharge i2c_i801 mei snd lpc_ich agpgart ptp i2c_smbus thunderbolt apple_gmux i2c_algo_bit kfifo_buf video industrialio soundcore pps_core wmi tiny_power_button sbs sbshc button ac cordic bcma mac80211 cfg80211 ssb rfkill libarc4 kvm_intel kvm drm irqbypass fuse backlight firmware_class efi_pstore configfs efivarfs dmi_sysfs ip_tables x_tables autofs4 dm_crypt cbc encrypted_keys trusted asn1_encoder tee tpm rng_core input_leds hid_apple led_class hid_generic usbhid hid sd_mod t10_pi crc64_rocksoft crc64 crc_t10dif crct10dif_generic ahci libahci libata uhci_hcd ehci_pci ehci_hcd crct10dif_pclmul crct10dif_common sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 aesni_intel usbcore scsi_mod libaes crypto_simd cryptd scsi_common\n    [  +0.000055]  usb_common rtc_cmos btrfs blake2b_generic libcrc32c crc32c_generic crc32c_intel xor raid6_pq dm_snapshot dm_bufio dm_mod dax [last unloaded: b43(O)]\n    [  +0.000009] CPU: 7 PID: 25513 Comm: irq/17-b43 Tainted: G        W  O       6.6.7 #1-NixOS\n    [  +0.000003] Hardware name: Apple Inc. MacBookPro8,3/Mac-942459F5819B171B, BIOS 87.0.0.0.0 06/13/2019\n    [  +0.000001] RIP: 0010:__ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000046] Code: 00 45 85 e4 0f 85 9b 00 00 00 48 8d bd 40 09 00 00 f0 48 0f ba ad 48 09 00 00 00 72 0f 5b 5d 41 5c 41 5d 41 5e e9 cb 6d 3c d0 <0f> 0b 5b 5d 41 5c 41 5d 41 5e c3 cc cc cc cc 48 8d b4 16 94 00 00\n    [  +0.000002] RSP: 0018:ffffc90003c77d60 EFLAGS: 00010097\n    [  +0.000001] RAX: 0000000000000001 RBX: 0000000000000002 RCX: 0000000000000000\n    [  +0.000001] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff88820b924900\n    [  +0.000002] RBP: ffff88820b924900 R08: ffffc90003c77d90 R09: 000000000003bfd0\n    [  +0.000001] R10: ffff88820b924900 R11: ffffc90003c77c68 R12: 0000000000000000\n    [  +0.000001] R13: 0000000000000000 R14: ffffc90003c77d90 R15: ffffffffc0fa6f40\n    [  +0.000001] FS:  0000000000000000(0000) GS:ffff88846fb80000(0000) knlGS:0000000000000000\n    [  +0.000001] CS:  0010 DS: 0\n---truncated---"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-01T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26654",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/051e0840ffa8ab25554d6b14b62c9ab9e4901457",
            "https://git.kernel.org/stable/c/9d66ae0e7bb78b54e1e0525456c6b54e1d132046",
            "https://git.kernel.org/stable/c/61d4787692c1fccdc268ffa7a891f9c149f50901",
            "https://git.kernel.org/stable/c/e955e8a7f38a856fc6534ba4e6bffd4d5cc80ac3",
            "https://git.kernel.org/stable/c/3c907bf56905de7d27b329afaf59c2fb35d17b04",
            "https://git.kernel.org/stable/c/8c990221681688da34295d6d76cc2f5b963e83f5",
            "https://git.kernel.org/stable/c/eeb2a2ca0b8de7e1c66afaf719529154e7dc60b2",
            "https://git.kernel.org/stable/c/4206ad65a0ee76920041a755bd3c17c6ba59bba2",
            "https://git.kernel.org/stable/c/aa39e6878f61f50892ee2dd9d2176f72020be845",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: sh: aica: reorder cleanup operations to avoid UAF bugs\n\nThe dreamcastcard->timer could schedule the spu_dma_work and the\nspu_dma_work could also arm the dreamcastcard->timer.\n\nWhen the snd_pcm_substream is closing, the aica_channel will be\ndeallocated. But it could still be dereferenced in the worker\nthread. The reason is that del_timer() will return directly\nregardless of whether the timer handler is running or not and\nthe worker could be rescheduled in the timer handler. As a result,\nthe UAF bug will happen. The racy situation is shown below:\n\n      (Thread 1)                 |      (Thread 2)\nsnd_aicapcm_pcm_close()          |\n ...                             |  run_spu_dma() //worker\n                                 |    mod_timer()\n  flush_work()                   |\n  del_timer()                    |  aica_period_elapsed() //timer\n  kfree(dreamcastcard->channel)  |    schedule_work()\n                                 |  run_spu_dma() //worker\n  ...                            |    dreamcastcard->channel-> //USE\n\nIn order to mitigate this bug and other possible corner cases,\ncall mod_timer() conditionally in run_spu_dma(), then implement\nPCM sync_stop op to cancel both the timer and worker. The sync_stop\nop will be called from PCM core appropriately when needed."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-05T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27437",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/139dfcc4d723ab13469881200c7d80f49d776060",
            "https://git.kernel.org/stable/c/2a4a666c45107206605b7b5bc20545f8aabc4fa2",
            "https://git.kernel.org/stable/c/3b3491ad0f80d913e7d255941d4470f4a4d9bfda",
            "https://git.kernel.org/stable/c/bf0bc84a20e6109ab07d5dc072067bd01eb931ec",
            "https://git.kernel.org/stable/c/fe9a7082684eb059b925c535682e68c34d487d43",
            "https://git.kernel.org/stable/c/b7a2f0955ffceffadfe098b40b50307431f45438",
            "https://git.kernel.org/stable/c/26389925d6c2126fb777821a0a983adca7ee6351",
            "https://git.kernel.org/stable/c/561d5e1998d58b54ce2bbbb3e843b669aa0b3db5",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Disable auto-enable of exclusive INTx IRQ\n\nCurrently for devices requiring masking at the irqchip for INTx, ie.\ndevices without DisINTx support, the IRQ is enabled in request_irq()\nand subsequently disabled as necessary to align with the masked status\nflag.  This presents a window where the interrupt could fire between\nthese events, resulting in the IRQ incrementing the disable depth twice.\nThis would be unrecoverable for a user since the masked flag prevents\nnested enables through vfio.\n\nInstead, invert the logic using IRQF_NO_AUTOEN such that exclusive INTx\nis never auto-enabled, then unmask as required."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-04-05T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26810",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3fe0ac10bd117df847c93408a9d428a453cd60e5",
            "https://git.kernel.org/stable/c/04a4a017b9ffd7b0f427b8c376688d14cb614651",
            "https://git.kernel.org/stable/c/6fe478d855b20ac1eb5da724afe16af5a2aaaa40",
            "https://git.kernel.org/stable/c/03505e3344b0576fd619416793a31eae9c5b73bf",
            "https://git.kernel.org/stable/c/810cd4bb53456d0503cc4e7934e063835152c1b7",
            "https://git.kernel.org/stable/c/ec73e079729258a05452356cf6d098bf1504d5a6",
            "https://git.kernel.org/stable/c/1e71b6449d55179170efc8dee8664510bb813b42",
            "https://git.kernel.org/stable/c/3dd9be6cb55e0f47544e7cdda486413f7134e3b3",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Lock external INTx masking ops\n\nMask operations through config space changes to DisINTx may race INTx\nconfiguration changes via ioctl.  Create wrappers that add locking for\npaths outside of the core interrupt code.\n\nIn particular, irq_type is updated holding igate, therefore testing\nis_intx() requires holding igate.  For example clearing DisINTx from\nconfig space can otherwise race changes of the interrupt configuration.\n\nThis aligns interfaces which may trigger the INTx eventfd into two\ncamps, one side serialized by igate and the other only enabled while\nINTx is configured.  A subsequent patch introduces synchronization for\nthe latter flows."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-26T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52623",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/fece80a2a6718ed58487ce397285bb1b83a3e54e",
            "https://git.kernel.org/stable/c/7a96d85bf196c170dcf1b47a82e9bb97cca69aa6",
            "https://git.kernel.org/stable/c/c430e6bb43955c6bf573665fcebf31694925b9f7",
            "https://git.kernel.org/stable/c/f8cf4dabbdcb8bef85335b0ed7ad5b25fd82ff56",
            "https://git.kernel.org/stable/c/e8ca3e73301e23e8c0ac0ce2e6bac4545cd776e0",
            "https://git.kernel.org/stable/c/69c7eeb4f622c2a28da965f970f982db171f3dc6",
            "https://git.kernel.org/stable/c/8f860c8407470baff2beb9982ad6b172c94f1d0a",
            "https://git.kernel.org/stable/c/31b62908693c90d4d07db597e685d9f25a120073",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix a suspicious RCU usage warning\n\nI received the following warning while running cthon against an ontap\nserver running pNFS:\n\n[   57.202521] =============================\n[   57.202522] WARNING: suspicious RCU usage\n[   57.202523] 6.7.0-rc3-g2cc14f52aeb7 #41492 Not tainted\n[   57.202525] -----------------------------\n[   57.202525] net/sunrpc/xprtmultipath.c:349 RCU-list traversed in non-reader section!!\n[   57.202527]\n               other info that might help us debug this:\n\n[   57.202528]\n               rcu_scheduler_active = 2, debug_locks = 1\n[   57.202529] no locks held by test5/3567.\n[   57.202530]\n               stack backtrace:\n[   57.202532] CPU: 0 PID: 3567 Comm: test5 Not tainted 6.7.0-rc3-g2cc14f52aeb7 #41492 5b09971b4965c0aceba19f3eea324a4a806e227e\n[   57.202534] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 2/2/2022\n[   57.202536] Call Trace:\n[   57.202537]  <TASK>\n[   57.202540]  dump_stack_lvl+0x77/0xb0\n[   57.202551]  lockdep_rcu_suspicious+0x154/0x1a0\n[   57.202556]  rpc_xprt_switch_has_addr+0x17c/0x190 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202596]  rpc_clnt_setup_test_and_add_xprt+0x50/0x180 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202621]  ? rpc_clnt_add_xprt+0x254/0x300 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202646]  rpc_clnt_add_xprt+0x27a/0x300 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202671]  ? __pfx_rpc_clnt_setup_test_and_add_xprt+0x10/0x10 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202696]  nfs4_pnfs_ds_connect+0x345/0x760 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202728]  ? __pfx_nfs4_test_session_trunk+0x10/0x10 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202754]  nfs4_fl_prepare_ds+0x75/0xc0 [nfs_layout_nfsv41_files e3a4187f18ae8a27b630f9feae6831b584a9360a]\n[   57.202760]  filelayout_write_pagelist+0x4a/0x200 [nfs_layout_nfsv41_files e3a4187f18ae8a27b630f9feae6831b584a9360a]\n[   57.202765]  pnfs_generic_pg_writepages+0xbe/0x230 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202788]  __nfs_pageio_add_request+0x3fd/0x520 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202813]  nfs_pageio_add_request+0x18b/0x390 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202831]  nfs_do_writepage+0x116/0x1e0 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202849]  nfs_writepages_callback+0x13/0x30 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202866]  write_cache_pages+0x265/0x450\n[   57.202870]  ? __pfx_nfs_writepages_callback+0x10/0x10 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202891]  nfs_writepages+0x141/0x230 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202913]  do_writepages+0xd2/0x230\n[   57.202917]  ? filemap_fdatawrite_wbc+0x5c/0x80\n[   57.202921]  filemap_fdatawrite_wbc+0x67/0x80\n[   57.202924]  filemap_write_and_wait_range+0xd9/0x170\n[   57.202930]  nfs_wb_all+0x49/0x180 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202947]  nfs4_file_flush+0x72/0xb0 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202969]  __se_sys_close+0x46/0xd0\n[   57.202972]  do_syscall_64+0x68/0x100\n[   57.202975]  ? do_syscall_64+0x77/0x100\n[   57.202976]  ? do_syscall_64+0x77/0x100\n[   57.202979]  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n[   57.202982] RIP: 0033:0x7fe2b12e4a94\n[   57.202985] Code: 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 80 3d d5 18 0e 00 00 74 13 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 44 c3 0f 1f 00 48 83 ec 18 89 7c 24 0c e8 c3\n[   57.202987] RSP: 002b:00007ffe857ddb38 EFLAGS: 00000202 ORIG_RAX: 0000000000000003\n[   57.202989] RAX: ffffffffffffffda RBX: 00007ffe857dfd68 RCX: 00007fe2b12e4a94\n[   57.202991] RDX: 0000000000002000 RSI: 00007ffe857ddc40 RDI: 0000000000000003\n[   57.202992] RBP: 00007ffe857dfc50 R08: 7fffffffffffffff R09: 0000000065650f49\n[   57.202993] R10: 00007f\n---truncated---"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-26T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26645",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5022b331c041e8c54b9a6a3251579bd1e8c0fc0b",
            "https://git.kernel.org/stable/c/dad9b28f675ed99b4dec261db2a397efeb80b74c",
            "https://git.kernel.org/stable/c/ef70dfa0b1e5084f32635156c9a5c795352ad860",
            "https://git.kernel.org/stable/c/aef1cb00856ccfd614467cfb50b791278992e177",
            "https://git.kernel.org/stable/c/f4f7e696db0274ff560482cc52eddbf0551d4b7a",
            "https://git.kernel.org/stable/c/a1eebe76e187dbe11ca299f8dbb6e45d5b1889e7",
            "https://git.kernel.org/stable/c/bf4aeff7da85c3becd39fb73bac94122331c30fb",
            "https://git.kernel.org/stable/c/2b44760609e9eaafc9d234a6883d042fc21132a7",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Ensure visibility when inserting an element into tracing_map\n\nRunning the following two commands in parallel on a multi-processor\nAArch64 machine can sporadically produce an unexpected warning about\nduplicate histogram entries:\n\n $ while true; do\n     echo hist:key=id.syscall:val=hitcount > \\\n       /sys/kernel/debug/tracing/events/raw_syscalls/sys_enter/trigger\n     cat /sys/kernel/debug/tracing/events/raw_syscalls/sys_enter/hist\n     sleep 0.001\n   done\n $ stress-ng --sysbadaddr $(nproc)\n\nThe warning looks as follows:\n\n[ 2911.172474] ------------[ cut here ]------------\n[ 2911.173111] Duplicates detected: 1\n[ 2911.173574] WARNING: CPU: 2 PID: 12247 at kernel/trace/tracing_map.c:983 tracing_map_sort_entries+0x3e0/0x408\n[ 2911.174702] Modules linked in: iscsi_ibft(E) iscsi_boot_sysfs(E) rfkill(E) af_packet(E) nls_iso8859_1(E) nls_cp437(E) vfat(E) fat(E) ena(E) tiny_power_button(E) qemu_fw_cfg(E) button(E) fuse(E) efi_pstore(E) ip_tables(E) x_tables(E) xfs(E) libcrc32c(E) aes_ce_blk(E) aes_ce_cipher(E) crct10dif_ce(E) polyval_ce(E) polyval_generic(E) ghash_ce(E) gf128mul(E) sm4_ce_gcm(E) sm4_ce_ccm(E) sm4_ce(E) sm4_ce_cipher(E) sm4(E) sm3_ce(E) sm3(E) sha3_ce(E) sha512_ce(E) sha512_arm64(E) sha2_ce(E) sha256_arm64(E) nvme(E) sha1_ce(E) nvme_core(E) nvme_auth(E) t10_pi(E) sg(E) scsi_mod(E) scsi_common(E) efivarfs(E)\n[ 2911.174738] Unloaded tainted modules: cppc_cpufreq(E):1\n[ 2911.180985] CPU: 2 PID: 12247 Comm: cat Kdump: loaded Tainted: G            E      6.7.0-default #2 1b58bbb22c97e4399dc09f92d309344f69c44a01\n[ 2911.182398] Hardware name: Amazon EC2 c7g.8xlarge/, BIOS 1.0 11/1/2018\n[ 2911.183208] pstate: 61400005 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)\n[ 2911.184038] pc : tracing_map_sort_entries+0x3e0/0x408\n[ 2911.184667] lr : tracing_map_sort_entries+0x3e0/0x408\n[ 2911.185310] sp : ffff8000a1513900\n[ 2911.185750] x29: ffff8000a1513900 x28: ffff0003f272fe80 x27: 0000000000000001\n[ 2911.186600] x26: ffff0003f272fe80 x25: 0000000000000030 x24: 0000000000000008\n[ 2911.187458] x23: ffff0003c5788000 x22: ffff0003c16710c8 x21: ffff80008017f180\n[ 2911.188310] x20: ffff80008017f000 x19: ffff80008017f180 x18: ffffffffffffffff\n[ 2911.189160] x17: 0000000000000000 x16: 0000000000000000 x15: ffff8000a15134b8\n[ 2911.190015] x14: 0000000000000000 x13: 205d373432323154 x12: 5b5d313131333731\n[ 2911.190844] x11: 00000000fffeffff x10: 00000000fffeffff x9 : ffffd1b78274a13c\n[ 2911.191716] x8 : 000000000017ffe8 x7 : c0000000fffeffff x6 : 000000000057ffa8\n[ 2911.192554] x5 : ffff0012f6c24ec0 x4 : 0000000000000000 x3 : ffff2e5b72b5d000\n[ 2911.193404] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff0003ff254480\n[ 2911.194259] Call trace:\n[ 2911.194626]  tracing_map_sort_entries+0x3e0/0x408\n[ 2911.195220]  hist_show+0x124/0x800\n[ 2911.195692]  seq_read_iter+0x1d4/0x4e8\n[ 2911.196193]  seq_read+0xe8/0x138\n[ 2911.196638]  vfs_read+0xc8/0x300\n[ 2911.197078]  ksys_read+0x70/0x108\n[ 2911.197534]  __arm64_sys_read+0x24/0x38\n[ 2911.198046]  invoke_syscall+0x78/0x108\n[ 2911.198553]  el0_svc_common.constprop.0+0xd0/0xf8\n[ 2911.199157]  do_el0_svc+0x28/0x40\n[ 2911.199613]  el0_svc+0x40/0x178\n[ 2911.200048]  el0t_64_sync_handler+0x13c/0x158\n[ 2911.200621]  el0t_64_sync+0x1a8/0x1b0\n[ 2911.201115] ---[ end trace 0000000000000000 ]---\n\nThe problem appears to be caused by CPU reordering of writes issued from\n__tracing_map_insert().\n\nThe check for the presence of an element with a given key in this\nfunction is:\n\n val = READ_ONCE(entry->val);\n if (val && keys_match(key, val->key, map->key_size)) ...\n\nThe write of a new entry is:\n\n elt = get_free_elt(map);\n memcpy(elt->key, key, map->key_size);\n entry->val = elt;\n\nThe \"memcpy(elt->key, key, map->key_size);\" and \"entry->val = elt;\"\nstores may become visible in the reversed order on another CPU. This\nsecond CPU might then incorrectly determine that a new key doesn't match\nan already present val->key and subse\n---truncated---"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-18T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52609",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/95b1d336b0642198b56836b89908d07b9a0c9608",
            "https://git.kernel.org/stable/c/252a2a5569eb9f8d16428872cc24dea1ac0bb097",
            "https://git.kernel.org/stable/c/7e7a0d86542b0ea903006d3f42f33c4f7ead6918",
            "https://git.kernel.org/stable/c/98fee5bee97ad47b527a997d5786410430d1f0e9",
            "https://git.kernel.org/stable/c/6696f76c32ff67fec26823fc2df46498e70d9bf3",
            "https://git.kernel.org/stable/c/67f16bf2cc1698fd50e01ee8a2becc5a8e6d3a3e",
            "https://git.kernel.org/stable/c/77d210e8db4d61d43b2d16df66b1ec46fad2ee01",
            "https://git.kernel.org/stable/c/9a9ab0d963621d9d12199df9817e66982582d5a5",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix race between mmput() and do_exit()\n\nTask A calls binder_update_page_range() to allocate and insert pages on\na remote address space from Task B. For this, Task A pins the remote mm\nvia mmget_not_zero() first. This can race with Task B do_exit() and the\nfinal mmput() refcount decrement will come from Task A.\n\n  Task A            | Task B\n  ------------------+------------------\n  mmget_not_zero()  |\n                    |  do_exit()\n                    |    exit_mm()\n                    |      mmput()\n  mmput()           |\n    exit_mmap()     |\n      remove_vma()  |\n        fput()      |\n\nIn this case, the work of ____fput() from Task B is queued up in Task A\nas TWA_RESUME. So in theory, Task A returns to userspace and the cleanup\nwork gets executed. However, Task A instead sleep, waiting for a reply\nfrom Task B that never comes (it's dead).\n\nThis means the binder_deferred_release() is blocked until an unrelated\nbinder event forces Task A to go back to userspace. All the associated\ndeath notifications will also be delayed until then.\n\nIn order to fix this use mmput_async() that will schedule the work in\nthe corresponding mm->async_put_work WQ instead of Task A."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-18T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52612",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1142d65c5b881590962ad763f94505b6dd67d2fe",
            "https://git.kernel.org/stable/c/e0e3f4a18784182cfe34e20c00eca11e78d53e76",
            "https://git.kernel.org/stable/c/4518dc468cdd796757190515a9be7408adc8911e",
            "https://git.kernel.org/stable/c/a5f2f91b3fd7387e5102060809316a0f8f0bc625",
            "https://git.kernel.org/stable/c/4df0c942d04a67df174195ad8082f6e30e7f71a5",
            "https://git.kernel.org/stable/c/7d9e5bed036a7f9e2062a137e97e3c1e77fb8759",
            "https://git.kernel.org/stable/c/71c6670f9f032ec67d8f4e3f8db4646bf5a62883",
            "https://git.kernel.org/stable/c/744e1885922a9943458954cfea917b31064b4131",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: scomp - fix req->dst buffer overflow\n\nThe req->dst buffer size should be checked before copying from the\nscomp_scratch->dst to avoid req->dst buffer overflow problem."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-18T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26633",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/135414f300c5db995e2a2f3bf0f455de9d014aee",
            "https://git.kernel.org/stable/c/3f15ba3dc14e6ee002ea01b4faddc3d49200377c",
            "https://git.kernel.org/stable/c/da23bd709b46168f7dfc36055801011222b076cd",
            "https://git.kernel.org/stable/c/4329426cf6b8e22b798db2331c7ef1dd2a9c748d",
            "https://git.kernel.org/stable/c/62a1fedeb14c7ac0947ef33fadbabd35ed2400a2",
            "https://git.kernel.org/stable/c/687c5d52fe53e602e76826dbd4d7af412747e183",
            "https://git.kernel.org/stable/c/ba8d904c274268b18ef3dc11d3ca7b24a96cb087",
            "https://git.kernel.org/stable/c/d375b98e0248980681e5e56b712026174d617198",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nip6_tunnel: fix NEXTHDR_FRAGMENT handling in ip6_tnl_parse_tlv_enc_lim()\n\nsyzbot pointed out [1] that NEXTHDR_FRAGMENT handling is broken.\n\nReading frag_off can only be done if we pulled enough bytes\nto skb->head. Currently we might access garbage.\n\n[1]\nBUG: KMSAN: uninit-value in ip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendmsg net/socket.c:2676 [inline]\n__se_sys_sendmsg net/socket.c:2674 [inline]\n__x64_sys_sendmsg+0x307/0x490 net/socket.c:2674\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\nslab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\nslab_alloc_node mm/slub.c:3478 [inline]\n__kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517\n__do_kmalloc_node mm/slab_common.c:1006 [inline]\n__kmalloc_node_track_caller+0x118/0x3c0 mm/slab_common.c:1027\nkmalloc_reserve+0x249/0x4a0 net/core/skbuff.c:582\npskb_expand_head+0x226/0x1a00 net/core/skbuff.c:2098\n__pskb_pull_tail+0x13b/0x2310 net/core/skbuff.c:2655\npskb_may_pull_reason include/linux/skbuff.h:2673 [inline]\npskb_may_pull include/linux/skbuff.h:2681 [inline]\nip6_tnl_parse_tlv_enc_lim+0x901/0xbb0 net/ipv6/ip6_tunnel.c:408\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendms\n---truncated---"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-11T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52491",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/43872f44eee6c6781fea1348b38885d8e78face9",
            "https://git.kernel.org/stable/c/1b1036c60a37a30caf6759a90fe5ecd06ec35590",
            "https://git.kernel.org/stable/c/9fec4db7fff54d9b0306a332bab31eac47eeb5f6",
            "https://git.kernel.org/stable/c/8254d54d00eb6cdb8367399c7f912eb8d354ecd7",
            "https://git.kernel.org/stable/c/6e2f37022f0fc0893da4d85a0500c9d547fffd4c",
            "https://git.kernel.org/stable/c/206c857dd17d4d026de85866f1b5f0969f2a109e",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mtk-jpeg: Fix use after free bug due to error path handling in mtk_jpeg_dec_device_run\n\nIn mtk_jpeg_probe, &jpeg->job_timeout_work is bound with\nmtk_jpeg_job_timeout_work.\n\nIn mtk_jpeg_dec_device_run, if error happens in\nmtk_jpeg_set_dec_dst, it will finally start the worker while\nmark the job as finished by invoking v4l2_m2m_job_finish.\n\nThere are two methods to trigger the bug. If we remove the\nmodule, it which will call mtk_jpeg_remove to make cleanup.\nThe possible sequence is as follows, which will cause a\nuse-after-free bug.\n\nCPU0                  CPU1\nmtk_jpeg_dec_...    |\n  start worker\t    |\n                    |mtk_jpeg_job_timeout_work\nmtk_jpeg_remove     |\n  v4l2_m2m_release  |\n    kfree(m2m_dev); |\n                    |\n                    | v4l2_m2m_get_curr_priv\n                    |   m2m_dev->curr_ctx //use\n\nIf we close the file descriptor, which will call mtk_jpeg_release,\nit will have a similar sequence.\n\nFix this bug by starting timeout worker only if started jpegdec worker\nsuccessfully. Then v4l2_m2m_job_finish will only be called in\neither mtk_jpeg_job_timeout_work or mtk_jpeg_dec_device_run."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-03-06T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52599",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/f423528488e4f9606cef858eceea210bf1163f41",
            "https://git.kernel.org/stable/c/de6a91aed1e0b1a23e9c11e7d7557f088eeeb017",
            "https://git.kernel.org/stable/c/e2b77d107b33bb31c8b1f5c4cb8f277b23728f1e",
            "https://git.kernel.org/stable/c/6aa30020879042d46df9f747e4f0a486eea6fe98",
            "https://git.kernel.org/stable/c/3537f92cd22c672db97fae6997481e678ad14641",
            "https://git.kernel.org/stable/c/6996d43b14486f4a6655b10edc541ada1b580b4b",
            "https://git.kernel.org/stable/c/5a6660139195f5e2fbbda459eeecb8788f3885fe",
            "https://git.kernel.org/stable/c/49f9637aafa6e63ba686c13cb8549bf5e6920402",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in diNewExt\n\n[Syz report]\nUBSAN: array-index-out-of-bounds in fs/jfs/jfs_imap.c:2360:2\nindex -878706688 is out of range for type 'struct iagctl[128]'\nCPU: 1 PID: 5065 Comm: syz-executor282 Not tainted 6.7.0-rc4-syzkaller-00009-gbee0e7762ad2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106\n ubsan_epilogue lib/ubsan.c:217 [inline]\n __ubsan_handle_out_of_bounds+0x11c/0x150 lib/ubsan.c:348\n diNewExt+0x3cf3/0x4000 fs/jfs/jfs_imap.c:2360\n diAllocExt fs/jfs/jfs_imap.c:1949 [inline]\n diAllocAG+0xbe8/0x1e50 fs/jfs/jfs_imap.c:1666\n diAlloc+0x1d3/0x1760 fs/jfs/jfs_imap.c:1587\n ialloc+0x8f/0x900 fs/jfs/jfs_inode.c:56\n jfs_mkdir+0x1c5/0xb90 fs/jfs/namei.c:225\n vfs_mkdir+0x2f1/0x4b0 fs/namei.c:4106\n do_mkdirat+0x264/0x3a0 fs/namei.c:4129\n __do_sys_mkdir fs/namei.c:4149 [inline]\n __se_sys_mkdir fs/namei.c:4147 [inline]\n __x64_sys_mkdir+0x6e/0x80 fs/namei.c:4147\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x45/0x110 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\nRIP: 0033:0x7fcb7e6a0b57\nCode: ff ff 77 07 31 c0 c3 0f 1f 40 00 48 c7 c2 b8 ff ff ff f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 b8 53 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffd83023038 EFLAGS: 00000286 ORIG_RAX: 0000000000000053\nRAX: ffffffffffffffda RBX: 00000000ffffffff RCX: 00007fcb7e6a0b57\nRDX: 00000000000a1020 RSI: 00000000000001ff RDI: 0000000020000140\nRBP: 0000000020000140 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000286 R12: 00007ffd830230d0\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n\n[Analysis]\nWhen the agstart is too large, it can cause agno overflow.\n\n[Fix]\nAfter obtaining agno, if the value is invalid, exit the subsequent process.\n\n\nModified the test from agno > MAXAG to agno >= MAXAG based on linux-next\nreport by kernel test robot (Dan Carpenter)."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-29T01:42:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-51779",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://github.com/torvalds/linux/commit/2e07e8348ea454615e268222ae3fc240421be768",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "bt_sock_recvmsg in net/bluetooth/af_bluetooth.c in the Linux kernel through 6.6.8 has a use-after-free because of a bt_sock_ioctl race condition."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-26T16:27:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52470",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/21b1645660717d6126dd4866c850fcc5c4703a41",
            "https://git.kernel.org/stable/c/5d12c5d75f7c78b83a738025947651ec5c95b4d4",
            "https://git.kernel.org/stable/c/57ca7984806d79b38af528de88fd803babf27feb",
            "https://git.kernel.org/stable/c/14bbfaa5df273b26cde6707f6e655585700e6fe1",
            "https://git.kernel.org/stable/c/c4ff55408187f2595066967047363ca84e76db85",
            "https://git.kernel.org/stable/c/0b813a6a0087451cb702b6eb841f10856f49d088",
            "https://git.kernel.org/stable/c/fb2d8bc9b5e55848b8a7c3c028e2ee8d49f28f97",
            "https://git.kernel.org/stable/c/7a2464fac80d42f6f8819fed97a553e9c2f43310",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: check the alloc_workqueue return value in radeon_crtc_init()\n\ncheck the alloc_workqueue return value in radeon_crtc_init()\nto avoid null-ptr-deref."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-26T16:27:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52467",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/927626a2073887ee30ba00633260d4d203f8e875",
            "https://git.kernel.org/stable/c/c3e3a2144bf50877551138ffce9f7aa6ddfe385b",
            "https://git.kernel.org/stable/c/527e8c5f3d00299822612c495d5adf1f8f43c001",
            "https://git.kernel.org/stable/c/3ef1130deee98997275904d9bfc37af75e1e906c",
            "https://git.kernel.org/stable/c/7f2c410ac470959b88e03dadd94b7a0b71df7973",
            "https://git.kernel.org/stable/c/41673c66b3d0c09915698fec5c13b24336f18dd1",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: syscon: Fix null pointer dereference in of_syscon_register()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-26T16:27:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-52469",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/8a27d9d9fc9b5564b8904c3a77a7dea482bfa34e",
            "https://git.kernel.org/stable/c/8b55b06e737feb2a645b0293ea27e38418876d63",
            "https://git.kernel.org/stable/c/520e213a0b97b64735a13950e9371e0a5d7a5dc3",
            "https://git.kernel.org/stable/c/b6dcba02ee178282e0d28684d241e0b8462dea6a",
            "https://git.kernel.org/stable/c/35fa2394d26e919f63600ce631e6aefc95ec2706",
            "https://git.kernel.org/stable/c/95084632a65d5c0d682a83b55935560bdcd2a1e3",
            "https://git.kernel.org/stable/c/3426f059eacc33ecc676b0d66539297e1cfafd02",
            "https://git.kernel.org/stable/c/28dd788382c43b330480f57cd34cde0840896743",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/amd/pm: fix a use-after-free in kv_parse_power_table\n\nWhen ps allocated by kzalloc equals to NULL, kv_parse_power_table\nfrees adev->pm.dpm.ps that allocated before. However, after the control\nflow goes through the following call chains:\n\nkv_parse_power_table\n  |-> kv_dpm_init\n        |-> kv_dpm_sw_init\n\t      |-> kv_dpm_fini\n\nThe adev->pm.dpm.ps is used in the for loop of kv_dpm_fini after its\nfirst free in kv_parse_power_table and causes a use-after-free bug."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52454",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ee5e7632e981673f42a50ade25e71e612e543d9d",
            "https://git.kernel.org/stable/c/f775f2621c2ac5cc3a0b3a64665dad4fb146e510",
            "https://git.kernel.org/stable/c/4cb3cf7177ae3666be7fb27d4ad4d72a295fb02d",
            "https://git.kernel.org/stable/c/2871aa407007f6f531fae181ad252486e022df42",
            "https://git.kernel.org/stable/c/24e05760186dc070d3db190ca61efdbce23afc88",
            "https://git.kernel.org/stable/c/70154e8d015c9b4fb56c1a2ef1fc8b83d45c7f68",
            "https://git.kernel.org/stable/c/efa56305908ba20de2104f1b8508c6a7401833be",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet-tcp: Fix a kernel panic when host sends an invalid H2C PDU length\n\nIf the host sends an H2CData command with an invalid DATAL,\nthe kernel may crash in nvmet_tcp_build_pdu_iovec().\n\nUnable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000000\nlr : nvmet_tcp_io_work+0x6ac/0x718 [nvmet_tcp]\nCall trace:\n  process_one_work+0x174/0x3c8\n  worker_thread+0x2d0/0x3e8\n  kthread+0x104/0x110\n\nFix the bug by raising a fatal error if DATAL isn't coherent\nwith the packet size.\nAlso, the PDU length should never exceed the MAXH2CDATA parameter which\nhas been communicated to the host in nvmet_tcp_handle_icreq()."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-667",
        "id": "CVE-2023-52456",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6e04a9d30509fb53ba6df5d655ed61d607a7cfda",
            "https://git.kernel.org/stable/c/ff168d4fdb0e1ba35fb413a749b3d6cce918ec19",
            "https://git.kernel.org/stable/c/63ee7be01a3f7d28b1ea8b8d7944f12bb7b0ed06",
            "https://git.kernel.org/stable/c/763cd68746317b5d746dc2649a3295c1efb41181",
            "https://git.kernel.org/stable/c/9a662d06c22ddfa371958c2071dc350436be802b",
            "https://git.kernel.org/stable/c/78d60dae9a0c9f09aa3d6477c94047df2fe6f7b0",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: imx: fix tx statemachine deadlock\n\nWhen using the serial port as RS485 port, the tx statemachine is used to\ncontrol the RTS pin to drive the RS485 transceiver TX_EN pin. When the\nTTY port is closed in the middle of a transmission (for instance during\nuserland application crash), imx_uart_shutdown disables the interface\nand disables the Transmission Complete interrupt. afer that,\nimx_uart_stop_tx bails on an incomplete transmission, to be retriggered\nby the TC interrupt. This interrupt is disabled and therefore the tx\nstatemachine never transitions out of SEND. The statemachine is in\ndeadlock now, and the TX_EN remains low, making the interface useless.\n\nimx_uart_stop_tx now checks for incomplete transmission AND whether TC\ninterrupts are enabled before bailing to be retriggered. This makes sure\nthe state machine handling is reached, and is properly set to\nWAIT_AFTER_SEND."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-52457",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b502fb43f7fb55aaf07f6092ab44657595214b93",
            "https://git.kernel.org/stable/c/bc57f3ef8a9eb0180606696f586a6dcfaa175ed0",
            "https://git.kernel.org/stable/c/828cd829483f0cda920710997aed79130b0af690",
            "https://git.kernel.org/stable/c/d74173bda29aba58f822175d983d07c8ed335494",
            "https://git.kernel.org/stable/c/887a558d0298d36297daea039954c39940228d9b",
            "https://git.kernel.org/stable/c/95e4e0031effad9837af557ecbfd4294a4d8aeee",
            "https://git.kernel.org/stable/c/ad90d0358bd3b4554f243a425168fc7cebe7d04e",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250: omap: Don't skip resource freeing if pm_runtime_resume_and_get() failed\n\nReturning an error code from .remove() makes the driver core emit the\nlittle helpful error message:\n\n\tremove callback returned a non-zero value. This will be ignored.\n\nand then remove the device anyhow. So all resources that were not freed\nare leaked in this case. Skipping serial8250_unregister_port() has the\npotential to keep enough of the UART around to trigger a use-after-free.\n\nSo replace the error return (and with it the little helpful error\nmessage) by a more useful error message and continue to cleanup."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2023-52462",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2757f17972d87773b3677777f5682510f13c66ef",
            "https://git.kernel.org/stable/c/67e6707f07354ed1acb4e65552e97c60cf9d69cf",
            "https://git.kernel.org/stable/c/fc3e3c50a0a4cac1463967c110686189e4a59104",
            "https://git.kernel.org/stable/c/8dc15b0670594543c356567a1a45b0182ec63174",
            "https://git.kernel.org/stable/c/40617d45ea05535105e202a8a819e388a2b1f036",
            "https://git.kernel.org/stable/c/ab125ed3ec1c10ccc36bc98c7a4256ad114a3dae",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: fix check for attempt to corrupt spilled pointer\n\nWhen register is spilled onto a stack as a 1/2/4-byte register, we set\nslot_type[BPF_REG_SIZE - 1] (plus potentially few more below it,\ndepending on actual spill size). So to check if some stack slot has\nspilled register we need to consult slot_type[7], not slot_type[0].\n\nTo avoid the need to remember and double-check this in the future, just\nuse is_spilled_reg() helper."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52463",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/94c742324ed7e42c5bd6a9ed22e4ec6d764db4d8",
            "https://git.kernel.org/stable/c/2aa141f8bc580f8f9811dfe4e0e6009812b73826",
            "https://git.kernel.org/stable/c/d4a9aa7db574a0da64307729cc031fb68597aa8b",
            "https://git.kernel.org/stable/c/0049fe7e4a85849bdd778cdb72e51a791ff3d737",
            "https://git.kernel.org/stable/c/d4a714873db0866cc471521114eeac4a5072d548",
            "https://git.kernel.org/stable/c/0e8d2444168dd519fea501599d150e62718ed2fe",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nefivarfs: force RO when remounting if SetVariable is not supported\n\nIf SetVariable at runtime is not supported by the firmware we never assign\na callback for that function. At the same time mount the efivarfs as\nRO so no one can call that.  However, we never check the permission flags\nwhen someone remounts the filesystem as RW. As a result this leads to a\ncrash looking like this:\n\n$ mount -o remount,rw /sys/firmware/efi/efivars\n$ efi-updatevar -f PK.auth PK\n\n[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  303.280482] Mem abort info:\n[  303.280854]   ESR = 0x0000000086000004\n[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits\n[  303.282016]   SET = 0, FnV = 0\n[  303.282414]   EA = 0, S1PTW = 0\n[  303.282821]   FSC = 0x04: level 0 translation fault\n[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000\n[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP\n[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6\n[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1\n[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023\n[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  303.292123] pc : 0x0\n[  303.292443] lr : efivar_set_variable_locked+0x74/0xec\n[  303.293156] sp : ffff800008673c10\n[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000\n[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027\n[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000\n[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000\n[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54\n[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4\n[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002\n[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201\n[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc\n[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000\n[  303.303341] Call trace:\n[  303.303679]  0x0\n[  303.303938]  efivar_entry_set_get_size+0x98/0x16c\n[  303.304585]  efivarfs_file_write+0xd0/0x1a4\n[  303.305148]  vfs_write+0xc4/0x2e4\n[  303.305601]  ksys_write+0x70/0x104\n[  303.306073]  __arm64_sys_write+0x1c/0x28\n[  303.306622]  invoke_syscall+0x48/0x114\n[  303.307156]  el0_svc_common.constprop.0+0x44/0xec\n[  303.307803]  do_el0_svc+0x38/0x98\n[  303.308268]  el0_svc+0x2c/0x84\n[  303.308702]  el0t_64_sync_handler+0xf4/0x120\n[  303.309293]  el0t_64_sync+0x190/0x194\n[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)\n[  303.310612] ---[ end trace 0000000000000000 ]---\n\nFix this by adding a .reconfigure() function to the fs operations which\nwe can use to check the requested flags and deny anything that's not RO\nif the firmware doesn't implement SetVariable at runtime."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-119",
        "id": "CVE-2023-52464",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/71c17ee02538802ceafc830f0736aa35b564e601",
            "https://git.kernel.org/stable/c/5da3b6e7196f0b4f3728e4e25eb20233a9ddfaf6",
            "https://git.kernel.org/stable/c/6aa7865ba7ff7f0ede0035180fb3b9400ceb405a",
            "https://git.kernel.org/stable/c/700cf4bead80fac994dcc43ae1ca5d86d8959b21",
            "https://git.kernel.org/stable/c/9dbac9fdae6e3b411fc4c3fca3bf48f70609c398",
            "https://git.kernel.org/stable/c/e1c86511241588efffaa49556196f09a498d5057",
            "https://git.kernel.org/stable/c/426fae93c01dffa379225eb2bd4d3cdc42c6eec5",
            "https://git.kernel.org/stable/c/475c58e1a471e9b873e3e39958c64a2d278275c8",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nEDAC/thunderx: Fix possible out-of-bounds string access\n\nEnabling -Wstringop-overflow globally exposes a warning for a common bug\nin the usage of strncat():\n\n  drivers/edac/thunderx_edac.c: In function 'thunderx_ocx_com_threaded_isr':\n  drivers/edac/thunderx_edac.c:1136:17: error: 'strncat' specified bound 1024 equals destination size [-Werror=stringop-overflow=]\n   1136 |                 strncat(msg, other, OCX_MESSAGE_SIZE);\n        |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ...\n   1145 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n   ...\n   1150 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n\n   ...\n\nApparently the author of this driver expected strncat() to behave the\nway that strlcat() does, which uses the size of the destination buffer\nas its third argument rather than the length of the source buffer. The\nresult is that there is no check on the size of the allocated buffer.\n\nChange it to strlcat().\n\n  [ bp: Trim compiler output, fixup commit message. ]"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2024-26597",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/093dab655808207f7a9f54cf156240aeafc70590",
            "https://git.kernel.org/stable/c/02467ab8b404d80429107588e0f3425cf5fcd2e5",
            "https://git.kernel.org/stable/c/2295c22348faf795e1ccdf618f6eb7afdb2f7447",
            "https://git.kernel.org/stable/c/3b5254862258b595662a0ccca6e9eeb88d6e7468",
            "https://git.kernel.org/stable/c/ee1dc3bf86f2df777038506b139371a9add02534",
            "https://git.kernel.org/stable/c/c4734535034672f59f2652e1e0058c490da62a5c",
            "https://git.kernel.org/stable/c/17d06a5c44d8fd2e8e61bac295b09153496f87e1",
            "https://git.kernel.org/stable/c/b33fb5b801c6db408b774a68e7c8722796b59ecc",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qualcomm: rmnet: fix global oob in rmnet_policy\n\nThe variable rmnet_link_ops assign a *bigger* maxtype which leads to a\nglobal out-of-bounds read when parsing the netlink attributes. See bug\ntrace below:\n\n==================================================================\nBUG: KASAN: global-out-of-bounds in validate_nla lib/nlattr.c:386 [inline]\nBUG: KASAN: global-out-of-bounds in __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600\nRead of size 1 at addr ffffffff92c438d0 by task syz-executor.6/84207\n\nCPU: 0 PID: 84207 Comm: syz-executor.6 Tainted: G                 N 6.1.0 #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x8b/0xb3 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:284 [inline]\n print_report+0x172/0x475 mm/kasan/report.c:395\n kasan_report+0xbb/0x1c0 mm/kasan/report.c:495\n validate_nla lib/nlattr.c:386 [inline]\n __nla_validate_parse+0x24af/0x2750 lib/nlattr.c:600\n __nla_parse+0x3e/0x50 lib/nlattr.c:697\n nla_parse_nested_deprecated include/net/netlink.h:1248 [inline]\n __rtnl_newlink+0x50a/0x1880 net/core/rtnetlink.c:3485\n rtnl_newlink+0x64/0xa0 net/core/rtnetlink.c:3594\n rtnetlink_rcv_msg+0x43c/0xd70 net/core/rtnetlink.c:6091\n netlink_rcv_skb+0x14f/0x410 net/netlink/af_netlink.c:2540\n netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]\n netlink_unicast+0x54e/0x800 net/netlink/af_netlink.c:1345\n netlink_sendmsg+0x930/0xe50 net/netlink/af_netlink.c:1921\n sock_sendmsg_nosec net/socket.c:714 [inline]\n sock_sendmsg+0x154/0x190 net/socket.c:734\n ____sys_sendmsg+0x6df/0x840 net/socket.c:2482\n ___sys_sendmsg+0x110/0x1b0 net/socket.c:2536\n __sys_sendmsg+0xf3/0x1c0 net/socket.c:2565\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7fdcf2072359\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fdcf13e3168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007fdcf219ff80 RCX: 00007fdcf2072359\nRDX: 0000000000000000 RSI: 0000000020000200 RDI: 0000000000000003\nRBP: 00007fdcf20bd493 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007fffbb8d7bdf R14: 00007fdcf13e3300 R15: 0000000000022000\n </TASK>\n\nThe buggy address belongs to the variable:\n rmnet_policy+0x30/0xe0\n\nThe buggy address belongs to the physical page:\npage:0000000065bdeb3c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x155243\nflags: 0x200000000001000(reserved|node=0|zone=2)\nraw: 0200000000001000 ffffea00055490c8 ffffea00055490c8 0000000000000000\nraw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffffffff92c43780: f9 f9 f9 f9 00 00 00 02 f9 f9 f9 f9 00 00 00 07\n ffffffff92c43800: f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9 06 f9 f9 f9\n>ffffffff92c43880: f9 f9 f9 f9 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9\n                                                 ^\n ffffffff92c43900: 00 00 00 00 00 00 00 00 07 f9 f9 f9 f9 f9 f9 f9\n ffffffff92c43980: 00 00 00 07 f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9\n\nAccording to the comment of `nla_parse_nested_deprecated`, the maxtype\nshould be len(destination array) - 1. Hence use `IFLA_RMNET_MAX` here."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-23T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-26598",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d04acadb6490aa3314f9c9e087691e55de153b88",
            "https://git.kernel.org/stable/c/ba7be666740847d967822bed15500656b26bc703",
            "https://git.kernel.org/stable/c/12c2759ab1343c124ed46ba48f27bd1ef5d2dff4",
            "https://git.kernel.org/stable/c/dba788e25f05209adf2b0175eb1691dc89fb1ba6",
            "https://git.kernel.org/stable/c/65b201bf3e9af1b0254243a5881390eda56f72d1",
            "https://git.kernel.org/stable/c/dd3956a1b3dd11f46488c928cb890d6937d1ca80",
            "https://git.kernel.org/stable/c/ad362fe07fecf0aba839ff2cc59a3617bd42c33f",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: vgic-its: Avoid potential UAF in LPI translation cache\n\nThere is a potential UAF scenario in the case of an LPI translation\ncache hit racing with an operation that invalidates the cache, such\nas a DISCARD ITS command. The root of the problem is that\nvgic_its_check_cache() does not elevate the refcount on the vgic_irq\nbefore dropping the lock that serializes refcount changes.\n\nHave vgic_its_check_cache() raise the refcount on the returned vgic_irq\nand add the corresponding decrement after queueing the interrupt."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-129",
        "id": "CVE-2023-52451",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/bb79613a9a704469ddb8d6c6029d532a5cea384c",
            "https://git.kernel.org/stable/c/9b5f03500bc5b083c0df696d7dd169d7ef3dd0c7",
            "https://git.kernel.org/stable/c/b582aa1f66411d4adcc1aa55b8c575683fb4687e",
            "https://git.kernel.org/stable/c/999a27b3ce9a69d54ccd5db000ec3a447bc43e6d",
            "https://git.kernel.org/stable/c/026fd977dc50ff4a5e09bfb0603557f104d3f3a0",
            "https://git.kernel.org/stable/c/df16afba2378d985359812c865a15c05c70a967e",
            "https://git.kernel.org/stable/c/708a4b59baad96c4718dc0bd3a3427d3ab22fedc",
            "https://git.kernel.org/stable/c/bd68ffce69f6cf8ddd3a3c32549d1d2275e49fc5",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/memhp: Fix access beyond end of drmem array\n\ndlpar_memory_remove_by_index() may access beyond the bounds of the\ndrmem lmb array when the LMB lookup fails to match an entry with the\ngiven DRC index. When the search fails, the cursor is left pointing to\n&drmem_info->lmbs[drmem_info->n_lmbs], which is one element past the\nlast valid entry in the array. The debug message at the end of the\nfunction then dereferences this pointer:\n\n        pr_debug(\"Failed to hot-remove memory at %llx\\n\",\n                 lmb->base_addr);\n\nThis was found by inspection and confirmed with KASAN:\n\n  pseries-hotplug-mem: Attempting to hot-remove LMB, drc index 1234\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in dlpar_memory+0x298/0x1658\n  Read of size 8 at addr c000000364e97fd0 by task bash/949\n\n  dump_stack_lvl+0xa4/0xfc (unreliable)\n  print_report+0x214/0x63c\n  kasan_report+0x140/0x2e0\n  __asan_load8+0xa8/0xe0\n  dlpar_memory+0x298/0x1658\n  handle_dlpar_errorlog+0x130/0x1d0\n  dlpar_store+0x18c/0x3e0\n  kobj_attr_store+0x68/0xa0\n  sysfs_kf_write+0xc4/0x110\n  kernfs_fop_write_iter+0x26c/0x390\n  vfs_write+0x2d4/0x4e0\n  ksys_write+0xac/0x1a0\n  system_call_exception+0x268/0x530\n  system_call_vectored_common+0x15c/0x2ec\n\n  Allocated by task 1:\n   kasan_save_stack+0x48/0x80\n   kasan_set_track+0x34/0x50\n   kasan_save_alloc_info+0x34/0x50\n   __kasan_kmalloc+0xd0/0x120\n   __kmalloc+0x8c/0x320\n   kmalloc_array.constprop.0+0x48/0x5c\n   drmem_init+0x2a0/0x41c\n   do_one_initcall+0xe0/0x5c0\n   kernel_init_freeable+0x4ec/0x5a0\n   kernel_init+0x30/0x1e0\n   ret_from_kernel_user_thread+0x14/0x1c\n\n  The buggy address belongs to the object at c000000364e80000\n   which belongs to the cache kmalloc-128k of size 131072\n  The buggy address is located 0 bytes to the right of\n   allocated 98256-byte region [c000000364e80000, c000000364e97fd0)\n\n  ==================================================================\n  pseries-hotplug-mem: Failed to hot-remove memory at 0\n\nLog failed lookups with a separate message and dereference the\ncursor only when it points to a valid entry."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-26586",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/56750ea5d15426b5f307554e7699e8b5f76c3182",
            "https://git.kernel.org/stable/c/348112522a35527c5bcba933b9fefb40a4f44f15",
            "https://git.kernel.org/stable/c/2f5e1565740490706332c06f36211d4ce0f88e62",
            "https://git.kernel.org/stable/c/a361c2c1da5dbb13ca67601cf961ab3ad68af383",
            "https://git.kernel.org/stable/c/483ae90d8f976f8339cf81066312e1329f2d3706",
            "https://git.kernel.org/stable/c/6fd24675188d354b1cad47462969afa2ab09d819",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix stack corruption\n\nWhen tc filters are first added to a net device, the corresponding local\nport gets bound to an ACL group in the device. The group contains a list\nof ACLs. In turn, each ACL points to a different TCAM region where the\nfilters are stored. During forwarding, the ACLs are sequentially\nevaluated until a match is found.\n\nOne reason to place filters in different regions is when they are added\nwith decreasing priorities and in an alternating order so that two\nconsecutive filters can never fit in the same region because of their\nkey usage.\n\nIn Spectrum-2 and newer ASICs the firmware started to report that the\nmaximum number of ACLs in a group is more than 16, but the layout of the\nregister that configures ACL groups (PAGT) was not updated to account\nfor that. It is therefore possible to hit stack corruption [1] in the\nrare case where more than 16 ACLs in a group are required.\n\nFix by limiting the maximum ACL group size to the minimum between what\nthe firmware reports and the maximum ACLs that fit in the PAGT register.\n\nAdd a test case to make sure the machine does not crash when this\ncondition is hit.\n\n[1]\nKernel panic - not syncing: stack-protector: Kernel stack is corrupted in: mlxsw_sp_acl_tcam_group_update+0x116/0x120\n[...]\n dump_stack_lvl+0x36/0x50\n panic+0x305/0x330\n __stack_chk_fail+0x15/0x20\n mlxsw_sp_acl_tcam_group_update+0x116/0x120\n mlxsw_sp_acl_tcam_group_region_attach+0x69/0x110\n mlxsw_sp_acl_tcam_vchunk_get+0x492/0xa20\n mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0\n mlxsw_sp_acl_rule_add+0x47/0x240\n mlxsw_sp_flower_replace+0x1a9/0x1d0\n tc_setup_cb_add+0xdc/0x1c0\n fl_hw_replace_filter+0x146/0x1f0\n fl_change+0xc17/0x1360\n tc_new_tfilter+0x472/0xb90\n rtnetlink_rcv_msg+0x313/0x3b0\n netlink_rcv_skb+0x58/0x100\n netlink_unicast+0x244/0x390\n netlink_sendmsg+0x1e4/0x440\n ____sys_sendmsg+0x164/0x260\n ___sys_sendmsg+0x9a/0xe0\n __sys_sendmsg+0x7a/0xc0\n do_syscall_64+0x40/0xe0\n entry_SYSCALL_64_after_hwframe+0x63/0x6b"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52443",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/9286ee97aa4803d99185768735011d0d65827c9e",
            "https://git.kernel.org/stable/c/1d8e62b5569cc1466ceb8a7e4872cf10160a9dcf",
            "https://git.kernel.org/stable/c/5ff00408e5029d3550ee77f62dc15f1e15c47f87",
            "https://git.kernel.org/stable/c/0a12db736edbb4933e4274932aeea594b5876fa4",
            "https://git.kernel.org/stable/c/9d4fa5fe2b1d56662afd14915a73b4d0783ffa45",
            "https://git.kernel.org/stable/c/5c0392fdafb0a2321311900be83ffa572bef8203",
            "https://git.kernel.org/stable/c/77ab09b92f16c8439a948d1af489196953dc4a0e",
            "https://git.kernel.org/stable/c/55a8210c9e7d21ff2644809699765796d4bfb200",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: avoid crash when parsed profile name is empty\n\nWhen processing a packed profile in unpack_profile() described like\n\n \"profile :ns::samba-dcerpcd /usr/lib*/samba/{,samba/}samba-dcerpcd {...}\"\n\na string \":samba-dcerpcd\" is unpacked as a fully-qualified name and then\npassed to aa_splitn_fqname().\n\naa_splitn_fqname() treats \":samba-dcerpcd\" as only containing a namespace.\nThus it returns NULL for tmpname, meanwhile tmpns is non-NULL. Later\naa_alloc_profile() crashes as the new profile name is NULL now.\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 6 PID: 1657 Comm: apparmor_parser Not tainted 6.7.0-rc2-dirty #16\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\nRIP: 0010:strlen+0x1e/0xa0\nCall Trace:\n <TASK>\n ? strlen+0x1e/0xa0\n aa_policy_init+0x1bb/0x230\n aa_alloc_profile+0xb1/0x480\n unpack_profile+0x3bc/0x4960\n aa_unpack+0x309/0x15e0\n aa_replace_profiles+0x213/0x33c0\n policy_update+0x261/0x370\n profile_replace+0x20e/0x2a0\n vfs_write+0x2af/0xe00\n ksys_write+0x126/0x250\n do_syscall_64+0x46/0xf0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n </TASK>\n---[ end trace 0000000000000000 ]---\nRIP: 0010:strlen+0x1e/0xa0\n\nIt seems such behaviour of aa_splitn_fqname() is expected and checked in\nother places where it is called (e.g. aa_remove_profiles). Well, there\nis an explicit comment \"a ns name without a following profile is allowed\"\ninside.\n\nAFAICS, nothing can prevent unpacked \"name\" to be in form like\n\":samba-dcerpcd\" - it is passed from userspace.\n\nDeny the whole profile set replacement in such case and inform user with\nEPROTO and an explaining message.\n\nFound by Linux Verification Center (linuxtesting.org)."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-119",
        "id": "CVE-2023-52444",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/02160112e6d45c2610b049df6eb693d7a2e57b46",
            "https://git.kernel.org/stable/c/5624a3c1b1ebc8991318e1cce2aa719542991024",
            "https://git.kernel.org/stable/c/6f866885e147d33efc497f1095f35b2ee5ec7310",
            "https://git.kernel.org/stable/c/f100ba617d8be6c98a68f3744ef7617082975b77",
            "https://git.kernel.org/stable/c/f0145860c20be6bae6785c7a2249577674702ac7",
            "https://git.kernel.org/stable/c/d3c0b49aaa12a61d560528f5d605029ab57f0728",
            "https://git.kernel.org/stable/c/2fb4867f4405aea8c0519d7d188207f232a57862",
            "https://git.kernel.org/stable/c/53edb549565f55ccd0bdf43be3d66ce4c2d48b28",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid dirent corruption\n\nAs Al reported in link[1]:\n\nf2fs_rename()\n...\n\tif (old_dir != new_dir && !whiteout)\n\t\tf2fs_set_link(old_inode, old_dir_entry,\n\t\t\t\t\told_dir_page, new_dir);\n\telse\n\t\tf2fs_put_page(old_dir_page, 0);\n\nYou want correct inumber in the \"..\" link.  And cross-directory\nrename does move the source to new parent, even if you'd been asked\nto leave a whiteout in the old place.\n\n[1] https://lore.kernel.org/all/20231017055040.GN800259@ZenIV/\n\nWith below testcase, it may cause dirent corruption, due to it missed\nto call f2fs_set_link() to update \"..\" link to new directory.\n- mkdir -p dir/foo\n- renameat2 -w dir/foo bar\n\n[ASSERT] (__chk_dots_dentries:1421)  --> Bad inode number[0x4] for '..', parent parent ino is [0x3]\n[FSCK] other corrupted bugs                           [Fail]"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-52445",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ec36c134dd020d28e312c2f1766f85525e747aab",
            "https://git.kernel.org/stable/c/47aa8fcd5e8b5563af4042a00f25ba89bef8f33d",
            "https://git.kernel.org/stable/c/3233d8bf7893550045682192cb227af7fa3defeb",
            "https://git.kernel.org/stable/c/ec3634ebe23fc3c44ebc67c6d25917300bc68c08",
            "https://git.kernel.org/stable/c/30773ea47d41773f9611ffb4ebc9bda9d19a9e7e",
            "https://git.kernel.org/stable/c/2cf0005d315549b8d2b940ff96a66c2a889aa795",
            "https://git.kernel.org/stable/c/437b5f57732bb4cc32cc9f8895d2010ee9ff521c",
            "https://git.kernel.org/stable/c/ded85b0c0edd8f45fec88783d7555a5b982449c1",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pvrusb2: fix use after free on context disconnection\n\nUpon module load, a kthread is created targeting the\npvr2_context_thread_func function, which may call pvr2_context_destroy\nand thus call kfree() on the context object. However, that might happen\nbefore the usb hub_event handler is able to notify the driver. This\npatch adds a sanity check before the invalid read reported by syzbot,\nwithin the context disconnection call stack."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52448",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/efc8ef87ab9185a23d5676f2f7d986022d91bcde",
            "https://git.kernel.org/stable/c/5c28478af371a1c3fdb570ca67f110e1ae60fc37",
            "https://git.kernel.org/stable/c/ee0586d73cbaf0e7058bc640d62a9daf2dfa9178",
            "https://git.kernel.org/stable/c/d69d7804cf9e2ba171a27e5f98bc266f13d0414a",
            "https://git.kernel.org/stable/c/067a7c48c2c70f05f9460d6f0e8423e234729f05",
            "https://git.kernel.org/stable/c/c323efd620c741168c8e0cc6fc0be04ab57e331a",
            "https://git.kernel.org/stable/c/8877243beafa7c6bfc42022cbfdf9e39b25bd4fa",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix kernel NULL pointer dereference in gfs2_rgrp_dump\n\nSyzkaller has reported a NULL pointer dereference when accessing\nrgd->rd_rgl in gfs2_rgrp_dump().  This can happen when creating\nrgd->rd_gl fails in read_rindex_entry().  Add a NULL pointer check in\ngfs2_rgrp_dump() to prevent that."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-22T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-52449",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aeba358bcc8ffddf9b4a9bd0e5ec9eb338d46022",
            "https://git.kernel.org/stable/c/1bf4fe14e97cda621522eb2f28b0a4e87c5b0745",
            "https://git.kernel.org/stable/c/001a3f59d8c914ef8273461d4bf495df384cc5f8",
            "https://git.kernel.org/stable/c/d8ac2537763b54d278b80b2b080e1652523c7d4c",
            "https://git.kernel.org/stable/c/5389407bba1eab1266c6d83e226fb0840cb98dd5",
            "https://git.kernel.org/stable/c/cfd7c9d260dc0a3baaea05a122a19ab91e193c65",
            "https://git.kernel.org/stable/c/b36aaa64d58aaa2f2cbc8275e89bae76a2b6c3dc",
            "https://git.kernel.org/stable/c/a43bdc376deab5fff1ceb93dca55bcab8dbdc1d6",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: Fix gluebi NULL pointer dereference caused by ftl notifier\n\nIf both ftl.ko and gluebi.ko are loaded, the notifier of ftl\ntriggers NULL pointer dereference when trying to access\n\u2018gluebi->desc\u2019 in gluebi_read().\n\nubi_gluebi_init\n  ubi_register_volume_notifier\n    ubi_enumerate_volumes\n      ubi_notify_all\n        gluebi_notify    nb->notifier_call()\n          gluebi_create\n            mtd_device_register\n              mtd_device_parse_register\n                add_mtd_device\n                  blktrans_notify_add   not->add()\n                    ftl_add_mtd         tr->add_mtd()\n                      scan_header\n                        mtd_read\n                          mtd_read_oob\n                            mtd_read_oob_std\n                              gluebi_read   mtd->read()\n                                gluebi->desc - NULL\n\nDetailed reproduction information available at the Link [1],\n\nIn the normal case, obtain gluebi->desc in the gluebi_get_device(),\nand access gluebi->desc in the gluebi_read(). However,\ngluebi_get_device() is not executed in advance in the\nftl_add_mtd() process, which leads to NULL pointer dereference.\n\nThe solution for the gluebi module is to run jffs2 on the UBI\nvolume without considering working with ftl or mtdblock [2].\nTherefore, this problem can be avoided by preventing gluebi from\ncreating the mtdblock device after creating mtd partition of the\ntype MTD_UBIVOLUME."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-20T21:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2023-52436",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/16ae3132ff7746894894927c1892493693b89135",
            "https://git.kernel.org/stable/c/12cf91e23b126718a96b914f949f2cdfeadc7b2a",
            "https://git.kernel.org/stable/c/3e47740091b05ac8d7836a33afd8646b6863ca52",
            "https://git.kernel.org/stable/c/32a6cfc67675ee96fe107aeed5af9776fec63f11",
            "https://git.kernel.org/stable/c/5de9e9dd1828db9b8b962f7ca42548bd596deb8a",
            "https://git.kernel.org/stable/c/2525d1ba225b5c167162fa344013c408e8b4de36",
            "https://git.kernel.org/stable/c/f6c30bfe5a49bc38cae985083a11016800708fea",
            "https://git.kernel.org/stable/c/e26b6d39270f5eab0087453d9b544189a38c8564",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: explicitly null-terminate the xattr list\n\nWhen setting an xattr, explicitly null-terminate the xattr list.  This\neliminates the fragile assumption that the unused xattr space is always\nzeroed."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-20T21:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2023-52438",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a53e15e592b4dcc91c3a3b8514e484a0bdbc53a3",
            "https://git.kernel.org/stable/c/c8c1158ffb007197f31f9d9170cf13e4f34cbb5c",
            "https://git.kernel.org/stable/c/8ad4d580e8aff8de2a4d57c5930fcc29f1ffd4a6",
            "https://git.kernel.org/stable/c/9fa04c93f24138747807fe75b5591bb680098f56",
            "https://git.kernel.org/stable/c/a49087ab93508b60d9b8add91707a22dda832869",
            "https://git.kernel.org/stable/c/e074686e993ff1be5f21b085a3b1b4275ccd5727",
            "https://git.kernel.org/stable/c/3f489c2067c5824528212b0fc18b28d51332d906",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix use-after-free in shinker's callback\n\nThe mmap read lock is used during the shrinker's callback, which means\nthat using alloc->vma pointer isn't safe as it can race with munmap().\nAs of commit dd2283f2605e (\"mm: mmap: zap pages with read mmap_sem in\nmunmap\") the mmap lock is downgraded after the vma has been isolated.\n\nI was able to reproduce this issue by manually adding some delays and\ntriggering page reclaiming through the shrinker's debug sysfs. The\nfollowing KASAN report confirms the UAF:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in zap_page_range_single+0x470/0x4b8\n  Read of size 8 at addr ffff356ed50e50f0 by task bash/478\n\n  CPU: 1 PID: 478 Comm: bash Not tainted 6.6.0-rc5-00055-g1c8b86a3799f-dirty #70\n  Hardware name: linux,dummy-virt (DT)\n  Call trace:\n   zap_page_range_single+0x470/0x4b8\n   binder_alloc_free_page+0x608/0xadc\n   __list_lru_walk_one+0x130/0x3b0\n   list_lru_walk_node+0xc4/0x22c\n   binder_shrink_scan+0x108/0x1dc\n   shrinker_debugfs_scan_write+0x2b4/0x500\n   full_proxy_write+0xd4/0x140\n   vfs_write+0x1ac/0x758\n   ksys_write+0xf0/0x1dc\n   __arm64_sys_write+0x6c/0x9c\n\n  Allocated by task 492:\n   kmem_cache_alloc+0x130/0x368\n   vm_area_alloc+0x2c/0x190\n   mmap_region+0x258/0x18bc\n   do_mmap+0x694/0xa60\n   vm_mmap_pgoff+0x170/0x29c\n   ksys_mmap_pgoff+0x290/0x3a0\n   __arm64_sys_mmap+0xcc/0x144\n\n  Freed by task 491:\n   kmem_cache_free+0x17c/0x3c8\n   vm_area_free_rcu_cb+0x74/0x98\n   rcu_core+0xa38/0x26d4\n   rcu_core_si+0x10/0x1c\n   __do_softirq+0x2fc/0xd24\n\n  Last potentially related work creation:\n   __call_rcu_common.constprop.0+0x6c/0xba0\n   call_rcu+0x10/0x1c\n   vm_area_free+0x18/0x24\n   remove_vma+0xe4/0x118\n   do_vmi_align_munmap.isra.0+0x718/0xb5c\n   do_vmi_munmap+0xdc/0x1fc\n   __vm_munmap+0x10c/0x278\n   __arm64_sys_munmap+0x58/0x7c\n\nFix this issue by performing instead a vma_lookup() which will fail to\nfind the vma that was isolated before the mmap lock downgrade. Note that\nthis option has better performance than upgrading to a mmap write lock\nwhich would increase contention. Plus, mmap_write_trylock() has been\nrecently removed anyway."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-20T21:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "CWE-415",
        "id": "CVE-2023-52439",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3174e0f7de1ba392dc191625da83df02d695b60c",
            "https://git.kernel.org/stable/c/e93da893d52d82d57fc0db2ca566024e0f26ff50",
            "https://git.kernel.org/stable/c/5e0be1229ae199ebb90b33102f74a0f22d152570",
            "https://git.kernel.org/stable/c/5cf604ee538ed0c467abe3b4cda5308a6398f0f7",
            "https://git.kernel.org/stable/c/17a8519cb359c3b483fb5c7367efa9a8a508bdea",
            "https://git.kernel.org/stable/c/35f102607054faafe78d2a6994b18d5d9d6e92ad",
            "https://git.kernel.org/stable/c/913205930da6213305616ac539447702eaa85e41",
            "https://git.kernel.org/stable/c/0c9ae0b8605078eafc3bea053cc78791e97ba2e2",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio: Fix use-after-free in uio_open\n\ncore-1\t\t\t\tcore-2\n-------------------------------------------------------\nuio_unregister_device\t\tuio_open\n\t\t\t\tidev = idr_find()\ndevice_unregister(&idev->dev)\nput_device(&idev->dev)\nuio_device_release\n\t\t\t\tget_device(&idev->dev)\nkfree(idev)\nuio_free_minor(minor)\n\t\t\t\tuio_release\n\t\t\t\tput_device(&idev->dev)\n\t\t\t\tkfree(idev)\n-------------------------------------------------------\n\nIn the core-1 uio_unregister_device(), the device_unregister will kfree\nidev when the idev->dev kobject ref is 1. But after core-1\ndevice_unregister, put_device and before doing kfree, the core-2 may\nget_device. Then:\n1. After core-1 kfree idev, the core-2 will do use-after-free for idev.\n2. When core-2 do uio_release and put_device, the idev will be double\n   freed.\n\nTo address this issue, we can get idev atomic & inc idev reference with\nminor_lock."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-07T21:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-6535",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/errata/RHSA-2024:0723",
            "https://access.redhat.com/errata/RHSA-2024:0724",
            "https://access.redhat.com/errata/RHSA-2024:0725",
            "https://access.redhat.com/security/cve/CVE-2023-6535",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2254053",
            "https://access.redhat.com/errata/RHSA-2024:0881",
            "https://access.redhat.com/errata/RHSA-2024:0897",
            "https://access.redhat.com/errata/RHSA-2024:1248",
            "https://security.netapp.com/advisory/ntap-20240415-0003/",
            "https://access.redhat.com/errata/RHSA-2024:3810",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver, causing kernel panic and a denial of service."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-07T21:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-6536",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/errata/RHSA-2024:0723",
            "https://access.redhat.com/errata/RHSA-2024:0724",
            "https://access.redhat.com/errata/RHSA-2024:0725",
            "https://access.redhat.com/security/cve/CVE-2023-6536",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2254052",
            "https://access.redhat.com/errata/RHSA-2024:0881",
            "https://access.redhat.com/errata/RHSA-2024:0897",
            "https://access.redhat.com/errata/RHSA-2024:1248",
            "https://security.netapp.com/advisory/ntap-20240415-0001/",
            "https://access.redhat.com/errata/RHSA-2024:3810",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver, causing kernel panic and a denial of service."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-07T21:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-6356",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/errata/RHSA-2024:0723",
            "https://access.redhat.com/errata/RHSA-2024:0724",
            "https://access.redhat.com/errata/RHSA-2024:0725",
            "https://access.redhat.com/security/cve/CVE-2023-6356",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2254054",
            "https://access.redhat.com/errata/RHSA-2024:0881",
            "https://access.redhat.com/errata/RHSA-2024:0897",
            "https://access.redhat.com/errata/RHSA-2024:1248",
            "https://security.netapp.com/advisory/ntap-20240415-0002/",
            "https://access.redhat.com/errata/RHSA-2024:3810",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver and causing kernel panic and a denial of service."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-02-05T08:15:00",
        "access": {},
        "assigner": "security@openanolis.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2024-24860",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://bugzilla.openanolis.cn/show_bug.cgi?id=8151",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A race condition was found in the Linux kernel's bluetooth device driver in {min,max}_key_size_set() function. This can result in a null pointer dereference issue, possibly leading to a kernel panic or denial of service issue.\n\n\n\n\n"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-01-31T13:15:00",
        "access": {},
        "assigner": "security@google.com",
        "cvss": null,
        "cwe": "CWE-416",
        "id": "CVE-2024-1086",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f342de4e2f33e0e39165d8639387aa6c19dff660",
            "https://kernel.dance/f342de4e2f33e0e39165d8639387aa6c19dff660",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7LSPIOMIJYTLZB6QKPQVVAYSUETUWKPF/",
            "https://github.com/Notselwyn/CVE-2024-1086",
            "https://news.ycombinator.com/item?id=39828424",
            "https://pwning.tech/nftables/",
            "http://www.openwall.com/lists/oss-security/2024/04/15/2",
            "http://www.openwall.com/lists/oss-security/2024/04/10/23",
            "http://www.openwall.com/lists/oss-security/2024/04/10/22",
            "http://www.openwall.com/lists/oss-security/2024/04/14/1",
            "http://www.openwall.com/lists/oss-security/2024/04/17/5",
            "https://security.netapp.com/advisory/ntap-20240614-0009/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A use-after-free vulnerability in the Linux kernel's netfilter: nf_tables component can be exploited to achieve local privilege escalation.\n\nThe nft_verdict_init() function allows positive values as drop error within the hook verdict, and hence the nf_hook_slow() function can cause a double free vulnerability when NF_DROP is issued with a drop error which resembles NF_ACCEPT.\n\nWe recommend upgrading past commit f342de4e2f33e0e39165d8639387aa6c19dff660.\n\n"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-01-29T11:15:00",
        "access": {},
        "assigner": "security@xen.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-46838",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://xenbits.xenproject.org/xsa/advisory-448.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFYW6R64GPLUOXSQBJI3JBUX3HGLAYPP/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RGEKT4DKSDXDS34EL7M4UVJMMPH7Z3ZZ/",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "Transmit requests in Xen's virtual network protocol can consist of\nmultiple parts.  While not really useful, except for the initial part\nany of them may be of zero length, i.e. carry no data at all.  Besides a\ncertain initial portion of the to be transferred data, these parts are\ndirectly translated into what Linux calls SKB fragments.  Such converted\nrequest parts can, when for a particular SKB they are all of length\nzero, lead to a de-reference of NULL in core networking code.\n"
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-01-17T16:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-0646",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-0646",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2253908",
            "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=c5a595000e267",
            "https://access.redhat.com/errata/RHSA-2024:0723",
            "https://access.redhat.com/errata/RHSA-2024:0724",
            "https://access.redhat.com/errata/RHSA-2024:0725",
            "https://access.redhat.com/errata/RHSA-2024:0850",
            "https://access.redhat.com/errata/RHSA-2024:0851",
            "https://access.redhat.com/errata/RHSA-2024:0876",
            "https://access.redhat.com/errata/RHSA-2024:0881",
            "https://access.redhat.com/errata/RHSA-2024:0897",
            "https://access.redhat.com/errata/RHSA-2024:1248",
            "https://access.redhat.com/errata/RHSA-2024:1250",
            "https://access.redhat.com/errata/RHSA-2024:1251",
            "https://access.redhat.com/errata/RHSA-2024:1253",
            "https://access.redhat.com/errata/RHSA-2024:1268",
            "https://access.redhat.com/errata/RHSA-2024:1269",
            "https://access.redhat.com/errata/RHSA-2024:1278",
            "https://access.redhat.com/errata/RHSA-2024:1306",
            "https://access.redhat.com/errata/RHSA-2024:1367",
            "https://access.redhat.com/errata/RHSA-2024:1368",
            "https://access.redhat.com/errata/RHSA-2024:1377",
            "https://access.redhat.com/errata/RHSA-2024:1382",
            "https://access.redhat.com/errata/RHSA-2024:1404",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "An out-of-bounds memory write flaw was found in the Linux kernel\u2019s Transport Layer Security functionality in how a user calls a function splice with a ktls socket as the destination. This flaw allows a local user to crash or potentially escalate their privileges on the system."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-01-12T02:15:00",
        "access": {},
        "assigner": "security@ubuntu.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2023-6040",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6040",
            "https://www.openwall.com/lists/oss-security/2024/01/12/1",
            "http://www.openwall.com/lists/oss-security/2024/01/12/1",
            "http://packetstormsecurity.com/files/177029/Kernel-Live-Patch-Security-Notice-LSN-0100-1.html",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "An out-of-bounds access vulnerability involving netfilter was reported and fixed as: f1082dd31fe4 (netfilter: nf_tables: Reject tables of unsupported family); While creating a new netfilter table, lack of a safeguard against invalid nf_tables family (pf) values within `nf_tables_newtable` function enables an attacker to achieve out-of-bounds access."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2024-01-15T10:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2023-6915",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2023-6915",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2254982",
            "https://github.com/torvalds/linux/commit/af73483f4e8b6f5c68c9aa63257bdd929a9c194a",
            "https://access.redhat.com/errata/RHSA-2024:2394",
            "https://access.redhat.com/errata/RHSA-2024:2950",
            "https://access.redhat.com/errata/RHSA-2024:3138",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "A Null pointer dereference problem was found in ida_free in lib/idr.c in the Linux Kernel. This issue may allow an attacker using this library to cause a denial of service problem due to a missing check at a function return."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2023-12-08T17:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-125",
        "id": "CVE-2023-6606",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2023-6606",
            "https://bugzilla.kernel.org/show_bug.cgi?id=218218",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2253611",
            "https://lists.debian.org/debian-lts-announce/2024/01/msg00004.html",
            "https://access.redhat.com/errata/RHSA-2024:0723",
            "https://access.redhat.com/errata/RHSA-2024:0725",
            "https://access.redhat.com/errata/RHSA-2024:0881",
            "https://access.redhat.com/errata/RHSA-2024:0897",
            "https://access.redhat.com/errata/RHSA-2024:1188",
            "https://access.redhat.com/errata/RHSA-2024:1248",
            "https://access.redhat.com/errata/RHSA-2024:1404",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00016.html"
        ],
        "summary": "An out-of-bounds read vulnerability was found in smbCalcSize in fs/smb/client/netmisc.c in the Linux Kernel. This issue could allow a local attacker to crash the system or leak internal kernel information."
    },
    {
        "Modified": "2024-06-25T21:15:00",
        "Published": "2022-09-09T15:15:00",
        "access": {},
        "assigner": "security@openanolis.org",
        "cvss": null,
        "cwe": "CWE-476",
        "id": "CVE-2022-38096",
        "impact": {},
        "last-modified": "2024-06-25T21:15:00",
        "references": [
            "https://bugzilla.openanolis.cn/show_bug.cgi?id=2073",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
        ],
        "summary": "A NULL pointer dereference vulnerability was found in vmwgfx driver in drivers/gpu/vmxgfx/vmxgfx_execbuf.c in GPU component of Linux kernel with device file '/dev/dri/renderD128 (or Dxxx)'. This flaw allows a local attacker with a user account on the system to gain privilege, causing a denial of service(DoS)."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37167",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://github.com/Enalean/tuleap/security/advisories/GHSA-4c9f-284j-phvj",
            "https://github.com/Enalean/tuleap/commit/13eec93a353d2daf47bb8b9c548cc02f78b93a5e",
            "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=13eec93a353d2daf47bb8b9c548cc02f78b93a5e",
            "https://tuleap.net/plugins/tracker/?aid=38297"
        ],
        "summary": "Tuleap is an Open Source Suite to improve management of software developments and collaboration. Users are able to see backlog items that they should not see. This issue has been patched in Tuleap Community Edition version 15.9.99.97."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37167",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://github.com/Enalean/tuleap/security/advisories/GHSA-4c9f-284j-phvj",
            "https://github.com/Enalean/tuleap/commit/13eec93a353d2daf47bb8b9c548cc02f78b93a5e",
            "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=13eec93a353d2daf47bb8b9c548cc02f78b93a5e",
            "https://tuleap.net/plugins/tracker/?aid=38297"
        ],
        "summary": "Tuleap is an Open Source Suite to improve management of software developments and collaboration. Users are able to see backlog items that they should not see. This issue has been patched in Tuleap Community Edition version 15.9.99.97."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4883",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, a Remote Code Execution issue exists in Progress WhatsUp Gold. This vulnerability allows an unauthenticated attacker to achieve the RCE as a service account through NmApi.exe."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5011",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, an uncontrolled resource consumption vulnerability exists.\u00a0A specially crafted unauthenticated HTTP request\u00a0to the TestController Chart functionality\u00a0can lead to denial of service."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37894",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://github.com/squid-cache/squid/security/advisories/GHSA-wgvf-q977-9xjg",
            "https://github.com/squid-cache/squid/commit/f411fe7d75197852f0e5ee85027a06d58dd8df4c.patch"
        ],
        "summary": "Squid is a caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. Due to an Out-of-bounds Write error when assigning ESI variables, Squid is susceptible to a Memory Corruption error. This error can lead to a Denial of Service attack."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security-alert@hpe.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6206",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://support.hpe.com/hpesc/public/docDisplay?docId=hpesbgn04659en_us&docLocale=en_US"
        ],
        "summary": "A security vulnerability has been identified in HPE Athonet Mobile Core software. The core application contains a code injection vulnerability where a threat actor could execute arbitrary commands with the privilege of the underlying container leading to complete takeover of the target system."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-4498",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://huntr.com/bounties/9238e88a-a6ca-4915-9b5d-6cdb4148d3f4"
        ],
        "summary": "A Path Traversal and Remote File Inclusion (RFI) vulnerability exists in the parisneo/lollms-webui application, affecting versions v9.7 to the latest. The vulnerability arises from insufficient input validation in the `/apply_settings` function, allowing an attacker to manipulate the `discussion_db_name` parameter to traverse the file system and include arbitrary files. This issue is compounded by the bypass of input filtering in the `install_binding`, `reinstall_binding`, and `unInstall_binding` endpoints, despite the presence of a `sanitize_path_from_endpoint(data.name)` filter. Successful exploitation enables an attacker to upload and execute malicious code on the victim's system, leading to Remote Code Execution (RCE)."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4884",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0an unauthenticated Remote Code Execution vulnerability in Progress WhatsUpGold.\u00a0\u00a0The Apm.UI.Areas.APM.Controllers.CommunityController\n\n allows execution of commands with iisapppool\\nmconsole privileges."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4885",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0an unauthenticated Remote Code Execution vulnerability in Progress WhatsUpGold.\u00a0\u00a0The \n\nWhatsUp.ExportUtilities.Export.GetFileWithoutZip\n\n\n\n allows execution of commands with iisapppool\\nmconsole privileges."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5008",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, \n\nan authenticated user with certain permissions can upload an arbitrary file and obtain RCE using\u00a0Apm.UI.Areas.APM.Controllers.Api.Applications.AppProfileImportController."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5009",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3,\u00a0an Improper Access Control vulnerability in Wug.UI.Controllers.InstallController.SetAdminPassword allows local attackers to modify admin's password."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security@progress.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5010",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://www.progress.com/network-monitoring",
            "https://community.progress.com/s/article/WhatsUp-Gold-Security-Bulletin-June-2024"
        ],
        "summary": "In WhatsUp Gold versions released before 2023.1.3, a vulnerability exists in the TestController functionality.\u00a0 A specially crafted \n\nunauthenticated\n\nHTTP request can lead to a disclosure of sensitive information."
    },
    {
        "Modified": "2024-06-25T20:15:00",
        "Published": "2024-06-25T20:15:00",
        "access": {},
        "assigner": "security.reports@fortra.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5276",
        "impact": {},
        "last-modified": "2024-06-25T20:15:00",
        "references": [
            "https://support.fortra.com/filecatalyst/kb-articles/advisory-6-24-2024-filecatalyst-workflow-sql-injection-vulnerability-YmYwYWY4OTYtNTUzMi1lZjExLTg0MGEtNjA0NWJkMDg3MDA0",
            "https://www.fortra.com/security/advisory/fi-2024-008",
            "https://www.tenable.com/security/research/tra-2024-25"
        ],
        "summary": "A SQL Injection vulnerability in Fortra FileCatalyst Workflow allows an attacker to modify application data.\u00a0 Likely impacts include creation of administrative users and deletion or modification of data in the application database. Data exfiltration via SQL injection is not possible using this vulnerability. Successful unauthenticated exploitation requires a Workflow system with anonymous access enabled, otherwise an authenticated user is required.\u00a0This issue affects all versions of FileCatalyst Workflow from 5.1.6 Build 135 and earlier."
    }
]