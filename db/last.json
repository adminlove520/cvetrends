[
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47620",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/305e92f525450f3e1b5f5c9dc7eadb152d66a082",
            "https://git.kernel.org/stable/c/7889b38a7f21ed19314f83194622b195d328465c",
            "https://git.kernel.org/stable/c/5a539c08d743d9910631448da78af5e961664c0e",
            "https://git.kernel.org/stable/c/8819f93cd4a443dfe547aa622b21f723757df3fb",
            "https://git.kernel.org/stable/c/835d3706852537bf92eb23eb8635b8dee0c0aa67",
            "https://git.kernel.org/stable/c/83d5196b65d1b29e27d7dd16a3b9b439fb1d2dba",
            "https://git.kernel.org/stable/c/bcea886771c3f22a590c8c8b9139a107bd7f1e1c",
            "https://git.kernel.org/stable/c/5c968affa804ba98c3c603f37ffea6fba618025e",
            "https://git.kernel.org/stable/c/899663be5e75dc0174dc8bda0b5e6826edf0b29a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: refactor malicious adv data check\n\nCheck for out-of-bound read was being performed at the end of while\nnum_reports loop, and would fill journal with false positives. Added\ncheck to beginning of loop processing so that it doesn't get checked\nafter ptr has been advanced."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48713",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/456f041e035913fcedb275aff6f8a71dfebcd394",
            "https://git.kernel.org/stable/c/e83d941fd3445f660d2f43647c580a320cc384f6",
            "https://git.kernel.org/stable/c/feffb6ae2c80b9a8206450cdef90f5943baced99",
            "https://git.kernel.org/stable/c/1d9093457b243061a9bba23543c38726e864a643"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel/pt: Fix crash with stop filters in single-range mode\n\nAdd a check for !buf->single before calling pt_buffer_region_size in a\nplace where a missing check can cause a kernel crash.\n\nFixes a bug introduced by commit 670638477aed (\"perf/x86/intel/pt:\nOpportunistically use single range output mode\"), which added a\nsupport for PT single-range output mode. Since that commit if a PT\nstop filter range is hit while tracing, the kernel will crash because\nof a null pointer dereference in pt_handle_status due to calling\npt_buffer_region_size without a ToPA configured.\n\nThe commit which introduced single-range mode guarded almost all uses of\nthe ToPA buffer variables with checks of the buf->single variable, but\nmissed the case where tracing was stopped by the PT hardware, which\nhappens when execution hits a configured stop filter.\n\nTested that hitting a stop filter while PT recording successfully\nrecords a trace with this patch but crashes without this patch."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48715",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/3a345198a7c2d1db2526dc60b77052f75de019d3",
            "https://git.kernel.org/stable/c/471085571f926a1fe6b1bed095638994dbf23990",
            "https://git.kernel.org/stable/c/003bcee66a8f0e76157eb3af369c173151901d97",
            "https://git.kernel.org/stable/c/53e4f71763c61a557283eb43301efd671922d1e8",
            "https://git.kernel.org/stable/c/ec4334152dae175dbd8fd5bde1d2139bbe7b42d0",
            "https://git.kernel.org/stable/c/2f5a1ac68bdf2899ce822ab845081922ea8c588e",
            "https://git.kernel.org/stable/c/2d24336c7214b281b51860e54783dfc65f1248df",
            "https://git.kernel.org/stable/c/936bd03405fc83ba039d42bc93ffd4b88418f1d3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Make bnx2fc_recv_frame() mp safe\n\nRunning tests with a debug kernel shows that bnx2fc_recv_frame() is\nmodifying the per_cpu lport stats counters in a non-mpsafe way.  Just boot\na debug kernel and run the bnx2fc driver with the hardware enabled.\n\n[ 1391.699147] BUG: using smp_processor_id() in preemptible [00000000] code: bnx2fc_\n[ 1391.699160] caller is bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]\n[ 1391.699174] CPU: 2 PID: 4355 Comm: bnx2fc_l2_threa Kdump: loaded Tainted: G    B\n[ 1391.699180] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013\n[ 1391.699183] Call Trace:\n[ 1391.699188]  dump_stack_lvl+0x57/0x7d\n[ 1391.699198]  check_preemption_disabled+0xc8/0xd0\n[ 1391.699205]  bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]\n[ 1391.699215]  ? do_raw_spin_trylock+0xb5/0x180\n[ 1391.699221]  ? bnx2fc_npiv_create_vports.isra.0+0x4e0/0x4e0 [bnx2fc]\n[ 1391.699229]  ? bnx2fc_l2_rcv_thread+0xb7/0x3a0 [bnx2fc]\n[ 1391.699240]  bnx2fc_l2_rcv_thread+0x1af/0x3a0 [bnx2fc]\n[ 1391.699250]  ? bnx2fc_ulp_init+0xc0/0xc0 [bnx2fc]\n[ 1391.699258]  kthread+0x364/0x420\n[ 1391.699263]  ? _raw_spin_unlock_irq+0x24/0x50\n[ 1391.699268]  ? set_kthread_struct+0x100/0x100\n[ 1391.699273]  ret_from_fork+0x22/0x30\n\nRestore the old get_cpu/put_cpu code with some modifications to reduce the\nsize of the critical section."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48716",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aa7152f9f117b3e66b3c0d4158ca4c6d46ab229f",
            "https://git.kernel.org/stable/c/9167f2712dc8c24964840a4d1e2ebf130e846b95",
            "https://git.kernel.org/stable/c/c5c1546a654f613e291a7c5d6f3660fc1eb6d0c7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: wcd938x: fix incorrect used of portid\n\nMixer controls have the channel id in mixer->reg, which is not same\nas port id. port id should be derived from chan_info array.\nSo fix this. Without this, its possible that we could corrupt\nstruct wcd938x_sdw_priv by accessing port_map array out of range\nwith channel id instead of port id."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48720",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2e7f5b6ee1a7a2c628253a95b0a95b582901ef1b",
            "https://git.kernel.org/stable/c/e7a0b3a0806dae3cc81931f0e83055ca2ac6f455",
            "https://git.kernel.org/stable/c/8299be160aad8548071d080518712dec0df92bd5",
            "https://git.kernel.org/stable/c/9cef24c8b76c1f6effe499d2f131807c90f7ce9a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: macsec: Fix offload support for NETDEV_UNREGISTER event\n\nCurrent macsec netdev notify handler handles NETDEV_UNREGISTER event by\nreleasing relevant SW resources only, this causes resources leak in case\nof macsec HW offload, as the underlay driver was not notified to clean\nit's macsec offload resources.\n\nFix by calling the underlay driver to clean it's relevant resources\nby moving offload handling from macsec_dellink() to macsec_common_dellink()\nwhen handling NETDEV_UNREGISTER event."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48721",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/0ef6049f664941bc0f75828b3a61877635048b27",
            "https://git.kernel.org/stable/c/504078fbe9dd570d685361b57784a6050bc40aaa",
            "https://git.kernel.org/stable/c/341adeec9adad0874f29a0a1af35638207352a39"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Forward wakeup to smc socket waitqueue after fallback\n\nWhen we replace TCP with SMC and a fallback occurs, there may be\nsome socket waitqueue entries remaining in smc socket->wq, such\nas eppoll_entries inserted by userspace applications.\n\nAfter the fallback, data flows over TCP/IP and only clcsocket->wq\nwill be woken up. Applications can't be notified by the entries\nwhich were inserted in smc socket->wq before fallback. So we need\na mechanism to wake up smc socket->wq at the same time if some\nentries remaining in it.\n\nThe current workaround is to transfer the entries from smc socket->wq\nto clcsock->wq during the fallback. But this may cause a crash\nlike this:\n\n general protection fault, probably for non-canonical address 0xdead000000000100: 0000 [#1] PREEMPT SMP PTI\n CPU: 3 PID: 0 Comm: swapper/3 Kdump: loaded Tainted: G E     5.16.0+ #107\n RIP: 0010:__wake_up_common+0x65/0x170\n Call Trace:\n  <IRQ>\n  __wake_up_common_lock+0x7a/0xc0\n  sock_def_readable+0x3c/0x70\n  tcp_data_queue+0x4a7/0xc40\n  tcp_rcv_established+0x32f/0x660\n  ? sk_filter_trim_cap+0xcb/0x2e0\n  tcp_v4_do_rcv+0x10b/0x260\n  tcp_v4_rcv+0xd2a/0xde0\n  ip_protocol_deliver_rcu+0x3b/0x1d0\n  ip_local_deliver_finish+0x54/0x60\n  ip_local_deliver+0x6a/0x110\n  ? tcp_v4_early_demux+0xa2/0x140\n  ? tcp_v4_early_demux+0x10d/0x140\n  ip_sublist_rcv_finish+0x49/0x60\n  ip_sublist_rcv+0x19d/0x230\n  ip_list_rcv+0x13e/0x170\n  __netif_receive_skb_list_core+0x1c2/0x240\n  netif_receive_skb_list_internal+0x1e6/0x320\n  napi_complete_done+0x11d/0x190\n  mlx5e_napi_poll+0x163/0x6b0 [mlx5_core]\n  __napi_poll+0x3c/0x1b0\n  net_rx_action+0x27c/0x300\n  __do_softirq+0x114/0x2d2\n  irq_exit_rcu+0xb4/0xe0\n  common_interrupt+0xba/0xe0\n  </IRQ>\n  <TASK>\n\nThe crash is caused by privately transferring waitqueue entries from\nsmc socket->wq to clcsock->wq. The owners of these entries, such as\nepoll, have no idea that the entries have been transferred to a\ndifferent socket wait queue and still use original waitqueue spinlock\n(smc socket->wq.wait.lock) to make the entries operation exclusive,\nbut it doesn't work. The operations to the entries, such as removing\nfrom the waitqueue (now is clcsock->wq after fallback), may cause a\ncrash when clcsock waitqueue is being iterated over at the moment.\n\nThis patch tries to fix this by no longer transferring wait queue\nentries privately, but introducing own implementations of clcsock's\ncallback functions in fallback situation. The callback functions will\nforward the wakeup to smc socket->wq if clcsock->wq is actually woken\nup and smc socket->wq has remaining entries."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48722",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a1c277b0ed2a13e7de923b5f03bc23586eceb851",
            "https://git.kernel.org/stable/c/d6a44feb2f28d71a7e725f72d09c97c81561cd9a",
            "https://git.kernel.org/stable/c/6f38d3a6ec11c2733b1c641a46a2a2ecec57be08",
            "https://git.kernel.org/stable/c/78b3f20c17cbcb7645bfa63f2ca0e11b53c09d56",
            "https://git.kernel.org/stable/c/94cd597e20ed4acedb8f15f029d92998b011cb1a",
            "https://git.kernel.org/stable/c/21feb6df3967541931242c427fe0958276af81cc",
            "https://git.kernel.org/stable/c/621b24b09eb61c63f262da0c9c5f0e93348897e5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: ca8210: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. We then leak the skb\nstructure.\n\nFree the skb structure upon error before returning."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48723",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e895e067d73e154b1ebc84a124e00831e311d9b0",
            "https://git.kernel.org/stable/c/dd00b4f8f768d81c3788a8ac88fdb3d745e55ea3",
            "https://git.kernel.org/stable/c/447c3d4046d7b54052d07d8b27e15e6edea5662c",
            "https://git.kernel.org/stable/c/37c2c83ca4f1ef4b6908181ac98e18360af89b42"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: uniphier: fix reference count leak in uniphier_spi_probe()\n\nThe issue happens in several error paths in uniphier_spi_probe().\nWhen either dma_get_slave_caps() or devm_spi_register_master() returns\nan error code, the function forgets to decrease the refcount of both\n`dma_rx` and `dma_tx` objects, which may lead to refcount leaks.\n\nFix it by decrementing the reference count of specific objects in\nthose error paths."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "security-research@sec-consult.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28147",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://r.sec-consult.com/metaventis"
        ],
        "summary": "An authenticated user can upload arbitrary files in the upload \nfunction for collection preview images. An attacker may upload an HTML \nfile that includes malicious JavaScript code which will be executed if a\n user visits the direct URL of the collection preview image (Stored \nCross Site Scripting). It is also possible to upload SVG files that \ninclude nested XML entities. Those are parsed when a user visits the \ndirect URL of the collection preview image, which may be utilized for a \nDenial of Service attack.\n\nThis issue affects edu-sharing: <8.0.8-RC2, <8.1.4-RC0, <9.0.0-RC19."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5036",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/64f11bc9-88b5-43d5-bc76-129dc5909210?source=cve",
            "https://plugins.trac.wordpress.org/browser/sina-extension-for-elementor/trunk/widgets/basic/sina-counter.php#L687",
            "https://plugins.trac.wordpress.org/changeset/3104601/"
        ],
        "summary": "The Sina Extension for Elementor (Slider, Gallery, Form, Modal, Data Table, Tab, Particle, Free Elementor Widgets & Elementor Templates) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018url\u2019 parameter in all versions up to, and including, 3.5.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5886",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6181",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://vuldb.com/?id.269152",
            "https://vuldb.com/?ctiid.269152",
            "https://vuldb.com/?submit.353709",
            "https://gentle-khaan-c53.notion.site/Reflected-XSS-in-Labvantage-LIMS-9531d77dce984d4da2ddcab863962e9c?pvs=4"
        ],
        "summary": "A vulnerability was found in LabVantage LIMS 2017. It has been declared as problematic. This vulnerability affects unknown code of the file /labvantage/rc?command=file&file=WEB-CORE/elements/files/filesembedded.jsp&size=32. The manipulation of the argument height/width leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-269152. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6182",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://vuldb.com/?id.269153",
            "https://vuldb.com/?ctiid.269153",
            "https://vuldb.com/?submit.354361",
            "https://gentle-khaan-c53.notion.site/Reflected-XSS-in-Labvantage-LIMS-95e338b6f9ea45db9a6c635c3c1ff3b8"
        ],
        "summary": "A vulnerability was found in LabVantage LIMS 2017. It has been rated as problematic. This issue affects some unknown processing of the file /labvantage/rc?command=page&page=LV_ViewSampleSpec&oosonly=Y&_sdialog=Y. The manipulation of the argument sdcid/keyid1 leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-269153 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47617",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ff27f7d0333cff89ec85c419f431aca1b38fb16a",
            "https://git.kernel.org/stable/c/464da38ba827f670deac6500a1de9a4f0f44c41d",
            "https://git.kernel.org/stable/c/3b4c966fb156ff3e70b2526d964952ff7c1574d9",
            "https://git.kernel.org/stable/c/1db58c6584a72102e98af2e600ea184ddaf2b8af",
            "https://git.kernel.org/stable/c/6d6f1f0dac3e3441ecdb1103d4efb11b9ed24dd5",
            "https://git.kernel.org/stable/c/23584c1ed3e15a6f4bfab8dc5a88d94ab929ee12"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: pciehp: Fix infinite loop in IRQ handler upon power fault\n\nThe Power Fault Detected bit in the Slot Status register differs from\nall other hotplug events in that it is sticky:  It can only be cleared\nafter turning off slot power.  Per PCIe r5.0, sec. 6.7.1.8:\n\n  If a power controller detects a main power fault on the hot-plug slot,\n  it must automatically set its internal main power fault latch [...].\n  The main power fault latch is cleared when software turns off power to\n  the hot-plug slot.\n\nThe stickiness used to cause interrupt storms and infinite loops which\nwere fixed in 2009 by commits 5651c48cfafe (\"PCI pciehp: fix power fault\ninterrupt storm problem\") and 99f0169c17f3 (\"PCI: pciehp: enable\nsoftware notification on empty slots\").\n\nUnfortunately in 2020 the infinite loop issue was inadvertently\nreintroduced by commit 8edf5332c393 (\"PCI: pciehp: Fix MSI interrupt\nrace\"):  The hardirq handler pciehp_isr() clears the PFD bit until\npciehp's power_fault_detected flag is set.  That happens in the IRQ\nthread pciehp_ist(), which never learns of the event because the hardirq\nhandler is stuck in an infinite loop.  Fix by setting the\npower_fault_detected flag already in the hardirq handler."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47619",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/d46fa4ea9756ef6cbcf9752d0832cc66e2d7121b",
            "https://git.kernel.org/stable/c/be6998f232b8e4ca8225029e305b8329d89bfd59",
            "https://git.kernel.org/stable/c/768eb705e6381f0c70ca29d4e66f19790d5d19a1",
            "https://git.kernel.org/stable/c/00eddb0e4ea115154581d1049507a996acfc2d3e",
            "https://git.kernel.org/stable/c/4b3aa858268b7b9aeef02e5f9c4cd8f8fac101c8",
            "https://git.kernel.org/stable/c/92947844b8beee988c0ce17082b705c2f75f0742"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix queues reservation for XDP\n\nWhen XDP was configured on a system with large number of CPUs\nand X722 NIC there was a call trace with NULL pointer dereference.\n\ni40e 0000:87:00.0: failed to get tracking for 256 queues for VSI 0 err -12\ni40e 0000:87:00.0: setup of MAIN VSI failed\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nRIP: 0010:i40e_xdp+0xea/0x1b0 [i40e]\nCall Trace:\n? i40e_reconfig_rss_queues+0x130/0x130 [i40e]\ndev_xdp_install+0x61/0xe0\ndev_xdp_attach+0x18a/0x4c0\ndev_change_xdp_fd+0x1e6/0x220\ndo_setlink+0x616/0x1030\n? ahci_port_stop+0x80/0x80\n? ata_qc_issue+0x107/0x1e0\n? lock_timer_base+0x61/0x80\n? __mod_timer+0x202/0x380\nrtnl_setlink+0xe5/0x170\n? bpf_lsm_binder_transaction+0x10/0x10\n? security_capable+0x36/0x50\nrtnetlink_rcv_msg+0x121/0x350\n? rtnl_calcit.isra.0+0x100/0x100\nnetlink_rcv_skb+0x50/0xf0\nnetlink_unicast+0x1d3/0x2a0\nnetlink_sendmsg+0x22a/0x440\nsock_sendmsg+0x5e/0x60\n__sys_sendto+0xf0/0x160\n? __sys_getsockname+0x7e/0xc0\n? _copy_from_user+0x3c/0x80\n? __sys_setsockopt+0xc8/0x1a0\n__x64_sys_sendto+0x20/0x30\ndo_syscall_64+0x33/0x40\nentry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f83fa7a39e0\n\nThis was caused by PF queue pile fragmentation due to\nflow director VSI queue being placed right after main VSI.\nBecause of this main VSI was not able to resize its\nqueue allocation for XDP resulting in no queues allocated\nfor main VSI when XDP was turned on.\n\nFix this by always allocating last queue in PF queue pile\nfor a flow director VSI."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47618",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/1515e72aae803fc6b466adf918e71c4e4c9d5b3d",
            "https://git.kernel.org/stable/c/ba1863be105b06e10d0e2f6b1b8a0570801cfc71",
            "https://git.kernel.org/stable/c/8b59b0a53c840921b625378f137e88adfa87647e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9170/1: fix panic when kasan and kprobe are enabled\n\narm32 uses software to simulate the instruction replaced\nby kprobe. some instructions may be simulated by constructing\nassembly functions. therefore, before executing instruction\nsimulation, it is necessary to construct assembly function\nexecution environment in C language through binding registers.\nafter kasan is enabled, the register binding relationship will\nbe destroyed, resulting in instruction simulation errors and\ncausing kernel panic.\n\nthe kprobe emulate instruction function is distributed in three\nfiles: actions-common.c actions-arm.c actions-thumb.c, so disable\nKASAN when compiling these files.\n\nfor example, use kprobe insert on cap_capable+20 after kasan\nenabled, the cap_capable assembly code is as follows:\n<cap_capable>:\ne92d47f0\tpush\t{r4, r5, r6, r7, r8, r9, sl, lr}\ne1a05000\tmov\tr5, r0\ne280006c\tadd\tr0, r0, #108    ; 0x6c\ne1a04001\tmov\tr4, r1\ne1a06002\tmov\tr6, r2\ne59fa090\tldr\tsl, [pc, #144]  ;\nebfc7bf8\tbl\tc03aa4b4 <__asan_load4>\ne595706c\tldr\tr7, [r5, #108]  ; 0x6c\ne2859014\tadd\tr9, r5, #20\n......\nThe emulate_ldr assembly code after enabling kasan is as follows:\nc06f1384 <emulate_ldr>:\ne92d47f0\tpush\t{r4, r5, r6, r7, r8, r9, sl, lr}\ne282803c\tadd\tr8, r2, #60     ; 0x3c\ne1a05000\tmov\tr5, r0\ne7e37855\tubfx\tr7, r5, #16, #4\ne1a00008\tmov\tr0, r8\ne1a09001\tmov\tr9, r1\ne1a04002\tmov\tr4, r2\nebf35462\tbl\tc03c6530 <__asan_load4>\ne357000f\tcmp\tr7, #15\ne7e36655\tubfx\tr6, r5, #12, #4\ne205a00f\tand\tsl, r5, #15\n0a000001\tbeq\tc06f13bc <emulate_ldr+0x38>\ne0840107\tadd\tr0, r4, r7, lsl #2\nebf3545c\tbl\tc03c6530 <__asan_load4>\ne084010a\tadd\tr0, r4, sl, lsl #2\nebf3545a\tbl\tc03c6530 <__asan_load4>\ne2890010\tadd\tr0, r9, #16\nebf35458\tbl\tc03c6530 <__asan_load4>\ne5990010\tldr\tr0, [r9, #16]\ne12fff30\tblx\tr0\ne356000f\tcm\tr6, #15\n1a000014\tbne\tc06f1430 <emulate_ldr+0xac>\ne1a06000\tmov\tr6, r0\ne2840040\tadd\tr0, r4, #64     ; 0x40\n......\n\nwhen running in emulate_ldr to simulate the ldr instruction, panic\noccurred, and the log is as follows:\nUnable to handle kernel NULL pointer dereference at virtual address\n00000090\npgd = ecb46400\n[00000090] *pgd=2e0fa003, *pmd=00000000\nInternal error: Oops: 206 [#1] SMP ARM\nPC is at cap_capable+0x14/0xb0\nLR is at emulate_ldr+0x50/0xc0\npsr: 600d0293 sp : ecd63af8  ip : 00000004  fp : c0a7c30c\nr10: 00000000  r9 : c30897f4  r8 : ecd63cd4\nr7 : 0000000f  r6 : 0000000a  r5 : e59fa090  r4 : ecd63c98\nr3 : c06ae294  r2 : 00000000  r1 : b7611300  r0 : bf4ec008\nFlags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment user\nControl: 32c5387d  Table: 2d546400  DAC: 55555555\nProcess bash (pid: 1643, stack limit = 0xecd60190)\n(cap_capable) from (kprobe_handler+0x218/0x340)\n(kprobe_handler) from (kprobe_trap_handler+0x24/0x48)\n(kprobe_trap_handler) from (do_undefinstr+0x13c/0x364)\n(do_undefinstr) from (__und_svc_finish+0x0/0x30)\n(__und_svc_finish) from (cap_capable+0x18/0xb0)\n(cap_capable) from (cap_vm_enough_memory+0x38/0x48)\n(cap_vm_enough_memory) from\n(security_vm_enough_memory_mm+0x48/0x6c)\n(security_vm_enough_memory_mm) from\n(copy_process.constprop.5+0x16b4/0x25c8)\n(copy_process.constprop.5) from (_do_fork+0xe8/0x55c)\n(_do_fork) from (SyS_clone+0x1c/0x24)\n(SyS_clone) from (__sys_trace_return+0x0/0x10)\nCode: 0050a0e1 6c0080e2 0140a0e1 0260a0e1 (f801f0e7)"
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48714",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6304a613a97d6dcd49b93fbad31e9f39d1e138d6",
            "https://git.kernel.org/stable/c/5e457aeab52a5947619e1f18047f4d2f3212b3eb",
            "https://git.kernel.org/stable/c/d578933f6226d5419af9306746efa1c693cbaf9c",
            "https://git.kernel.org/stable/c/b293dcc473d22a62dc6d78de2b15e4f49515db56"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Use VM_MAP instead of VM_ALLOC for ringbuf\n\nAfter commit 2fd3fb0be1d1 (\"kasan, vmalloc: unpoison VM_ALLOC pages\nafter mapping\"), non-VM_ALLOC mappings will be marked as accessible\nin __get_vm_area_node() when KASAN is enabled. But now the flag for\nringbuf area is VM_ALLOC, so KASAN will complain out-of-bound access\nafter vmap() returns. Because the ringbuf area is created by mapping\nallocated pages, so use VM_MAP instead.\n\nAfter the change, info in /proc/vmallocinfo also changes from\n  [start]-[end]   24576 ringbuf_map_alloc+0x171/0x290 vmalloc user\nto\n  [start]-[end]   24576 ringbuf_map_alloc+0x171/0x290 vmap user"
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48718",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/86a337bb803040e4401b87c974a7fb92efe3d0e1",
            "https://git.kernel.org/stable/c/6f9267e01cca749137349d8ffb0d0ebbadf567f4",
            "https://git.kernel.org/stable/c/622c9a3a7868e1eeca39c55305ca3ebec4742b64"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: mxsfb: Fix NULL pointer dereference\n\nmxsfb should not ever dereference the NULL pointer which\ndrm_atomic_get_new_bridge_state is allowed to return.\nAssume a fixed format instead."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48717",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a0f49d12547d45ea8b0f356a96632dd503941c1e",
            "https://git.kernel.org/stable/c/71e60c170105d153e34d01766c1e4db26a4b24cc",
            "https://git.kernel.org/stable/c/5a45448ac95b715173edb1cd090ff24b6586d921",
            "https://git.kernel.org/stable/c/baead410e5db49e962a67fffc17ac30e44b50b7c",
            "https://git.kernel.org/stable/c/f114fd6165dfb52520755cc4d1c1dfbd447b88b6",
            "https://git.kernel.org/stable/c/4c907bcd9dcd233da6707059d777ab389dcbd964"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: max9759: fix underflow in speaker_gain_control_put()\n\nCheck for negative values of \"priv->gain\" to prevent an out of bounds\naccess.  The concern is that these might come from the user via:\n  -> snd_ctl_elem_write_user()\n    -> snd_ctl_elem_write()\n      -> kctl->put()"
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48711",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/175db196e45d6f0e6047eccd09c8ba55465eb131",
            "https://git.kernel.org/stable/c/fde4ddeadd099bf9fbb9ccbee8e1b5c20d530a2d",
            "https://git.kernel.org/stable/c/f1af11edd08dd8376f7a84487cbb0ea8203e3a1d",
            "https://git.kernel.org/stable/c/d692e3406e052dbf9f6d9da0cba36cb763272529",
            "https://git.kernel.org/stable/c/3c7e5943553594f68bbc070683db6bb6f6e9e78e",
            "https://git.kernel.org/stable/c/1f1788616157b0222b0c2153828b475d95e374a7",
            "https://git.kernel.org/stable/c/59ff7514f8c56f166aadca49bcecfa028e0ad50f",
            "https://git.kernel.org/stable/c/9aa422ad326634b76309e8ff342c246800621216"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: improve size validations for received domain records\n\nThe function tipc_mon_rcv() allows a node to receive and process\ndomain_record structs from peer nodes to track their views of the\nnetwork topology.\n\nThis patch verifies that the number of members in a received domain\nrecord does not exceed the limit defined by MAX_MON_DOMAIN, something\nthat may otherwise lead to a stack overflow.\n\ntipc_mon_rcv() is called from the function tipc_link_proto_rcv(), where\nwe are reading a 32 bit message data length field into a uint16.  To\navert any risk of bit overflow, we add an extra sanity check for this in\nthat function.  We cannot see that happen with the current code, but\nfuture designers being unaware of this risk, may introduce it by\nallowing delivery of very large (> 64k) sk buffers from the bearer\nlayer.  This potential problem was identified by Eric Dumazet.\n\nThis fixes CVE-2022-0435"
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48712",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/62e46e0ffc02daa8fcfc02f7a932cc8a19601b19",
            "https://git.kernel.org/stable/c/1b6762ecdf3cf12113772427c904aa3c420a1802",
            "https://git.kernel.org/stable/c/14aa3f49c7fc6424763f4323bfbc3a807b0727dc",
            "https://git.kernel.org/stable/c/cdce59a1549190b66f8e3fe465c2b2f714b98a94"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix error handling in ext4_fc_record_modified_inode()\n\nCurrent code does not fully takes care of krealloc() error case, which\ncould lead to silent memory corruption or a kernel bug.  This patch\nfixes that.\n\nAlso it cleans up some duplicated error handling logic from various\nfunctions in fast_commit.c file."
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2022-48719",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://git.kernel.org/stable/c/203a35ebb49cdce377416b0690215d3ce090d364",
            "https://git.kernel.org/stable/c/4a81f6da9cb2d1ef911131a6fd8bd15cb61fc772"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet, neigh: Do not trigger immediate probes on NUD_FAILED from neigh_managed_work\n\nsyzkaller was able to trigger a deadlock for NTF_MANAGED entries [0]:\n\n  kworker/0:16/14617 is trying to acquire lock:\n  ffffffff8d4dd370 (&tbl->lock){++-.}-{2:2}, at: ___neigh_create+0x9e1/0x2990 net/core/neighbour.c:652\n  [...]\n  but task is already holding lock:\n  ffffffff8d4dd370 (&tbl->lock){++-.}-{2:2}, at: neigh_managed_work+0x35/0x250 net/core/neighbour.c:1572\n\nThe neighbor entry turned to NUD_FAILED state, where __neigh_event_send()\ntriggered an immediate probe as per commit cd28ca0a3dd1 (\"neigh: reduce\narp latency\") via neigh_probe() given table lock was held.\n\nOne option to fix this situation is to defer the neigh_probe() back to\nthe neigh_timer_handler() similarly as pre cd28ca0a3dd1. For the case\nof NTF_MANAGED, this deferral is acceptable given this only happens on\nactual failure state and regular / expected state is NUD_VALID with the\nentry already present.\n\nThe fix adds a parameter to __neigh_event_send() in order to communicate\nwhether immediate probe is allowed or disallowed. Existing call-sites\nof neigh_event_send() default as-is to immediate probe. However, the\nneigh_managed_work() disables it via use of neigh_event_send_probe().\n\n[0] <TASK>\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n  print_deadlock_bug kernel/locking/lockdep.c:2956 [inline]\n  check_deadlock kernel/locking/lockdep.c:2999 [inline]\n  validate_chain kernel/locking/lockdep.c:3788 [inline]\n  __lock_acquire.cold+0x149/0x3ab kernel/locking/lockdep.c:5027\n  lock_acquire kernel/locking/lockdep.c:5639 [inline]\n  lock_acquire+0x1ab/0x510 kernel/locking/lockdep.c:5604\n  __raw_write_lock_bh include/linux/rwlock_api_smp.h:202 [inline]\n  _raw_write_lock_bh+0x2f/0x40 kernel/locking/spinlock.c:334\n  ___neigh_create+0x9e1/0x2990 net/core/neighbour.c:652\n  ip6_finish_output2+0x1070/0x14f0 net/ipv6/ip6_output.c:123\n  __ip6_finish_output net/ipv6/ip6_output.c:191 [inline]\n  __ip6_finish_output+0x61e/0xe90 net/ipv6/ip6_output.c:170\n  ip6_finish_output+0x32/0x200 net/ipv6/ip6_output.c:201\n  NF_HOOK_COND include/linux/netfilter.h:296 [inline]\n  ip6_output+0x1e4/0x530 net/ipv6/ip6_output.c:224\n  dst_output include/net/dst.h:451 [inline]\n  NF_HOOK include/linux/netfilter.h:307 [inline]\n  ndisc_send_skb+0xa99/0x17f0 net/ipv6/ndisc.c:508\n  ndisc_send_ns+0x3a9/0x840 net/ipv6/ndisc.c:650\n  ndisc_solicit+0x2cd/0x4f0 net/ipv6/ndisc.c:742\n  neigh_probe+0xc2/0x110 net/core/neighbour.c:1040\n  __neigh_event_send+0x37d/0x1570 net/core/neighbour.c:1201\n  neigh_event_send include/net/neighbour.h:470 [inline]\n  neigh_managed_work+0x162/0x250 net/core/neighbour.c:1574\n  process_one_work+0x9ac/0x1650 kernel/workqueue.c:2307\n  worker_thread+0x657/0x1110 kernel/workqueue.c:2454\n  kthread+0x2e9/0x3a0 kernel/kthread.c:377\n  ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295\n  </TASK>"
    },
    {
        "Modified": "2024-06-20T11:15:00",
        "Published": "2024-06-20T09:15:00",
        "access": {},
        "assigner": "security@apache.org",
        "cvss": null,
        "cwe": "CWE-20",
        "id": "CVE-2024-34693",
        "impact": {},
        "last-modified": "2024-06-20T11:15:00",
        "references": [
            "https://lists.apache.org/thread/1803x1s34m7r71h1k0q1njol8k6fmyon",
            "http://www.openwall.com/lists/oss-security/2024/06/20/1"
        ],
        "summary": "Improper Input Validation vulnerability in Apache Superset, allows for an authenticated attacker to create a MariaDB connection with local_infile enabled. If both the MariaDB server (off by default) and the local mysql client on the web server are set to allow for local infile, it's possible for the attacker to execute a specific MySQL/MariaDB SQL command that is able to read files from the server and insert their content on a MariaDB database table.This issue affects Apache Superset: before 3.1.3 and version 4.0.0\n\nUsers are recommended to upgrade to version 4.0.1 or 3.1.3, which fixes the issue.\n\n"
    },
    {
        "Modified": "2024-06-20T10:15:00",
        "Published": "2024-04-04T09:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26807",
        "impact": {},
        "last-modified": "2024-06-20T10:15:00",
        "references": [
            "https://git.kernel.org/stable/c/03f1573c9587029730ca68503f5062105b122f61",
            "https://git.kernel.org/stable/c/34e1d5c4407c78de0e3473e1fbf8fb74dbe66d03",
            "https://git.kernel.org/stable/c/32ce3bb57b6b402de2aec1012511e7ac4e7449dc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBoth cadence-quadspi ->runtime_suspend() and ->runtime_resume()\nimplementations start with:\n\n\tstruct cqspi_st *cqspi = dev_get_drvdata(dev);\n\tstruct spi_controller *host = dev_get_drvdata(dev);\n\nThis obviously cannot be correct, unless \"struct cqspi_st\" is the\nfirst member of \" struct spi_controller\", or the other way around, but\nit is not the case. \"struct spi_controller\" is allocated by\ndevm_spi_alloc_host(), which allocates an extra amount of memory for\nprivate data, used to store \"struct cqspi_st\".\n\nThe ->probe() function of the cadence-quadspi driver then sets the\ndevice drvdata to store the address of the \"struct cqspi_st\"\nstructure. Therefore:\n\n\tstruct cqspi_st *cqspi = dev_get_drvdata(dev);\n\nis correct, but:\n\n\tstruct spi_controller *host = dev_get_drvdata(dev);\n\nis not, as it makes \"host\" point not to a \"struct spi_controller\" but\nto the same \"struct cqspi_st\" structure as above.\n\nThis obviously leads to bad things (memory corruption, kernel crashes)\ndirectly during ->probe(), as ->probe() enables the device using PM\nruntime, leading the ->runtime_resume() hook being called, which in\nturns calls spi_controller_resume() with the wrong pointer.\n\nThis has at least been reported [0] to cause a kernel crash, but the\nexact behavior will depend on the memory contents.\n\n[0] https://lore.kernel.org/all/20240226121803.5a7r5wkpbbowcxgx@dhruva/\n\nThis issue potentially affects all platforms that are currently using\nthe cadence-quadspi driver."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-20T09:15:00",
        "access": {},
        "assigner": "PSIRT@sonicwall.com",
        "cvss": null,
        "cwe": "CWE-121",
        "id": "CVE-2024-29012",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [
            "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2024-0008"
        ],
        "summary": "Stack-based buffer overflow vulnerability in the SonicOS HTTP server allows an authenticated remote attacker to cause Denial of Service (DoS) via sscanf function."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-20T09:15:00",
        "access": {},
        "assigner": "PSIRT@sonicwall.com",
        "cvss": null,
        "cwe": "CWE-122",
        "id": "CVE-2024-29013",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [
            "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2024-0009"
        ],
        "summary": "Heap-based buffer overflow vulnerability in the SonicOS SSL-VPN allows an authenticated remote attacker to cause Denial of Service (DoS) via memcpy function."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47581",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47573",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47574",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47575",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-09T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "CWE-347",
        "id": "CVE-2024-37568",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [
            "https://github.com/lepture/authlib/issues/654",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IZI7HYGN7VZAYFV6UV3SRLYF7QGERXIU/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FHJI32SN4FNAUVNALVGOKWHNSQ6XS3M5/"
        ],
        "summary": "lepture Authlib before 1.3.1 has algorithm confusion with asymmetric public keys. Unless an algorithm is specified in a jwt.decode call, HMAC verification is allowed with any asymmetric public key. (This is similar to CVE-2022-29217 and CVE-2024-33663.)"
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-10T22:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35241",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [
            "https://github.com/composer/composer/security/advisories/GHSA-47f6-5gq3-vx9c",
            "https://github.com/composer/composer/commit/b93fc6ca437da35ae73d667d0618749c763b67d4",
            "https://github.com/composer/composer/commit/ee28354ca8d33c15949ad7de2ce6656ba3f68704",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VLPJHM2WWSYU2F6KHW2BYFGYL4IGTKHC/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PO4MU2BC7VR6LMHEX4X7DKGHVFXZV2MC/"
        ],
        "summary": "Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `status`, `reinstall` and `remove` commands with packages installed from source via git containing specially crafted branch names in the repository can be used to execute code. Patches for this issue are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid installing dependencies via git by using `--prefer-dist` or the `preferred-install: dist` config setting.\n"
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-06-10T22:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35242",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [
            "https://github.com/composer/composer/security/advisories/GHSA-v9qv-c7wm-wgmf",
            "https://github.com/composer/composer/commit/6bd43dff859c597c09bd03a7e7d6443822d0a396",
            "https://github.com/composer/composer/commit/fc57b93603d7d90b71ca8ec77b1c8a9171fdb467",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VLPJHM2WWSYU2F6KHW2BYFGYL4IGTKHC/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PO4MU2BC7VR6LMHEX4X7DKGHVFXZV2MC/"
        ],
        "summary": "Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `composer install` command running inside a git/hg repository which has specially crafted branch names can lead to command injection. This requires cloning untrusted repositories. Patches are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid cloning potentially compromised repositories.\n"
    },
    {
        "Modified": "2024-06-20T09:15:00",
        "Published": "2024-03-18T11:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-26639",
        "impact": {},
        "last-modified": "2024-06-20T09:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-06-20T08:15:00",
        "Published": "2024-06-20T08:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38620",
        "impact": {},
        "last-modified": "2024-06-20T08:15:00",
        "references": [
            "https://git.kernel.org/stable/c/5af2e235b0d5b797e9531a00c50058319130e156",
            "https://git.kernel.org/stable/c/d3c7b012d912b31ad23b9349c0e499d6dddd48ec",
            "https://git.kernel.org/stable/c/af1d425b6dc67cd67809f835dd7afb6be4d43e03",
            "https://git.kernel.org/stable/c/84a4bb6548a29326564f0e659fb8064503ecc1c7"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: HCI: Remove HCI_AMP support\n\nSince BT_HS has been remove HCI_AMP controllers no longer has any use so\nremove it along with the capability of creating AMP controllers.\n\nSince we no longer need to differentiate between AMP and Primary\ncontrollers, as only HCI_PRIMARY is left, this also remove\nhdev->dev_type altogether."
    },
    {
        "Modified": "2024-06-20T07:15:00",
        "Published": "2024-06-20T07:15:00",
        "access": {},
        "assigner": "psirt@zte.com.cn",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-25646",
        "impact": {},
        "last-modified": "2024-06-20T07:15:00",
        "references": [
            "https://support.zte.com.cn/support/news/LoopholeInfoDetail.aspx?newsId=1035844"
        ],
        "summary": "There is an unauthorized access vulnerability in ZTE H388X. If H388X is caused by brute-force serial port cracking,attackers with common user permissions can use this vulnerability to obtain elevated permissions on the affected device by performing specific operations."
    },
    {
        "Modified": "2024-06-20T07:15:00",
        "Published": "2024-06-20T07:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38619",
        "impact": {},
        "last-modified": "2024-06-20T07:15:00",
        "references": [
            "https://git.kernel.org/stable/c/16637fea001ab3c8df528a8995b3211906165a30"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb-storage: alauda: Check whether the media is initialized\n\nThe member \"uzonesize\" of struct alauda_info will remain 0\nif alauda_init_media() fails, potentially causing divide errors\nin alauda_read_data() and alauda_write_lba().\n- Add a member \"media_initialized\" to struct alauda_info.\n- Change a condition in alauda_check_media() to ensure the\n  first initialization.\n- Add an error check for the return value of alauda_init_media()."
    },
    {
        "Modified": "2024-06-20T07:15:00",
        "Published": "2024-06-20T07:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4098",
        "impact": {},
        "last-modified": "2024-06-20T07:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f49fba00-c576-4a1a-8b0b-9ebed3e3d090?source=cve",
            "https://plugins.trac.wordpress.org/browser/shariff/trunk/shariff.php#L410",
            "https://plugins.trac.wordpress.org/changeset/3103137"
        ],
        "summary": "The Shariff Wrapper plugin for WordPress is vulnerable to Local File Inclusion in versions up to, and including, 4.6.13 via the shariff3uu_fetch_sharecounts function. This allows unauthenticated attackers to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other \u201csafe\u201d file types can be uploaded and included."
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-06-20T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4565",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/430224c4-d6e3-4ca8-b1bc-b2229a9bcf12/"
        ],
        "summary": "The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access"
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-06-20T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5475",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/cee66543-b5d6-4205-8f9b-0febd7fee445/"
        ],
        "summary": "The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks."
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-06-20T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5522",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://wpscan.com/vulnerability/bc76ef95-a2a9-4185-8ed9-1059097a506a/"
        ],
        "summary": "The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks"
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-06-20T06:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-89",
        "id": "CVE-2024-6113",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://vuldb.com/?id.268865",
            "https://vuldb.com/?ctiid.268865",
            "https://vuldb.com/?submit.358991",
            "https://github.com/wangyuan-ui/CVE/issues/3"
        ],
        "summary": "A vulnerability was found in itsourcecode Monbela Tourist Inn Online Reservation System 1.0. It has been rated as critical. This issue affects some unknown processing of the file login.php. The manipulation of the argument email leads to sql injection. The attack may be initiated remotely. The identifier VDB-268865 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-04-17T14:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-1132",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://access.redhat.com/errata/RHSA-2024:1868",
            "https://access.redhat.com/security/cve/CVE-2024-1132",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2262117",
            "https://access.redhat.com/errata/RHSA-2024:1860",
            "https://access.redhat.com/errata/RHSA-2024:1861",
            "https://access.redhat.com/errata/RHSA-2024:1862",
            "https://access.redhat.com/errata/RHSA-2024:1864",
            "https://access.redhat.com/errata/RHSA-2024:1866",
            "https://access.redhat.com/errata/RHSA-2024:1867",
            "https://access.redhat.com/errata/RHSA-2024:2945",
            "https://access.redhat.com/errata/RHSA-2024:3752",
            "https://access.redhat.com/errata/RHSA-2024:3762",
            "https://access.redhat.com/errata/RHSA-2024:3919",
            "https://access.redhat.com/errata/RHSA-2024:3989"
        ],
        "summary": "A flaw was found in Keycloak, where it does not properly validate URLs included in a redirect. This issue could allow an attacker to construct a malicious request to bypass validation and access other URLs and sensitive information within the domain or conduct further attacks. This flaw affects any client that utilizes a wildcard in the Valid Redirect URIs field, and requires user interaction within the malicious URL."
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-04-02T08:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-400",
        "id": "CVE-2024-1300",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-1300",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2263139",
            "https://vertx.io/docs/vertx-core/java/#_server_name_indication_sni.",
            "https://access.redhat.com/errata/RHSA-2024:1662",
            "https://access.redhat.com/errata/RHSA-2024:1706",
            "https://access.redhat.com/errata/RHSA-2024:1923",
            "https://access.redhat.com/errata/RHSA-2024:2088",
            "https://access.redhat.com/errata/RHSA-2024:2833",
            "https://access.redhat.com/errata/RHSA-2024:3527",
            "https://access.redhat.com/errata/RHSA-2024:3989"
        ],
        "summary": "A vulnerability in the Eclipse Vert.x toolkit causes a memory leak in TCP servers configured with TLS and SNI support. When processing an unknown SNI server name assigned the default certificate instead of a mapped certificate, the SSL context is erroneously cached in the server name map, leading to memory exhaustion. This flaw allows attackers to send TLS client hello messages with fake server names, triggering a JVM out-of-memory error."
    },
    {
        "Modified": "2024-06-20T06:15:00",
        "Published": "2024-03-27T08:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-1023",
        "impact": {},
        "last-modified": "2024-06-20T06:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-1023",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2260840",
            "https://github.com/eclipse-vertx/vert.x/issues/5078",
            "https://github.com/eclipse-vertx/vert.x/pull/5080",
            "https://github.com/eclipse-vertx/vert.x/pull/5082",
            "https://access.redhat.com/errata/RHSA-2024:1662",
            "https://access.redhat.com/errata/RHSA-2024:1706",
            "https://access.redhat.com/errata/RHSA-2024:2088",
            "https://access.redhat.com/errata/RHSA-2024:2833",
            "https://access.redhat.com/errata/RHSA-2024:3527",
            "https://access.redhat.com/errata/RHSA-2024:3989"
        ],
        "summary": "A vulnerability in the Eclipse Vert.x toolkit results in a memory leak due to using Netty FastThreadLocal data structures. Specifically, when the Vert.x HTTP client establishes connections to different hosts, triggering the memory leak. The leak can be accelerated with intimate runtime knowledge, allowing an attacker to exploit this vulnerability. For instance, a server accepting arbitrary internet addresses could serve as an attack vector by connecting to these addresses, thereby accelerating the memory leak."
    },
    {
        "Modified": "2024-06-20T04:15:00",
        "Published": "2024-06-20T04:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4390",
        "impact": {},
        "last-modified": "2024-06-20T04:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/dd7c3a5d-b8aa-45cb-983c-55ba7e3d72f3?source=cve",
            "https://plugins.trac.wordpress.org/browser/depicter/trunk/app/src/Controllers/Ajax/SecurityAjaxController.php#L14",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3103357%40depicter%2Ftrunk&old=3090538%40depicter%2Ftrunk&sfp_email=&sfph_mail="
        ],
        "summary": "The Slider and Carousel slider by Depicter plugin for WordPress is vulnerable to Arbitrary Nonce Generation in all versions up to, and including, 3.0.2. This makes it possible for authenticated attackers with contributor access and above, to generate a valid nonce for any WordPress action/function. This could be used to invoke functionality that is protected only by nonce checks."
    },
    {
        "Modified": "2024-06-20T04:15:00",
        "Published": "2024-06-20T04:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5605",
        "impact": {},
        "last-modified": "2024-06-20T04:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/3ba8a9f5-0633-4cf0-af27-5466d93e9020?source=cve",
            "https://plugins.trac.wordpress.org/browser/media-library-assistant/trunk/includes/class-mla-shortcode-support.php#L2783",
            "https://wordpress.org/plugins/media-library-assistant/#developers",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3098232%40media-library-assistant&new=3098232%40media-library-assistant&sfp_email=&sfph_mail="
        ],
        "summary": "The Media Library Assistant plugin for WordPress is vulnerable to time-based SQL Injection via the \u2018order\u2019 parameter within the mla_tag_cloud Shortcode in all versions up to, and including, 3.16 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-06-20T04:15:00",
        "Published": "2024-06-20T04:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5686",
        "impact": {},
        "last-modified": "2024-06-20T04:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/f972ab72-8e68-4ab3-aa7f-e2816de33554?source=cve",
            "https://plugins.trac.wordpress.org/browser/wpzoom-elementor-addons/tags/1.1.38/includes/widgets/team-members/team-members.php#L1452",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3104212%40wpzoom-elementor-addons&new=3104212%40wpzoom-elementor-addons&sfp_email=&sfph_mail="
        ],
        "summary": "The WPZOOM Addons for Elementor (Templates, Widgets) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018url\u2019 attribute within the plugin's Team Members widget in all versions up to, and including, 1.1.38 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-06-20T03:15:00",
        "Published": "2024-06-20T03:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-1230",
        "id": "CVE-2024-5213",
        "impact": {},
        "last-modified": "2024-06-20T03:15:00",
        "references": [
            "https://huntr.com/bounties/8794fb65-50aa-40e3-b348-a29838dbf63d",
            "https://github.com/mintplex-labs/anything-llm/commit/9df4521113ddb9a3adb5d0e3941e7d494992629c"
        ],
        "summary": "In mintplex-labs/anything-llm versions up to and including 1.5.3, an issue was discovered where the password hash of a user is returned in the response after login (`POST /api/request-token`) and after account creations (`POST /api/admin/users/new`). This exposure occurs because the entire User object, including the bcrypt password hash, is included in the response sent to the frontend. This practice could potentially lead to sensitive information exposure despite the use of bcrypt, a strong hashing algorithm. It is recommended not to expose any clues about passwords to the frontend. "
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-3204",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/a2e05094-8344-4388-a703-518daf3d2948?source=cve",
            "https://themes.trac.wordpress.org/browser/materialis/1.1.20/inc/companion.php#L45",
            "https://themes.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=231816%40materialis&new=231816%40materialis&sfp_email=&sfph_mail=#file6"
        ],
        "summary": "The Materialis theme for WordPress is vulnerable to limited arbitrary options updates in versions up to, and including, 1.1.24. This is due to missing authorization checks on the companion_disable_popup() function called via an AJAX action. This makes it possible for authenticated attackers, with minimal permissions such as subscribers, to modify any option on the site to a numerical value."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-1168",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/c446f429-1981-4d6d-a5ec-a5837428d212?source=cve",
            "https://wordpress.org/plugins/wp-seopress/#developers"
        ],
        "summary": "The SEOPress \u2013 On-site SEO plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's social image URL in all versions up to, and including, 7.9 due to insufficient input sanitization and output escaping on user supplied image URLs. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3562",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/dfd7b788-03a0-41a4-96f2-cfca74ef281b?source=cve",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/fields/loop.php#L192",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/fields/loop.php#L224",
            "https://mgibbs189.github.io/custom-field-suite/field-types/loop.html"
        ],
        "summary": "The Custom Field Suite plugin for WordPress is vulnerable to PHP Code Injection in all versions up to, and including, 2.6.7 via the Loop custom field. This is due to insufficient sanitization of input prior to being used in a call to the eval() function. This makes it possible for authenticated attackers, with contributor-level access and above, to execute arbitrary PHP code on the server."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3627",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/0615d1be-f9fa-45b3-9d5b-3ad1f36be8e1?source=cve",
            "https://plugins.trac.wordpress.org/browser/wheel-of-life/trunk/includes/functions/AjaxFunctions.php"
        ],
        "summary": "The Wheel of Life: Coaching and Assessment Tool for Life Coach plugin for WordPress is vulnerable to unauthorized modification and loss of data due to a missing capability check on several functions in the AjaxFunctions.php file in all versions up to, and including, 1.1.7. This makes it possible for authenticated attackers, with subscriber-level access and above, to delete arbitrary posts and modify settings."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4626",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/4457d15e-2c01-498d-b94a-a6e93adcf70c?source=cve",
            "https://plugins.trac.wordpress.org/changeset/3103042/jetwidgets-for-elementor/tags/1.0.18/includes/addons/jet-widgets-image-comparison.php",
            "https://plugins.trac.wordpress.org/changeset/3103042/jetwidgets-for-elementor/tags/1.0.18/includes/addons/jet-widgets-images-layout.php"
        ],
        "summary": "The JetWidgets For Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018layout_type\u2019 and 'id' parameters in all versions up to, and including, 1.0.17 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3558",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/8e4dc6fd-4bd5-4ed1-ade0-cf2f8831fac3?source=cve",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/field_group.php#L20",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/form.php#L64",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/api.php#L282",
            "https://github.com/WordPress/WordPress/blob/22d95abc55824e83904dc0fef290464b6bec7708/wp-admin/includes/template.php#L1384",
            "https://en-gb.wordpress.org/plugins/custom-field-suite/",
            "https://mgibbs189.github.io/custom-field-suite/",
            "https://core.trac.wordpress.org/ticket/56655"
        ],
        "summary": "The Custom Field Suite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the the 'cfs[post_title]' parameter versions up to, and including, 2.6.7 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3561",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/afc00118-e87e-475a-8ad6-b68d09ee2e44?source=cve",
            "https://github.com/mgibbs189/custom-field-suite/blob/963dfcede18ff4ad697498556d9058db07d74fa3/includes/fields/term.php#L58",
            "https://mgibbs189.github.io/custom-field-suite/field-types/term.html",
            "https://en-gb.wordpress.org/plugins/custom-field-suite/"
        ],
        "summary": "The Custom Field Suite plugin for WordPress is vulnerable to SQL Injection via the the 'Term' custom field in all versions up to, and including, 2.6.7 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3597",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/598e2c2e-7dd5-435e-a366-6c7569243f2a?source=cve",
            "https://plugins.trac.wordpress.org/browser/export-wp-page-to-static-html/trunk/admin/class-export-wp-page-to-static-html-admin.php#L1289"
        ],
        "summary": "The Export WP Page to Static HTML/CSS plugin for WordPress is vulnerable to Open Redirect in all versions up to, and including, 2.2.2. This is due to insufficient validation on the redirect url supplied via the rc_exported_zip_file parameter. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3602",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/05b051bc-3b1c-412e-b3d0-98ff2c8bc06e?source=cve",
            "https://plugins.trac.wordpress.org/browser/promolayer-popup-builder/trunk/admin/class-promolayer-admin.php#L208"
        ],
        "summary": "The Pop ups, Exit intent popups, email popups, banners, bars, countdowns and cart savers \u2013 Promolayer plugin for WordPress is vulnerable to unauthorized plugin settings update due to a missing capability check on the disconnect_promolayer function in all versions up to, and including, 1.1.0. This makes it possible for authenticated attackers, with subscriber access or higher, to remove the Promolayer connection."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3605",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/5931ad4e-7de3-41ac-b783-f7e58aaef569?source=cve",
            "https://wordpress.org/plugins/wp-hotel-booking/"
        ],
        "summary": "The WP Hotel Booking plugin for WordPress is vulnerable to SQL Injection via the 'room_type' parameter of the /wphb/v1/rooms/search-rooms REST API endpoint in all versions up to, and including, 2.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4742",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/08bd24ca-eec6-4b62-af49-192496e65a5b?source=cve",
            "https://plugins.trac.wordpress.org/browser/youzify/trunk/includes/public/core/functions/youzify-account-verification-functions.php#L294"
        ],
        "summary": "The Youzify \u2013 BuddyPress Community, User Profile, Social Network & Membership Plugin for WordPress plugin for WordPress is vulnerable to SQL Injection via the order_by shortcode attribute in all versions up to, and including, 1.2.5 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-5432",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/2e24da0c-13d2-4a3d-b918-0d28e3341d88?source=cve",
            "https://plugins.trac.wordpress.org/browser/lifeline-donation/trunk/includes/class-lifeline-donation.php?rev=2575844#L292",
            "https://plugins.trac.wordpress.org/browser/lifeline-donation/trunk/vendor/webinane/webinane-commerce/includes/Classes/Checkout.php?rev=2490935#L125"
        ],
        "summary": "The Lifeline Donation plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.2.6. This is due to insufficient verification on the user being supplied during the checkout through the plugin. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the email."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "product.security@lge.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6177",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://lgsecurity.lge.com/bulletins/idproducts#updateDetails"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in LG Electronics SuperSign CMS allows Reflected XSS.\u00a0This issue affects SuperSign CMS: from 4.1.3 before < 4.3.1."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "product.security@lge.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6178",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://lgsecurity.lge.com/bulletins/idproducts#updateDetails"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in LG Electronics SuperSign CMS allows Reflected XSS.\u00a0This issue affects SuperSign CMS: from 4.1.3 before < 4.3.1."
    },
    {
        "Modified": "2024-06-20T02:15:00",
        "Published": "2024-06-20T02:15:00",
        "access": {},
        "assigner": "product.security@lge.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6179",
        "impact": {},
        "last-modified": "2024-06-20T02:15:00",
        "references": [
            "https://lgsecurity.lge.com/bulletins/idproducts#updateDetails"
        ],
        "summary": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in LG Electronics SuperSign CMS allows Reflected XSS.\u00a0This issue affects SuperSign CMS: from 4.1.3 before < 4.3.1."
    },
    {
        "Modified": "2024-06-20T01:15:00",
        "Published": "2024-06-20T01:15:00",
        "access": {},
        "assigner": "product.security@lge.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6176",
        "impact": {},
        "last-modified": "2024-06-20T01:15:00",
        "references": [
            "https://lgsecurity.lge.com/bulletins/idproducts#updateDetails"
        ],
        "summary": "Allocation of Resources Without Limits or Throttling vulnerability in LG Electronics LG SuperSign CMS allows Port Scanning.This issue affects LG SuperSign CMS: from 4.1.3 before < 4.3.1."
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-06-20T00:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6101",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_18.html",
            "https://issues.chromium.org/issues/343748812"
        ],
        "summary": "Inappropriate implementation in V8 in Google Chrome prior to 126.0.6478.114 allowed a remote attacker to perform out of bounds memory access via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-06-20T00:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6102",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_18.html",
            "https://issues.chromium.org/issues/339169163"
        ],
        "summary": "Out of bounds memory access in Dawn in Google Chrome prior to 126.0.6478.114 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-06-20T00:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-22",
        "id": "CVE-2024-5182",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://huntr.com/bounties/f7a87f29-c22a-48e8-9fce-b6d5a273e545",
            "https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e"
        ],
        "summary": "A path traversal vulnerability exists in mudler/localai version 2.14.0, where an attacker can exploit the `model` parameter during the model deletion process to delete arbitrary files. Specifically, by crafting a request with a manipulated `model` parameter, an attacker can traverse the directory structure and target files outside of the intended directory, leading to the deletion of sensitive data. This vulnerability is due to insufficient input validation and sanitization of the `model` parameter."
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-06-20T00:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6103",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_18.html",
            "https://issues.chromium.org/issues/344639860"
        ],
        "summary": "Use after free in Dawn in Google Chrome prior to 126.0.6478.114 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-06-20T00:15:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6100",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_18.html",
            "https://issues.chromium.org/issues/344608204"
        ],
        "summary": "Type Confusion in V8 in Google Chrome prior to 126.0.6478.114 allowed a remote attacker to execute arbitrary code via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-06-20T00:15:00",
        "Published": "2024-02-08T13:15:00",
        "access": {},
        "assigner": "cna@postgresql.org",
        "cvss": null,
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2024-0985",
        "impact": {},
        "last-modified": "2024-06-20T00:15:00",
        "references": [
            "https://www.postgresql.org/support/security/CVE-2024-0985/",
            "https://lists.debian.org/debian-lts-announce/2024/03/msg00017.html"
        ],
        "summary": "Late privilege drop in REFRESH MATERIALIZED VIEW CONCURRENTLY in PostgreSQL allows an object creator to execute arbitrary SQL functions as the command issuer. The command intends to run SQL functions as the owner of the materialized view, enabling safe refresh of untrusted materialized views. The victim is a superuser or member of one of the attacker's roles. The attack requires luring the victim into running REFRESH MATERIALIZED VIEW CONCURRENTLY on the attacker's materialized view. Versions before PostgreSQL 16.2, 15.6, 14.11, 13.14, and 12.18 are affected."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33836",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-jamarketplace.md"
        ],
        "summary": "In the module \"JA Marketplace\" (jamarketplace) up to version 9.0.1 from JA Module for PrestaShop, a guest can upload files with extensions .php. In version 6.X, the method `JmarketplaceproductModuleFrontController::init()` and in version 8.X, the method `JmarketplaceSellerproductModuleFrontController::init()` allow upload of .php files, which will lead to a critical vulnerability."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34990",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-helpdesk.md"
        ],
        "summary": "In the module \"Help Desk - Customer Support Management System\" (helpdesk) up to version 2.4.0 from FME Modules for PrestaShop, a customer can upload .php files. Methods `HelpdeskHelpdeskModuleFrontController::submitTicket()` and `HelpdeskHelpdeskModuleFrontController::replyTicket()` allow upload of .php files on a predictable path for connected customers."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34994",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-channable.md"
        ],
        "summary": "In the module \"Channable\" (channable) up to version 3.2.1 from Channable for PrestaShop, a guest can perform SQL injection via `ChannableFeedModuleFrontController::postProcess()`."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36677",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://security.friendsofpresta.org/modules/2024/06/18/loginascustomerpro.html"
        ],
        "summary": "In the module \"Login as customer PRO\" (loginascustomerpro) <1.2.7 from Weblir for PrestaShop, a guest can access direct link to connect to each customer account of the Shop if the module is not installed OR if a secret accessible to administrator is stolen."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36678",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://security.friendsofpresta.org/modules/2024/06/18/pk_themesettings.html"
        ],
        "summary": "In the module \"Theme settings\" (pk_themesettings) <= 1.8.8 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The script ajax.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36679",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://security.friendsofpresta.org/modules/2024/06/18/livechatpro.html"
        ],
        "summary": "In the module \"Module Live Chat Pro (All in One Messaging)\" (livechatpro) <=8.4.0, a guest can perform PHP Code injection. Due to a predictable token, the method `Lcp::saveTranslations()` suffer of a white writer that can inject PHP code into a PHP file."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36680",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://security.friendsofpresta.org/modules/2024/06/18/pkfacebook.html"
        ],
        "summary": "In the module \"Facebook\" (pkfacebook) <=1.0.1 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The ajax script facebookConnect.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection."
    },
    {
        "Modified": "2024-06-19T21:15:00",
        "Published": "2024-06-19T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36684",
        "impact": {},
        "last-modified": "2024-06-19T21:15:00",
        "references": [
            "https://security.friendsofpresta.org/modules/2024/06/18/pk_customlinks.html"
        ],
        "summary": "In the module \"Custom links\" (pk_customlinks) <= 2.3 from Promokit.eu for PrestaShop, a guest can perform SQL injection. The script ajax.php have a sensitive SQL call that can be executed with a trivial http call and exploited to forge a SQL injection."
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-06-19T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38356",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph",
            "https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d",
            "https://owasp.org/www-community/attacks/xss",
            "https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview",
            "https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview"
        ],
        "summary": "TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE\u2019s content extraction code. When using the `noneditable_regexp` option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor. This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the `noneditable_regexp` option, any content within an attribute is properly verified to match the configured regular expression before being added. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n"
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-06-19T20:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34993",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://github.com/friends-of-presta/security-advisories/blob/main/_posts/2024-06-18-bagoogleshopping.md"
        ],
        "summary": "In the module \"Bulk Export products to Google Merchant-Google Shopping\" (bagoogleshopping) up to version 1.0.26 from Buy Addons for PrestaShop, a guest can perform SQL injection via`GenerateCategories::renderCategories()."
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-06-19T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38355",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://github.com/socketio/socket.io/security/advisories/GHSA-25hc-qcg6-38wj",
            "https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115",
            "https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c"
        ],
        "summary": "Socket.IO is an open source, real-time, bidirectional, event-based, communication framework. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. This issue is fixed by commit `15af22fc22` which has been included in `socket.io@4.6.2` (released in May 2023). The fix was backported in the 2.x branch as well with commit `d30630ba10`. Users are advised to upgrade. Users unable to upgrade may attach a listener for the \"error\" event to catch these errors.\n"
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-06-19T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38357",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://github.com/tinymce/tinymce/security/advisories/GHSA-w9jx-4g6g-rp7x",
            "https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d",
            "https://owasp.org/www-community/attacks/xss",
            "https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview",
            "https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview"
        ],
        "summary": "TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE\u2019s content parsing code. This allowed specially crafted noscript elements containing malicious code to be executed when that content was loaded into the editor. This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that content within noscript elements are properly parsed. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n"
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-06-19T20:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38358",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://github.com/wasmerio/wasmer/security/advisories/GHSA-55f3-3qvg-8pv5",
            "https://github.com/wasmerio/wasmer/commit/b9483d022c602b994103f78ecfe46f017f8ac662"
        ],
        "summary": "Wasmer is a web assembly (wasm) Runtime supporting WASIX, WASI and Emscripten. If the preopened directory has a symlink pointing outside, WASI programs can traverse the symlink and access host filesystem if the caller sets both `oflags::creat` and `rights::fd_write`. Programs can also crash the runtime by creating a symlink pointing outside with `path_symlink` and `path_open`ing the link. This issue has been addressed in commit `b9483d022` which has been included in release version 4.3.2. Users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
        "Modified": "2024-06-19T20:15:00",
        "Published": "2024-05-31T19:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-120",
        "id": "CVE-2024-5564",
        "impact": {},
        "last-modified": "2024-06-19T20:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-5564",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2284122",
            "https://lists.debian.org/debian-lts-announce/2024/06/msg00011.html"
        ],
        "summary": "A vulnerability was found in libndp. This flaw allows a local malicious user to cause a buffer overflow in NetworkManager, triggered by sending a malformed IPv6 router advertisement packet. This issue occurred as libndp was not correctly validating the route length information."
    },
    {
        "Modified": "2024-06-19T18:15:00",
        "Published": "2024-06-19T18:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36115",
        "impact": {},
        "last-modified": "2024-06-19T18:15:00",
        "references": [
            "https://github.com/dzikoysk/reposilite/security/advisories/GHSA-9w8w-34vr-65j2",
            "https://github.com/dzikoysk/reposilite/commit/279a472015ec675c1da449d902dc82e4dd578484",
            "https://github.com/dzikoysk/reposilite/commit/d11609f427aba255e0f6f54b1105d5d20ab043cf",
            "https://github.com/dzikoysk/reposilite/releases/tag/3.5.12"
        ],
        "summary": "Reposilite is an open source, lightweight and easy-to-use repository manager for Maven based artifacts in JVM ecosystem. As a Maven repository manager, Reposilite provides the ability to view the artifacts content in the browser, as well as perform administrative tasks via API. The problem lies in the fact that the artifact's content is served via the same origin (protocol/host/port) as the Admin UI. If the artifact contains HTML content with javascript inside, the javascript is executed within the same origin. Therefore, if an authenticated user is viewing the artifacts content, the javascript inside can access the browser's local storage where the user's password (aka 'token-secret') is stored. It is especially dangerous in scenarios where Reposilite is configured to mirror third party repositories, like the Maven Central Repository. Since anyone can publish an artifact to Maven Central under its own name, such malicious packages can be used to attack the Reposilite instance. This issue may lead to the full Reposilite instance compromise. If this attack is performed against the admin user, it's possible to use the admin API to modify settings and artifacts on the instance. In the worst case scenario, an attacker would be able to obtain the Remote code execution on all systems that use artifacts from Reposilite. It's important to note that the attacker does not need to lure a victim user to use a malicious artifact, but just open a link in the browser. This link can be silently loaded among the other HTML content, making this attack unnoticeable. Even if the Reposilite instance is located in an isolated environment, such as behind a VPN or in the local network, this attack is still possible as it can be performed from the admin browser. Reposilite has addressed this issue in version 3.5.12. Users are advised to upgrade. There are no known workarounds for this vulnerability. This issue was discovered and reported by the GitHub Security lab and is also tracked as GHSL-2024-072."
    },
    {
        "Modified": "2024-06-19T18:15:00",
        "Published": "2024-06-19T18:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36116",
        "impact": {},
        "last-modified": "2024-06-19T18:15:00",
        "references": [
            "https://github.com/dzikoysk/reposilite/security/advisories/GHSA-frvj-cfq4-3228",
            "https://github.com/dzikoysk/reposilite/commit/848173738e4375482c70365db5cebae29f125eaa",
            "https://github.com/dzikoysk/reposilite/releases/tag/3.5.12"
        ],
        "summary": "Reposilite is an open source, lightweight and easy-to-use repository manager for Maven based artifacts in JVM ecosystem. Reposilite provides support for JavaDocs files, which are archives that contain documentation for artifacts. Specifically, JavadocEndpoints.kt controller allows to expand the javadoc archive into the server's file system and return its content. The problem is in the way how the archives are expanded, specifically how the new filename is created. The `file.name` taken from the archive can contain path traversal characters, such as '/../../../anything.txt', so the resulting extraction path can be outside the target directory. If the archive is taken from an untrusted source, such as Maven Central or JitPack for example, an attacker can craft a special archive to overwrite any local file on Reposilite instance. This could lead to remote code execution, for example by placing a new plugin into the '$workspace$/plugins' directory. Alternatively, an attacker can overwrite the content of any other package. Note that the attacker can use its own malicious package from Maven Central to overwrite any other package on Reposilite. Reposilite has addressed this issue in version 3.5.12. Users are advised to upgrade. There are no known workarounds for this vulnerability. This issue was discovered and reported by the GitHub Security lab and is also tracked as GHSL-2024-073."
    },
    {
        "Modified": "2024-06-19T18:15:00",
        "Published": "2024-06-19T18:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36117",
        "impact": {},
        "last-modified": "2024-06-19T18:15:00",
        "references": [
            "https://github.com/dzikoysk/reposilite/releases/tag/3.5.12"
        ],
        "summary": "Reposilite is an open source, lightweight and easy-to-use repository manager for Maven based artifacts in JVM ecosystem. Reposilite v3.5.10 is affected by an Arbitrary File Read vulnerability via path traversal while serving expanded javadoc files. Reposilite has addressed this issue in version 3.5.12. There are no known workarounds for this vulnerability. This issue was discovered and reported by the GitHub Security lab and is also tracked as GHSL-2024-074."
    },
    {
        "Modified": "2024-06-19T18:15:00",
        "Published": "2024-06-19T18:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38352",
        "impact": {},
        "last-modified": "2024-06-19T18:15:00",
        "references": [],
        "summary": "Rejected reason: CVE was assigned in error."
    },
    {
        "Modified": "2024-06-19T18:15:00",
        "Published": "2024-05-01T00:15:00",
        "access": {},
        "assigner": "secalert@redhat.com",
        "cvss": null,
        "cwe": "CWE-526",
        "id": "CVE-2024-4369",
        "impact": {},
        "last-modified": "2024-06-19T18:15:00",
        "references": [
            "https://access.redhat.com/security/cve/CVE-2024-4369",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2278035",
            "https://access.redhat.com/errata/RHSA-2024:3889",
            "https://access.redhat.com/errata/RHSA-2024:3881"
        ],
        "summary": "An information disclosure flaw was found in OpenShift's internal image registry operator. The AZURE_CLIENT_SECRET can be exposed through an environment variable defined in the pod definition, but is limited to Azure environments. An attacker controlling an account that has high enough permissions to obtain pod information from the openshift-image-registry namespace could use this obtained client secret to perform actions as the registry operator's Azure service account."
    },
    {
        "Modified": "2024-06-19T17:15:00",
        "Published": "2024-06-19T17:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-32030",
        "impact": {},
        "last-modified": "2024-06-19T17:15:00",
        "references": [
            "https://securitylab.github.com/advisories/GHSL-2023-229_GHSL-2023-230_kafka-ui/",
            "https://github.com/provectus/kafka-ui/pull/4427",
            "https://github.com/provectus/kafka-ui/commit/83b5a60cc08501b570a0c4d0b4cdfceb1b88d6b7#diff-37e769f4709c1e78c076a5949bbcead74e969725bfd89c7c4ba6d6f229a411e6R36"
        ],
        "summary": "Kafka UI is an Open-Source Web UI for Apache Kafka Management. Kafka UI API allows users to connect to different Kafka brokers by specifying their network address and port. As a separate feature, it also provides the ability to monitor the performance of Kafka brokers by connecting to their JMX ports. JMX is based on the RMI protocol, so it is inherently susceptible to deserialization attacks. A potential attacker can exploit this feature by connecting Kafka UI backend to its own malicious broker. This vulnerability affects the deployments where one of the following occurs: 1. dynamic.config.enabled property is set in settings. It's not enabled by default, but it's suggested to be enabled in many tutorials for Kafka UI, including its own README.md. OR  2. an attacker has access to the Kafka cluster that is being connected to Kafka UI. In this scenario the attacker can exploit this vulnerability to expand their access and execute code on Kafka UI as well. Instead of setting up a legitimate JMX port, an attacker can create an RMI listener that returns a malicious serialized object for any RMI call. In the worst case it could lead to remote code execution as Kafka UI has the required gadget chains in its classpath. This issue may lead to post-auth remote code execution. This is particularly dangerous as Kafka-UI does not have authentication enabled by default. This issue has been addressed in version 0.7.2. All users are advised to upgrade. There are no known workarounds for this vulnerability. These issues were discovered and reported by the GitHub Security lab and is also tracked as GHSL-2023-230."
    },
    {
        "Modified": "2024-06-19T15:16:00",
        "Published": "2024-06-16T13:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-38441",
        "impact": {},
        "last-modified": "2024-06-19T15:16:00",
        "references": [
            "https://github.com/Netatalk/netatalk/issues/1098",
            "https://github.com/Netatalk/netatalk/blob/90d91a9ac9a7d6132ab7620d31c8c23400949206/etc/afpd/directory.c#L2333"
        ],
        "summary": "Netatalk 3.2.0 has an off-by-one error and resultant heap-based buffer overflow because of setting ibuf[len] to '\\0' in FPMapName in afp_mapname in etc/afpd/directory.c."
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47578",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/aa1f912712a109b6306746133de7e5343f016b26",
            "https://git.kernel.org/stable/c/47d11d35203b0aa13533634e270fe2c3610e531b",
            "https://git.kernel.org/stable/c/3344b58b53a76199dae48faa396e9fc37bf86992"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Don't call kcalloc() if size arg is zero\n\nIf the size arg to kcalloc() is zero, it returns ZERO_SIZE_PTR.  Because of\nthat, for a following NULL pointer check to work on the returned pointer,\nkcalloc() must not be called with the size arg equal to zero. Return early\nwithout error before the kcalloc() call if size arg is zero.\n\nBUG: KASAN: null-ptr-deref in memcpy include/linux/fortify-string.h:191 [inline]\nBUG: KASAN: null-ptr-deref in sg_copy_buffer+0x138/0x240 lib/scatterlist.c:974\nWrite of size 4 at addr 0000000000000010 by task syz-executor.1/22789\n\nCPU: 1 PID: 22789 Comm: syz-executor.1 Not tainted 5.15.0-syzk #1\nHardware name: Red Hat KVM, BIOS 1.13.0-2\nCall Trace:\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:106\n __kasan_report mm/kasan/report.c:446 [inline]\n kasan_report.cold.14+0x112/0x117 mm/kasan/report.c:459\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0x1a3/0x210 mm/kasan/generic.c:189\n memcpy+0x3b/0x60 mm/kasan/shadow.c:66\n memcpy include/linux/fortify-string.h:191 [inline]\n sg_copy_buffer+0x138/0x240 lib/scatterlist.c:974\n do_dout_fetch drivers/scsi/scsi_debug.c:2954 [inline]\n do_dout_fetch drivers/scsi/scsi_debug.c:2946 [inline]\n resp_verify+0x49e/0x930 drivers/scsi/scsi_debug.c:4276\n schedule_resp+0x4d8/0x1a70 drivers/scsi/scsi_debug.c:5478\n scsi_debug_queuecommand+0x8c9/0x1ec0 drivers/scsi/scsi_debug.c:7533\n scsi_dispatch_cmd drivers/scsi/scsi_lib.c:1520 [inline]\n scsi_queue_rq+0x16b0/0x2d40 drivers/scsi/scsi_lib.c:1699\n blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c:1639\n __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c:325\n blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c:358\n __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c:1761\n __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c:1838\n blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c:1891\n blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c:474\n blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c:62\n blk_execute_rq+0xdb/0x360 block/blk-exec.c:102\n sg_scsi_ioctl drivers/scsi/scsi_ioctl.c:621 [inline]\n scsi_ioctl+0x8bb/0x15c0 drivers/scsi/scsi_ioctl.c:930\n sg_ioctl_common+0x172d/0x2710 drivers/scsi/sg.c:1112\n sg_ioctl+0xa2/0x180 drivers/scsi/sg.c:1165\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:874 [inline]\n __se_sys_ioctl fs/ioctl.c:860 [inline]\n __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:860\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae"
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47590",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/23311b92755ffa9087332d1bb8c71c0f6a10cc08",
            "https://git.kernel.org/stable/c/3d79e3756ca90f7a6087b77b62c1d9c0801e0820"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix deadlock in __mptcp_push_pending()\n\n__mptcp_push_pending() may call mptcp_flush_join_list() with subflow\nsocket lock held. If such call hits mptcp_sockopt_sync_all() then\nsubsequently __mptcp_sockopt_sync() could try to lock the subflow\nsocket for itself, causing a deadlock.\n\nsysrq: Show Blocked State\ntask:ss-server       state:D stack:    0 pid:  938 ppid:     1 flags:0x00000000\nCall Trace:\n <TASK>\n __schedule+0x2d6/0x10c0\n ? __mod_memcg_state+0x4d/0x70\n ? csum_partial+0xd/0x20\n ? _raw_spin_lock_irqsave+0x26/0x50\n schedule+0x4e/0xc0\n __lock_sock+0x69/0x90\n ? do_wait_intr_irq+0xa0/0xa0\n __lock_sock_fast+0x35/0x50\n mptcp_sockopt_sync_all+0x38/0xc0\n __mptcp_push_pending+0x105/0x200\n mptcp_sendmsg+0x466/0x490\n sock_sendmsg+0x57/0x60\n __sys_sendto+0xf0/0x160\n ? do_wait_intr_irq+0xa0/0xa0\n ? fpregs_restore_userregs+0x12/0xd0\n __x64_sys_sendto+0x20/0x30\n do_syscall_64+0x38/0x90\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f9ba546c2d0\nRSP: 002b:00007ffdc3b762d8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 00007f9ba56c8060 RCX: 00007f9ba546c2d0\nRDX: 000000000000077a RSI: 0000000000e5e180 RDI: 0000000000000234\nRBP: 0000000000cc57f0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f9ba56c8060\nR13: 0000000000b6ba60 R14: 0000000000cc7840 R15: 41d8685b1d7901b8\n </TASK>\n\nFix the issue by using __mptcp_flush_join_list() instead of plain\nmptcp_flush_join_list() inside __mptcp_push_pending(), as suggested by\nFlorian. The sockopt sync will be deferred to the workqueue."
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47576",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/adcecd50da6cab7b4957cba0606771dcc846c5a9",
            "https://git.kernel.org/stable/c/90491283b4064220682e4b0687d07b05df01e3bf",
            "https://git.kernel.org/stable/c/04181973c38f3d6a353f9246dcf7fee08024fd9e",
            "https://git.kernel.org/stable/c/b847ecff850719c46c95acd25a0d555dfd16e10d",
            "https://git.kernel.org/stable/c/a9078e791426c2cbbdf28a320c3670f6e0a611e6",
            "https://git.kernel.org/stable/c/dfc3fff63793c571147930b13c0f8c689c4281ac",
            "https://git.kernel.org/stable/c/e0a2c28da11e2c2b963fc01d50acbf03045ac732"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Sanity check block descriptor length in resp_mode_select()\n\nIn resp_mode_select() sanity check the block descriptor len to avoid UAF.\n\nBUG: KASAN: use-after-free in resp_mode_select+0xa4c/0xb40 drivers/scsi/scsi_debug.c:2509\nRead of size 1 at addr ffff888026670f50 by task scsicmd/15032\n\nCPU: 1 PID: 15032 Comm: scsicmd Not tainted 5.15.0-01d0625 #15\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nCall Trace:\n <TASK>\n dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:107\n print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c:257\n kasan_report.cold.14+0x7d/0x117 mm/kasan/report.c:443\n __asan_report_load1_noabort+0x14/0x20 mm/kasan/report_generic.c:306\n resp_mode_select+0xa4c/0xb40 drivers/scsi/scsi_debug.c:2509\n schedule_resp+0x4af/0x1a10 drivers/scsi/scsi_debug.c:5483\n scsi_debug_queuecommand+0x8c9/0x1e70 drivers/scsi/scsi_debug.c:7537\n scsi_queue_rq+0x16b4/0x2d10 drivers/scsi/scsi_lib.c:1521\n blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c:1640\n __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c:325\n blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c:358\n __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c:1762\n __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c:1839\n blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c:1891\n blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c:474\n blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c:63\n sg_common_write.isra.18+0xeb3/0x2000 drivers/scsi/sg.c:837\n sg_new_write.isra.19+0x570/0x8c0 drivers/scsi/sg.c:775\n sg_ioctl_common+0x14d6/0x2710 drivers/scsi/sg.c:941\n sg_ioctl+0xa2/0x180 drivers/scsi/sg.c:1166\n __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:52\n do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:50\n entry_SYSCALL_64_after_hwframe+0x44/0xae arch/x86/entry/entry_64.S:113"
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47580",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/bdb854f134b964528fa543e0351022eb45bd7346",
            "https://git.kernel.org/stable/c/3085147645938eb41f0bc0e25ef9791e71f5ee4b",
            "https://git.kernel.org/stable/c/36e07d7ede88a1f1ef8f0f209af5b7612324ac2c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix type in min_t to avoid stack OOB\n\nChange min_t() to use type \"u32\" instead of type \"int\" to avoid stack out\nof bounds. With min_t() type \"int\" the values get sign extended and the\nlarger value gets used causing stack out of bounds.\n\nBUG: KASAN: stack-out-of-bounds in memcpy include/linux/fortify-string.h:191 [inline]\nBUG: KASAN: stack-out-of-bounds in sg_copy_buffer+0x1de/0x240 lib/scatterlist.c:976\nRead of size 127 at addr ffff888072607128 by task syz-executor.7/18707\n\nCPU: 1 PID: 18707 Comm: syz-executor.7 Not tainted 5.15.0-syzk #1\nHardware name: Red Hat KVM, BIOS 1.13.0-2\nCall Trace:\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:106\n print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c:256\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold.14+0x7d/0x117 mm/kasan/report.c:459\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0x1a3/0x210 mm/kasan/generic.c:189\n memcpy+0x23/0x60 mm/kasan/shadow.c:65\n memcpy include/linux/fortify-string.h:191 [inline]\n sg_copy_buffer+0x1de/0x240 lib/scatterlist.c:976\n sg_copy_from_buffer+0x33/0x40 lib/scatterlist.c:1000\n fill_from_dev_buffer.part.34+0x82/0x130 drivers/scsi/scsi_debug.c:1162\n fill_from_dev_buffer drivers/scsi/scsi_debug.c:1888 [inline]\n resp_readcap16+0x365/0x3b0 drivers/scsi/scsi_debug.c:1887\n schedule_resp+0x4d8/0x1a70 drivers/scsi/scsi_debug.c:5478\n scsi_debug_queuecommand+0x8c9/0x1ec0 drivers/scsi/scsi_debug.c:7533\n scsi_dispatch_cmd drivers/scsi/scsi_lib.c:1520 [inline]\n scsi_queue_rq+0x16b0/0x2d40 drivers/scsi/scsi_lib.c:1699\n blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c:1639\n __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c:325\n blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c:358\n __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c:1761\n __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c:1838\n blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c:1891\n blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c:474\n blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c:62\n sg_common_write.isra.18+0xeb3/0x2000 drivers/scsi/sg.c:836\n sg_new_write.isra.19+0x570/0x8c0 drivers/scsi/sg.c:774\n sg_ioctl_common+0x14d6/0x2710 drivers/scsi/sg.c:939\n sg_ioctl+0xa2/0x180 drivers/scsi/sg.c:1165\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:874 [inline]\n __se_sys_ioctl fs/ioctl.c:860 [inline]\n __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:860\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae"
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47582",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/403716741c6c2c510dce44e88f085a740f535de6",
            "https://git.kernel.org/stable/c/ae8709b296d80c7f45aa1f35c0e7659ad69edce1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Make do_proc_control() and do_proc_bulk() killable\n\nThe USBDEVFS_CONTROL and USBDEVFS_BULK ioctls invoke\nusb_start_wait_urb(), which contains an uninterruptible wait with a\nuser-specified timeout value.  If timeout value is very large and the\ndevice being accessed does not respond in a reasonable amount of time,\nthe kernel will complain about \"Task X blocked for more than N\nseconds\", as found in testing by syzbot:\n\nINFO: task syz-executor.0:8700 blocked for more than 143 seconds.\n      Not tainted 5.14.0-rc7-syzkaller #0\n\"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:syz-executor.0  state:D stack:23192 pid: 8700 ppid:  8455 flags:0x00004004\nCall Trace:\n context_switch kernel/sched/core.c:4681 [inline]\n __schedule+0xc07/0x11f0 kernel/sched/core.c:5938\n schedule+0x14b/0x210 kernel/sched/core.c:6017\n schedule_timeout+0x98/0x2f0 kernel/time/timer.c:1857\n do_wait_for_common+0x2da/0x480 kernel/sched/completion.c:85\n __wait_for_common kernel/sched/completion.c:106 [inline]\n wait_for_common kernel/sched/completion.c:117 [inline]\n wait_for_completion_timeout+0x46/0x60 kernel/sched/completion.c:157\n usb_start_wait_urb+0x167/0x550 drivers/usb/core/message.c:63\n do_proc_bulk+0x978/0x1080 drivers/usb/core/devio.c:1236\n proc_bulk drivers/usb/core/devio.c:1273 [inline]\n usbdev_do_ioctl drivers/usb/core/devio.c:2547 [inline]\n usbdev_ioctl+0x3441/0x6b10 drivers/usb/core/devio.c:2713\n...\n\nTo fix this problem, this patch replaces usbfs's calls to\nusb_control_msg() and usb_bulk_msg() with special-purpose code that\ndoes essentially the same thing (as recommended in the comment for\nusb_start_wait_urb()), except that it always uses a killable wait and\nit uses GFP_KERNEL rather than GFP_NOIO."
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47583",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/4b2d9600b31f9ba7adbc9f3c54a068615d27b390",
            "https://git.kernel.org/stable/c/96f182c9f48b984447741f054ec301fdc8517035",
            "https://git.kernel.org/stable/c/b99bdf127af91d53919e96292c05f737c45ea59a",
            "https://git.kernel.org/stable/c/8c6fdf62bfe1bc72bfceeaf832ef7499c7ed09ba",
            "https://git.kernel.org/stable/c/44870a9e7a3c24acbb3f888b2a7cc22c9bdf7e7f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mxl111sf: change mutex_init() location\n\nSyzbot reported, that mxl111sf_ctrl_msg() uses uninitialized\nmutex. The problem was in wrong mutex_init() location.\n\nPrevious mutex_init(&state->msg_lock) call was in ->init() function, but\ndvb_usbv2_init() has this order of calls:\n\n\tdvb_usbv2_init()\n\t  dvb_usbv2_adapter_init()\n\t    dvb_usbv2_adapter_frontend_init()\n\t      props->frontend_attach()\n\n\t  props->init()\n\nSince mxl111sf_* devices call mxl111sf_ctrl_msg() in ->frontend_attach()\ninternally we need to initialize state->msg_lock before\nfrontend_attach(). To achieve it, ->probe() call added to all mxl111sf_*\ndevices, which will simply initiaize mutex."
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47584",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a7c80674538f15f85d68138240aae440b8039519",
            "https://git.kernel.org/stable/c/3a1a4eb574178c21241a6200f4785572e661c472",
            "https://git.kernel.org/stable/c/edaa26334c117a584add6053f48d63a988d25a6e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niocost: Fix divide-by-zero on donation from low hweight cgroup\n\nThe donation calculation logic assumes that the donor has non-zero\nafter-donation hweight, so the lowest active hweight a donating cgroup can\nhave is 2 so that it can donate 1 while keeping the other 1 for itself.\nEarlier, we only donated from cgroups with sizable surpluses so this\ncondition was always true. However, with the precise donation algorithm\nimplemented, f1de2439ec43 (\"blk-iocost: revamp donation amount\ndetermination\") made the donation amount calculation exact enabling even low\nhweight cgroups to donate.\n\nThis means that in rare occasions, a cgroup with active hweight of 1 can\nenter donation calculation triggering the following warning and then a\ndivide-by-zero oops.\n\n WARNING: CPU: 4 PID: 0 at block/blk-iocost.c:1928 transfer_surpluses.cold+0x0/0x53 [884/94867]\n ...\n RIP: 0010:transfer_surpluses.cold+0x0/0x53\n Code: 92 ff 48 c7 c7 28 d1 ab b5 65 48 8b 34 25 00 ae 01 00 48 81 c6 90 06 00 00 e8 8b 3f fe ff 48 c7 c0 ea ff ff ff e9 95 ff 92 ff <0f> 0b 48 c7 c7 30 da ab b5 e8 71 3f fe ff 4c 89 e8 4d 85 ed 74 0\n4\n ...\n Call Trace:\n  <IRQ>\n  ioc_timer_fn+0x1043/0x1390\n  call_timer_fn+0xa1/0x2c0\n  __run_timers.part.0+0x1ec/0x2e0\n  run_timer_softirq+0x35/0x70\n ...\n iocg: invalid donation weights in /a/b: active=1 donating=1 after=0\n\nFix it by excluding cgroups w/ active hweight < 2 from donating. Excluding\nthese extreme low hweight donations shouldn't affect work conservation in\nany meaningful way."
    },
    {
        "Modified": "2024-06-19T15:15:00",
        "Published": "2024-06-19T15:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2021-47585",
        "impact": {},
        "last-modified": "2024-06-19T15:15:00",
        "references": [
            "https://git.kernel.org/stable/c/005d9292b5b2e71a009f911bd85d755009b37242",
            "https://git.kernel.org/stable/c/493ff661d434d6bdf02e3a21adae04d7a0b4265d",
            "https://git.kernel.org/stable/c/f35838a6930296fc1988764cfa54cb3f705c0665"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix memory leak in __add_inode_ref()\n\nLine 1169 (#3) allocates a memory chunk for victim_name by kmalloc(),\nbut  when the function returns in line 1184 (#4) victim_name allocated\nby line 1169 (#3) is not freed, which will lead to a memory leak.\nThere is a similar snippet of code in this function as allocating a memory\nchunk for victim_name in line 1104 (#1) as well as releasing the memory\nin line 1116 (#2).\n\nWe should kfree() victim_name when the return value of backref_in_log()\nis less than zero and before the function returns in line 1184 (#4).\n\n1057 static inline int __add_inode_ref(struct btrfs_trans_handle *trans,\n1058 \t\t\t\t  struct btrfs_root *root,\n1059 \t\t\t\t  struct btrfs_path *path,\n1060 \t\t\t\t  struct btrfs_root *log_root,\n1061 \t\t\t\t  struct btrfs_inode *dir,\n1062 \t\t\t\t  struct btrfs_inode *inode,\n1063 \t\t\t\t  u64 inode_objectid, u64 parent_objectid,\n1064 \t\t\t\t  u64 ref_index, char *name, int namelen,\n1065 \t\t\t\t  int *search_done)\n1066 {\n\n1104 \tvictim_name = kmalloc(victim_name_len, GFP_NOFS);\n\t// #1: kmalloc (victim_name-1)\n1105 \tif (!victim_name)\n1106 \t\treturn -ENOMEM;\n\n1112\tret = backref_in_log(log_root, &search_key,\n1113\t\t\tparent_objectid, victim_name,\n1114\t\t\tvictim_name_len);\n1115\tif (ret < 0) {\n1116\t\tkfree(victim_name); // #2: kfree (victim_name-1)\n1117\t\treturn ret;\n1118\t} else if (!ret) {\n\n1169 \tvictim_name = kmalloc(victim_name_len, GFP_NOFS);\n\t// #3: kmalloc (victim_name-2)\n1170 \tif (!victim_name)\n1171 \t\treturn -ENOMEM;\n\n1180 \tret = backref_in_log(log_root, &search_key,\n1181 \t\t\tparent_objectid, victim_name,\n1182 \t\t\tvictim_name_len);\n1183 \tif (ret < 0) {\n1184 \t\treturn ret; // #4: missing kfree (victim_name-2)\n1185 \t} else if (!ret) {\n\n1241 \treturn 0;\n1242 }"
    }
]