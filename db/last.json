[
    {
        "Modified": "2024-05-21T04:15:00",
        "Published": "2023-10-12T17:15:00",
        "access": {},
        "assigner": "security@google.com",
        "cvss": null,
        "cwe": "CWE-770",
        "id": "CVE-2023-5072",
        "impact": {},
        "last-modified": "2024-05-21T04:15:00",
        "references": [
            "https://github.com/stleary/JSON-java/issues/771",
            "https://github.com/stleary/JSON-java/issues/758",
            "http://www.openwall.com/lists/oss-security/2023/12/13/4"
        ],
        "summary": "Denial of Service  in JSON-Java versions up to and including 20230618. \u00a0A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used."
    },
    {
        "Modified": "2024-05-21T04:15:00",
        "Published": "2023-09-20T06:15:00",
        "access": {},
        "assigner": "security@google.com",
        "cvss": null,
        "cwe": "CWE-682",
        "id": "CVE-2023-2163",
        "impact": {},
        "last-modified": "2024-05-21T04:15:00",
        "references": [
            "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=71b547f561247897a0a14f3082730156c0533fed"
        ],
        "summary": "Incorrect verifier pruning\u00a0in BPF in Linux Kernel\u00a0>=5.4\u00a0leads to unsafe\ncode paths being incorrectly marked as safe, resulting in\u00a0arbitrary read/write in\nkernel memory, lateral privilege escalation, and container escape."
    },
    {
        "Modified": "2024-05-21T04:15:00",
        "Published": "2023-07-25T18:15:00",
        "access": {},
        "assigner": "security@google.com",
        "cvss": null,
        "cwe": "CWE-287",
        "id": "CVE-2023-2626",
        "impact": {},
        "last-modified": "2024-05-21T04:15:00",
        "references": [
            "https://support.google.com/product-documentation/answer/13588832?hl=en&ref_topic=12974021&sjid=7833436865896465963-NA#zippy=%2Cnest-wifi"
        ],
        "summary": "There exists an authentication bypass vulnerability in OpenThread border router devices and implementations.\u00a0This issue allows unauthenticated nodes to craft radio frames using \u201cKey ID Mode 2\u201d: a special mode using a static encryption key to bypass security checks, resulting in arbitrary IP packets being allowed on the Thread network.\n This provides a pathway for an attacker to send/receive arbitrary IPv6 packets to devices on the LAN, potentially exploiting them if they lack additional authentication or contain any network vulnerabilities that would normally be mitigated by the home router\u2019s NAT firewall. Effected devices have been mitigated through an automatic update beyond the affected range."
    },
    {
        "Modified": "2024-05-21T04:15:00",
        "Published": "2022-10-26T19:15:00",
        "access": {},
        "assigner": "security@google.com",
        "cvss": null,
        "cwe": "CWE-522",
        "id": "CVE-2022-3474",
        "impact": {},
        "last-modified": "2024-05-21T04:15:00",
        "references": [
            "https://github.com/bazelbuild/bazel/security/advisories/GHSA-mxr8-q875-rhwq"
        ],
        "summary": "A bad credential handling in the remote assets API for Bazel versions prior to 5.3.2 and 4.2.3 sends all user-provided credentials instead of only the required ones for the requests. We recommend upgrading to versions later than or equal to 5.3.2 or 4.2.3."
    },
    {
        "Modified": "2024-05-21T04:15:00",
        "Published": "2022-03-29T15:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "security@google.com",
        "cvss": 4.6,
        "cvss-time": "2024-05-21T04:15:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-416",
        "id": "CVE-2022-1055",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-05-21T04:15:00",
        "references": [
            "https://kernel.dance/#04c2a47ffb13c29778e2a14e414ad4cb5a5db4b5",
            "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=04c2a47ffb13c29778e2a14e414ad4cb5a5db4b5",
            "https://syzkaller.appspot.com/bug?id=2212474c958978ab86525fe6832ac8102c309ffc",
            "https://security.netapp.com/advisory/ntap-20220506-0007/",
            "http://packetstormsecurity.com/files/167386/Kernel-Live-Patch-Security-Notice-LSN-0086-1.html"
        ],
        "summary": "A use-after-free exists in the Linux Kernel in tc_new_tfilter that could allow a local attacker to gain privilege escalation. The exploit requires unprivileged user namespaces. We recommend upgrading past commit 04c2a47ffb13c29778e2a14e414ad4cb5a5db4b5"
    },
    {
        "Modified": "2024-05-21T03:15:00",
        "Published": "2024-05-21T03:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3155",
        "impact": {},
        "last-modified": "2024-05-21T03:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/84bc611c-c38a-4282-9a9b-5bb9157fb1de?source=cve",
            "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=3084503%40post-grid%2Ftrunk&old=3078364%40post-grid%2Ftrunk&sfp_email=&sfph_mail="
        ],
        "summary": "The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel \u2013 Combo Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters in all versions up to, and including, 2.2.80 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-21T03:15:00",
        "Published": "2024-05-21T03:15:00",
        "access": {},
        "assigner": "cve-request@wordfence.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4943",
        "impact": {},
        "last-modified": "2024-05-21T03:15:00",
        "references": [
            "https://www.wordfence.com/threat-intel/vulnerabilities/id/dc7099d7-94fd-42be-a921-bfcad43ae252?source=cve",
            "https://themes.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=227333%40blocksy%2F2.0.47&old=227242%40blocksy%2F2.0.46"
        ],
        "summary": "The Blocksy theme for WordPress is vulnerable to Stored Cross-Site Scripting via the \u2018has_field_link_rel\u2019 parameter in all versions up to, and including, 2.0.46 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."
    },
    {
        "Modified": "2024-05-21T02:15:00",
        "Published": "2024-05-21T02:15:00",
        "access": {},
        "assigner": "security@zyxel.com.tw",
        "cvss": null,
        "cwe": "CWE-120",
        "id": "CVE-2023-37929",
        "impact": {},
        "last-modified": "2024-05-21T02:15:00",
        "references": [
            "https://www.zyxel.com/global/en/support/security-advisories/zyxel-security-advisory-for-buffer-overflow-vulnerabilities-in-some-5g-nr-4g-lte-cpe-dsl-ethernet-cpe-fiber-ont-wifi-extender-and-home-router-devices-05-21-2024"
        ],
        "summary": "The buffer overflow vulnerability in the CGI program of the VMG3625-T50B firmware version V5.50(ABPM.8)C0 could allow an authenticated remote attacker to cause denial of service (DoS) conditions by sending a crafted HTTP request to a vulnerable device."
    },
    {
        "Modified": "2024-05-21T02:15:00",
        "Published": "2024-05-21T02:15:00",
        "access": {},
        "assigner": "security@zyxel.com.tw",
        "cvss": null,
        "cwe": "CWE-120",
        "id": "CVE-2024-0816",
        "impact": {},
        "last-modified": "2024-05-21T02:15:00",
        "references": [
            "https://www.zyxel.com/global/en/support/security-advisories/zyxel-security-advisory-for-buffer-overflow-vulnerabilities-in-some-5g-nr-4g-lte-cpe-dsl-ethernet-cpe-fiber-ont-wifi-extender-and-home-router-devices-05-21-2024"
        ],
        "summary": "The buffer overflow vulnerability in the DX3300-T1 firmware version V5.50(ABVY.4)C0 could allow an authenticated local attacker to cause denial of service (DoS) conditions by executing the CLI command with crafted strings on an affected device."
    },
    {
        "Modified": "2024-05-20T23:15:00",
        "Published": "2024-05-20T23:15:00",
        "access": {},
        "assigner": "cna@vuldb.com",
        "cvss": null,
        "cwe": "CWE-434",
        "id": "CVE-2024-5145",
        "impact": {},
        "last-modified": "2024-05-20T23:15:00",
        "references": [
            "https://vuldb.com/?id.265289",
            "https://vuldb.com/?ctiid.265289",
            "https://vuldb.com/?submit.339721",
            "https://github.com/CveSecLook/cve/issues/38"
        ],
        "summary": "A vulnerability was found in SourceCodester Vehicle Management System up to 1.0 and classified as critical. This issue affects some unknown processing of the file /newdriver.php of the component HTTP POST Request Handler. The manipulation of the argument file leads to unrestricted upload. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265289 was assigned to this vulnerability."
    },
    {
        "Modified": "2024-05-20T22:15:00",
        "Published": "2024-05-20T22:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34710",
        "impact": {},
        "last-modified": "2024-05-20T22:15:00",
        "references": [
            "https://github.com/requarks/wiki/security/advisories/GHSA-xjcj-p2qv-q3rf",
            "https://github.com/requarks/wiki/commit/1238d614e1599fefadd4614ee4b5797a087f50ac"
        ],
        "summary": "Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.\n"
    },
    {
        "Modified": "2024-05-20T22:15:00",
        "Published": "2024-05-20T22:15:00",
        "access": {},
        "assigner": "product-cna@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4985",
        "impact": {},
        "last-modified": "2024-05-20T22:15:00",
        "references": [
            "https://docs.github.com/en/enterprise-server@3.9/admin/release-notes#3.9.15",
            "https://docs.github.com/en/enterprise-server@3.10/admin/release-notes#3.10.12",
            "https://docs.github.com/en/enterprise-server@3.11/admin/release-notes#3.11.10",
            "https://docs.github.com/en/enterprise-server@3.12/admin/release-notes#3.12.4"
        ],
        "summary": "An authentication bypass vulnerability was present in the GitHub Enterprise Server (GHES) when utilizing SAML single sign-on authentication with the optional encrypted assertions feature. This vulnerability allowed an attacker to forge a SAML response to provision and/or gain access to a user with site administrator privileges. Exploitation of this vulnerability would allow unauthorized access to the instance without requiring prior authentication. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.13.0 and was fixed in versions 3.9.15, 3.10.12, 3.11.10 and 3.12.4. This vulnerability was reported via the GitHub Bug Bounty program."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33900",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://keepassxc.org/blog/",
            "https://gist.github.com/Fastor01/30c6d89c842feb1865ec2cd2d3806838"
        ],
        "summary": "KeePassXC 2.7.7 allows attackers to recover cleartext credentials."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33901",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://keepassxc.org/blog/",
            "https://gist.github.com/Fastor01/30c6d89c842feb1865ec2cd2d3806838"
        ],
        "summary": "Issue in KeePassXC 2.7.7 allows an attacker to recover some passwords stored in the .kdbx database."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33901",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://keepassxc.org/blog/",
            "https://gist.github.com/Fastor01/30c6d89c842feb1865ec2cd2d3806838"
        ],
        "summary": "Issue in KeePassXC 2.7.7 allows an attacker to recover some passwords stored in the .kdbx database."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35191",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://github.com/verbb/formie/security/advisories/GHSA-v45m-hxqp-fwf5",
            "https://github.com/verbb/formie/commit/90296edf7e707f117e760aa57e70dbd43a854420"
        ],
        "summary": "Formie is a Craft CMS plugin for creating forms. Prior to 2.1.6, users with access to a form's settings can include malicious Twig code into fields that support Twig. These might be the Submission Title or the Success Message. This code will then be executed upon creating a submission, or rendering the text.  This has been fixed in Formie 2.1.6."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35192",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://github.com/aquasecurity/trivy/security/advisories/GHSA-xcq4-m2r3-cmrj",
            "https://github.com/aquasecurity/trivy/commit/e7f14f729de259551203f313e57d2d9d3aa2ff87"
        ],
        "summary": "Trivy is a security scanner. Prior to 0.51.2, if a malicious actor is able to trigger Trivy to scan container images from a crafted malicious registry, it could result in the leakage of credentials for legitimate registries such as AWS Elastic Container Registry (ECR), Google Cloud Artifact/Container Registry, or Azure Container Registry (ACR). These tokens can then be used to push/pull images from those registries to which the identity/user running Trivy has access. Systems are not affected if the default credential provider chain is unable to obtain valid credentials. This vulnerability only applies when scanning container images directly from a registry. This vulnerability is fixed in 0.51.2."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35194",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://github.com/stacklok/minder/security/advisories/GHSA-crgc-2583-rw27",
            "https://github.com/stacklok/minder/commit/fe321d345b4f738de6a06b13207addc72b59f892"
        ],
        "summary": "Minder is a software supply chain security platform. Prior to version 0.0.50, Minder engine is susceptible to a denial of service from memory exhaustion that can be triggered from maliciously created templates. Minder engine uses templating to generate strings for various use cases such as URLs, messages for pull requests, descriptions for advisories. In some cases can the user control both the template and the params for it, and in a subset of these cases, Minder reads the generated template entirely into memory. When Minders templating meets both of these conditions, an attacker is able to generate large enough templates that Minder will exhaust memory and crash. This vulnerability is fixed in 0.0.50."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2024-05-20T21:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35195",
        "impact": {},
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56",
            "https://github.com/psf/requests/pull/6655",
            "https://github.com/psf/requests/commit/a58d7f2ffb4d00b46dca2d70a3932a0b37e22fac"
        ],
        "summary": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
    },
    {
        "Modified": "2024-05-20T21:15:00",
        "Published": "2020-01-09T21:15:00",
        "access": {
            "authentication": "SINGLE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 6.0,
        "cvss-time": "2024-05-20T21:15:00",
        "cvss-vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P",
        "cwe": "CWE-1236",
        "id": "CVE-2019-20180",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-05-20T21:15:00",
        "references": [
            "https://wpvulndb.com/vulnerabilities/10016",
            "https://wordpress.org/support/topic/security-issue-cve-2019-20180-for-tablepress/#post-16282996",
            "https://medium.com/%40Pablo0xSantiago/cve-2019-20180-tablepress-version-1-9-2-csv-injection-65309fcc8be8"
        ],
        "summary": "The TablePress plugin 1.9.2 for WordPress allows tablepress[data] CSV injection by Editor users. Note: The vendor disputes this issue and argues that this responsibility lies with the application that opens the CSV file and not TablePress."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-31714",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://github.com/lakemoon602/vuln/blob/main/wax.md"
        ],
        "summary": "Buffer Overflow vulnerability in Waxlab wax v.0.9-3 and before allows an attacker to cause a denial of service via the Lua library component."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35571",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://detailed-stetson-767.notion.site/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4"
        ],
        "summary": "Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function formSetIptv."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35580",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://detailed-stetson-767.notion.site/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4"
        ],
        "summary": "Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function formSetIptv."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49333",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection in the dashboard graph feature."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49332",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection while adding file shares."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49331",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection in the aggregate reports search option."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49335",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection while getting file server details."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49334",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL Injection while exporting a full summary report."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-24293",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://gist.github.com/tariqhawis/986fb1c9da6be526fb2656ba8d194b7f"
        ],
        "summary": "A Prototype Pollution issue in MiguelCastillo @bit/loader v.10.0.3 allows an attacker to execute arbitrary code via the M function e argument in index.js."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-29651",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://gist.github.com/tariqhawis/5db76b38112bba756615b688c32409ad"
        ],
        "summary": "A Prototype Pollution issue in API Dev Tools json-schema-ref-parser v.11.0.0 and v.11.1.0 allows a remote attacker to execute arbitrary code via the bundle()`, `parse()`, `resolve()`, `dereference() functions."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34193",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://github.com/vulreport3r/cve-reports/blob/main/Smanga_has_an_arbitrary_file_read_vulnerability/report.md"
        ],
        "summary": "smanga 3.2.7 does not filter the file parameter at the PHP/get file flow.php interface, resulting in a path traversal vulnerability that can cause arbitrary file reading."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34949",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://charm-august-88a.notion.site/CVE-2024-34949-SQL-injection-vulnerability-in-Likeshop-2-5-7-6139a82f9ab7423c9ef7c95950f68301"
        ],
        "summary": "likeshop 2.5.7 is vulnerable to SQL Injection via the getOrderList function."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35576",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://detailed-stetson-767.notion.site/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4"
        ],
        "summary": "Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function formSetIptv."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35578",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://detailed-stetson-767.notion.site/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4"
        ],
        "summary": "Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function formSetIptv."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T18:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35579",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://detailed-stetson-767.notion.site/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4"
        ],
        "summary": "Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function formSetIptv."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T19:15:00",
        "access": {},
        "assigner": "psirt@solarwinds.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-29000",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://documentation.solarwinds.com/en/success_center/orionplatform/content/release_notes/solarwinds_platform_2024-1-1_release_notes.htm",
            "https://www.solarwinds.com/trust-center/security-advisories/CVE-2024-29000"
        ],
        "summary": "The SolarWinds Platform was determined to be affected by a reflected cross-site scripting vulnerability affecting the web console. A high-privileged user and user interaction is required to exploit this vulnerability.  "
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T17:15:00",
        "access": {},
        "assigner": "disclosure@vulncheck.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-0401",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://vulncheck.com/advisories/asus-ovpn-rce"
        ],
        "summary": "ASUS routers supporting custom OpenVPN profiles are vulnerable to a code execution vulnerability. An authenticated and remote attacker can execute arbitrary operating system commands by uploading a crafted OVPN profile. Known affected routers include ASUS ExpertWiFi, ASUS RT-AX55, ASUS RT-AX58U, ASUS RT-AC67U, ASUS RT-AC68R, ASUS RT-AC68U, ASUS RT-AX86, ASUS RT-AC86U, ASUS RT-AX88U, and ASUS RT-AX3000."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-24294",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://gist.github.com/mestrtee/d1eb6e1f7c6dd60d8838c3e56cab634d"
        ],
        "summary": "A Prototype Pollution issue in Blackprint @blackprint/engine v.0.9.0 allows an attacker to execute arbitrary code via the _utils.setDeepProperty function of engine.min.js."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34947",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://gist.github.com/wuyuhang422/56f1e03fad8b91a3c979093f53cbbe7a"
        ],
        "summary": "Quanxun Huiju Network Technology (Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 was discovered to be vulnerable to an ICMP redirect attack."
    },
    {
        "Modified": "2024-05-20T19:34:00",
        "Published": "2024-05-20T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34948",
        "impact": {},
        "last-modified": "2024-05-20T19:34:00",
        "references": [
            "https://gist.github.com/wuyuhang422/8de771b0b4538eb6fa23cf8282061209"
        ],
        "summary": "An issue in Quanxun Huiju Network Technology(Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 allows attackers to cause a Denial of Service (DoS) when attempting to make TCP connections."
    },
    {
        "Modified": "2024-05-20T19:15:00",
        "Published": "2024-05-14T15:38:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34338",
        "impact": {},
        "last-modified": "2024-05-20T19:15:00",
        "references": [
            "http://exzettabyte.me/blind-command-injection-in-tenda-o3v2"
        ],
        "summary": "Tenda O3V2 with firmware versions V1.0.0.10 and V1.0.0.12 was discovered to contain a Blind Command Injection via dest parameter in /goform/getTraceroute. This vulnerability allows attackers to execute arbitrary commands with root privileges. Authentication is required to exploit this vulnerability."
    },
    {
        "Modified": "2024-05-20T18:15:00",
        "Published": "2024-05-20T13:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-49330",
        "impact": {},
        "last-modified": "2024-05-20T18:15:00",
        "references": [
            "https://www.manageengine.com/products/active-directory-audit/sqlfix-7271.html"
        ],
        "summary": "Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL Injection while getting aggregate report data."
    },
    {
        "Modified": "2024-05-20T17:15:00",
        "Published": "2024-05-16T09:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4642",
        "impact": {},
        "last-modified": "2024-05-20T17:15:00",
        "references": [],
        "summary": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T14:15:00",
        "access": {},
        "assigner": "security@opentext.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-2835",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://portal.microfocus.com/s/article/KM000029773"
        ],
        "summary": "A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34952",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://github.com/Helson-S/FuzzyTesting/tree/master/ncmdump/dos_FixMetadata",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_FixMetadata/dos_FixMetadata.md",
            "https://github.com/Helson-S/FuzzyTesting/tree/master/ncmdump/dos_FixMetadata/poc",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_FixMetadata/poc/I1DWE0~U",
            "https://github.com/taurusxin/ncmdump/issues/18",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_FixMetadata/dos_FixMetadata.assets/debug-coredump.png"
        ],
        "summary": "taurusxin ncmdump v1.3.2 was discovered to contain a segmentation violation via the NeteaseCrypt::FixMetadata() function at /src/ncmcrypt.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted .ncm file."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T14:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-34953",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://github.com/Helson-S/FuzzyTesting/tree/master/ncmdump/dos_mmExhausted",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_mmExhausted/dos_mmExhausted.md",
            "https://github.com/Helson-S/FuzzyTesting/tree/master/ncmdump/dos_mmExhausted/poc",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_mmExhausted/poc/I7K9QM~F",
            "https://github.com/taurusxin/ncmdump/issues/19",
            "https://github.com/Helson-S/FuzzyTesting/blob/master/ncmdump/dos_mmExhausted/dos_mmExhausted.assets/image-20240505161831080.png"
        ],
        "summary": "An issue in taurusxin ncmdump v1.3.2 allows attackers to cause a Denial of Service (DoS) via memory exhaustion by supplying a crafted .ncm file"
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T14:15:00",
        "access": {},
        "assigner": "security@opentext.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-3482",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://portal.microfocus.com/s/article/KM000029773"
        ],
        "summary": "A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T15:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-284",
        "id": "CVE-2024-4151",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://huntr.com/bounties/4acfef85-dedf-43bd-8438-0d8aaa4ffa01"
        ],
        "summary": "An Improper Access Control vulnerability exists in lunary-ai/lunary version 1.2.2, where users can view and update any prompts in any projects due to insufficient access control checks in the handling of PATCH and GET requests for template versions. This vulnerability allows unauthorized users to manipulate or access sensitive project data, potentially leading to data integrity and confidentiality issues."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T13:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-27312",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://www.manageengine.com/privileged-access-management/advisory/cve-2024-27312.html"
        ],
        "summary": "Zoho ManageEngine PAM360 version 6601 is vulnerable to authorization vulnerability which\u00a0allows a low-privileged user to perform admin actions.\nNote: This vulnerability affects only the PAM360 6600\u00a0version. No other versions are applicable to this vulnerability."
    },
    {
        "Modified": "2024-05-20T15:17:00",
        "Published": "2024-05-20T13:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-20",
        "id": "CVE-2024-4287",
        "impact": {},
        "last-modified": "2024-05-20T15:17:00",
        "references": [
            "https://huntr.com/bounties/34491fb7-5133-4e80-8782-74124350bbdb",
            "https://github.com/mintplex-labs/anything-llm/commit/94b58249a37a21b1c08deaa2d1edfdecbb6deb18"
        ],
        "summary": "In mintplex-labs/anything-llm, a vulnerability exists due to improper input validation in the workspace update process. Specifically, the application fails to validate or format JSON data sent in an HTTP POST request to `/api/workspace/:workspace-slug/update`, allowing it to be executed as part of a database query without restrictions. This flaw enables users with a manager role to craft a request that includes nested write operations, effectively allowing them to create new Administrator accounts."
    },
    {
        "Modified": "2024-05-20T14:08:00",
        "Published": "2024-05-14T16:17:00",
        "access": {},
        "assigner": "chrome-cve-admin@google.com",
        "cvss": null,
        "cwe": "CWE-787",
        "id": "CVE-2024-4761",
        "impact": {},
        "last-modified": "2024-05-20T14:08:00",
        "references": [
            "https://chromereleases.googleblog.com/2024/05/stable-channel-update-for-desktop_13.html",
            "https://issues.chromium.org/issues/339458194"
        ],
        "summary": "Out of bounds write in V8 in Google Chrome prior to 124.0.6367.207 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: High)"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T12:15:00",
        "access": {},
        "assigner": "vulnreport@tenable.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-4323",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://tenable.com/security/research/tra-2024-17",
            "https://github.com/fluent/fluent-bit/commit/9311b43a258352797af40749ab31a63c32acfd04"
        ],
        "summary": "A memory corruption vulnerability in Fluent Bit versions 2.0.7 thru 3.0.3. This issue lies in the embedded http server\u2019s parsing of trace requests and may result in denial of service conditions, information disclosure, or remote code execution."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35948",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/fcdbc1d7a4b638e5d5668de461f320386f3002aa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcachefs: Check for journal entries overruning end of sb clean section\n\nFix a missing bounds check in superblock validation.\n\nNote that we don't yet have repair code for this case - repair code for\nindividual items is generally low priority, since the whole superblock\nis checksummed, validated prior to write, and we have backups."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35957",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/fba8ca3e6f608b92e54271fdbd3ce569361939fc",
            "https://git.kernel.org/stable/c/89436f4f54125b1297aec1f466efd8acb4ec613d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix WARN_ON in iommu probe path\n\nCommit 1a75cc710b95 (\"iommu/vt-d: Use rbtree to track iommu probed\ndevices\") adds all devices probed by the iommu driver in a rbtree\nindexed by the source ID of each device. It assumes that each device\nhas a unique source ID. This assumption is incorrect and the VT-d\nspec doesn't state this requirement either.\n\nThe reason for using a rbtree to track devices is to look up the device\nwith PCI bus and devfunc in the paths of handling ATS invalidation time\nout error and the PRI I/O page faults. Both are PCI ATS feature related.\n\nOnly track the devices that have PCI ATS capabilities in the rbtree to\navoid unnecessary WARN_ON in the iommu probe path. Otherwise, on some\nplatforms below kernel splat will be displayed and the iommu probe results\nin failure.\n\n WARNING: CPU: 3 PID: 166 at drivers/iommu/intel/iommu.c:158 intel_iommu_probe_device+0x319/0xd90\n Call Trace:\n  <TASK>\n  ? __warn+0x7e/0x180\n  ? intel_iommu_probe_device+0x319/0xd90\n  ? report_bug+0x1f8/0x200\n  ? handle_bug+0x3c/0x70\n  ? exc_invalid_op+0x18/0x70\n  ? asm_exc_invalid_op+0x1a/0x20\n  ? intel_iommu_probe_device+0x319/0xd90\n  ? debug_mutex_init+0x37/0x50\n  __iommu_probe_device+0xf2/0x4f0\n  iommu_probe_device+0x22/0x70\n  iommu_bus_notifier+0x1e/0x40\n  notifier_call_chain+0x46/0x150\n  blocking_notifier_call_chain+0x42/0x60\n  bus_notify+0x2f/0x50\n  device_add+0x5ed/0x7e0\n  platform_device_add+0xf5/0x240\n  mfd_add_devices+0x3f9/0x500\n  ? preempt_count_add+0x4c/0xa0\n  ? up_write+0xa2/0x1b0\n  ? __debugfs_create_file+0xe3/0x150\n  intel_lpss_probe+0x49f/0x5b0\n  ? pci_conf1_write+0xa3/0xf0\n  intel_lpss_pci_probe+0xcf/0x110 [intel_lpss_pci]\n  pci_device_probe+0x95/0x120\n  really_probe+0xd9/0x370\n  ? __pfx___driver_attach+0x10/0x10\n  __driver_probe_device+0x73/0x150\n  driver_probe_device+0x19/0xa0\n  __driver_attach+0xb6/0x180\n  ? __pfx___driver_attach+0x10/0x10\n  bus_for_each_dev+0x77/0xd0\n  bus_add_driver+0x114/0x210\n  driver_register+0x5b/0x110\n  ? __pfx_intel_lpss_pci_driver_init+0x10/0x10 [intel_lpss_pci]\n  do_one_initcall+0x57/0x2b0\n  ? kmalloc_trace+0x21e/0x280\n  ? do_init_module+0x1e/0x210\n  do_init_module+0x5f/0x210\n  load_module+0x1d37/0x1fc0\n  ? init_module_from_file+0x86/0xd0\n  init_module_from_file+0x86/0xd0\n  idempotent_init_module+0x17c/0x230\n  __x64_sys_finit_module+0x56/0xb0\n  do_syscall_64+0x6e/0x140\n  entry_SYSCALL_64_after_hwframe+0x71/0x79"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35963",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/50173882bb187e70e37bac01385b9b114019bee2",
            "https://git.kernel.org/stable/c/b2186061d6043d6345a97100460363e990af0d46"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_sock: Fix not validating setsockopt user input\n\nCheck user input length before copying data."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35958",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/b26aa765f7437e1bbe8db4c1641b12bd5dd378f0",
            "https://git.kernel.org/stable/c/fdfbf54d128ab6ab255db138488f9650485795a2",
            "https://git.kernel.org/stable/c/19ff8fed3338898b70b2aad831386c78564912e1",
            "https://git.kernel.org/stable/c/5c7f2240d9835a7823d87f7460d8eae9f4e504c7",
            "https://git.kernel.org/stable/c/c31baa07f01307b7ae05f3ce32b89d8e2ba0cc1d",
            "https://git.kernel.org/stable/c/bf02d9fe00632d22fa91d34749c7aacf397b6cde"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35964",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/0c4a89f4690478969729c7ba5f69d53d8516aa12",
            "https://git.kernel.org/stable/c/9e8742cdfc4b0e65266bb4a901a19462bda9285e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Fix not validating setsockopt user input\n\nCheck user input length before copying data."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35968",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/38407914d48273d7f8ab765b9243658afe1c3ab6",
            "https://git.kernel.org/stable/c/81665adf25d28a00a986533f1d3a5df76b79cad9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Fix pdsc_check_pci_health function to use work thread\n\nWhen the driver notices fw_status == 0xff it tries to perform a PCI\nreset on itself via pci_reset_function() in the context of the driver's\nhealth thread. However, pdsc_reset_prepare calls\npdsc_stop_health_thread(), which attempts to stop/flush the health\nthread. This results in a deadlock because the stop/flush will never\ncomplete since the driver called pci_reset_function() from the health\nthread context. Fix by changing the pdsc_check_pci_health_function()\nto queue a newly introduced pdsc_pci_reset_thread() on the pdsc's\nwork queue.\n\nUnloading the driver in the fw_down/dead state uncovered another issue,\nwhich can be seen in the following trace:\n\nWARNING: CPU: 51 PID: 6914 at kernel/workqueue.c:1450 __queue_work+0x358/0x440\n[...]\nRIP: 0010:__queue_work+0x358/0x440\n[...]\nCall Trace:\n <TASK>\n ? __warn+0x85/0x140\n ? __queue_work+0x358/0x440\n ? report_bug+0xfc/0x1e0\n ? handle_bug+0x3f/0x70\n ? exc_invalid_op+0x17/0x70\n ? asm_exc_invalid_op+0x1a/0x20\n ? __queue_work+0x358/0x440\n queue_work_on+0x28/0x30\n pdsc_devcmd_locked+0x96/0xe0 [pds_core]\n pdsc_devcmd_reset+0x71/0xb0 [pds_core]\n pdsc_teardown+0x51/0xe0 [pds_core]\n pdsc_remove+0x106/0x200 [pds_core]\n pci_device_remove+0x37/0xc0\n device_release_driver_internal+0xae/0x140\n driver_detach+0x48/0x90\n bus_remove_driver+0x6d/0xf0\n pci_unregister_driver+0x2e/0xa0\n pdsc_cleanup_module+0x10/0x780 [pds_core]\n __x64_sys_delete_module+0x142/0x2b0\n ? syscall_trace_enter.isra.18+0x126/0x1a0\n do_syscall_64+0x3b/0x90\n entry_SYSCALL_64_after_hwframe+0x72/0xdc\nRIP: 0033:0x7fbd9d03a14b\n[...]\n\nFix this by preventing the devcmd reset if the FW is not running."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35969",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/b4b3b69a19016d4e7fbdbd1dbcc184915eb862e1",
            "https://git.kernel.org/stable/c/cca606e14264098cba65efa82790825dbf69e903",
            "https://git.kernel.org/stable/c/3fb02ec57ead2891a2306af8c51a306bc5945e70",
            "https://git.kernel.org/stable/c/4b19e9507c275de0cfe61c24db69179dc52cf9fb",
            "https://git.kernel.org/stable/c/de76ae9ea1a6cf9e77fcec4f2df2904e26c23ceb",
            "https://git.kernel.org/stable/c/01b11a0566670612bd464a932e5ac2eae53d8652",
            "https://git.kernel.org/stable/c/6cdb20c342cd0193d3e956e3d83981d0f438bb83",
            "https://git.kernel.org/stable/c/7633c4da919ad51164acbf1aa322cc1a3ead6129"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n\nAlthough ipv6_get_ifaddr walks inet6_addr_lst under the RCU lock, it\nstill means hlist_for_each_entry_rcu can return an item that got removed\nfrom the list. The memory itself of such item is not freed thanks to RCU\nbut nothing guarantees the actual content of the memory is sane.\n\nIn particular, the reference count can be zero. This can happen if\nipv6_del_addr is called in parallel. ipv6_del_addr removes the entry\nfrom inet6_addr_lst (hlist_del_init_rcu(&ifp->addr_lst)) and drops all\nreferences (__in6_ifa_put(ifp) + in6_ifa_put(ifp)). With bad enough\ntiming, this can happen:\n\n1. In ipv6_get_ifaddr, hlist_for_each_entry_rcu returns an entry.\n\n2. Then, the whole ipv6_del_addr is executed for the given entry. The\n   reference count drops to zero and kfree_rcu is scheduled.\n\n3. ipv6_get_ifaddr continues and tries to increments the reference count\n   (in6_ifa_hold).\n\n4. The rcu is unlocked and the entry is freed.\n\n5. The freed entry is returned.\n\nPrevent increasing of the reference count in such case. The name\nin6_ifa_hold_safe is chosen to mimic the existing fib6_info_hold_safe.\n\n[   41.506330] refcount_t: addition on 0; use-after-free.\n[   41.506760] WARNING: CPU: 0 PID: 595 at lib/refcount.c:25 refcount_warn_saturate+0xa5/0x130\n[   41.507413] Modules linked in: veth bridge stp llc\n[   41.507821] CPU: 0 PID: 595 Comm: python3 Not tainted 6.9.0-rc2.main-00208-g49563be82afa #14\n[   41.508479] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n[   41.509163] RIP: 0010:refcount_warn_saturate+0xa5/0x130\n[   41.509586] Code: ad ff 90 0f 0b 90 90 c3 cc cc cc cc 80 3d c0 30 ad 01 00 75 a0 c6 05 b7 30 ad 01 01 90 48 c7 c7 38 cc 7a 8c e8 cc 18 ad ff 90 <0f> 0b 90 90 c3 cc cc cc cc 80 3d 98 30 ad 01 00 0f 85 75 ff ff ff\n[   41.510956] RSP: 0018:ffffbda3c026baf0 EFLAGS: 00010282\n[   41.511368] RAX: 0000000000000000 RBX: ffff9e9c46914800 RCX: 0000000000000000\n[   41.511910] RDX: ffff9e9c7ec29c00 RSI: ffff9e9c7ec1c900 RDI: ffff9e9c7ec1c900\n[   41.512445] RBP: ffff9e9c43660c9c R08: 0000000000009ffb R09: 00000000ffffdfff\n[   41.512998] R10: 00000000ffffdfff R11: ffffffff8ca58a40 R12: ffff9e9c4339a000\n[   41.513534] R13: 0000000000000001 R14: ffff9e9c438a0000 R15: ffffbda3c026bb48\n[   41.514086] FS:  00007fbc4cda1740(0000) GS:ffff9e9c7ec00000(0000) knlGS:0000000000000000\n[   41.514726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   41.515176] CR2: 000056233b337d88 CR3: 000000000376e006 CR4: 0000000000370ef0\n[   41.515713] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   41.516252] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   41.516799] Call Trace:\n[   41.517037]  <TASK>\n[   41.517249]  ? __warn+0x7b/0x120\n[   41.517535]  ? refcount_warn_saturate+0xa5/0x130\n[   41.517923]  ? report_bug+0x164/0x190\n[   41.518240]  ? handle_bug+0x3d/0x70\n[   41.518541]  ? exc_invalid_op+0x17/0x70\n[   41.520972]  ? asm_exc_invalid_op+0x1a/0x20\n[   41.521325]  ? refcount_warn_saturate+0xa5/0x130\n[   41.521708]  ipv6_get_ifaddr+0xda/0xe0\n[   41.522035]  inet6_rtm_getaddr+0x342/0x3f0\n[   41.522376]  ? __pfx_inet6_rtm_getaddr+0x10/0x10\n[   41.522758]  rtnetlink_rcv_msg+0x334/0x3d0\n[   41.523102]  ? netlink_unicast+0x30f/0x390\n[   41.523445]  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n[   41.523832]  netlink_rcv_skb+0x53/0x100\n[   41.524157]  netlink_unicast+0x23b/0x390\n[   41.524484]  netlink_sendmsg+0x1f2/0x440\n[   41.524826]  __sys_sendto+0x1d8/0x1f0\n[   41.525145]  __x64_sys_sendto+0x1f/0x30\n[   41.525467]  do_syscall_64+0xa5/0x1b0\n[   41.525794]  entry_SYSCALL_64_after_hwframe+0x72/0x7a\n[   41.526213] RIP: 0033:0x7fbc4cfcea9a\n[   41.526528] Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 2c 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 7e c3 0f 1f 44 00 00 41 54 48 83 ec 30 44 89\n[   41.527942] RSP: 002b:00007f\n---truncated---"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35972",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/c60ed825530b8c0cc2b524efd39b1d696ec54004",
            "https://git.kernel.org/stable/c/10a9d6a7513f93d7faffcb341af0aa42be8218fe",
            "https://git.kernel.org/stable/c/7ac10c7d728d75bc9daaa8fade3c7a3273b9a9ff"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n\nIf ulp = kzalloc() fails, the allocated edev will leak because it is\nnot properly assigned and the cleanup path will not be able to free it.\nFix it by assigning it properly immediately after allocation."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35973",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/43be590456e1f3566054ce78ae2dbb68cbe1a536",
            "https://git.kernel.org/stable/c/d3adf11d7993518a39bd02b383cfe657ccc0023c",
            "https://git.kernel.org/stable/c/10204df9beda4978bd1d0c2db0d8375bfb03b915",
            "https://git.kernel.org/stable/c/3c1ae6de74e3d2d6333d29a2d3e13e6094596c79",
            "https://git.kernel.org/stable/c/4a1b65d1e55d53b397cb27014208be1e04172670",
            "https://git.kernel.org/stable/c/190d9efa5773f26d6f334b1b8be282c4fa13fd5e",
            "https://git.kernel.org/stable/c/357163fff3a6e48fe74745425a32071ec9caf852",
            "https://git.kernel.org/stable/c/d8a6213d70accb403b82924a1c229e733433a5ef"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: fix header validation in geneve[6]_xmit_skb\n\nsyzbot is able to trigger an uninit-value in geneve_xmit() [1]\n\nProblem : While most ip tunnel helpers (like ip_tunnel_get_dsfield())\nuses skb_protocol(skb, true), pskb_inet_may_pull() is only using\nskb->protocol.\n\nIf anything else than ETH_P_IPV6 or ETH_P_IP is found in skb->protocol,\npskb_inet_may_pull() does nothing at all.\n\nIf a vlan tag was provided by the caller (af_packet in the syzbot case),\nthe network header might not point to the correct location, and skb\nlinear part could be smaller than expected.\n\nAdd skb_vlan_inet_prepare() to perform a complete mac validation.\n\nUse this in geneve for the moment, I suspect we need to adopt this\nmore broadly.\n\nv4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest\n   - Only call __vlan_get_protocol() for vlan types.\n\nv2,v3 - Addressed Sabrina comments on v1 and v2\n\n[1]\n\nBUG: KMSAN: uninit-value in geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n BUG: KMSAN: uninit-value in geneve_xmit+0x302d/0x5420 drivers/net/geneve.c:1030\n  geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n  geneve_xmit+0x302d/0x5420 drivers/net/geneve.c:1030\n  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]\n  netdev_start_xmit include/linux/netdevice.h:4917 [inline]\n  xmit_one net/core/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547\n  __dev_queue_xmit+0x348d/0x52c0 net/core/dev.c:4335\n  dev_queue_xmit include/linux/netdevice.h:3091 [inline]\n  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8bb0/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3804 [inline]\n  slab_alloc_node mm/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:577\n  __alloc_skb+0x35b/0x7a0 net/core/skbuff.c:668\n  alloc_skb include/linux/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024 [inline]\n  packet_sendmsg+0x722d/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nCPU: 0 PID: 5033 Comm: syz-executor346 Not tainted 6.9.0-rc1-syzkaller-00005-g928a87efa423 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35955",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33",
            "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412",
            "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d",
            "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e",
            "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808",
            "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f",
            "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0",
            "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35978",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/89a32741f4217856066c198a4a7267bcdd1edd67",
            "https://git.kernel.org/stable/c/4beab84fbb50df3be1d8f8a976e6fe882ca65cb2",
            "https://git.kernel.org/stable/c/8478394f76c748862ef179a16f651f752bdafaf0",
            "https://git.kernel.org/stable/c/75193678cce993aa959e7764b6df2f599886dd06",
            "https://git.kernel.org/stable/c/66fab1e120b39f8f47a94186ddee36006fc02ca8",
            "https://git.kernel.org/stable/c/9ab5e44b9bac946bd49fd63264a08cd1ea494e76",
            "https://git.kernel.org/stable/c/e4cb8382fff6706436b66eafd9c0ee857ff0a9f5",
            "https://git.kernel.org/stable/c/45d355a926ab40f3ae7bc0b0a00cb0e3e8a5a810"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35983",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/d34a516f2635090d36a306f84573e8de3d7374ce",
            "https://git.kernel.org/stable/c/66297b2ceda841f809637731d287bda3a93b49d8",
            "https://git.kernel.org/stable/c/93ba36238db6a74a82feb3dc476e25ea424ad630",
            "https://git.kernel.org/stable/c/9b7c5004d7c5ae062134052a85290869a015814c",
            "https://git.kernel.org/stable/c/15aa09d6d84629eb5296de30ac0aa19a33512f16",
            "https://git.kernel.org/stable/c/ebfe41889b762f1933c6762f6624b9724a25bee0",
            "https://git.kernel.org/stable/c/5af385f5f4cddf908f663974847a4083b2ff2c79"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbounds: Use the right number of bits for power-of-two CONFIG_NR_CPUS\n\nbits_per() rounds up to the next power of two when passed a power of\ntwo.  This causes crashes on some machines and configurations."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35956",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/14431815a4ae4bcd7c7a68b6a64c66c7712d27c9",
            "https://git.kernel.org/stable/c/6c95336f5d8eb9ab79cd7306d71b6d0477363f8c",
            "https://git.kernel.org/stable/c/74e97958121aa1f5854da6effba70143f051b0cd"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations\n\nCreate subvolume, create snapshot and delete subvolume all use\nbtrfs_subvolume_reserve_metadata() to reserve metadata for the changes\ndone to the parent subvolume's fs tree, which cannot be mediated in the\nnormal way via start_transaction. When quota groups (squota or qgroups)\nare enabled, this reserves qgroup metadata of type PREALLOC. Once the\noperation is associated to a transaction, we convert PREALLOC to\nPERTRANS, which gets cleared in bulk at the end of the transaction.\n\nHowever, the error paths of these three operations were not implementing\nthis lifecycle correctly. They unconditionally converted the PREALLOC to\nPERTRANS in a generic cleanup step regardless of errors or whether the\noperation was fully associated to a transaction or not. This resulted in\nerror paths occasionally converting this rsv to PERTRANS without calling\nrecord_root_in_trans successfully, which meant that unless that root got\nrecorded in the transaction by some other thread, the end of the\ntransaction would not free that root's PERTRANS, leaking it. Ultimately,\nthis resulted in hitting a WARN in CONFIG_BTRFS_DEBUG builds at unmount\nfor the leaked reservation.\n\nThe fix is to ensure that every qgroup PREALLOC reservation observes the\nfollowing properties:\n\n1. any failure before record_root_in_trans is called successfully\n   results in freeing the PREALLOC reservation.\n2. after record_root_in_trans, we convert to PERTRANS, and now the\n   transaction owns freeing the reservation.\n\nThis patch enforces those properties on the three operations. Without\nit, generic/269 with squotas enabled at mkfs time would fail in ~5-10\nruns on my system. With this patch, it ran successfully 1000 times in a\nrow."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35994",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/dd22b34fb53cb04b13b2f5eee5c9200bb091fc88",
            "https://git.kernel.org/stable/c/ed09f81eeaa8f9265e1787282cb283f10285c259"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix memory related IO errors and crashes\n\nIt turns out that while the QSEECOM APP_SEND command has specific fields\nfor request and response buffers, uefisecapp expects them both to be in\na single memory region. Failure to adhere to this has (so far) resulted\nin either no response being written to the response buffer (causing an\nEIO to be emitted down the line), the SCM call to fail with EINVAL\n(i.e., directly from TZ/firmware), or the device to be hard-reset.\n\nWhile this issue can be triggered deterministically, in the current form\nit seems to happen rather sporadically (which is why it has gone\nunnoticed during earlier testing). This is likely due to the two\nkzalloc() calls (for request and response) being directly after each\nother. Which means that those likely return consecutive regions most of\nthe time, especially when not much else is going on in the system.\n\nFix this by allocating a single memory region for both request and\nresponse buffers, properly aligning both structs inside it. This\nunfortunately also means that the qcom_scm_qseecom_app_send() interface\nneeds to be restructured, as it should no longer map the DMA regions\nseparately. Therefore, move the responsibility of DMA allocation (or\nmapping) to the caller."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35976",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/a82984b3c6a7e8c7937dba6e857ddf829d149417",
            "https://git.kernel.org/stable/c/f0a068de65d5b7358e9aff792716afa9333f3922",
            "https://git.kernel.org/stable/c/2a523f14a3f53b46ff0e1fafd215b0bc5f6783aa",
            "https://git.kernel.org/stable/c/b143e19dc28c3211f050f7848d87d9b0a170e10c",
            "https://git.kernel.org/stable/c/2eb979fbb2479bcd7e049f2f9978b6590dd8a0e6",
            "https://git.kernel.org/stable/c/237f3cf13b20db183d3706d997eedc3c49eacd44"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n\nsyzbot reported an illegal copy in xsk_setsockopt() [1]\n\nMake sure to validate setsockopt() @optlen parameter.\n\n[1]\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\nRead of size 4 at addr ffff888028c6cde3 by task syz-executor.0/7549\n\nCPU: 0 PID: 7549 Comm: syz-executor.0 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n <TASK>\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\n  do_sock_setsockopt+0x3af/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7fb40587de69\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb40665a0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69\nRDX: 0000000000000005 RSI: 000000000000011b RDI: 0000000000000006\nRBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020001980 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08\n </TASK>\n\nAllocated by task 7549:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:3966 [inline]\n  __kmalloc+0x233/0x4a0 mm/slub.c:3979\n  kmalloc include/linux/slab.h:632 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd2f/0x1040 kernel/bpf/cgroup.c:1869\n  do_sock_setsockopt+0x6b4/0x720 net/socket.c:2293\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nThe buggy address belongs to the object at ffff888028c6cde0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 1 bytes to the right of\n allocated 2-byte region [ffff888028c6cde0, ffff888028c6cde2)\n\nThe buggy address belongs to the physical page:\npage:ffffea0000a31b00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888028c6c9c0 pfn:0x28c6c\nanon flags: 0xfff00000000800(slab|node=0|zone=1|lastcpupid=0x7ff)\npage_type: 0xffffffff()\nraw: 00fff00000000800 ffff888014c41280 0000000000000000 dead000000000001\nraw: ffff888028c6c9c0 0000000080800057 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223\n  set_page_owner include/linux/page_owner.h:31 [inline]\n  post_alloc_hook+0x1ea/0x210 mm/page_alloc.c:1533\n  prep_new_page mm/page_alloc.c:\n---truncated---"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35977",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/cfd758041d8b79aa8c3f811b6bd6105379f2f702",
            "https://git.kernel.org/stable/c/9e9bb74a93b7daa32313ccaefd0edc529d40daf8",
            "https://git.kernel.org/stable/c/5e700b384ec13f5bcac9855cb28fcc674f1d3593"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/chrome: cros_ec_uart: properly fix race condition\n\nThe cros_ec_uart_probe() function calls devm_serdev_device_open() before\nit calls serdev_device_set_client_ops(). This can trigger a NULL pointer\ndereference:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    ...\n    Call Trace:\n     <TASK>\n     ...\n     ? ttyport_receive_buf\n\nA simplified version of crashing code is as follows:\n\n    static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl,\n                                                      const u8 *data,\n                                                      size_t count)\n    {\n            struct serdev_device *serdev = ctrl->serdev;\n\n            if (!serdev || !serdev->ops->receive_buf) // CRASH!\n                return 0;\n\n            return serdev->ops->receive_buf(serdev, data, count);\n    }\n\nIt assumes that if SERPORT_ACTIVE is set and serdev exists, serdev->ops\nwill also exist. This conflicts with the existing cros_ec_uart_probe()\nlogic, as it first calls devm_serdev_device_open() (which sets\nSERPORT_ACTIVE), and only later sets serdev->ops via\nserdev_device_set_client_ops().\n\nCommit 01f95d42b8f4 (\"platform/chrome: cros_ec_uart: fix race\ncondition\") attempted to fix a similar race condition, but while doing\nso, made the window of error for this race condition to happen much\nwider.\n\nAttempt to fix the race condition again, making sure we fully setup\nbefore calling devm_serdev_device_open()."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35961",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/8c91c60858473731bcdaf04fda99fcbcf84420d4",
            "https://git.kernel.org/stable/c/967caa3d37c078e5b95a32094657e6a4cad145f0",
            "https://git.kernel.org/stable/c/c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Register devlink first under devlink lock\n\nIn case device is having a non fatal FW error during probe, the\ndriver will report the error to user via devlink. This will trigger\na WARN_ON, since mlx5 is calling devlink_register() last.\nIn order to avoid the WARN_ON[1], change mlx5 to invoke devl_register()\nfirst under devlink lock.\n\n[1]\nWARNING: CPU: 5 PID: 227 at net/devlink/health.c:483 devlink_recover_notify.constprop.0+0xb8/0xc0\nCPU: 5 PID: 227 Comm: kworker/u16:3 Not tainted 6.4.0-rc5_for_upstream_min_debug_2023_06_12_12_38 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nWorkqueue: mlx5_health0000:08:00.0 mlx5_fw_reporter_err_work [mlx5_core]\nRIP: 0010:devlink_recover_notify.constprop.0+0xb8/0xc0\nCall Trace:\n <TASK>\n ? __warn+0x79/0x120\n ? devlink_recover_notify.constprop.0+0xb8/0xc0\n ? report_bug+0x17c/0x190\n ? handle_bug+0x3c/0x60\n ? exc_invalid_op+0x14/0x70\n ? asm_exc_invalid_op+0x16/0x20\n ? devlink_recover_notify.constprop.0+0xb8/0xc0\n devlink_health_report+0x4a/0x1c0\n mlx5_fw_reporter_err_work+0xa4/0xd0 [mlx5_core]\n process_one_work+0x1bb/0x3c0\n ? process_one_work+0x3c0/0x3c0\n worker_thread+0x4d/0x3c0\n ? process_one_work+0x3c0/0x3c0\n kthread+0xc6/0xf0\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n </TASK>"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35962",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/cf4bc359b76144a3dd55d7c09464ef4c5f2b2b05",
            "https://git.kernel.org/stable/c/97dab36e57c64106e1c8ebd66cbf0d2d1e52d6b7",
            "https://git.kernel.org/stable/c/c760089aa98289b4b88a7ff5a62dd92845adf223",
            "https://git.kernel.org/stable/c/89242d9584c342cb83311b598d9e6b82572eadf8",
            "https://git.kernel.org/stable/c/562b7245131f6e9f1d280c8b5a8750f03edfc05c",
            "https://git.kernel.org/stable/c/65acf6e0501ac8880a4f73980d01b5d27648b956"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: complete validation of user input\n\nIn my recent commit, I missed that do_replace() handlers\nuse copy_from_sockptr() (which I fixed), followed\nby unsafe copy_from_sockptr_offset() calls.\n\nIn all functions, we can perform the @optlen validation\nbefore even calling xt_alloc_table_info() with the following\ncheck:\n\nif ((u64)optlen < (u64)tmp.size + sizeof(tmp))\n        return -EINVAL;"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35995",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/4949affd5288b867cdf115f5b08d6166b2027f87",
            "https://git.kernel.org/stable/c/b54c4632946ae42f2b39ed38abd909bbf78cbcc2",
            "https://git.kernel.org/stable/c/6dfd79ed04c578f1d9a9a41ba5b2015cf9f03fc3",
            "https://git.kernel.org/stable/c/01fc53be672acae37e611c80cc0b4f3939584de3",
            "https://git.kernel.org/stable/c/1b890ae474d19800a6be1696df7fb4d9a41676e4",
            "https://git.kernel.org/stable/c/6cb6b12b78dcd8867a3fdbb1b6d0ed1df2b208d1",
            "https://git.kernel.org/stable/c/2f4a4d63a193be6fd530d180bb13c3592052904c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Use access_width over bit_width for system memory accesses\n\nTo align with ACPI 6.3+, since bit_width can be any 8-bit value, it\ncannot be depended on to be always on a clean 8b boundary. This was\nuncovered on the Cobalt 100 platform.\n\nSError Interrupt on CPU26, code 0xbe000011 -- SError\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n pstate: 62400009 (nZCv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)\n pc : cppc_get_perf_caps+0xec/0x410\n lr : cppc_get_perf_caps+0xe8/0x410\n sp : ffff8000155ab730\n x29: ffff8000155ab730 x28: ffff0080139d0038 x27: ffff0080139d0078\n x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff\n x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000\n x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff\n x17: 0000000000000000 x16: ffffdc7e111bad04 x15: ffff00802b251008\n x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006\n x11: ffffdc7e128f4420 x10: 0000000000000000 x9 : ffffdc7e111badec\n x8 : ffff00802b251980 x7 : 0000000000000000 x6 : ffff0080139d0028\n x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff\n x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000\n Kernel panic - not syncing: Asynchronous SError Interrupt\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted\n5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n Call trace:\n  dump_backtrace+0x0/0x1e0\n  show_stack+0x24/0x30\n  dump_stack_lvl+0x8c/0xb8\n  dump_stack+0x18/0x34\n  panic+0x16c/0x384\n  add_taint+0x0/0xc0\n  arm64_serror_panic+0x7c/0x90\n  arm64_is_fatal_ras_serror+0x34/0xa4\n  do_serror+0x50/0x6c\n  el1h_64_error_handler+0x40/0x74\n  el1h_64_error+0x7c/0x80\n  cppc_get_perf_caps+0xec/0x410\n  cppc_cpufreq_cpu_init+0x74/0x400 [cppc_cpufreq]\n  cpufreq_online+0x2dc/0xa30\n  cpufreq_add_dev+0xc0/0xd4\n  subsys_interface_register+0x134/0x14c\n  cpufreq_register_driver+0x1b0/0x354\n  cppc_cpufreq_init+0x1a8/0x1000 [cppc_cpufreq]\n  do_one_initcall+0x50/0x250\n  do_init_module+0x60/0x27c\n  load_module+0x2300/0x2570\n  __do_sys_finit_module+0xa8/0x114\n  __arm64_sys_finit_module+0x2c/0x3c\n  invoke_syscall+0x78/0x100\n  el0_svc_common.constprop.0+0x180/0x1a0\n  do_el0_svc+0x84/0xa0\n  el0_svc+0x2c/0xc0\n  el0t_64_sync_handler+0xa4/0x12c\n  el0t_64_sync+0x1a4/0x1a8\n\nInstead, use access_width to determine the size and use the offset and\nwidth to shift and mask the bits to read/write out. Make sure to add a\ncheck for system memory since pcc redefines the access_width to\nsubspace id.\n\nIf access_width is not set, then fall back to using bit_width.\n\n[ rjw: Subject and changelog edits, comment adjustments ]"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35997",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/21bfca822cfc1e71796124e93b46e0d9fa584401",
            "https://git.kernel.org/stable/c/c448a9fd50f77e8fb9156ff64848aa4295eb3003",
            "https://git.kernel.org/stable/c/5095b93021b899f54c9355bebf36d78854c33a22",
            "https://git.kernel.org/stable/c/b65fb50e04a95eec34a9d1bc138454a98a5578d8",
            "https://git.kernel.org/stable/c/0561b65fbd53d3e788c5b0222d9112ca016fd6a1",
            "https://git.kernel.org/stable/c/29e94f295bad5be59cf4271a93e22cdcf5536722",
            "https://git.kernel.org/stable/c/418c5575d56410c6e186ab727bf32ae32447d497",
            "https://git.kernel.org/stable/c/9c0f59e47a90c54d0153f8ddc0f80d7a36207d0e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent lock-up\n\nThe flag I2C_HID_READ_PENDING is used to serialize I2C operations.\nHowever, this is not necessary, because I2C core already has its own\nlocking for that.\n\nMore importantly, this flag can cause a lock-up: if the flag is set in\ni2c_hid_xfer() and an interrupt happens, the interrupt handler\n(i2c_hid_irq) will check this flag and return immediately without doing\nanything, then the interrupt handler will be invoked again in an\ninfinite loop.\n\nSince interrupt handler is an RT task, it takes over the CPU and the\nflag-clearing task never gets scheduled, thus we have a lock-up.\n\nDelete this unnecessary flag."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35979",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/3f28d49a328fe20926995d5fbdc92da665596268",
            "https://git.kernel.org/stable/c/f423f41b7679c09abb26d2bd54be5cbef23c9446",
            "https://git.kernel.org/stable/c/fcf3f7e2fc8a53a6140beee46ec782a4c88e4744"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nraid1: fix use-after-free for original bio in raid1_write_request()\n\nr1_bio->bios[] is used to record new bios that will be issued to\nunderlying disks, however, in raid1_write_request(), r1_bio->bios[]\nwill set to the original bio temporarily. Meanwhile, if blocked rdev\nis set, free_r1bio() will be called causing that all r1_bio->bios[]\nto be freed:\n\nraid1_write_request()\n r1_bio = alloc_r1bio(mddev, bio); -> r1_bio->bios[] is NULL\n for (i = 0;  i < disks; i++) -> for each rdev in conf\n  // first rdev is normal\n  r1_bio->bios[0] = bio; -> set to original bio\n  // second rdev is blocked\n  if (test_bit(Blocked, &rdev->flags))\n   break\n\n if (blocked_rdev)\n  free_r1bio()\n   put_all_bios()\n    bio_put(r1_bio->bios[0]) -> original bio is freed\n\nTest scripts:\n\nmdadm -CR /dev/md0 -l1 -n4 /dev/sd[abcd] --assume-clean\nfio -filename=/dev/md0 -ioengine=libaio -rw=write -bs=4k -numjobs=1 \\\n    -iodepth=128 -name=test -direct=1\necho blocked > /sys/block/md0/md/rd2/state\n\nTest result:\n\nBUG bio-264 (Not tainted): Object already free\n-----------------------------------------------------------------------------\n\nAllocated in mempool_alloc_slab+0x24/0x50 age=1 cpu=1 pid=869\n kmem_cache_alloc+0x324/0x480\n mempool_alloc_slab+0x24/0x50\n mempool_alloc+0x6e/0x220\n bio_alloc_bioset+0x1af/0x4d0\n blkdev_direct_IO+0x164/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n io_submit_one+0x5ca/0xb70\n __do_sys_io_submit+0x86/0x270\n __x64_sys_io_submit+0x22/0x30\n do_syscall_64+0xb1/0x210\n entry_SYSCALL_64_after_hwframe+0x6c/0x74\nFreed in mempool_free_slab+0x1f/0x30 age=1 cpu=1 pid=869\n kmem_cache_free+0x28c/0x550\n mempool_free_slab+0x1f/0x30\n mempool_free+0x40/0x100\n bio_free+0x59/0x80\n bio_put+0xf0/0x220\n free_r1bio+0x74/0xb0\n raid1_make_request+0xadf/0x1150\n md_handle_request+0xc7/0x3b0\n md_submit_bio+0x76/0x130\n __submit_bio+0xd8/0x1d0\n submit_bio_noacct_nocheck+0x1eb/0x5c0\n submit_bio_noacct+0x169/0xd40\n submit_bio+0xee/0x1d0\n blkdev_direct_IO+0x322/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n\nSince that bios for underlying disks are not allocated yet, fix this\nproblem by using mempool_free() directly to free the r1_bio."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35998",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/c7a4bca289e50bb4b2650f845c41bb3e453f4c66",
            "https://git.kernel.org/stable/c/699f8958dece132709c0bff6a9700999a2a63b75",
            "https://git.kernel.org/stable/c/8248224ab5b8ca7559b671917c224296a4d671fc",
            "https://git.kernel.org/stable/c/8861fd5180476f45f9e8853db154600469a0284f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix lock ordering potential deadlock in cifs_sync_mid_result\n\nCoverity spotted that the cifs_sync_mid_result function could deadlock\n\n\"Thread deadlock (ORDER_REVERSAL) lock_order: Calling spin_lock acquires\nlock TCP_Server_Info.srv_lock while holding lock TCP_Server_Info.mid_lock\"\n\nAddresses-Coverity: 1590401 (\"Thread deadlock (ORDER_REVERSAL)\")"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35965",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/9d42f373391211c7c8af66a3a316533a32b8a607",
            "https://git.kernel.org/stable/c/8ee0c132a61df9723813c40e742dc5321824daa9",
            "https://git.kernel.org/stable/c/4f3951242ace5efc7131932e2e01e6ac6baed846"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix not validating setsockopt user input\n\nCheck user input length before copying data."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35999",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/98c7ed29cd754ae7475dc7cb3f33399fda902729",
            "https://git.kernel.org/stable/c/0fcf7e219448e937681216353c9a58abae6d3c2e",
            "https://git.kernel.org/stable/c/60ab245292280905603bc0d3654f4cf8fceccb00",
            "https://git.kernel.org/stable/c/8094a600245e9b28eb36a13036f202ad67c1f887"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: missing lock when picking channel\n\nCoverity spotted a place where we should have been holding the\nchannel lock when accessing the ses channel index.\n\nAddresses-Coverity: 1582039 (\"Data race condition (MISSING_LOCK)\")"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35966",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/c3f787a3eafe519c93df9abbb0ca5145861c8d0f",
            "https://git.kernel.org/stable/c/a97de7bff13b1cc825c1b1344eaed8d6c2d3e695"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude/linux/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude/linux/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet/bluetooth/rfcomm/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70\nnet/bluetooth/rfcomm/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36000",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/4c806333efea1000a2a9620926f560ad2e1ca7cc",
            "https://git.kernel.org/stable/c/f6c5d21db16a0910152ec8aa9d5a7aed72694505",
            "https://git.kernel.org/stable/c/538faabf31e9c53d8c870d114846fda958a0de10",
            "https://git.kernel.org/stable/c/b76b46902c2d0395488c8412e1116c2486cdfcb2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35982",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/04720ea2e6c64459a90ca28570ea78335eccd924",
            "https://git.kernel.org/stable/c/b3ddf6904073990492454b1dd1c10a24be8c74c6",
            "https://git.kernel.org/stable/c/70a8be9dc2fb65d67f8c1e0c88c587e08e2e575d",
            "https://git.kernel.org/stable/c/87b6af1a7683e021710c08fc0551fc078346032f",
            "https://git.kernel.org/stable/c/3fe79b2c83461edbbf86ed8a6f3924820ff89259",
            "https://git.kernel.org/stable/c/4ca2a5fb54ea2cc43edea614207fcede562d91c2",
            "https://git.kernel.org/stable/c/ca54e2671548616ad34885f90d4f26f7adb088f0",
            "https://git.kernel.org/stable/c/b1f532a3b1e6d2e5559c7ace49322922637a28aa"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36001",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/5eaf23b2e81349f6614f88396dc468fda89fc0b9",
            "https://git.kernel.org/stable/c/c97f59e276d4e93480f29a70accbd0d7273cf3f5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix the pre-flush when appending to a file in writethrough mode\n\nIn netfs_perform_write(), when the file is marked NETFS_ICTX_WRITETHROUGH\nor O_*SYNC or RWF_*SYNC was specified, write-through caching is performed\non a buffered file.  When setting up for write-through, we flush any\nconflicting writes in the region and wait for the write to complete,\nfailing if there's a write error to return.\n\nThe issue arises if we're writing at or above the EOF position because we\nskip the flush and - more importantly - the wait.  This becomes a problem\nif there's a partial folio at the end of the file that is being written out\nand we want to make a write to it too.  Both the already-running write and\nthe write we start both want to clear the writeback mark, but whoever is\nsecond causes a warning looking something like:\n\n    ------------[ cut here ]------------\n    R=00000012: folio 11 is not under writeback\n    WARNING: CPU: 34 PID: 654 at fs/netfs/write_collect.c:105\n    ...\n    CPU: 34 PID: 654 Comm: kworker/u386:27 Tainted: G S ...\n    ...\n    Workqueue: events_unbound netfs_write_collection_worker\n    ...\n    RIP: 0010:netfs_writeback_lookup_folio\n\nFix this by making the flush-and-wait unconditional.  It will do nothing if\nthere are no folios in the pagecache and will return quickly if there are\nno folios in the region specified.\n\nFurther, move the WBC attachment above the flush call as the flush is going\nto attach a WBC and detach it again if it is not present - and since we\nneed one anyway we might as well share it."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35971",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/492337a4fbd1421b42df684ee9b34be2a2722540",
            "https://git.kernel.org/stable/c/cba376eb036c2c20077b41d47b317d8218fe754f",
            "https://git.kernel.org/stable/c/49d5d70538b6b8f2a3f8f1ac30c1f921d4a0929b",
            "https://git.kernel.org/stable/c/be0384bf599cf1eb8d337517feeb732d71f75a6f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Handle softirqs at the end of IRQ thread to fix hang\n\nThe ks8851_irq() thread may call ks8851_rx_pkts() in case there are\nany packets in the MAC FIFO, which calls netif_rx(). This netif_rx()\nimplementation is guarded by local_bh_disable() and local_bh_enable().\nThe local_bh_enable() may call do_softirq() to run softirqs in case\nany are pending. One of the softirqs is net_rx_action, which ultimately\nreaches the driver .start_xmit callback. If that happens, the system\nhangs. The entire call chain is below:\n\nks8851_start_xmit_par from netdev_start_xmit\nnetdev_start_xmit from dev_hard_start_xmit\ndev_hard_start_xmit from sch_direct_xmit\nsch_direct_xmit from __dev_queue_xmit\n__dev_queue_xmit from __neigh_update\n__neigh_update from neigh_update\nneigh_update from arp_process.constprop.0\narp_process.constprop.0 from __netif_receive_skb_one_core\n__netif_receive_skb_one_core from process_backlog\nprocess_backlog from __napi_poll.constprop.0\n__napi_poll.constprop.0 from net_rx_action\nnet_rx_action from __do_softirq\n__do_softirq from call_with_stack\ncall_with_stack from do_softirq\ndo_softirq from __local_bh_enable_ip\n__local_bh_enable_ip from netif_rx\nnetif_rx from ks8851_irq\nks8851_irq from irq_thread_fn\nirq_thread_fn from irq_thread\nirq_thread from kthread\nkthread from ret_from_fork\n\nThe hang happens because ks8851_irq() first locks a spinlock in\nks8851_par.c ks8851_lock_par() spin_lock_irqsave(&ksp->lock, ...)\nand with that spinlock locked, calls netif_rx(). Once the execution\nreaches ks8851_start_xmit_par(), it calls ks8851_lock_par() again\nwhich attempts to claim the already locked spinlock again, and the\nhang happens.\n\nMove the do_softirq() call outside of the spinlock protected section\nof ks8851_irq() by disabling BHs around the entire spinlock protected\nsection of ks8851_irq() handler. Place local_bh_enable() outside of\nthe spinlock protected section, so that it can trigger do_softirq()\nwithout the ks8851_par.c ks8851_lock_par() spinlock being held, and\nsafely call ks8851_start_xmit_par() without attempting to lock the\nalready locked spinlock.\n\nSince ks8851_irq() is protected by local_bh_disable()/local_bh_enable()\nnow, replace netif_rx() with __netif_rx() which is not duplicating the\nlocal_bh_disable()/local_bh_enable() calls."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36002",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/f3e1cf62d18220a3aa97e084e7a3552debece9fc",
            "https://git.kernel.org/stable/c/38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix dpll_pin_on_pin_register() for multiple parent pins\n\nIn scenario where pin is registered with multiple parent pins via\ndpll_pin_on_pin_register(..), all belonging to the same dpll device.\nA second call to dpll_pin_on_pin_unregister(..) would cause a call trace,\nas it tries to use already released registration resources (due to fix\nintroduced in b446631f355e). In this scenario pin was registered twice,\nso resources are not yet expected to be release until each registered\npin/pin pair is unregistered.\n\nCurrently, the following crash/call trace is produced when ice driver is\nremoved on the system with installed E810T NIC which includes dpll device:\n\nWARNING: CPU: 51 PID: 9155 at drivers/dpll/dpll_core.c:809 dpll_pin_ops+0x20/0x30\nRIP: 0010:dpll_pin_ops+0x20/0x30\nCall Trace:\n ? __warn+0x7f/0x130\n ? dpll_pin_ops+0x20/0x30\n dpll_msg_add_pin_freq+0x37/0x1d0\n dpll_cmd_pin_get_one+0x1c0/0x400\n ? __nlmsg_put+0x63/0x80\n dpll_pin_event_send+0x93/0x140\n dpll_pin_on_pin_unregister+0x3f/0x100\n ice_dpll_deinit_pins+0xa1/0x230 [ice]\n ice_remove+0xf1/0x210 [ice]\n\nFix by adding a parent pointer as a cookie when creating a registration,\nalso when searching for it. For the regular pins pass NULL, this allows to\ncreate separated registration for each parent the pin is registered with."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35984",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/40f1d79f07b49c8a64a861706e5163f2db4bd95d",
            "https://git.kernel.org/stable/c/ad3c3ac7a03be3697114f781193dd3e9d97e6e23",
            "https://git.kernel.org/stable/c/5fd72404587d7db4acb2d241fd8c387afb0a7aec",
            "https://git.kernel.org/stable/c/5a09eae9a7db597fe0c1fc91636205b4a25d2620",
            "https://git.kernel.org/stable/c/4e75e222d397c6752b229ed72fc4644c8c36ecde",
            "https://git.kernel.org/stable/c/e3425674ff68dc521c57c6eabad0cbd20a027d85",
            "https://git.kernel.org/stable/c/357c64ef1ef39b1e7cd91ab6bdd304d043702c83",
            "https://git.kernel.org/stable/c/91811a31b68d3765b3065f4bb6d7d6d84a7cfc9f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35974",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/740ffad95ca8033bd6e080ed337655b13b4d38ac",
            "https://git.kernel.org/stable/c/858c489d81d659af17a4d11cfaad2afb42e47a76",
            "https://git.kernel.org/stable/c/8b8ace080319a866f5dfe9da8e665ae51d971c54"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix q->blkg_list corruption during disk rebind\n\nMultiple gendisk instances can allocated/added for single request queue\nin case of disk rebind. blkg may still stay in q->blkg_list when calling\nblkcg_init_disk() for rebind, then q->blkg_list becomes corrupted.\n\nFix the list corruption issue by:\n\n- add blkg_init_queue() to initialize q->blkg_list & q->blkcg_mutex only\n- move calling blkg_init_queue() into blk_alloc_queue()\n\nThe list corruption should be started since commit f1c006f1c685 (\"blk-cgroup:\nsynchronize pd_free_fn() from blkg_free_workfn() and blkcg_deactivate_policy()\")\nwhich delays removing blkg from q->blkg_list into blkg_free_workfn()."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35975",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/7af5582ea67209a23e44be9a9612ba7897be1f47",
            "https://git.kernel.org/stable/c/b34fe77a1b18654233e4e54b334fcaeddf487100",
            "https://git.kernel.org/stable/c/bccb798e07f8bb8b91212fe8ed1e421685449076"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix transmit scheduler resource leak\n\nInorder to support shaping and scheduling, Upon class creation\nNetdev driver allocates trasmit schedulers.\n\nThe previous patch which added support for Round robin scheduling has\na bug due to which driver is not freeing transmit schedulers post\nclass deletion.\n\nThis patch fixes the same."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35949",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/ef3ba8ce8cf7075b716aa4afcefc3034215878ee",
            "https://git.kernel.org/stable/c/e03418abde871314e1a3a550f4c8afb7b89cb273"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: make sure that WRITTEN is set on all metadata blocks\n\nWe previously would call btrfs_check_leaf() if we had the check\nintegrity code enabled, which meant that we could only run the extended\nleaf checks if we had WRITTEN set on the header flags.\n\nThis leaves a gap in our checking, because we could end up with\ncorruption on disk where WRITTEN isn't set on the leaf, and then the\nextended leaf checks don't get run which we rely on to validate all of\nthe item pointers to make sure we don't access memory outside of the\nextent buffer.\n\nHowever, since 732fab95abe2 (\"btrfs: check-integrity: remove\nCONFIG_BTRFS_FS_CHECK_INTEGRITY option\") we no longer call\nbtrfs_check_leaf() from btrfs_mark_buffer_dirty(), which means we only\never call it on blocks that are being written out, and thus have WRITTEN\nset, or that are being read in, which should have WRITTEN set.\n\nAdd checks to make sure we have WRITTEN set appropriately, and then make\nsure __btrfs_check_leaf() always does the item checking.  This will\nprotect us from file systems that have been corrupted and no longer have\nWRITTEN set on some of the blocks.\n\nThis was hit on a crafted image tweaking the WRITTEN bit and reported by\nKASAN as out-of-bound access in the eb accessors. The example is a dir\nitem at the end of an eb.\n\n  [2.042] BTRFS warning (device loop1): bad eb member start: ptr 0x3fff start 30572544 member offset 16410 size 2\n  [2.040] general protection fault, probably for non-canonical address 0xe0009d1000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  [2.537] KASAN: maybe wild-memory-access in range [0x0005088000000018-0x000508800000001f]\n  [2.729] CPU: 0 PID: 2587 Comm: mount Not tainted 6.8.2 #1\n  [2.729] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n  [2.621] RIP: 0010:btrfs_get_16+0x34b/0x6d0\n  [2.621] RSP: 0018:ffff88810871fab8 EFLAGS: 00000206\n  [2.621] RAX: 0000a11000000003 RBX: ffff888104ff8720 RCX: ffff88811b2288c0\n  [2.621] RDX: dffffc0000000000 RSI: ffffffff81dd8aca RDI: ffff88810871f748\n  [2.621] RBP: 000000000000401a R08: 0000000000000001 R09: ffffed10210e3ee9\n  [2.621] R10: ffff88810871f74f R11: 205d323430333737 R12: 000000000000001a\n  [2.621] R13: 000508800000001a R14: 1ffff110210e3f5d R15: ffffffff850011e8\n  [2.621] FS:  00007f56ea275840(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000\n  [2.621] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [2.621] CR2: 00007febd13b75c0 CR3: 000000010bb50000 CR4: 00000000000006f0\n  [2.621] Call Trace:\n  [2.621]  <TASK>\n  [2.621]  ? show_regs+0x74/0x80\n  [2.621]  ? die_addr+0x46/0xc0\n  [2.621]  ? exc_general_protection+0x161/0x2a0\n  [2.621]  ? asm_exc_general_protection+0x26/0x30\n  [2.621]  ? btrfs_get_16+0x33a/0x6d0\n  [2.621]  ? btrfs_get_16+0x34b/0x6d0\n  [2.621]  ? btrfs_get_16+0x33a/0x6d0\n  [2.621]  ? __pfx_btrfs_get_16+0x10/0x10\n  [2.621]  ? __pfx_mutex_unlock+0x10/0x10\n  [2.621]  btrfs_match_dir_item_name+0x101/0x1a0\n  [2.621]  btrfs_lookup_dir_item+0x1f3/0x280\n  [2.621]  ? __pfx_btrfs_lookup_dir_item+0x10/0x10\n  [2.621]  btrfs_get_tree+0xd25/0x1910\n\n[ copy more details from report ]"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36003",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/740717774dc37338404d10726967d582414f638c",
            "https://git.kernel.org/stable/c/de8631d8c9df08440268630200e64b623a5f69e6",
            "https://git.kernel.org/stable/c/96fdd1f6b4ed72a741fb0eb705c0e13049b8721f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix LAG and VF lock dependency in ice_reset_vf()\n\n9f74a3dfcf83 (\"ice: Fix VF Reset paths when interface in a failed over\naggregate\"), the ice driver has acquired the LAG mutex in ice_reset_vf().\nThe commit placed this lock acquisition just prior to the acquisition of\nthe VF configuration lock.\n\nIf ice_reset_vf() acquires the configuration lock via the ICE_VF_RESET_LOCK\nflag, this could deadlock with ice_vc_cfg_qs_msg() because it always\nacquires the locks in the order of the VF configuration lock and then the\nLAG mutex.\n\nLockdep reports this violation almost immediately on creating and then\nremoving 2 VF:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-rc6 #54 Tainted: G        W  O\n------------------------------------------------------\nkworker/60:3/6771 is trying to acquire lock:\nff40d43e099380a0 (&vf->cfg_lock){+.+.}-{3:3}, at: ice_reset_vf+0x22f/0x4d0 [ice]\n\nbut task is already holding lock:\nff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7/0x4d0 [ice]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&pf->lag_mutex){+.+.}-{3:3}:\n       __lock_acquire+0x4f8/0xb40\n       lock_acquire+0xd4/0x2d0\n       __mutex_lock+0x9b/0xbf0\n       ice_vc_cfg_qs_msg+0x45/0x690 [ice]\n       ice_vc_process_vf_msg+0x4f5/0x870 [ice]\n       __ice_clean_ctrlq+0x2b5/0x600 [ice]\n       ice_service_task+0x2c9/0x480 [ice]\n       process_one_work+0x1e9/0x4d0\n       worker_thread+0x1e1/0x3d0\n       kthread+0x104/0x140\n       ret_from_fork+0x31/0x50\n       ret_from_fork_asm+0x1b/0x30\n\n-> #0 (&vf->cfg_lock){+.+.}-{3:3}:\n       check_prev_add+0xe2/0xc50\n       validate_chain+0x558/0x800\n       __lock_acquire+0x4f8/0xb40\n       lock_acquire+0xd4/0x2d0\n       __mutex_lock+0x9b/0xbf0\n       ice_reset_vf+0x22f/0x4d0 [ice]\n       ice_process_vflr_event+0x98/0xd0 [ice]\n       ice_service_task+0x1cc/0x480 [ice]\n       process_one_work+0x1e9/0x4d0\n       worker_thread+0x1e1/0x3d0\n       kthread+0x104/0x140\n       ret_from_fork+0x31/0x50\n       ret_from_fork_asm+0x1b/0x30\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n       CPU0                    CPU1\n       ----                    ----\n  lock(&pf->lag_mutex);\n                               lock(&vf->cfg_lock);\n                               lock(&pf->lag_mutex);\n  lock(&vf->cfg_lock);\n\n *** DEADLOCK ***\n4 locks held by kworker/60:3/6771:\n #0: ff40d43e05428b38 ((wq_completion)ice){+.+.}-{0:0}, at: process_one_work+0x176/0x4d0\n #1: ff50d06e05197e58 ((work_completion)(&pf->serv_task)){+.+.}-{0:0}, at: process_one_work+0x176/0x4d0\n #2: ff40d43ea1960e50 (&pf->vfs.table_lock){+.+.}-{3:3}, at: ice_process_vflr_event+0x48/0xd0 [ice]\n #3: ff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7/0x4d0 [ice]\n\nstack backtrace:\nCPU: 60 PID: 6771 Comm: kworker/60:3 Tainted: G        W  O       6.8.0-rc6 #54\nHardware name:\nWorkqueue: ice ice_service_task [ice]\nCall Trace:\n <TASK>\n dump_stack_lvl+0x4a/0x80\n check_noncircular+0x12d/0x150\n check_prev_add+0xe2/0xc50\n ? save_trace+0x59/0x230\n ? add_chain_cache+0x109/0x450\n validate_chain+0x558/0x800\n __lock_acquire+0x4f8/0xb40\n ? lockdep_hardirqs_on+0x7d/0x100\n lock_acquire+0xd4/0x2d0\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? lock_is_held_type+0xc7/0x120\n __mutex_lock+0x9b/0xbf0\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? rcu_is_watching+0x11/0x50\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ice_reset_vf+0x22f/0x4d0 [ice]\n ? process_one_work+0x176/0x4d0\n ice_process_vflr_event+0x98/0xd0 [ice]\n ice_service_task+0x1cc/0x480 [ice]\n process_one_work+0x1e9/0x4d0\n worker_thread+0x1e1/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0x104/0x140\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x31/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n </TASK>\n\nTo avoid deadlock, we must acquire the LAG \n---truncated---"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35950",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/5a2f957e3c4553bbb100504a1acfeaeb33f4ca4e",
            "https://git.kernel.org/stable/c/41586487769eede64ab1aa6c65c74cbf76c12ef0",
            "https://git.kernel.org/stable/c/d2dc6600d4e3e1453e3b1fb233e9f97e2a1ae949",
            "https://git.kernel.org/stable/c/18c8cc6680ce938d0458859b6a08b4d34f7d8055",
            "https://git.kernel.org/stable/c/04e018bd913d3d3336ab7d21c2ad31a9175fe984",
            "https://git.kernel.org/stable/c/8ceb873d816786a7c8058f50d903574aff8d3764",
            "https://git.kernel.org/stable/c/3eadd887dbac1df8f25f701e5d404d1b90fd0fea"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/client: Fully protect modes[] with dev->mode_config.mutex\n\nThe modes[] array contains pointers to modes on the connectors'\nmode lists, which are protected by dev->mode_config.mutex.\nThus we need to extend modes[] the same protection or by the\ntime we use it the elements may already be pointing to\nfreed/reused memory."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35986",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/25b3498485ac281e5851700e33b97f12c9533fd8",
            "https://git.kernel.org/stable/c/73224a5d2180066c7fe05b4656647601ba08d588",
            "https://git.kernel.org/stable/c/9827caa5105fb16d1fae2e75c8d0e4662014b3ca",
            "https://git.kernel.org/stable/c/bf6e4ee5c43690e4c5a8a057bbcd4ff986bed052"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: tusb1210: Resolve charger-det crash if charger psy is unregistered\n\nThe power_supply frame-work is not really designed for there to be\nlong living in kernel references to power_supply devices.\n\nSpecifically unregistering a power_supply while some other code has\na reference to it triggers a WARN in power_supply_unregister():\n\n\tWARN_ON(atomic_dec_return(&psy->use_cnt));\n\nFolllowed by the power_supply still getting removed and the\nbacking data freed anyway, leaving the tusb1210 charger-detect code\nwith a dangling reference, resulting in a crash the next time\ntusb1210_get_online() is called.\n\nFix this by only holding the reference in tusb1210_get_online()\nfreeing it at the end of the function. Note this still leaves\na theoretical race window, but it avoids the issue when manually\nrmmod-ing the charger chip driver during development."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35951",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002",
            "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa",
            "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35987",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/b008e327fa570aca210f98c817757649bae56694",
            "https://git.kernel.org/stable/c/ea6628e4e2353978af7e3b4ad4fdaab6149acf3d",
            "https://git.kernel.org/stable/c/aea702dde7e9876fb00571a2602f25130847bf0f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix loading 64-bit NOMMU kernels past the start of RAM\n\ncommit 3335068f8721 (\"riscv: Use PUD/P4D/PGD pages for the linear\nmapping\") added logic to allow using RAM below the kernel load address.\nHowever, this does not work for NOMMU, where PAGE_OFFSET is fixed to the\nkernel load address. Since that range of memory corresponds to PFNs\nbelow ARCH_PFN_OFFSET, mm initialization runs off the beginning of\nmem_map and corrupts adjacent kernel memory. Fix this by restoring the\nprevious behavior for NOMMU kernels."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35952",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/8a6fea3fcb577a543ef67683ca7105bde49a38fb",
            "https://git.kernel.org/stable/c/a81b2acd43e24e419f65df97348c76a5a1496066",
            "https://git.kernel.org/stable/c/35768baf0fdfc47ede42d899506bad78450e9294",
            "https://git.kernel.org/stable/c/bc004f5038220b1891ef4107134ccae44be55109"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/ast: Fix soft lockup\n\nThere is a while-loop in ast_dp_set_on_off() that could lead to\ninfinite-loop. This is because the register, VGACRI-Dx, checked in\nthis API is a scratch register actually controlled by a MCU, named\nDPMCU, in BMC.\n\nThese scratch registers are protected by scu-lock. If suc-lock is not\noff, DPMCU can not update these registers and then host will have soft\nlockup due to never updated status.\n\nDPMCU is used to control DP and relative registers to handshake with\nhost's VGA driver. Even the most time-consuming task, DP's link\ntraining, is less than 100ms. 200ms should be enough."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35980",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/ac4ad513de4fba18b4ac0ace132777d0910e8cfa",
            "https://git.kernel.org/stable/c/944db7b536baaf49d7e576af36a94f4719552b07",
            "https://git.kernel.org/stable/c/e3ba51ab24fddef79fc212f9840de54db8fd1685"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: tlb: Fix TLBI RANGE operand\n\nKVM/arm64 relies on TLBI RANGE feature to flush TLBs when the dirty\npages are collected by VMM and the page table entries become write\nprotected during live migration. Unfortunately, the operand passed\nto the TLBI RANGE instruction isn't correctly sorted out due to the\ncommit 117940aa6e5f (\"KVM: arm64: Define kvm_tlb_flush_vmid_range()\").\nIt leads to crash on the destination VM after live migration because\nTLBs aren't flushed completely and some of the dirty pages are missed.\n\nFor example, I have a VM where 8GB memory is assigned, starting from\n0x40000000 (1GB). Note that the host has 4KB as the base page size.\nIn the middile of migration, kvm_tlb_flush_vmid_range() is executed\nto flush TLBs. It passes MAX_TLBI_RANGE_PAGES as the argument to\n__kvm_tlb_flush_vmid_range() and __flush_s2_tlb_range_op(). SCALE#3\nand NUM#31, corresponding to MAX_TLBI_RANGE_PAGES, isn't supported\nby __TLBI_RANGE_NUM(). In this specific case, -1 has been returned\nfrom __TLBI_RANGE_NUM() for SCALE#3/2/1/0 and rejected by the loop\nin the __flush_tlb_range_op() until the variable @scale underflows\nand becomes -9, 0xffff708000040000 is set as the operand. The operand\nis wrong since it's sorted out by __TLBI_VADDR_RANGE() according to\ninvalid @scale and @num.\n\nFix it by extending __TLBI_RANGE_NUM() to support the combination of\nSCALE#3 and NUM#31. With the changes, [-1 31] instead of [-1 30] can\nbe returned from the macro, meaning the TLBs for 0x200000 pages in the\nabove example can be flushed in one shoot with SCALE#3 and NUM#31. The\nmacro TLBI_RANGE_MASK is dropped since no one uses it any more. The\ncomments are also adjusted accordingly."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35953",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/d43e11d9c7fcb16f18bd46ab2556c2772ffc5775",
            "https://git.kernel.org/stable/c/e6011411147209bc0cc14628cbc155356837e52a",
            "https://git.kernel.org/stable/c/fd7726e75968b27fe98534ccbf47ccd6fef686f3"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\naccel/ivpu: Fix deadlock in context_xa\n\nivpu_device->context_xa is locked both in kernel thread and IRQ context.\nIt requires XA_FLAGS_LOCK_IRQ flag to be passed during initialization\notherwise the lock could be acquired from a thread and interrupted by\nan IRQ that locks it for the second time causing the deadlock.\n\nThis deadlock was reported by lockdep and observed in internal tests."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36004",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/09b54d29f05129b092f7c793a70b689ffb3c7b2c",
            "https://git.kernel.org/stable/c/546d0fe9d76e8229a67369f9cb61e961d99038bd",
            "https://git.kernel.org/stable/c/fbbb2404340dd6178e281bd427c271f7d5ec1d22",
            "https://git.kernel.org/stable/c/ff7431f898dd00892a545b7d0ce7adf5b926944f",
            "https://git.kernel.org/stable/c/152ed360cf2d273f88fc99a518b7eb868aae2939",
            "https://git.kernel.org/stable/c/8d6105f637883c8c09825e962308c06e977de4f0",
            "https://git.kernel.org/stable/c/1594dac8b1ed78f9e75c263327e198a2e5e25b0e",
            "https://git.kernel.org/stable/c/2cc7d150550cc981aceedf008f5459193282425c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nIssue reported by customer during SRIOV testing, call trace:\nWhen both i40e and the i40iw driver are loaded, a warning\nin check_flush_dependency is being triggered. This seems\nto be because of the i40e driver workqueue is allocated with\nthe WQ_MEM_RECLAIM flag, and the i40iw one is not.\n\nSimilar error was encountered on ice too and it was fixed by\nremoving the flag. Do the same for i40e too.\n\n[Feb 9 09:08] ------------[ cut here ]------------\n[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is\nflushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel/workqueue.c:2966\ncheck_flush_dependency+0x10b/0x120\n[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq\nsnd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4\nnls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr\nrfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma\nintel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif\nisst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal\nintel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core\niTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore\nioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich\nintel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad\nxfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe\ndrm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel\nlibata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror\ndm_region_hash dm_log dm_mod fuse\n[  +0.000050] CPU: 0 PID: 937 Comm: kworker/0:3 Kdump: loaded Not\ntainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1\n[  +0.000003] Hardware name: Intel Corporation S2600BPB/S2600BPB, BIOS\nSE5C620.86B.02.01.0013.121520200651 12/15/2020\n[  +0.000001] Workqueue: i40e i40e_service_task [i40e]\n[  +0.000024] RIP: 0010:check_flush_dependency+0x10b/0x120\n[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48\n81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd\nff <0f> 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90\n[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282\n[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:\n0000000000000027\n[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:\nffff94d47f620bc0\n[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:\n00000000ffff7fff\n[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:\nffff94c5451ea180\n[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:\nffff94c5f1330ab0\n[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)\nknlGS:0000000000000000\n[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:\n00000000007706f0\n[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[  +0.000001] PKRU: 55555554\n[  +0.000001] Call Trace:\n[  +0.000001]  <TASK>\n[  +0.000002]  ? __warn+0x80/0x130\n[  +0.000003]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? report_bug+0x195/0x1a0\n[  +0.000005]  ? handle_bug+0x3c/0x70\n[  +0.000003]  ? exc_invalid_op+0x14/0x70\n[  +0.000002]  ? asm_exc_invalid_op+0x16/0x20\n[  +0.000006]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  __flush_workqueue+0x126/0x3f0\n[  +0.000015]  ib_cache_cleanup_one+0x1c/0xe0 [ib_core]\n[  +0.000056]  __ib_unregister_device+0x6a/0xb0 [ib_core]\n[  +0.000023]  ib_unregister_device_and_put+0x34/0x50 [ib_core]\n[  +0.000020]  i40iw_close+0x4b/0x90 [irdma]\n[  +0.000022]  i40e_notify_client_of_netdev_close+0x54/0xc0 [i40e]\n[  +0.000035]  i40e_service_task+0x126/0x190 [i40e]\n[  +0.000024]  process_one_work+0x174/0x340\n[  +0.000003]  worker_th\n---truncated---"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35954",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/46af9047523e2517712ae8e71d984286c626e022",
            "https://git.kernel.org/stable/c/b0d1ebcc1a9560e494ea9b3ee808540db26c5086",
            "https://git.kernel.org/stable/c/27f58c04a8f438078583041468ec60597841284d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Avoid sg device teardown race\n\nsg_remove_sfp_usercontext() must not use sg_device_destroy() after calling\nscsi_device_put().\n\nsg_device_destroy() is accessing the parent scsi_device request_queue which\nwill already be set to NULL when the preceding call to scsi_device_put()\nremoved the last reference to the parent scsi_device.\n\nThe resulting NULL pointer exception will then crash the kernel."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35981",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/539a2b995a4ed93125cb0efae0f793b00ab2158b",
            "https://git.kernel.org/stable/c/43a71c1b4b3a6d4db857b1435d271540279fc7de",
            "https://git.kernel.org/stable/c/28e9a64638cd16bc1ecac9ff74ffeacb9fb652de",
            "https://git.kernel.org/stable/c/059a49aa2e25c58f90b50151f109dd3c4cdb3a47"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: Do not send RSS key if it is not supported\n\nThere is a bug when setting the RSS options in virtio_net that can break\nthe whole machine, getting the kernel into an infinite loop.\n\nRunning the following command in any QEMU virtual machine with virtionet\nwill reproduce this problem:\n\n    # ethtool -X eth0  hfunc toeplitz\n\nThis is how the problem happens:\n\n1) ethtool_set_rxfh() calls virtnet_set_rxfh()\n\n2) virtnet_set_rxfh() calls virtnet_commit_rss_command()\n\n3) virtnet_commit_rss_command() populates 4 entries for the rss\nscatter-gather\n\n4) Since the command above does not have a key, then the last\nscatter-gatter entry will be zeroed, since rss_key_size == 0.\nsg_buf_size = vi->rss_key_size;\n\n5) This buffer is passed to qemu, but qemu is not happy with a buffer\nwith zero length, and do the following in virtqueue_map_desc() (QEMU\nfunction):\n\n  if (!sz) {\n      virtio_error(vdev, \"virtio: zero sized buffers are not allowed\");\n\n6) virtio_error() (also QEMU function) set the device as broken\n\n    vdev->broken = true;\n\n7) Qemu bails out, and do not repond this crazy kernel.\n\n8) The kernel is waiting for the response to come back (function\nvirtnet_send_command())\n\n9) The kernel is waiting doing the following :\n\n      while (!virtqueue_get_buf(vi->cvq, &tmp) &&\n\t     !virtqueue_is_broken(vi->cvq))\n\t      cpu_relax();\n\n10) None of the following functions above is true, thus, the kernel\nloops here forever. Keeping in mind that virtqueue_is_broken() does\nnot look at the qemu `vdev->broken`, so, it never realizes that the\nvitio is broken at QEMU side.\n\nFix it by not sending RSS commands if the feature is not available in\nthe device."
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36005",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/e4bb6da24de336a7899033a65490ed2d892efa5b",
            "https://git.kernel.org/stable/c/5c45feb3c288cf44a529e2657b36c259d86497d2",
            "https://git.kernel.org/stable/c/13ba94f6cc820fdea15efeaa17d4c722874eebf9",
            "https://git.kernel.org/stable/c/8260c980aee7d8d8a3db39faf19c391d2f898816",
            "https://git.kernel.org/stable/c/ca34c40d1c22c555fa7f4a21a1c807fea7290a0a",
            "https://git.kernel.org/stable/c/8e30abc9ace4f0add4cd761dfdbfaebae5632dd2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: honor table dormant flag from netdev release event path\n\nCheck for table dormant flag otherwise netdev release event path tries\nto unregister an already unregistered hook.\n\n[524854.857999] ------------[ cut here ]------------\n[524854.858010] WARNING: CPU: 0 PID: 3386599 at net/netfilter/core.c:501 __nf_unregister_net_hook+0x21a/0x260\n[...]\n[524854.858848] CPU: 0 PID: 3386599 Comm: kworker/u32:2 Not tainted 6.9.0-rc3+ #365\n[524854.858869] Workqueue: netns cleanup_net\n[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a/0x260\n[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff <0f> 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41\n[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246\n[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a\n[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438\n[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34\n[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005\n[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00\n[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0\n[524854.859000] Call Trace:\n[524854.859006]  <TASK>\n[524854.859013]  ? __warn+0x9f/0x1a0\n[524854.859027]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859044]  ? report_bug+0x1b1/0x1e0\n[524854.859060]  ? handle_bug+0x3c/0x70\n[524854.859071]  ? exc_invalid_op+0x17/0x40\n[524854.859083]  ? asm_exc_invalid_op+0x1a/0x20\n[524854.859100]  ? __nf_unregister_net_hook+0x6a/0x260\n[524854.859116]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859135]  nf_tables_netdev_event+0x337/0x390 [nf_tables]\n[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859461]  ? packet_notifier+0xb3/0x360\n[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11/0x40\n[524854.859489]  ? dcbnl_netdevice_event+0x35/0x140\n[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859661]  notifier_call_chain+0x7d/0x140\n[524854.859677]  unregister_netdevice_many_notify+0x5e1/0xae0"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-35959",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/ad26f26abd353113dea4e8d5ebadccdab9b61e76",
            "https://git.kernel.org/stable/c/f9ac93b6f3de34aa0bb983b9be4f69ca50fc70f3",
            "https://git.kernel.org/stable/c/6bd77865fda662913dcb5722a66a773840370aa7",
            "https://git.kernel.org/stable/c/ecb829459a841198e142f72fadab56424ae96519"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix mlx5e_priv_init() cleanup flow\n\nWhen mlx5e_priv_init() fails, the cleanup flow calls mlx5e_selq_cleanup which\ncalls mlx5e_selq_apply() that assures that the `priv->state_lock` is held using\nlockdep_is_held().\n\nAcquire the state_lock in mlx5e_selq_cleanup().\n\nKernel log:\n=============================\nWARNING: suspicious RCU usage\n6.8.0-rc3_net_next_841a9b5 #1 Not tainted\n-----------------------------\ndrivers/net/ethernet/mellanox/mlx5/core/en/selq.c:124 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by systemd-modules/293:\n #0: ffffffffa05067b0 (devices_rwsem){++++}-{3:3}, at: ib_register_client+0x109/0x1b0 [ib_core]\n #1: ffff8881096c65c0 (&device->client_data_rwsem){++++}-{3:3}, at: add_client_context+0x104/0x1c0 [ib_core]\n\nstack backtrace:\nCPU: 4 PID: 293 Comm: systemd-modules Not tainted 6.8.0-rc3_net_next_841a9b5 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x8a/0xa0\n lockdep_rcu_suspicious+0x154/0x1a0\n mlx5e_selq_apply+0x94/0xa0 [mlx5_core]\n mlx5e_selq_cleanup+0x3a/0x60 [mlx5_core]\n mlx5e_priv_init+0x2be/0x2f0 [mlx5_core]\n mlx5_rdma_setup_rn+0x7c/0x1a0 [mlx5_core]\n rdma_init_netdev+0x4e/0x80 [ib_core]\n ? mlx5_rdma_netdev_free+0x70/0x70 [mlx5_core]\n ipoib_intf_init+0x64/0x550 [ib_ipoib]\n ipoib_intf_alloc+0x4e/0xc0 [ib_ipoib]\n ipoib_add_one+0xb0/0x360 [ib_ipoib]\n add_client_context+0x112/0x1c0 [ib_core]\n ib_register_client+0x166/0x1b0 [ib_core]\n ? 0xffffffffa0573000\n ipoib_init_module+0xeb/0x1a0 [ib_ipoib]\n do_one_initcall+0x61/0x250\n do_init_module+0x8a/0x270\n init_module_from_file+0x8b/0xd0\n idempotent_init_module+0x17d/0x230\n __x64_sys_finit_module+0x61/0xb0\n do_syscall_64+0x71/0x140\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\n </TASK>"
    },
    {
        "Modified": "2024-05-20T13:00:00",
        "Published": "2024-05-20T10:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-36006",
        "impact": {},
        "last-modified": "2024-05-20T13:00:00",
        "references": [
            "https://git.kernel.org/stable/c/0b2c13b670b168e324e1cf109e67056a20fd610a",
            "https://git.kernel.org/stable/c/09846c2309b150b8ce4e0ce96f058197598fc530",
            "https://git.kernel.org/stable/c/64435b64e43d8ee60faa46c0cd04e323e8b2a7b0",
            "https://git.kernel.org/stable/c/4526a56e02da3725db979358964df9cd9c567154",
            "https://git.kernel.org/stable/c/ab4ecfb627338e440ae11def004c524a00d93e40",
            "https://git.kernel.org/stable/c/af8b593c3dd9df82cb199be65863af004b09fd97",
            "https://git.kernel.org/stable/c/b377add0f0117409c418ddd6504bd682ebe0bf79"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix incorrect list API usage\n\nBoth the function that migrates all the chunks within a region and the\nfunction that migrates all the entries within a chunk call\nlist_first_entry() on the respective lists without checking that the\nlists are not empty. This is incorrect usage of the API, which leads to\nthe following warning [1].\n\nFix by returning if the lists are empty as there is nothing to migrate\nin this case.\n\n[1]\nWARNING: CPU: 0 PID: 6437 at drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:1266 mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0>\nModules linked in:\nCPU: 0 PID: 6437 Comm: kworker/0:37 Not tainted 6.9.0-rc3-custom-00883-g94a65f079ef6 #39\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0x2c0\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c/0x4a0\n process_one_work+0x151/0x370\n worker_thread+0x2cb/0x3e0\n kthread+0xd0/0x100\n ret_from_fork+0x34/0x50\n ret_from_fork_asm+0x1a/0x30\n </TASK>"
    }
]