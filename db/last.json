[
    {
        "Modified": "2024-07-29T19:42:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 7.5,
        "cvss-time": "2024-07-29T19:42:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-287",
        "id": "CVE-2021-38647",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:42:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-38647",
            "http://packetstormsecurity.com/files/164694/Microsoft-OMI-Management-Interface-Authentication-Bypass.html"
        ],
        "summary": "Open Management Infrastructure Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-29T19:42:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T19:42:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-36955",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:42:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-36955"
        ],
        "summary": "Windows Common Log File System Driver Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T19:42:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T19:42:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-38645",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:42:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-38645"
        ],
        "summary": "Open Management Infrastructure Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T19:42:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T19:42:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-38649",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:42:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-38649"
        ],
        "summary": "Open Management Infrastructure Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T19:42:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T19:42:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-287",
        "id": "CVE-2021-38648",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:42:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-38648",
            "http://packetstormsecurity.com/files/164925/Microsoft-OMI-Management-Interface-Authentication-Bypass.html"
        ],
        "summary": "Open Management Infrastructure Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T19:38:00",
        "Published": "2021-09-15T12:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T19:38:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-22",
        "id": "CVE-2021-40444",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T19:38:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-40444",
            "http://packetstormsecurity.com/files/164210/Microsoft-Windows-MSHTML-Overview.html",
            "http://packetstormsecurity.com/files/165214/Microsoft-Office-Word-MSHTML-Remote-Code-Execution.html",
            "http://packetstormsecurity.com/files/167317/Microsoft-Office-MSDT-Follina-Proof-Of-Concept.html"
        ],
        "summary": "<p>Microsoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.</p>\n<p>An attacker could craft a malicious ActiveX control to be used by a Microsoft Office document that hosts the browser rendering engine. The attacker would then have to convince the user to open the malicious document. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>\n<p>Microsoft Defender Antivirus and Microsoft Defender for Endpoint both provide detection and protections for the known vulnerability. Customers should keep antimalware products up to date. Customers who utilize automatic updates do not need to take additional action. Enterprise customers who manage updates should select the detection build 1.349.22.0 or newer and deploy it across their environments. Microsoft Defender for Endpoint alerts will be displayed as: \u201cSuspicious Cpl File Execution\u201d.</p>\n<p>Upon completion of this investigation, Microsoft will take the appropriate action to help protect our customers. This may include providing a security update through our monthly release process or providing an out-of-cycle security update, depending on customer needs.</p>\n<p>Please see the <strong>Mitigations</strong> and <strong>Workaround</strong> sections for important information about steps you can take to protect your system from this vulnerability.</p>\n<p><strong>UPDATE</strong> September 14, 2021: Microsoft has released security updates to address this vulnerability. Please see the Security Updates table for the applicable update for your system. We recommend that you install these updates immediately. Please see the FAQ for important information about which updates are applicable to your system.</p>\n"
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28804",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.gruppotim.it/it/footer/red-team.html"
        ],
        "summary": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. Stored Cross-site scripting (XSS) can occur via POST."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28805",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.gruppotim.it/it/footer/red-team.html"
        ],
        "summary": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. There is Incorrect Access Control."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37856",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.sourcecodester.com/",
            "http://lost.com",
            "https://packetstormsecurity.com/files/179078/Lost-And-Found-Information-System-1.0-Cross-Site-Scripting.html"
        ],
        "summary": "Cross Site Scripting vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the first, last, middle name fields in the User Profile page."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37857",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.sourcecodester.com/",
            "http://lost.com",
            "https://packetstormsecurity.com/files/179080/Lost-And-Found-Information-System-1.0-SQL-Injection.html"
        ],
        "summary": "SQL Injection vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via id parameter to php-lfis/admin/categories/view_category.php."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37858",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.sourcecodester.com/",
            "http://lost.com",
            "https://packetstormsecurity.com/files/179079/Lost-And-Found-Information-System-1.0-SQL-Injection.html"
        ],
        "summary": "SQL Injection vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the id parameter to php-lfis/admin/categories/manage_category.php."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-37859",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.sourcecodester.com/",
            "http://lost.com",
            "https://packetstormsecurity.com/files/179081/Lost-And-Found-Information-System-1.0-Cross-Site-Scripting.html"
        ],
        "summary": "Cross Site Scripting vulnerability in Lost and Found Information System 1.0 allows a remote attacker to escalate privileges via the page parameter to php-lfis/admin/index.php."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-6578",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://huntr.com/bounties/5b1ebc67-5346-44aa-b8b8-3c1c09d79680"
        ],
        "summary": "A stored cross-site scripting (XSS) vulnerability exists in aimhubio/aim version 3.19.3. The vulnerability arises from the improper neutralization of input during web page generation, specifically in the logs-tab for runs. The terminal output logs are displayed using the `dangerouslySetInnerHTML` function in React, which is susceptible to XSS attacks. An attacker can exploit this vulnerability by injecting malicious scripts into the logs, which will be executed when a user views the logs-tab."
    },
    {
        "Modified": "2024-07-29T19:15:00",
        "Published": "2024-07-29T19:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-28806",
        "impact": {},
        "last-modified": "2024-07-29T19:15:00",
        "references": [
            "https://www.gruppotim.it/it/footer/red-team.html"
        ],
        "summary": "An issue was discovered in Italtel i-MCS NFV 12.1.0-20211215. Remote unauthenticated attackers can upload files at an arbitrary path."
    },
    {
        "Modified": "2024-07-29T18:46:00",
        "Published": "2021-11-23T22:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "chrome-cve-admin@google.com",
        "cvss": 5.8,
        "cvss-time": "2024-07-29T18:46:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
        "cwe": "CWE-601",
        "id": "CVE-2021-38000",
        "impact": {
            "availability": "NONE",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:46:00",
        "references": [
            "https://crbug.com/1249962",
            "https://chromereleases.googleblog.com/2021/10/stable-channel-update-for-desktop_28.html",
            "https://www.debian.org/security/2022/dsa-5046",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3W46HRT2UVHWSLZB6JZHQF6JNQWKV744/"
        ],
        "summary": "Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 95.0.4638.69 allowed a remote attacker to arbitrarily browser to a malicious URL via a crafted HTML page."
    },
    {
        "Modified": "2024-07-29T18:45:00",
        "Published": "2021-11-23T22:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "chrome-cve-admin@google.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T18:45:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-755",
        "id": "CVE-2021-38003",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:45:00",
        "references": [
            "https://chromereleases.googleblog.com/2021/10/stable-channel-update-for-desktop_28.html",
            "https://crbug.com/1263462",
            "https://www.debian.org/security/2022/dsa-5046",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3W46HRT2UVHWSLZB6JZHQF6JNQWKV744/"
        ],
        "summary": "Inappropriate implementation in V8 in Google Chrome prior to 95.0.4638.69 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page."
    },
    {
        "Modified": "2024-07-29T18:30:00",
        "Published": "2021-08-24T19:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "product-security@apple.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T18:30:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-416",
        "id": "CVE-2021-30858",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:30:00",
        "references": [
            "https://support.apple.com/en-us/HT212804",
            "https://support.apple.com/en-us/HT212807",
            "http://seclists.org/fulldisclosure/2021/Sep/27",
            "http://seclists.org/fulldisclosure/2021/Sep/25",
            "http://seclists.org/fulldisclosure/2021/Sep/29",
            "http://www.openwall.com/lists/oss-security/2021/09/20/1",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BO6DMTHZR57JDBOXPSNR2MKDMCRWV265/",
            "http://seclists.org/fulldisclosure/2021/Sep/38",
            "http://seclists.org/fulldisclosure/2021/Sep/39",
            "https://www.debian.org/security/2021/dsa-4975",
            "https://www.debian.org/security/2021/dsa-4976",
            "https://support.apple.com/kb/HT212824",
            "http://seclists.org/fulldisclosure/2021/Sep/50",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XYNV7ASK4LQVAUMJXNXBS3Z7RVDQ2N3W/",
            "http://www.openwall.com/lists/oss-security/2021/10/26/9",
            "http://www.openwall.com/lists/oss-security/2021/10/27/1",
            "http://www.openwall.com/lists/oss-security/2021/10/27/2",
            "http://www.openwall.com/lists/oss-security/2021/10/27/4"
        ],
        "summary": "A use after free issue was addressed with improved memory management. This issue is fixed in iOS 14.8 and iPadOS 14.8, macOS Big Sur 11.6. Processing maliciously crafted web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited."
    },
    {
        "Modified": "2024-07-29T18:30:00",
        "Published": "2021-07-09T14:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "NETWORK"
        },
        "assigner": "cve@mitre.org",
        "cvss": 7.5,
        "cvss-time": "2024-07-29T18:30:00",
        "cvss-vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-522",
        "id": "CVE-2021-30116",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:30:00",
        "references": [
            "https://csirt.divd.nl/2021/07/04/Kaseya-Case-Update-2/",
            "https://csirt.divd.nl/2021/07/07/Kaseya-Limited-Disclosure/",
            "https://helpdesk.kaseya.com/hc/en-gb/articles/4403440684689-Important-Notice-July-2nd-2021",
            "https://www.secpod.com/blog/kaseya-vsa-zero-day-by-revil/"
        ],
        "summary": "Kaseya VSA before 9.5.7 allows credential disclosure, as exploited in the wild in July 2021. By default Kaseya VSA on premise offers a download page where the clients for the installation can be downloaded. The default URL for this page is https://x.x.x.x/dl.asp When an attacker download a client for Windows and installs it, the file KaseyaD.ini is generated (C:\\Program Files (x86)\\Kaseya\\XXXXXXXXXX\\KaseyaD.ini) which contains an Agent_Guid and AgentPassword This Agent_Guid and AgentPassword can be used to log in on dl.asp (https://x.x.x.x/dl.asp?un=840997037507813&pw=113cc622839a4077a84837485ced6b93e440bf66d44057713cb2f95e503a06d9) This request authenticates the client and returns a sessionId cookie that can be used in subsequent attacks to bypass authentication. Security issues discovered --- * Unauthenticated download page leaks credentials * Credentials of agent software can be used to obtain a sessionId (cookie) that can be used for services not intended for use by agents * dl.asp accepts credentials via a GET request * Access to KaseyaD.ini gives an attacker access to sufficient information to penetrate the Kaseya installation and its clients. Impact --- Via the page /dl.asp enough information can be obtained to give an attacker a sessionId that can be used to execute further (semi-authenticated) attacks against the system."
    },
    {
        "Modified": "2024-07-29T18:30:00",
        "Published": "2021-07-02T19:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "chrome-cve-admin@google.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T18:30:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-416",
        "id": "CVE-2021-30554",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:30:00",
        "references": [
            "https://crbug.com/1219857",
            "https://chromereleases.googleblog.com/2021/06/stable-channel-update-for-desktop_17.html",
            "https://security.gentoo.org/glsa/202107-06",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PAT6EOXVQFE6JFMFQF4IKAOUQSHMHL54/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ETMZL6IHCTCTREEL434BQ4THQ7EOHJ43/"
        ],
        "summary": "Use after free in WebGL in Google Chrome prior to 91.0.4472.114 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page."
    },
    {
        "Modified": "2024-07-29T18:30:00",
        "Published": "2021-06-15T22:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "chrome-cve-admin@google.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T18:30:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-843",
        "id": "CVE-2021-30551",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:30:00",
        "references": [
            "https://chromereleases.googleblog.com/2021/06/stable-channel-update-for-desktop.html",
            "https://crbug.com/1216437",
            "https://security.gentoo.org/glsa/202107-06",
            "https://security.gentoo.org/glsa/202208-25",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PAT6EOXVQFE6JFMFQF4IKAOUQSHMHL54/",
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ETMZL6IHCTCTREEL434BQ4THQ7EOHJ43/"
        ],
        "summary": "Type confusion in V8 in Google Chrome prior to 91.0.4472.101 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page."
    },
    {
        "Modified": "2024-07-29T18:23:00",
        "Published": "2023-06-13T18:15:00",
        "access": {},
        "assigner": "security@huntr.dev",
        "cvss": null,
        "cwe": "CWE-94",
        "id": "CVE-2023-3224",
        "impact": {},
        "last-modified": "2024-07-29T18:23:00",
        "references": [
            "https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff",
            "https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87"
        ],
        "summary": "Code Injection in GitHub repository nuxt/nuxt prior to 3.5.3."
    },
    {
        "Modified": "2024-07-29T18:23:00",
        "Published": "2021-08-24T19:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "product-security@apple.com",
        "cvss": 9.3,
        "cvss-time": "2024-07-29T18:23:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-843",
        "id": "CVE-2021-30869",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-07-29T18:23:00",
        "references": [
            "https://support.apple.com/en-us/HT212147",
            "https://support.apple.com/en-us/HT212146",
            "https://support.apple.com/en-us/HT212824",
            "https://support.apple.com/en-us/HT212825"
        ],
        "summary": "A type confusion issue was addressed with improved state handling. This issue is fixed in iOS 12.5.5, iOS 14.4 and iPadOS 14.4, macOS Big Sur 11.2, Security Update 2021-001 Catalina, Security Update 2021-001 Mojave, Security Update 2021-006 Catalina. A malicious application may be able to execute arbitrary code with kernel privileges. Apple is aware of reports that an exploit for this issue exists in the wild."
    },
    {
        "Modified": "2024-07-29T18:22:00",
        "Published": "2021-09-02T17:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "psirt@adobe.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T18:22:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-416",
        "id": "CVE-2021-28550",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:22:00",
        "references": [
            "https://helpx.adobe.com/security/products/acrobat/apsb21-29.html"
        ],
        "summary": "Acrobat Reader DC versions versions 2021.001.20150 (and earlier), 2020.001.30020 (and earlier) and 2017.011.30194 (and earlier) are affected by a Use After Free vulnerability. An unauthenticated attacker could leverage this vulnerability to achieve arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42095",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/cb879300669881970eabebe64bd509dbbe42b9de",
            "https://git.kernel.org/stable/c/87257a28271c828a98f762bf2dd803c1793d2b5b",
            "https://git.kernel.org/stable/c/98840e410d53329f5331ecdce095e740791963d0",
            "https://git.kernel.org/stable/c/e67d7f38008e56fb691b6a72cadf16c107c2f48b",
            "https://git.kernel.org/stable/c/6270051f656004ca5cde644c73cb1fa4d718792e",
            "https://git.kernel.org/stable/c/9d141c1e615795eeb93cd35501ad144ee997a826"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250_omap: Implementation of Errata i2310\n\nAs per Errata i2310[0], Erroneous timeout can be triggered,\nif this Erroneous interrupt is not cleared then it may leads\nto storm of interrupts, therefore apply Errata i2310 solution.\n\n[0] https://www.ti.com/lit/pdf/sprz536 page 23"
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42097",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/40d7def67841343c10f8642a41031fecbb248bab",
            "https://git.kernel.org/stable/c/79d9a000f0220cdaba1682d2a23c0d0c61d620a3",
            "https://git.kernel.org/stable/c/d23982ea9aa438f35a8c8a6305943e98a8db90f6",
            "https://git.kernel.org/stable/c/7a18293fd8d8519c2f7a03753bc1583b18e3db69",
            "https://git.kernel.org/stable/c/d0ff2443fcbb472206d45a5d2a90cc694065804e",
            "https://git.kernel.org/stable/c/d8f5ce3cb9adf0c72e2ad6089aba02d7a32469c2",
            "https://git.kernel.org/stable/c/87039b83fb7bfd7d0e0499aaa8e6c049906b4d14",
            "https://git.kernel.org/stable/c/89b32ccb12ae67e630c6453d778ec30a592a212f"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: emux: improve patch ioctl data validation\n\nIn load_data(), make the validation of and skipping over the main info\nblock match that in load_guspatch().\n\nIn load_guspatch(), add checking that the specified patch length matches\nthe actually supplied data, like load_data() already did."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42093",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b2262b3be27cee334a2fa175ae3afb53f38fb0b1",
            "https://git.kernel.org/stable/c/763896ab62a672d728f5eb10ac90d98c607a8509",
            "https://git.kernel.org/stable/c/a55afc0f5f20ba30970aaf7271929dc00eee5e7d",
            "https://git.kernel.org/stable/c/48147337d7efdea6ad6e49f5b8eb894b95868ef0",
            "https://git.kernel.org/stable/c/69f49527aea12c23b78fb3d0a421950bf44fb4e2",
            "https://git.kernel.org/stable/c/5e4f25091e6d06e99a23f724c839a58a8776a527",
            "https://git.kernel.org/stable/c/d33fe1714a44ff540629b149d8fab4ac6967585c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/dpaa2: Avoid explicit cpumask var allocation on stack\n\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\n\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\n\nUse *cpumask_var API(s) to address it."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42092",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/a8d78984fdc105bc1a38b73e98d32b1bc4222684",
            "https://git.kernel.org/stable/c/cd75721984337c38a12aeca33ba301d31ca4b3fd",
            "https://git.kernel.org/stable/c/e44a83bf15c4db053ac6dfe96a23af184c9136d9",
            "https://git.kernel.org/stable/c/70b48899f3f23f98a52c5b1060aefbdc7ba7957b",
            "https://git.kernel.org/stable/c/89d7008af4945808677662a630643b5ea89c6e8d",
            "https://git.kernel.org/stable/c/2d83492259ad746b655f196cd5d1be4b3d0a3782",
            "https://git.kernel.org/stable/c/c542e51306d5f1eba3af84daa005826223382470",
            "https://git.kernel.org/stable/c/7aa9b96e9a73e4ec1771492d0527bd5fc5ef9164"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: davinci: Validate the obtained number of IRQs\n\nValue of pdata->gpio_unbanked is taken from Device Tree. In case of broken\nDT due to any error this value can be any. Without this value validation\nthere can be out of chips->irqs array boundaries access in\ndavinci_gpio_probe().\n\nValidate the obtained nirq value so that it won't exceed the maximum\nnumber of IRQs per bank.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42091",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/583ce246c7ff9edeb0de49130cdc3d45db8545cb",
            "https://git.kernel.org/stable/c/a918e771e6fbe1fa68932af5b0cdf473e23090cc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Check pat.ops before dumping PAT settings\n\nWe may leave pat.ops unset when running on brand new platform or\nwhen running as a VF.  While the former is unlikely, the latter\nis valid (future) use case and will cause NPD when someone will\ntry to dump PAT settings by debugfs.\n\nIt's better to check pointer to pat.ops instead of specific .dump\nhook, as we have this hook always defined for every .ops variant."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42094",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/2b085521be5292016097b5e7ca81b26be3f7098d",
            "https://git.kernel.org/stable/c/842afb47d84536fc976fece8fb6c54bea711ad1a",
            "https://git.kernel.org/stable/c/9dadab0db7d904413ea1cdaa13f127da05c31e71",
            "https://git.kernel.org/stable/c/0af718a690acc089aa1bbb95a93df833d864ef53",
            "https://git.kernel.org/stable/c/d85ca8179a54ff8cf1e1f8c3c9e3799831319bae",
            "https://git.kernel.org/stable/c/724e7965af054079242b8d6f7e50ee226730a756",
            "https://git.kernel.org/stable/c/2d090c7f7be3b26fcb80ac04d08a4a8062b1d959",
            "https://git.kernel.org/stable/c/be4e1304419c99a164b4c0e101c7c2a756b635b9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/iucv: Avoid explicit cpumask var allocation on stack\n\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\n\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\n\nUse *cpumask_var API(s) to address it."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42096",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/65ebdde16e7f5da99dbf8a548fb635837d78384e",
            "https://git.kernel.org/stable/c/27c3be840911b15a3f24ed623f86153c825b6b29",
            "https://git.kernel.org/stable/c/49c09ca35a5f521d7fa18caf62fdf378f15e8aa4",
            "https://git.kernel.org/stable/c/2d07fea561d64357fb7b3f3751e653bf20306d77",
            "https://git.kernel.org/stable/c/161cef818545ecf980f0e2ebaf8ba7326ce53c2b",
            "https://git.kernel.org/stable/c/16222beb9f8e5ceb0beeb5cbe54bef16df501a92",
            "https://git.kernel.org/stable/c/a3b65c8cbc139bfce9541bc81c1bb766e5ba3f68",
            "https://git.kernel.org/stable/c/093d9603b60093a9aaae942db56107f6432a5dca"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86: stop playing stack games in profile_pc()\n\nThe 'profile_pc()' function is used for timer-based profiling, which\nisn't really all that relevant any more to begin with, but it also ends\nup making assumptions based on the stack layout that aren't necessarily\nvalid.\n\nBasically, the code tries to account the time spent in spinlocks to the\ncaller rather than the spinlock, and while I support that as a concept,\nit's not worth the code complexity or the KASAN warnings when no serious\nprofiling is done using timers anyway these days.\n\nAnd the code really does depend on stack layout that is only true in the\nsimplest of cases.  We've lost the comment at some point (I think when\nthe 32-bit and 64-bit code was unified), but it used to say:\n\n\tAssume the lock function has either no stack frame or a copy\n\tof eflags from PUSHF.\n\nwhich explains why it just blindly loads a word or two straight off the\nstack pointer and then takes a minimal look at the values to just check\nif they might be eflags or the return pc:\n\n\tEflags always has bits 22 and up cleared unlike kernel addresses\n\nbut that basic stack layout assumption assumes that there isn't any lock\ndebugging etc going on that would complicate the code and cause a stack\nframe.\n\nIt causes KASAN unhappiness reported for years by syzkaller [1] and\nothers [2].\n\nWith no real practical reason for this any more, just remove the code.\n\nJust for historical interest, here's some background commits relating to\nthis code from 2006:\n\n  0cb91a229364 (\"i386: Account spinlocks to the caller during profiling for !FP kernels\")\n  31679f38d886 (\"Simplify profile_pc on x86-64\")\n\nand a code unification from 2009:\n\n  ef4512882dbe (\"x86: time_32/64.c unify profile_pc\")\n\nbut the basics of this thing actually goes back to before the git tree."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42098",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://git.kernel.org/stable/c/39173b04abda87872b43c331468a4a14f8f05ce8",
            "https://git.kernel.org/stable/c/fd7ef325911eba1b7191b83cb580463242f2090d",
            "https://git.kernel.org/stable/c/80575b252ab0358b7e93895b2a510beb3cb3f975",
            "https://git.kernel.org/stable/c/d96187eb8e59b572a8e6a68b6a9837a867ea29df",
            "https://git.kernel.org/stable/c/73e5984e540a76a2ee1868b91590c922da8c24c9"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: ecdh - explicitly zeroize private_key\n\nprivate_key is overwritten with the key parameter passed in by the\ncaller (if present), or alternatively a newly generated private key.\nHowever, it is possible that the caller provides a key (or the newly\ngenerated key) which is shorter than the previous key. In that\nscenario, some key material from the previous key would not be\noverwritten. The easiest solution is to explicitly zeroize the entire\nprivate_key array first.\n\nNote that this patch slightly changes the behavior of this function:\npreviously, if the ecc_gen_privkey failed, the old private_key would\nremain. Now, the private_key is always zeroized. This behavior is\nconsistent with the case where params.key is set and ecc_is_key_valid\nfails."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "security@perforce.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6726",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://portal.perforce.com/s/detail/a91PA000001SUDtYAO"
        ],
        "summary": "Versions of Delphix Engine prior to Release 25.0.0.0 contain a flaw which results in Remote Code Execution (RCE)."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-07-29T18:15:00",
        "access": {},
        "assigner": "security@perforce.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6727",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://portal.perforce.com/s/detail/a91PA000001SUFVYA4"
        ],
        "summary": "A flaw in versions of Delphix Data Control Tower (DCT) prior to 19.0.0 results in broken authentication through the enable-scale-testing functionality of the application."
    },
    {
        "Modified": "2024-07-29T18:15:00",
        "Published": "2024-06-12T09:15:00",
        "access": {},
        "assigner": "audit@patchstack.com",
        "cvss": null,
        "cwe": "CWE-862",
        "id": "CVE-2023-52117",
        "impact": {},
        "last-modified": "2024-07-29T18:15:00",
        "references": [
            "https://patchstack.com/database/vulnerability/profilegrid-user-profiles-groups-and-communities/wordpress-profilegrid-plugin-5-6-6-broken-access-control-vulnerability?_s_id=cve"
        ],
        "summary": "Missing Authorization vulnerability in Metagauss ProfileGrid.This issue affects ProfileGrid: from n/a through 5.6.6."
    },
    {
        "Modified": "2024-07-29T18:06:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T18:06:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-31199",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:06:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31199"
        ],
        "summary": "Microsoft Enhanced Cryptographic Provider Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T18:06:00",
        "Published": "2021-04-13T20:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T18:06:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-787",
        "id": "CVE-2021-28310",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T18:06:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-28310"
        ],
        "summary": "Win32k Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:57:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 9.3,
        "cvss-time": "2024-07-29T17:57:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "NVD-CWE-Other",
        "id": "CVE-2021-1675",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-07-29T17:57:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-1675",
            "https://www.kb.cert.org/vuls/id/383432",
            "http://packetstormsecurity.com/files/163351/PrintNightmare-Windows-Spooler-Service-Remote-Code-Execution.html",
            "http://packetstormsecurity.com/files/163349/Microsoft-PrintNightmare-Proof-Of-Concept.html",
            "http://packetstormsecurity.com/files/167261/Print-Spooler-Remote-DLL-Injection.html"
        ],
        "summary": "Windows Print Spooler Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:35:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T17:35:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-31201",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:35:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31201"
        ],
        "summary": "Microsoft Enhanced Cryptographic Provider Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:34:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 2.1,
        "cvss-time": "2024-07-29T17:34:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-31955",
        "impact": {
            "availability": "NONE",
            "confidentiality": "PARTIAL",
            "integrity": "NONE"
        },
        "last-modified": "2024-07-29T17:34:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31955"
        ],
        "summary": "Windows Kernel Information Disclosure Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:33:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 9.3,
        "cvss-time": "2024-07-29T17:33:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
        "cwe": "CWE-191",
        "id": "CVE-2021-31956",
        "impact": {
            "availability": "COMPLETE",
            "confidentiality": "COMPLETE",
            "integrity": "COMPLETE"
        },
        "last-modified": "2024-07-29T17:33:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-31956"
        ],
        "summary": "Windows NTFS Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:32:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "LOW",
            "vector": "LOCAL"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 4.6,
        "cvss-time": "2024-07-29T17:32:00",
        "cvss-vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
        "cwe": "NVD-CWE-noinfo",
        "id": "CVE-2021-33739",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:32:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-33739"
        ],
        "summary": "Microsoft DWM Core Library Elevation of Privilege Vulnerability"
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42084",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/c329760749b5419769e57cb2be80955d2805f9c9",
            "https://git.kernel.org/stable/c/f531d4bc6c5588d713359e42ed65e46816d841d8",
            "https://git.kernel.org/stable/c/84bf6b64a1a0dfc6de7e1b1c776d58d608e7865a",
            "https://git.kernel.org/stable/c/dbb226d81cd02cee140139c2369791e6f61f2007",
            "https://git.kernel.org/stable/c/5ae6af68410bdad6181ec82104bb9985a7a6a0fa",
            "https://git.kernel.org/stable/c/836359247b0403e0634bfbc83e5bb8063fad287a",
            "https://git.kernel.org/stable/c/930a4c369f74da26816eaaa71b5888d29b759c27",
            "https://git.kernel.org/stable/c/4b8e88e563b5f666446d002ad0dc1e6e8e7102b0"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nftruncate: pass a signed offset\n\nThe old ftruncate() syscall, using the 32-bit off_t misses a sign\nextension when called in compat mode on 64-bit architectures.  As a\nresult, passing a negative length accidentally succeeds in truncating\nto file size between 2GiB and 4GiB.\n\nChanging the type of the compat syscall to the signed compat_off_t\nchanges the behavior so it instead returns -EINVAL.\n\nThe native entry point, the truncate() syscall and the corresponding\nloff_t based variants are all correct already and do not suffer\nfrom this mistake."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-33365",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://hackmd.io/%40JohnathanHuuTri/rJNbEItJC",
            "https://github.com/johnathanhuutri/CVE_report/blob/master/CVE-2024-33365/README.md"
        ],
        "summary": "Buffer Overflow vulnerability in Tenda AC10 v4 US_AC10V4.0si_V16.03.10.20_cn allows a remote attacker to execute arbitrary code via the Virtual_Data_Check function in the bin/httpd component."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42085",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/7026576e89094aa9a0062aa6d10cba18aa99944c",
            "https://git.kernel.org/stable/c/d77e2b5104c51d3668b9717c825a4a06998efe63",
            "https://git.kernel.org/stable/c/17e2956633ca560b95f1cbbb297cfc2adf650649",
            "https://git.kernel.org/stable/c/f1274cfab183e69a7c7bafffcb4f50703c876276",
            "https://git.kernel.org/stable/c/7838de15bb700c2898a7d741db9b1f3cbc86c136"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: remove lock of otg mode during gadget suspend/resume to avoid deadlock\n\nWhen config CONFIG_USB_DWC3_DUAL_ROLE is selected, and trigger system\nto enter suspend status with below command:\necho mem > /sys/power/state\nThere will be a deadlock issue occurring. Detailed invoking path as\nbelow:\ndwc3_suspend_common()\n    spin_lock_irqsave(&dwc->lock, flags);              <-- 1st\n    dwc3_gadget_suspend(dwc);\n        dwc3_gadget_soft_disconnect(dwc);\n            spin_lock_irqsave(&dwc->lock, flags);      <-- 2nd\nThis issue is exposed by commit c7ebd8149ee5 (\"usb: dwc3: gadget: Fix\nNULL pointer dereference in dwc3_gadget_suspend\") that removes the code\nof checking whether dwc->gadget_driver is NULL or not. It causes the\nfollowing code is executed and deadlock occurs when trying to get the\nspinlock. In fact, the root cause is the commit 5265397f9442(\"usb: dwc3:\nRemove DWC3 locking during gadget suspend/resume\") that forgot to remove\nthe lock of otg mode. So, remove the redundant lock of otg mode during\ngadget suspend/resume."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42086",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/6fa31bbe2ea8665ee970258eb8320cbf231dbe9e",
            "https://git.kernel.org/stable/c/b0af334616ed425024bf220adda0f004806b5feb",
            "https://git.kernel.org/stable/c/c326551e99f5416986074ce78bef94f6a404b517",
            "https://git.kernel.org/stable/c/7a13d1357658d3a3c1cd7b3b9543c805a6e5e6e9",
            "https://git.kernel.org/stable/c/ba1bb3e2a38a7fef1c1818dd4f2d9abbfdde553a",
            "https://git.kernel.org/stable/c/b5967393d50e3c6e632efda3ea3fdde14c1bfd0e",
            "https://git.kernel.org/stable/c/3add41bbda92938e9a528d74659dfc552796be4e",
            "https://git.kernel.org/stable/c/fdd478c3ae98c3f13628e110dce9b6cfb0d9b3c8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: chemical: bme680: Fix overflows in compensate() functions\n\nThere are cases in the compensate functions of the driver that\nthere could be overflows of variables due to bit shifting ops.\nThese implications were initially discussed here [1] and they\nwere mentioned in log message of Commit 1b3bd8592780 (\"iio:\nchemical: Add support for Bosch BME680 sensor\").\n\n[1]: https://lore.kernel.org/linux-iio/20180728114028.3c1bbe81@archlinux/"
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42087",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/b71348be1236398be2d04c5e145fd6eaae86a91b",
            "https://git.kernel.org/stable/c/98686ec1824728ff41d7b358131f7d0227c2ba2a",
            "https://git.kernel.org/stable/c/cae52f61fda0f5d2949dc177f984c9e187d4c6a0",
            "https://git.kernel.org/stable/c/489f38de3375ab84b3d269d0a1d64d6ee95d7044",
            "https://git.kernel.org/stable/c/5f41401219fbe7663b3cf65ebd4ed95ebbb8ffb9",
            "https://git.kernel.org/stable/c/1618f7a875ffd916596392fd29880c0429b8af60",
            "https://git.kernel.org/stable/c/e646402bf82145349fcf5dcbe395afaf02a8ce47",
            "https://git.kernel.org/stable/c/ee7860cd8b5763017f8dc785c2851fecb7a0c565"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panel: ilitek-ili9881c: Fix warning with GPIO controllers that sleep\n\nThe ilitek-ili9881c controls the reset GPIO using the non-sleeping\ngpiod_set_value() function. This complains loudly when the GPIO\ncontroller needs to sleep. As the caller can sleep, use\ngpiod_set_value_cansleep() to fix the issue."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42088",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/42b9ab7a4d7e6c5efd71847541e4fcc213585aad",
            "https://git.kernel.org/stable/c/282a4482e198e03781c152c88aac8aa382ef9a55"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: mt8195: Add platform entry for ETDM1_OUT_BE dai link\n\nCommit e70b8dd26711 (\"ASoC: mediatek: mt8195: Remove afe-dai component\nand rework codec link\") removed the codec entry for the ETDM1_OUT_BE\ndai link entirely instead of replacing it with COMP_EMPTY(). This worked\nby accident as the remaining COMP_EMPTY() platform entry became the codec\nentry, and the platform entry became completely empty, effectively the\nsame as COMP_DUMMY() since snd_soc_fill_dummy_dai() doesn't do anything\nfor platform entries.\n\nThis causes a KASAN out-of-bounds warning in mtk_soundcard_common_probe()\nin sound/soc/mediatek/common/mtk-soundcard-driver.c:\n\n\tfor_each_card_prelinks(card, i, dai_link) {\n\t\tif (adsp_node && !strncmp(dai_link->name, \"AFE_SOF\", strlen(\"AFE_SOF\")))\n\t\t\tdai_link->platforms->of_node = adsp_node;\n\t\telse if (!dai_link->platforms->name && !dai_link->platforms->of_node)\n\t\t\tdai_link->platforms->of_node = platform_node;\n\t}\n\nwhere the code expects the platforms array to have space for at least one entry.\n\nAdd an COMP_EMPTY() entry so that dai_link->platforms has space."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42089",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/ae81535ce2503aabc4adab3472f4338070cdeb6a",
            "https://git.kernel.org/stable/c/8896e18b7c366f8faf9344abfd0971435f1c723a",
            "https://git.kernel.org/stable/c/3662eb2170e59b58ad479982dc1084889ba757b9",
            "https://git.kernel.org/stable/c/544ab46b7ece6d6bebbdee5d5659c0a0f804a99a",
            "https://git.kernel.org/stable/c/8faf91e58425c2f6ce773250dfd995f1c2d461ac",
            "https://git.kernel.org/stable/c/29bc9e7c75398b0d12fc30955f2e9b2dd29ffaed",
            "https://git.kernel.org/stable/c/7c18b4d89ff9c810b6e562408afda5ce165c4ea6",
            "https://git.kernel.org/stable/c/90f3feb24172185f1832636264943e8b5e289245"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: fsl-asoc-card: set priv->pdev before using it\n\npriv->pdev pointer was set after being used in\nfsl_asoc_card_audmux_init().\nMove this assignment at the start of the probe function, so\nsub-functions can correctly use pdev through priv.\n\nfsl_asoc_card_audmux_init() dereferences priv->pdev to get access to the\ndev struct, used with dev_err macros.\nAs priv is zero-initialised, there would be a NULL pointer dereference.\nNote that if priv->dev is dereferenced before assignment but never used,\nfor example if there is no error to be printed, the driver won't crash\nprobably due to compiler optimisations."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42090",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://git.kernel.org/stable/c/e65a0dc2e85efb28e182aca50218e8a056d0ce04",
            "https://git.kernel.org/stable/c/420ce1261907e5dbeda1e4daffd5b6c76f8188c0",
            "https://git.kernel.org/stable/c/b813e3fd102a959c5b208ed68afe27e0137a561b",
            "https://git.kernel.org/stable/c/01fe2f885f7813f8aed5d3704b384a97b1116a9e",
            "https://git.kernel.org/stable/c/b36efd2e3e22a329444b6b24fa48df6d20ae66e6",
            "https://git.kernel.org/stable/c/4038c57bf61631219b31f1bd6e92106ec7f084dc",
            "https://git.kernel.org/stable/c/48a7a7c9571c3e62f17012dd7f2063e926179ddd",
            "https://git.kernel.org/stable/c/adec57ff8e66aee632f3dd1f93787c13d112b7a1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: fix deadlock in create_pinctrl() when handling -EPROBE_DEFER\n\nIn create_pinctrl(), pinctrl_maps_mutex is acquired before calling\nadd_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl()\ncalls pinctrl_free(). However, pinctrl_free() attempts to acquire\npinctrl_maps_mutex, which is already held by create_pinctrl(), leading to\na potential deadlock.\n\nThis patch resolves the issue by releasing pinctrl_maps_mutex before\ncalling pinctrl_free(), preventing the deadlock.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc."
    },
    {
        "Modified": "2024-07-29T17:15:00",
        "Published": "2024-07-29T17:15:00",
        "access": {},
        "assigner": "cna@manageengine.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-6748",
        "impact": {},
        "last-modified": "2024-07-29T17:15:00",
        "references": [
            "https://www.manageengine.com/itom/advisory/cve-2024-6748.html"
        ],
        "summary": "Zohocorp ManageEngine\u00a0OpManager, OpManager Plus, OpManager MSP and RMM versions\u00a0128317 and below are vulnerable to authenticated SQL injection in the URL monitoring."
    },
    {
        "Modified": "2024-07-29T17:06:00",
        "Published": "2021-06-08T23:15:00",
        "access": {
            "authentication": "NONE",
            "complexity": "MEDIUM",
            "vector": "NETWORK"
        },
        "assigner": "secure@microsoft.com",
        "cvss": 6.8,
        "cvss-time": "2024-07-29T17:06:00",
        "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
        "cwe": "CWE-119",
        "id": "CVE-2021-33742",
        "impact": {
            "availability": "PARTIAL",
            "confidentiality": "PARTIAL",
            "integrity": "PARTIAL"
        },
        "last-modified": "2024-07-29T17:06:00",
        "references": [
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-33742"
        ],
        "summary": "Windows MSHTML Platform Remote Code Execution Vulnerability"
    },
    {
        "Modified": "2024-07-29T16:52:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3966",
        "impact": {},
        "last-modified": "2024-07-29T16:52:00",
        "references": [
            "https://wpscan.com/vulnerability/9f0a575f-862d-4f2e-8d25-82c6f58dd11a/"
        ],
        "summary": "The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin"
    },
    {
        "Modified": "2024-07-29T16:51:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-3971",
        "impact": {},
        "last-modified": "2024-07-29T16:51:00",
        "references": [
            "https://wpscan.com/vulnerability/5dec5719-105d-4989-a97f-bda04d223322/"
        ],
        "summary": "The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack"
    },
    {
        "Modified": "2024-07-29T16:51:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-352",
        "id": "CVE-2024-3972",
        "impact": {},
        "last-modified": "2024-07-29T16:51:00",
        "references": [
            "https://wpscan.com/vulnerability/55dfb9b5-d590-478b-bd1f-d420b79037fa/"
        ],
        "summary": "The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack"
    },
    {
        "Modified": "2024-07-29T16:43:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3977",
        "impact": {},
        "last-modified": "2024-07-29T16:43:00",
        "references": [
            "https://wpscan.com/vulnerability/25851386-eccf-49cb-afbf-c25286c9b19e/"
        ],
        "summary": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-07-29T16:42:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-3978",
        "impact": {},
        "last-modified": "2024-07-29T16:42:00",
        "references": [
            "https://wpscan.com/vulnerability/a9f47d11-47ac-4998-a82a-dc2f3b0decdf/"
        ],
        "summary": "The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks"
    },
    {
        "Modified": "2024-07-29T16:35:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4005",
        "impact": {},
        "last-modified": "2024-07-29T16:35:00",
        "references": [
            "https://wpscan.com/vulnerability/02ca09f8-4080-4969-992d-0e6afb29bc62/"
        ],
        "summary": "The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"
    },
    {
        "Modified": "2024-07-29T16:31:00",
        "Published": "2024-06-14T06:15:00",
        "access": {},
        "assigner": "contact@wpscan.com",
        "cvss": null,
        "cwe": "CWE-79",
        "id": "CVE-2024-4270",
        "impact": {},
        "last-modified": "2024-07-29T16:31:00",
        "references": [
            "https://wpscan.com/vulnerability/7a3b89cc-7a81-448a-94fc-36a7033609d5/"
        ],
        "summary": "The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41085",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1d064e4fbebcf5b18dc10c1f3973487eb163b600",
            "https://git.kernel.org/stable/c/84ec985944ef34a34a1605b93ce401aa8737af96"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/mem: Fix no cxl_nvd during pmem region auto-assembling\n\nWhen CXL subsystem is auto-assembling a pmem region during cxl\nendpoint port probing, always hit below calltrace.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000078\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n RIP: 0010:cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n Call Trace:\n  <TASK>\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x82/0x160\n  ? do_user_addr_fault+0x65/0x6b0\n  ? exc_page_fault+0x7d/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n  ? cxl_pmem_region_probe+0x1ac/0x360 [cxl_pmem]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n  really_probe+0x173/0x410\n  ? __pfx___device_attach_driver+0x10/0x10\n  __driver_probe_device+0x80/0x170\n  driver_probe_device+0x1e/0x90\n  __device_attach_driver+0x90/0x120\n  bus_for_each_drv+0x84/0xe0\n  __device_attach+0xbc/0x1f0\n  bus_probe_device+0x90/0xa0\n  device_add+0x51c/0x710\n  devm_cxl_add_pmem_region+0x1b5/0x380 [cxl_core]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n\nThe cxl_nvd of the memdev needs to be available during the pmem region\nprobe. Currently the cxl_nvd is registered after the endpoint port probe.\nThe endpoint probe, in the case of autoassembly of regions, can cause a\npmem region probe requiring the not yet available cxl_nvd. Adjust the\nsequence so this dependency is met.\n\nThis requires adding a port parameter to cxl_find_nvdimm_bridge() that\ncan be used to query the ancestor root port. The endpoint port is not\nyet available, but will share a common ancestor with its parent, so\nstart the query from there instead."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41085",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1d064e4fbebcf5b18dc10c1f3973487eb163b600",
            "https://git.kernel.org/stable/c/84ec985944ef34a34a1605b93ce401aa8737af96"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/mem: Fix no cxl_nvd during pmem region auto-assembling\n\nWhen CXL subsystem is auto-assembling a pmem region during cxl\nendpoint port probing, always hit below calltrace.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000078\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n RIP: 0010:cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n Call Trace:\n  <TASK>\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x82/0x160\n  ? do_user_addr_fault+0x65/0x6b0\n  ? exc_page_fault+0x7d/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? cxl_pmem_region_probe+0x22e/0x360 [cxl_pmem]\n  ? cxl_pmem_region_probe+0x1ac/0x360 [cxl_pmem]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n  really_probe+0x173/0x410\n  ? __pfx___device_attach_driver+0x10/0x10\n  __driver_probe_device+0x80/0x170\n  driver_probe_device+0x1e/0x90\n  __device_attach_driver+0x90/0x120\n  bus_for_each_drv+0x84/0xe0\n  __device_attach+0xbc/0x1f0\n  bus_probe_device+0x90/0xa0\n  device_add+0x51c/0x710\n  devm_cxl_add_pmem_region+0x1b5/0x380 [cxl_core]\n  cxl_bus_probe+0x1b/0x60 [cxl_core]\n\nThe cxl_nvd of the memdev needs to be available during the pmem region\nprobe. Currently the cxl_nvd is registered after the endpoint port probe.\nThe endpoint probe, in the case of autoassembly of regions, can cause a\npmem region probe requiring the not yet available cxl_nvd. Adjust the\nsequence so this dependency is met.\n\nThis requires adding a port parameter to cxl_find_nvdimm_bridge() that\ncan be used to query the ancestor root port. The endpoint port is not\nyet available, but will share a common ancestor with its parent, so\nstart the query from there instead."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41084",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a9e099e29e925f8b31cfe53e8a786b9796f8e453",
            "https://git.kernel.org/stable/c/b8a40a6dbfb0150c1081384caa9bbe28ce5d5060",
            "https://git.kernel.org/stable/c/285f2a08841432fc3e498b1cd00cce5216cdf189"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/region: Avoid null pointer dereference in region lookup\n\ncxl_dpa_to_region() looks up a region based on a memdev and DPA.\nIt wrongly assumes an endpoint found mapping the DPA is also of\na fully assembled region. When not true it leads to a null pointer\ndereference looking up the region name.\n\nThis appears during testing of region lookup after a failure to\nassemble a BIOS defined region or if the lookup raced with the\nassembly of the BIOS defined region.\n\nFailure to clean up BIOS defined regions that fail assembly is an\nissue in itself and a fix to that problem will alleviate some of\nthe impact. It will not alleviate the race condition so let's harden\nthis path.\n\nThe behavior change is that the kernel oops due to a null pointer\ndereference is replaced with a dev_dbg() message noting that an\nendpoint was mapped.\n\nAdditional comments are added so that future users of this function\ncan more clearly understand what it provides."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41087",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/290073b2b557e4dc21ee74a1e403d9ae79e393a2",
            "https://git.kernel.org/stable/c/56f1c7e290cd6c69c948fcd2e2a49e6a637ec38f",
            "https://git.kernel.org/stable/c/010de9acbea58fbcbda08e3793d6262086a493fe",
            "https://git.kernel.org/stable/c/5dde5f8b790274723640d29a07c5a97d57d62047",
            "https://git.kernel.org/stable/c/702c1edbafb2e6f9d20f6d391273b5be09d366a5",
            "https://git.kernel.org/stable/c/062e256516d7db5e7dcdef117f52025cd5c456e3",
            "https://git.kernel.org/stable/c/8106da4d88bbaed809e023cc8014b766223d6e76",
            "https://git.kernel.org/stable/c/ab9e0c529eb7cafebdd31fe1644524e80a48b05d"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix double free on error\n\nIf e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump\nto the err_out label, which will call devres_release_group().\ndevres_release_group() will trigger a call to ata_host_release().\nata_host_release() calls kfree(host), so executing the kfree(host) in\nata_host_alloc() will lead to a double free:\n\nkernel BUG at mm/slub.c:553!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:kfree+0x2cf/0x2f0\nCode: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da\nRSP: 0018:ffffc90000f377f0 EFLAGS: 00010246\nRAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320\nRDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0\nRBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffc90000f37610 R11: 617461203a736b6e R12: ffffea00044ac780\nR13: ffff888100046400 R14: ffffffffc02c9de5 R15: 0000000000000006\nFS:  00007f2f1cabe980(0000) GS:ffff88813b380000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f2f1c3acf75 CR3: 0000000111724000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19/0x27\n ? die+0x2e/0x50\n ? do_trap+0xca/0x110\n ? do_error_trap+0x6a/0x90\n ? kfree+0x2cf/0x2f0\n ? exc_invalid_op+0x50/0x70\n ? kfree+0x2cf/0x2f0\n ? asm_exc_invalid_op+0x1a/0x20\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? kfree+0x2cf/0x2f0\n ata_host_alloc+0xf5/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nEnsure that we will not call kfree(host) twice, by performing the kfree()\nonly if the devres_open_group() call failed."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41810",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/twisted/twisted/security/advisories/GHSA-cf56-g6w6-pqq2",
            "https://github.com/twisted/twisted/commit/046a164f89a0f08d3239ecebd750360f8914df33"
        ],
        "summary": "Twisted is an event-based framework for internet applications, supporting Python 3.6+. The `twisted.web.util.redirectTo` function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body. This vulnerability is fixed in 24.7.0rc1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41819",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/enchant97/note-mark/security/advisories/GHSA-rm48-9mqf-8jc3",
            "https://github.com/enchant97/note-mark/commit/a0997facb82f85bfb8c0d497606d89e7d150e182"
        ],
        "summary": "Note Mark is a web-based Markdown notes app. A stored cross-site scripting (XSS) vulnerability in Note Mark allows attackers to execute arbitrary web scripts via a crafted payload injected into the URL value of a link in the markdown content. This vulnerability is fixed in 0.13.1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42067",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/08f6c05feb1db21653e98ca84ea04ca032d014c7",
            "https://git.kernel.org/stable/c/9fef36cad60d4226f9d06953cd56d1d2f9119730",
            "https://git.kernel.org/stable/c/044da7ae7afd4ef60806d73654a2e6a79aa4ed7a",
            "https://git.kernel.org/stable/c/e60adf513275c3a38e5cb67f7fd12387e43a3ff5"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Take return from set_memory_rox() into account with bpf_jit_binary_lock_ro()\n\nset_memory_rox() can fail, leaving memory unprotected.\n\nCheck return and bail out when bpf_jit_binary_lock_ro() returns\nan error."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2023-52887",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ed581989d7ea9df6f8646beba2341e32cd49a1f9",
            "https://git.kernel.org/stable/c/f6c839e717901dbd6b1c1ca807b6210222eb70f6",
            "https://git.kernel.org/stable/c/1762ca80c2b72dd1b5821c5e347713ae696276ea",
            "https://git.kernel.org/stable/c/26b18dd30e63d4fd777be429148e8e4ed66f60b2",
            "https://git.kernel.org/stable/c/177e33b655d35d72866b50aec84307119dc5f3d4",
            "https://git.kernel.org/stable/c/0bc0a7416ea73f79f915c9a05ac0858dff65cfed",
            "https://git.kernel.org/stable/c/d3e2904f71ea0fe7eaff1d68a2b0363c888ea0fb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: can: j1939: enhanced error handling for tightly received RTS messages in xtp_rx_rts_session_new\n\nThis patch enhances error handling in scenarios with RTS (Request to\nSend) messages arriving closely. It replaces the less informative WARN_ON_ONCE\nbacktraces with a new error handling method. This provides clearer error\nmessages and allows for the early termination of problematic sessions.\nPreviously, sessions were only released at the end of j1939_xtp_rx_rts().\n\nPotentially this could be reproduced with something like:\ntestj1939 -r vcan0:0x80 &\nwhile true; do\n\t# send first RTS\n\tcansend vcan0 18EC8090#1014000303002301;\n\t# send second RTS\n\tcansend vcan0 18EC8090#1014000303002301;\n\t# send abort\n\tcansend vcan0 18EC8090#ff00000000002301;\ndone"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41086",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/bf920ed92ef24dcd6970c88881cd4700b3acf05b",
            "https://git.kernel.org/stable/c/692aa7a54b2b28d59f24b3bf8250837805484b99"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcachefs: Fix sb_field_downgrade validation\n\n- bch2_sb_downgrade_validate() wasn't checking for a downgrade entry\n  extending past the end of the superblock section\n\n- for_each_downgrade_entry() is used in to_text() and needs to work on\n  malformed input; it also was missing a check for a field extending\n  past the end of the section"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42068",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a359696856ca9409fb97655c5a8ef0f549cb6e03",
            "https://git.kernel.org/stable/c/e4f602e3ff749ba770bf8ff10196e18358de6720",
            "https://git.kernel.org/stable/c/fdd411af8178edc6b7bf260f8fa4fba1bedd0a6d",
            "https://git.kernel.org/stable/c/e3540e5a7054d6daaf9a1415a48aacb092112a89",
            "https://git.kernel.org/stable/c/05412471beba313ecded95aa17b25fe84bb2551a",
            "https://git.kernel.org/stable/c/7d2cc63eca0c993c99d18893214abf8f85d566d8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Take return from set_memory_ro() into account with bpf_prog_lock_ro()\n\nset_memory_ro() can fail, leaving memory unprotected.\n\nCheck its return and take it into account as an error."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41089",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ffabad4aa91e33ced3c6ae793fb37771b3e9cb51",
            "https://git.kernel.org/stable/c/1c9f2e60150b4f13789064370e37f39e6e060f50",
            "https://git.kernel.org/stable/c/56fc4d3b0bdef691831cd95715a7ca3ebea98b2d",
            "https://git.kernel.org/stable/c/5eecb49a6c268dc229005bf6e8167d4001dc09a0",
            "https://git.kernel.org/stable/c/30cbf6ffafbbdd8a6e4e5f0a2e9a9827ee83f3ad",
            "https://git.kernel.org/stable/c/7ece609b0ce7a7ea8acdf512a77d1fee26621637",
            "https://git.kernel.org/stable/c/6e49a157d541e7e97b815a56f4bdfcbc89844a59",
            "https://git.kernel.org/stable/c/6d411c8ccc0137a612e0044489030a194ff5c843"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_hd_modes\n\nIn nv17_tv_get_hd_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). The same applies to drm_cvt_mode().\nAdd a check to avoid null pointer dereference."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42069",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3243e64eb4d897c3eeb48b2a7221ab5a95e1282a",
            "https://git.kernel.org/stable/c/ed45c0a0b662079d4c0e518014cc148c753979b4",
            "https://git.kernel.org/stable/c/1864b8224195d0e43ddb92a8151f54f6562090cc"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix possible double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function adev_release\ncalls kfree(madev). We shouldn't call kfree(madev) again\nin the error handling path. Set 'madev' to NULL."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41093",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7f35e01cb0ea4d295f5c067bb5c67dfcddaf05bc",
            "https://git.kernel.org/stable/c/6ce0544cabaa608018d5922ab404dc656a9d8447",
            "https://git.kernel.org/stable/c/330c8c1453848c04d335bad81371a66710210800",
            "https://git.kernel.org/stable/c/dd9ec0ea4cdde0fc48116e63969fc83e81d7ef46",
            "https://git.kernel.org/stable/c/bcfa48ff785bd121316592b131ff6531e3e696bb"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: avoid using null object of framebuffer\n\nInstead of using state->fb->obj[0] directly, get object from framebuffer\nby calling drm_gem_fb_get_obj() and return error code when object is\nnull to avoid using null object of framebuffer."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42070",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/40188a25a9847dbeb7ec67517174a835a677752f",
            "https://git.kernel.org/stable/c/23752737c6a618e994f9a310ec2568881a6b49c4",
            "https://git.kernel.org/stable/c/5d43d789b57943720dca4181a05f6477362b94cf",
            "https://git.kernel.org/stable/c/461302e07f49687ffe7d105fa0a330c07c7646d8",
            "https://git.kernel.org/stable/c/efb27ad05949403848f487823b597ed67060e007",
            "https://git.kernel.org/stable/c/952bf8df222599baadbd4f838a49c4fef81d2564",
            "https://git.kernel.org/stable/c/41a6375d48deaf7f730304b5153848bfa1c2980f",
            "https://git.kernel.org/stable/c/7931d32955e09d0a11b1fe0b6aac1bfa061c005c"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fully validate NFT_DATA_VALUE on store to data registers\n\nregister store validation for NFT_DATA_VALUE is conditional, however,\nthe datatype is always either NFT_DATA_VALUE or NFT_DATA_VERDICT. This\nonly requires a new helper function to infer the register type from the\nset datatype so this conditional check can be removed. Otherwise,\npointer to chain object can be leaked through the registers."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41096",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ff1121d2214b794dc1772081f27bdd90721a84bc",
            "https://git.kernel.org/stable/c/45fc8d20e0768ab0a0ad054081d0f68aa3c83976",
            "https://git.kernel.org/stable/c/9eee5330656bf92f51cb1f09b2dc9f8cf975b3d1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/MSI: Fix UAF in msi_capability_init\n\nKFENCE reports the following UAF:\n\n BUG: KFENCE: use-after-free read in __pci_enable_msi_range+0x2c0/0x488\n\n Use-after-free read at 0x0000000024629571 (in kfence-#12):\n  __pci_enable_msi_range+0x2c0/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\n kfence-#12: 0x0000000008614900-0x00000000e06c228d, size=104, cache=kmalloc-128\n\n allocated by task 81 on cpu 7 at 10.808142s:\n  __kmem_cache_alloc_node+0x1f0/0x2bc\n  kmalloc_trace+0x44/0x138\n  msi_alloc_desc+0x3c/0x9c\n  msi_domain_insert_msi_desc+0x30/0x78\n  msi_setup_msi_desc+0x13c/0x184\n  __pci_enable_msi_range+0x258/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\n freed by task 81 on cpu 7 at 10.811436s:\n  msi_domain_free_descs+0xd4/0x10c\n  msi_domain_free_locked.part.0+0xc0/0x1d8\n  msi_domain_alloc_irqs_all_locked+0xb4/0xbc\n  pci_msi_setup_msi_irqs+0x30/0x4c\n  __pci_enable_msi_range+0x2a8/0x488\n  pci_alloc_irq_vectors_affinity+0xec/0x14c\n  pci_alloc_irq_vectors+0x18/0x28\n\nDescriptor allocation done in:\n__pci_enable_msi_range\n    msi_capability_init\n        msi_setup_msi_desc\n            msi_insert_msi_desc\n                msi_domain_insert_msi_desc\n                    msi_alloc_desc\n                        ...\n\nFreed in case of failure in __msi_domain_alloc_locked()\n__pci_enable_msi_range\n    msi_capability_init\n        pci_msi_setup_msi_irqs\n            msi_domain_alloc_irqs_all_locked\n                msi_domain_alloc_locked\n                    __msi_domain_alloc_locked => fails\n                    msi_domain_free_locked\n                        ...\n\nThat failure propagates back to pci_msi_setup_msi_irqs() in\nmsi_capability_init() which accesses the descriptor for unmasking in the\nerror exit path.\n\nCure it by copying the descriptor and using the copy for the error exit path\nunmask operation.\n\n[ tglx: Massaged change log ]"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42073",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/bfa86a96912faa0b6142a918db88cc0c738a769e",
            "https://git.kernel.org/stable/c/942901e0fc74ad4b7992ef7ca9336e68d5fd6d36",
            "https://git.kernel.org/stable/c/bf8781ede7bd9a37c0fcabca78976e61300b5a1a",
            "https://git.kernel.org/stable/c/c28947de2bed40217cf256c5d0d16880054fcf13"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_buffers: Fix memory corruptions on Spectrum-4 systems\n\nThe following two shared buffer operations make use of the Shared Buffer\nStatus Register (SBSR):\n\n # devlink sb occupancy snapshot pci/0000:01:00.0\n # devlink sb occupancy clearmax pci/0000:01:00.0\n\nThe register has two masks of 256 bits to denote on which ingress /\negress ports the register should operate on. Spectrum-4 has more than\n256 ports, so the register was extended by cited commit with a new\n'port_page' field.\n\nHowever, when filling the register's payload, the driver specifies the\nports as absolute numbers and not relative to the first port of the port\npage, resulting in memory corruptions [1].\n\nFix by specifying the ports relative to the first port of the port page.\n\n[1]\nBUG: KASAN: slab-use-after-free in mlxsw_sp_sb_occ_snapshot+0xb6d/0xbc0\nRead of size 1 at addr ffff8881068cb00f by task devlink/1566\n[...]\nCall Trace:\n <TASK>\n dump_stack_lvl+0xc6/0x120\n print_report+0xce/0x670\n kasan_report+0xd7/0x110\n mlxsw_sp_sb_occ_snapshot+0xb6d/0xbc0\n mlxsw_devlink_sb_occ_snapshot+0x75/0xb0\n devlink_nl_sb_occ_snapshot_doit+0x1f9/0x2a0\n genl_family_rcv_msg_doit+0x20c/0x300\n genl_rcv_msg+0x567/0x800\n netlink_rcv_skb+0x170/0x450\n genl_rcv+0x2d/0x40\n netlink_unicast+0x547/0x830\n netlink_sendmsg+0x8d4/0xdb0\n __sys_sendto+0x49b/0x510\n __x64_sys_sendto+0xe5/0x1c0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[...]\nAllocated by task 1:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n __kasan_kmalloc+0x8f/0xa0\n copy_verifier_state+0xbc2/0xfb0\n do_check_common+0x2c51/0xc7e0\n bpf_check+0x5107/0x9960\n bpf_prog_load+0xf0e/0x2690\n __sys_bpf+0x1a61/0x49d0\n __x64_sys_bpf+0x7d/0xc0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 1:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n poison_slab_object+0x109/0x170\n __kasan_slab_free+0x14/0x30\n kfree+0xca/0x2b0\n free_verifier_state+0xce/0x270\n do_check_common+0x4828/0xc7e0\n bpf_check+0x5107/0x9960\n bpf_prog_load+0xf0e/0x2690\n __sys_bpf+0x1a61/0x49d0\n __x64_sys_bpf+0x7d/0xc0\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41095",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/9289cd3450d1da3e271ef4b054d4d2932c41243e",
            "https://git.kernel.org/stable/c/dbd75f32252508ed6c46c3288a282c301a57ceeb",
            "https://git.kernel.org/stable/c/259549b2ccf795b7f91f7b5aba47286addcfa389",
            "https://git.kernel.org/stable/c/0d17604f2e44b3df21e218fe8fb3b836d41bac49",
            "https://git.kernel.org/stable/c/f95ed0f54b3d3faecae1140ddab854f904a6e7c8",
            "https://git.kernel.org/stable/c/cb751e48bbcffd292090f7882b23b215111b3d72",
            "https://git.kernel.org/stable/c/bdda5072494f2a7215d94fc4124ad1949a218714",
            "https://git.kernel.org/stable/c/66edf3fb331b6c55439b10f9862987b0916b3726"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_ld_modes\n\nIn nv17_tv_get_ld_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41094",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/f29fcfbf6067c0d8c83f84a045da9276c08deac5",
            "https://git.kernel.org/stable/c/00702cfa8432ac67a72f56de5e1d278ddea2ebde",
            "https://git.kernel.org/stable/c/d92a7580392ad4681b1d4f9275d00b95375ebe01"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/fbdev-dma: Only set smem_start is enable per module option\n\nOnly export struct fb_info.fix.smem_start if that is required by the\nuser and the memory does not come from vmalloc().\n\nSetting struct fb_info.fix.smem_start breaks systems where DMA\nmemory is backed by vmalloc address space. An example error is\nshown below.\n\n[    3.536043] ------------[ cut here ]------------\n[    3.540716] virt_to_phys used for non-linear address: 000000007fc4f540 (0xffff800086001000)\n[    3.552628] WARNING: CPU: 4 PID: 61 at arch/arm64/mm/physaddr.c:12 __virt_to_phys+0x68/0x98\n[    3.565455] Modules linked in:\n[    3.568525] CPU: 4 PID: 61 Comm: kworker/u12:5 Not tainted 6.6.23-06226-g4986cc3e1b75-dirty #250\n[    3.577310] Hardware name: NXP i.MX95 19X19 board (DT)\n[    3.582452] Workqueue: events_unbound deferred_probe_work_func\n[    3.588291] pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    3.595233] pc : __virt_to_phys+0x68/0x98\n[    3.599246] lr : __virt_to_phys+0x68/0x98\n[    3.603276] sp : ffff800083603990\n[    3.677939] Call trace:\n[    3.680393]  __virt_to_phys+0x68/0x98\n[    3.684067]  drm_fbdev_dma_helper_fb_probe+0x138/0x238\n[    3.689214]  __drm_fb_helper_initial_config_and_unlock+0x2b0/0x4c0\n[    3.695385]  drm_fb_helper_initial_config+0x4c/0x68\n[    3.700264]  drm_fbdev_dma_client_hotplug+0x8c/0xe0\n[    3.705161]  drm_client_register+0x60/0xb0\n[    3.709269]  drm_fbdev_dma_setup+0x94/0x148\n\nAdditionally, DMA memory is assumed to by contiguous in physical\naddress space, which is not guaranteed by vmalloc().\n\nResolve this by checking the module flag drm_leak_fbdev_smem when\nDRM allocated the instance of struct fb_info. Fbdev-dma then only\nsets smem_start only if required (via FBINFO_HIDE_SMEM_START). Also\nguarantee that the framebuffer is not located in vmalloc address\nspace."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41631",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://platform.akyuu.space/exploit.txt",
            "https://github.com/host-host"
        ],
        "summary": "Buffer Overflow vulnerability in host-host NEUQ_board v.1.0 allows a remote attacker to cause a denial of service via the password.h component."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41098",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/119c97ace2a9ffcf4dc09a23bb057d6c281aff28",
            "https://git.kernel.org/stable/c/8a8ff7e3b736a70d7b7c8764cbcd2724d4079ec8",
            "https://git.kernel.org/stable/c/5d92c7c566dc76d96e0e19e481d926bbe6631c1e"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix null pointer dereference on error\n\nIf the ata_port_alloc() call in ata_host_alloc() fails,\nata_host_release() will get called.\n\nHowever, the code in ata_host_release() tries to free ata_port struct\nmembers unconditionally, which can lead to the following:\n\nBUG: unable to handle page fault for address: 0000000000003990\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 10 PID: 594 Comm: (udev-worker) Not tainted 6.10.0-rc5 #44\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:ata_host_release.cold+0x2f/0x6e [libata]\nCode: e4 4d 63 f4 44 89 e2 48 c7 c6 90 ad 32 c0 48 c7 c7 d0 70 33 c0 49 83 c6 0e 41\nRSP: 0018:ffffc90000ebb968 EFLAGS: 00010246\nRAX: 0000000000000041 RBX: ffff88810fb52e78 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff88813b3218c0 RDI: ffff88813b3218c0\nRBP: ffff88810fb52e40 R08: 0000000000000000 R09: 6c65725f74736f68\nR10: ffffc90000ebb738 R11: 73692033203a746e R12: 0000000000000004\nR13: 0000000000000000 R14: 0000000000000011 R15: 0000000000000006\nFS:  00007f6cc55b9980(0000) GS:ffff88813b300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000003990 CR3: 00000001122a2000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19/0x27\n ? page_fault_oops+0x15a/0x2f0\n ? exc_page_fault+0x7e/0x180\n ? asm_exc_page_fault+0x26/0x30\n ? ata_host_release.cold+0x2f/0x6e [libata]\n ? ata_host_release.cold+0x2f/0x6e [libata]\n release_nodes+0x35/0xb0\n devres_release_group+0x113/0x140\n ata_host_alloc+0xed/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nDo not access ata_port struct members unconditionally."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42076",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/5e4ed38eb17eaca42de57d500cc0f9668d2b6abf",
            "https://git.kernel.org/stable/c/a2a0ebff7fdeb2f66e29335adf64b9e457300dd4",
            "https://git.kernel.org/stable/c/4c5dc3927e17489c1cae6f48c0d5e4acb4cae01f",
            "https://git.kernel.org/stable/c/f97cbce633923588307049c4aef9feb2987e371b",
            "https://git.kernel.org/stable/c/ab2a683938ba4416d389c2f5651cbbb2c41b779f",
            "https://git.kernel.org/stable/c/ba7e5ae8208ac07d8e1eace0951a34c169a2d298",
            "https://git.kernel.org/stable/c/b7cdf1dd5d2a2d8200efd98d1893684db48fe134"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: can: j1939: Initialize unused data in j1939_send_one()\n\nsyzbot reported kernel-infoleak in raw_recvmsg() [1]. j1939_send_one()\ncreates full frame including unused data, but it doesn't initialize\nit. This causes the kernel-infoleak issue. Fix this by initializing\nunused data.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\nBUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n copy_to_user_iter lib/iov_iter.c:24 [inline]\n iterate_ubuf include/linux/iov_iter.h:29 [inline]\n iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n iterate_and_advance include/linux/iov_iter.h:271 [inline]\n _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n copy_to_iter include/linux/uio.h:196 [inline]\n memcpy_to_msg include/linux/skbuff.h:4113 [inline]\n raw_recvmsg+0x2b8/0x9e0 net/can/raw.c:1008\n sock_recvmsg_nosec net/socket.c:1046 [inline]\n sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n ____sys_recvmsg+0x18a/0x620 net/socket.c:2803\n ___sys_recvmsg+0x223/0x840 net/socket.c:2845\n do_recvmmsg+0x4fc/0xfd0 net/socket.c:2939\n __sys_recvmmsg net/socket.c:3018 [inline]\n __do_sys_recvmmsg net/socket.c:3041 [inline]\n __se_sys_recvmmsg net/socket.c:3034 [inline]\n __x64_sys_recvmmsg+0x397/0x490 net/socket.c:3034\n x64_sys_call+0xf6c/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:300\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3804 [inline]\n slab_alloc_node mm/slub.c:3845 [inline]\n kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:577\n __alloc_skb+0x35b/0x7a0 net/core/skbuff.c:668\n alloc_skb include/linux/skbuff.h:1313 [inline]\n alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6504\n sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n sock_alloc_send_skb include/net/sock.h:1842 [inline]\n j1939_sk_alloc_skb net/can/j1939/socket.c:878 [inline]\n j1939_sk_send_loop net/can/j1939/socket.c:1142 [inline]\n j1939_sk_sendmsg+0xc0a/0x2730 net/can/j1939/socket.c:1277\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x30f/0x380 net/socket.c:745\n ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n __sys_sendmsg net/socket.c:2667 [inline]\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2674\n x64_sys_call+0xc4b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nBytes 12-15 of 16 are uninitialized\nMemory access of size 16 starts at ffff888120969690\nData copied to user address 00000000200017c0\n\nCPU: 1 PID: 5050 Comm: syz-executor198 Not tainted 6.9.0-rc5-syzkaller-00031-g71b1543c83d6 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42078",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/7e8b94045bc77ce4f085ddfb9eb04e5760e66169",
            "https://git.kernel.org/stable/c/e0011bca603c101f2a3c007bdb77f7006fa78fb1"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: initialise nfsd_info.mutex early.\n\nnfsd_info.mutex can be dereferenced by svc_pool_stats_start()\nimmediately after the new netns is created.  Currently this can\ntrigger an oops.\n\nMove the initialisation earlier before it can possibly be dereferenced."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42079",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3429ef5f50909cee9e498c50f0c499b9397116ce",
            "https://git.kernel.org/stable/c/f54f9d5368a4e92ede7dd078a62788dae3a7c6ef",
            "https://git.kernel.org/stable/c/35264909e9d1973ab9aaa2a1b07cda70f12bb828"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix NULL pointer dereference in gfs2_log_flush\n\nIn gfs2_jindex_free(), set sdp->sd_jdesc to NULL under the log flush\nlock to provide exclusion against gfs2_log_flush().\n\nIn gfs2_log_flush(), check if sdp->sd_jdesc is non-NULL before\ndereferencing it.  Otherwise, we could run into a NULL pointer\ndereference when outstanding glock work races with an unmount\n(glock_work_func -> run_queue -> do_xmote -> inode_go_sync ->\ngfs2_log_flush)."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41097",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/5159a81924311c1ec786ad9fdef784ead8676a6a",
            "https://git.kernel.org/stable/c/23926d316d2836315cb113569f91393266eb5b47",
            "https://git.kernel.org/stable/c/75ddbf776dd04a09fb9e5267ead5d0c989f84506",
            "https://git.kernel.org/stable/c/1aac4be1aaa5177506219f01dce5e29194e5e95a",
            "https://git.kernel.org/stable/c/5584c776a1af7807ca815ee6265f2c1429fc5727",
            "https://git.kernel.org/stable/c/f536f09eb45e4de8d1b9accee9d992aa1846f1d4",
            "https://git.kernel.org/stable/c/ac9007520e392541a29daebaae8b9109007bc781",
            "https://git.kernel.org/stable/c/2eabb655a968b862bc0c31629a09f0fbf3c80d51"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: atm: cxacru: fix endpoint checking in cxacru_bind()\n\nSyzbot is still reporting quite an old issue [1] that occurs due to\nincomplete checking of present usb endpoints. As such, wrong\nendpoints types may be used at urb sumbitting stage which in turn\ntriggers a warning in usb_submit_urb().\n\nFix the issue by verifying that required endpoint types are present\nfor both in and out endpoints, taking into account cmd endpoint type.\n\nUnfortunately, this patch has not been tested on real hardware.\n\n[1] Syzbot report:\nusb 1-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 0 PID: 8667 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\nModules linked in:\nCPU: 0 PID: 8667 Comm: kworker/0:4 Not tainted 5.14.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\n...\nCall Trace:\n cxacru_cm+0x3c0/0x8e0 drivers/usb/atm/cxacru.c:649\n cxacru_card_status+0x22/0xd0 drivers/usb/atm/cxacru.c:760\n cxacru_bind+0x7ac/0x11a0 drivers/usb/atm/cxacru.c:1209\n usbatm_usb_probe+0x321/0x1ae0 drivers/usb/atm/usbatm.c:1055\n cxacru_usb_probe+0xdf/0x1e0 drivers/usb/atm/cxacru.c:1363\n usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:517 [inline]\n really_probe+0x23c/0xcd0 drivers/base/dd.c:595\n __driver_probe_device+0x338/0x4d0 drivers/base/dd.c:747\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:777\n __device_attach_driver+0x20b/0x2f0 drivers/base/dd.c:894\n bus_for_each_drv+0x15f/0x1e0 drivers/base/bus.c:427\n __device_attach+0x228/0x4a0 drivers/base/dd.c:965\n bus_probe_device+0x1e4/0x290 drivers/base/bus.c:487\n device_add+0xc2f/0x2180 drivers/base/core.c:3354\n usb_set_configuration+0x113a/0x1910 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xba/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd9/0x2c0 drivers/usb/core/driver.c:293"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42080",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/8656ef8a9288d6c932654f8d3856dc4ab1cfc6b5",
            "https://git.kernel.org/stable/c/782bdaf9d01658281bc813f3f873e6258aa1fd8d",
            "https://git.kernel.org/stable/c/8ac281d42337f36cf7061cf1ea094181b84bc1a9",
            "https://git.kernel.org/stable/c/f45b43d17240e9ca67ebf3cc82bb046b07cc1c61",
            "https://git.kernel.org/stable/c/ca537a34775c103f7b14d7bbd976403f1d1525d8"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/restrack: Fix potential invalid address access\n\nstruct rdma_restrack_entry's kern_name was set to KBUILD_MODNAME\nin ib_create_cq(), while if the module exited but forgot del this\nrdma_restrack_entry, it would cause a invalid address access in\nrdma_restrack_clean() when print the owner of this rdma_restrack_entry.\n\nThese code is used to help find one forgotten PD release in one of the\nULPs. But it is not needed anymore, so delete them."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@mitre.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41640",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/alemusix/CVE-2024-41640"
        ],
        "summary": "Cross Site Scripting (XSS) vulnerability in AML Surety Eco up to 3.5 allows an attacker to run arbitrary code via crafted GET request using the id parameter."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42064",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/27df59c6071470efce7182ee92fbb16afba551e0",
            "https://git.kernel.org/stable/c/af114efe8d24b5711cfbedf7180f2ac1a296c24b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip pipe if the pipe idx not set properly\n\n[why]\nDriver crashes when pipe idx not set properly\n\n[how]\nAdd code to skip the pipe that idx not set properly"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41817",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-8rxc-922v-phg8",
            "https://github.com/ImageMagick/ImageMagick/commit/6526a2b28510ead6a3e14de711bb991ad9abff38",
            "https://github.com/ImageMagick/ImageMagick/blob/3b22378a23d59d7517c43b65b1822f023df357a0/app-image/AppRun#L11-L14"
        ],
        "summary": "ImageMagick is a free and open-source software suite, used for editing and manipulating digital images. The `AppImage` version `ImageMagick` might use an empty path when setting `MAGICK_CONFIGURE_PATH` and `LD_LIBRARY_PATH` environment variables while executing, which might lead to arbitrary code execution by loading malicious configuration files or shared libraries in the current working directory while executing `ImageMagick`. The vulnerability is fixed in 7.11-36."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42063",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/b30f3197a6cd080052d5d4973f9a6b479fd9fff5",
            "https://git.kernel.org/stable/c/d812ae6e02bd6e6a9cd1fdb09519c2f33e875faf",
            "https://git.kernel.org/stable/c/3189983c26108cf0990e5c46856dc9feb9470d12",
            "https://git.kernel.org/stable/c/e8742081db7d01f980c6161ae1e8a1dbc1e30979"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode\n\nsyzbot reported uninit memory usages during map_{lookup,delete}_elem.\n\n==========\nBUG: KMSAN: uninit-value in __dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\nBUG: KMSAN: uninit-value in dev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n__dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\ndev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n____bpf_map_lookup_elem kernel/bpf/helpers.c:42 [inline]\nbpf_map_lookup_elem+0x5c/0x80 kernel/bpf/helpers.c:38\n___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997\n__bpf_prog_run256+0xb5/0xe0 kernel/bpf/core.c:2237\n==========\n\nThe reproducer should be in the interpreter mode.\n\nThe C reproducer is trying to run the following bpf prog:\n\n    0: (18) r0 = 0x0\n    2: (18) r1 = map[id:49]\n    4: (b7) r8 = 16777216\n    5: (7b) *(u64 *)(r10 -8) = r8\n    6: (bf) r2 = r10\n    7: (07) r2 += -229\n            ^^^^^^^^^^\n\n    8: (b7) r3 = 8\n    9: (b7) r4 = 0\n   10: (85) call dev_map_lookup_elem#1543472\n   11: (95) exit\n\nIt is due to the \"void *key\" (r2) passed to the helper. bpf allows uninit\nstack memory access for bpf prog with the right privileges. This patch\nuses kmsan_unpoison_memory() to mark the stack as initialized.\n\nThis should address different syzbot reports on the uninit \"void *key\"\nargument during map_{lookup,delete}_elem."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "security-advisories@github.com",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41818",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-mpg4-rc92-vx8v",
            "https://github.com/NaturalIntelligence/fast-xml-parser/commit/d0bfe8a3a2813a185f39591bbef222212d856164",
            "https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/src/v5/valueParsers/currency.js#L10"
        ],
        "summary": "fast-xml-parser is an open source, pure javascript xml parser. a ReDOS exists on currency.js. This vulnerability is fixed in 4.4.1."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42065",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/cc796a77985d6af75c9362cb2e73dce4ae3f97cd",
            "https://git.kernel.org/stable/c/a6eff8f9c7e844cb24ccb188ca24abcd59734e74"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Add a NULL check in xe_ttm_stolen_mgr_init\n\nAdd an explicit check to ensure that the mgr is not NULL."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42063",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/b30f3197a6cd080052d5d4973f9a6b479fd9fff5",
            "https://git.kernel.org/stable/c/d812ae6e02bd6e6a9cd1fdb09519c2f33e875faf",
            "https://git.kernel.org/stable/c/3189983c26108cf0990e5c46856dc9feb9470d12",
            "https://git.kernel.org/stable/c/e8742081db7d01f980c6161ae1e8a1dbc1e30979"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode\n\nsyzbot reported uninit memory usages during map_{lookup,delete}_elem.\n\n==========\nBUG: KMSAN: uninit-value in __dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\nBUG: KMSAN: uninit-value in dev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n__dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\ndev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n____bpf_map_lookup_elem kernel/bpf/helpers.c:42 [inline]\nbpf_map_lookup_elem+0x5c/0x80 kernel/bpf/helpers.c:38\n___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997\n__bpf_prog_run256+0xb5/0xe0 kernel/bpf/core.c:2237\n==========\n\nThe reproducer should be in the interpreter mode.\n\nThe C reproducer is trying to run the following bpf prog:\n\n    0: (18) r0 = 0x0\n    2: (18) r1 = map[id:49]\n    4: (b7) r8 = 16777216\n    5: (7b) *(u64 *)(r10 -8) = r8\n    6: (bf) r2 = r10\n    7: (07) r2 += -229\n            ^^^^^^^^^^\n\n    8: (b7) r3 = 8\n    9: (b7) r4 = 0\n   10: (85) call dev_map_lookup_elem#1543472\n   11: (95) exit\n\nIt is due to the \"void *key\" (r2) passed to the helper. bpf allows uninit\nstack memory access for bpf prog with the right privileges. This patch\nuses kmsan_unpoison_memory() to mark the stack as initialized.\n\nThis should address different syzbot reports on the uninit \"void *key\"\nargument during map_{lookup,delete}_elem."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42066",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/79d54ddf0e292b810887994bb04709c5ac0e1531",
            "https://git.kernel.org/stable/c/4f4fcafde343a54465f85a2909fc684918507a4b"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe: Fix potential integer overflow in page size calculation\n\nExplicitly cast tbo->page_alignment to u64 before bit-shifting to\nprevent overflow when assigning to min_page_size."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42071",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ef7646ed49fff962e97b276f4ab91327a67eeb5a",
            "https://git.kernel.org/stable/c/84b767f9e34fdb143c09e66a2a20722fc2921821"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: use dev_consume_skb_any outside of napi\n\nIf we're not in a NAPI softirq context, we need to be careful\nabout how we call napi_consume_skb(), specifically we need to\ncall it with budget==0 to signal to it that we're not in a\nsafe context.\n\nThis was found while running some configuration stress testing\nof traffic and a change queue config loop running, and this\ncurious note popped out:\n\n[ 4371.402645] BUG: using smp_processor_id() in preemptible [00000000] code: ethtool/20545\n[ 4371.402897] caller is napi_skb_cache_put+0x16/0x80\n[ 4371.403120] CPU: 25 PID: 20545 Comm: ethtool Kdump: loaded Tainted: G           OE      6.10.0-rc3-netnext+ #8\n[ 4371.403302] Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 01/23/2021\n[ 4371.403460] Call Trace:\n[ 4371.403613]  <TASK>\n[ 4371.403758]  dump_stack_lvl+0x4f/0x70\n[ 4371.403904]  check_preemption_disabled+0xc1/0xe0\n[ 4371.404051]  napi_skb_cache_put+0x16/0x80\n[ 4371.404199]  ionic_tx_clean+0x18a/0x240 [ionic]\n[ 4371.404354]  ionic_tx_cq_service+0xc4/0x200 [ionic]\n[ 4371.404505]  ionic_tx_flush+0x15/0x70 [ionic]\n[ 4371.404653]  ? ionic_lif_qcq_deinit.isra.23+0x5b/0x70 [ionic]\n[ 4371.404805]  ionic_txrx_deinit+0x71/0x190 [ionic]\n[ 4371.404956]  ionic_reconfigure_queues+0x5f5/0xff0 [ionic]\n[ 4371.405111]  ionic_set_ringparam+0x2e8/0x3e0 [ionic]\n[ 4371.405265]  ethnl_set_rings+0x1f1/0x300\n[ 4371.405418]  ethnl_default_set_doit+0xbb/0x160\n[ 4371.405571]  genl_family_rcv_msg_doit+0xff/0x130\n\t[...]\n\nI found that ionic_tx_clean() calls napi_consume_skb() which calls\nnapi_skb_cache_put(), but before that last call is the note\n    /* Zero budget indicate non-NAPI context called us, like netpoll */\nand\n    DEBUG_NET_WARN_ON_ONCE(!in_softirq());\n\nThose are pretty big hints that we're doing it wrong.  We can pass a\ncontext hint down through the calls to let ionic_tx_clean() know what\nwe're doing so it can call napi_consume_skb() correctly."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42072",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/175827e04f4be53f3dfb57edf12d0d49b18fd939",
            "https://git.kernel.org/stable/c/2b2efe1937ca9f8815884bd4dcd5b32733025103"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix may_goto with negative offset.\n\nZac's syzbot crafted a bpf prog that exposed two bugs in may_goto.\nThe 1st bug is the way may_goto is patched. When offset is negative\nit should be patched differently.\nThe 2nd bug is in the verifier:\nwhen current state may_goto_depth is equal to visited state may_goto_depth\nit means there is an actual infinite loop. It's not correct to prune\nexploration of the program at this point.\nNote, that this check doesn't limit the program to only one may_goto insn,\nsince 2nd and any further may_goto will increment may_goto_depth only\nin the queued state pushed for future exploration. The current state\nwill have may_goto_depth == 0 regardless of number of may_goto insns\nand the verifier has to explore the program until bpf_exit."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42071",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/ef7646ed49fff962e97b276f4ab91327a67eeb5a",
            "https://git.kernel.org/stable/c/84b767f9e34fdb143c09e66a2a20722fc2921821"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: use dev_consume_skb_any outside of napi\n\nIf we're not in a NAPI softirq context, we need to be careful\nabout how we call napi_consume_skb(), specifically we need to\ncall it with budget==0 to signal to it that we're not in a\nsafe context.\n\nThis was found while running some configuration stress testing\nof traffic and a change queue config loop running, and this\ncurious note popped out:\n\n[ 4371.402645] BUG: using smp_processor_id() in preemptible [00000000] code: ethtool/20545\n[ 4371.402897] caller is napi_skb_cache_put+0x16/0x80\n[ 4371.403120] CPU: 25 PID: 20545 Comm: ethtool Kdump: loaded Tainted: G           OE      6.10.0-rc3-netnext+ #8\n[ 4371.403302] Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 01/23/2021\n[ 4371.403460] Call Trace:\n[ 4371.403613]  <TASK>\n[ 4371.403758]  dump_stack_lvl+0x4f/0x70\n[ 4371.403904]  check_preemption_disabled+0xc1/0xe0\n[ 4371.404051]  napi_skb_cache_put+0x16/0x80\n[ 4371.404199]  ionic_tx_clean+0x18a/0x240 [ionic]\n[ 4371.404354]  ionic_tx_cq_service+0xc4/0x200 [ionic]\n[ 4371.404505]  ionic_tx_flush+0x15/0x70 [ionic]\n[ 4371.404653]  ? ionic_lif_qcq_deinit.isra.23+0x5b/0x70 [ionic]\n[ 4371.404805]  ionic_txrx_deinit+0x71/0x190 [ionic]\n[ 4371.404956]  ionic_reconfigure_queues+0x5f5/0xff0 [ionic]\n[ 4371.405111]  ionic_set_ringparam+0x2e8/0x3e0 [ionic]\n[ 4371.405265]  ethnl_set_rings+0x1f1/0x300\n[ 4371.405418]  ethnl_default_set_doit+0xbb/0x160\n[ 4371.405571]  genl_family_rcv_msg_doit+0xff/0x130\n\t[...]\n\nI found that ionic_tx_clean() calls napi_consume_skb() which calls\nnapi_skb_cache_put(), but before that last call is the note\n    /* Zero budget indicate non-NAPI context called us, like netpoll */\nand\n    DEBUG_NET_WARN_ON_ONCE(!in_softirq());\n\nThose are pretty big hints that we're doing it wrong.  We can pass a\ncontext hint down through the calls to let ionic_tx_clean() know what\nwe're doing so it can call napi_consume_skb() correctly."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42074",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/e158ed266fc1adfa456880fb6dabce2e5623843b",
            "https://git.kernel.org/stable/c/b0c39ae1cc86afe74aa2f6273ccb514f8d180cf6",
            "https://git.kernel.org/stable/c/98d919dfee1cc402ca29d45da642852d7c9a2301"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: amd: acp: add a null check for chip_pdev structure\n\nWhen acp platform device creation is skipped, chip->chip_pdev value will\nremain NULL. Add NULL check for chip->chip_pdev structure in\nsnd_acp_resume() function to avoid null pointer dereference."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42075",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/87496a1b01e8e2e399428c0db25e106f7961d01e",
            "https://git.kernel.org/stable/c/b90d77e5fd784ada62ddd714d15ee2400c28e1cf"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix remap of arena.\n\nThe bpf arena logic didn't account for mremap operation. Add a refcnt for\nmultiple mmap events to prevent use-after-free in arena_vm_close."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42081",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/76ec0e33707282d5321555698d902f4e067aff37",
            "https://git.kernel.org/stable/c/b15e65349553b1689d15fbdebea874ca5ae2274a"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/xe_devcoredump: Check NULL before assignments\n\nAssign 'xe_devcoredump_snapshot *' and 'xe_device *' only if\n'coredump' is not NULL.\n\nv2\n- Fix commit messages.\n\nv3\n- Define variables before code.(Ashutosh/Jose)\n\nv4\n- Drop return check for coredump_to_xe. (Jose/Rodrigo)\n\nv5\n- Modify misleading commit message. (Matt)"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42077",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/a68b896aa56e435506453ec8835bc991ec3ae687",
            "https://git.kernel.org/stable/c/320273b5649bbcee87f9e65343077189699d2a7a",
            "https://git.kernel.org/stable/c/9ea2d1c6789722d58ec191f14f9a02518d55b6b4",
            "https://git.kernel.org/stable/c/c05ffb693bfb42a48ef3ee88a55b57392984e111",
            "https://git.kernel.org/stable/c/331d1079d58206ff7dc5518185f800b412f89bc6",
            "https://git.kernel.org/stable/c/be346c1a6eeb49d8fda827d2a9522124c2f72f36"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix DIO failure due to insufficient transaction credits\n\nThe code in ocfs2_dio_end_io_write() estimates number of necessary\ntransaction credits using ocfs2_calc_extend_credits().  This however does\nnot take into account that the IO could be arbitrarily large and can\ncontain arbitrary number of extents.\n\nExtent tree manipulations do often extend the current transaction but not\nin all of the cases.  For example if we have only single block extents in\nthe tree, ocfs2_mark_extent_written() will end up calling\nocfs2_replace_extent_rec() all the time and we will never extend the\ncurrent transaction and eventually exhaust all the transaction credits if\nthe IO contains many single block extents.  Once that happens a\nWARN_ON(jbd2_handle_buffer_credits(handle) <= 0) is triggered in\njbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to\nthis error.  This was actually triggered by one of our customers on a\nheavily fragmented OCFS2 filesystem.\n\nTo fix the issue make sure the transaction always has enough credits for\none extent insert before each call of ocfs2_mark_extent_written().\n\nHeming Zhao said:\n\n------\nPANIC: \"Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error\"\n\nPID: xxx  TASK: xxxx  CPU: 5  COMMAND: \"SubmitThread-CA\"\n  #0 machine_kexec at ffffffff8c069932\n  #1 __crash_kexec at ffffffff8c1338fa\n  #2 panic at ffffffff8c1d69b9\n  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]\n  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]\n  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]\n  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]\n  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]\n  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]\n  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]\n#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]\n#11 dio_complete at ffffffff8c2b9fa7\n#12 do_blockdev_direct_IO at ffffffff8c2bc09f\n#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]\n#14 generic_file_direct_write at ffffffff8c1dcf14\n#15 __generic_file_write_iter at ffffffff8c1dd07b\n#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]\n#17 aio_write at ffffffff8c2cc72e\n#18 kmem_cache_alloc at ffffffff8c248dde\n#19 do_io_submit at ffffffff8c2ccada\n#20 do_syscall_64 at ffffffff8c004984\n#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba"
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-42082",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/1095b8efbb13a6a5fa583ed373ee1ccab29da2d0",
            "https://git.kernel.org/stable/c/1d3e3b3aa2cbe9bc7db9a7f8673a9fa6d2990d54",
            "https://git.kernel.org/stable/c/4e0c539ee265d5c6e7fa7d229cd4aa7bc01816e2",
            "https://git.kernel.org/stable/c/14e51ea78b4ccacb7acb1346b9241bb790a2054c",
            "https://git.kernel.org/stable/c/f92298b0467fd77edc4c1a2c3e48833e69840ec4",
            "https://git.kernel.org/stable/c/7e9f79428372c6eab92271390851be34ab26bfb4"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nxdp: Remove WARN() from __xdp_reg_mem_model()\n\nsyzkaller reports a warning in __xdp_reg_mem_model().\n\nThe warning occurs only if __mem_id_init_hash_table() returns an error. It\nreturns the error in two cases:\n\n  1. memory allocation fails;\n  2. rhashtable_init() fails when some fields of rhashtable_params\n     struct are not initialized properly.\n\nThe second case cannot happen since there is a static const rhashtable_params\nstruct with valid fields. So, warning is only triggered when there is a\nproblem with memory allocation.\n\nThus, there is no sense in using WARN() to handle this error and it can be\nsafely removed.\n\nWARNING: CPU: 0 PID: 5065 at net/core/xdp.c:299 __xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCPU: 0 PID: 5065 Comm: syz-executor883 Not tainted 6.8.0-syzkaller-05271-gf99c5f563c17 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nRIP: 0010:__xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCall Trace:\n xdp_reg_mem_model+0x22/0x40 net/core/xdp.c:344\n xdp_test_run_setup net/bpf/test_run.c:188 [inline]\n bpf_test_run_xdp_live+0x365/0x1e90 net/bpf/test_run.c:377\n bpf_prog_test_run_xdp+0x813/0x11b0 net/bpf/test_run.c:1267\n bpf_prog_test_run+0x33a/0x3b0 kernel/bpf/syscall.c:4240\n __sys_bpf+0x48d/0x810 kernel/bpf/syscall.c:5649\n __do_sys_bpf kernel/bpf/syscall.c:5738 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:5736 [inline]\n __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5736\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nFound by Linux Verification Center (linuxtesting.org) with syzkaller."
    },
    {
        "Modified": "2024-07-29T16:21:00",
        "Published": "2024-07-29T16:15:00",
        "access": {},
        "assigner": "cve@kernel.org",
        "cvss": null,
        "cwe": "Unknown",
        "id": "CVE-2024-41083",
        "impact": {},
        "last-modified": "2024-07-29T16:21:00",
        "references": [
            "https://git.kernel.org/stable/c/3473eb87afd402e415a8ca885b284ea0420dde25",
            "https://git.kernel.org/stable/c/a81c98bfa40c11f8ea79b5a9b3f5fda73bfbb4d2"
        ],
        "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix netfs_page_mkwrite() to check folio->mapping is valid\n\nFix netfs_page_mkwrite() to check that folio->mapping is valid once it has\ntaken the folio lock (as filemap_page_mkwrite() does).  Without this,\ngeneric/247 occasionally oopses with something like the following:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    #PF: supervisor read access in kernel mode\n    #PF: error_code(0x0000) - not-present page\n\n    RIP: 0010:trace_event_raw_event_netfs_folio+0x61/0xc0\n    ...\n    Call Trace:\n     <TASK>\n     ? __die_body+0x1a/0x60\n     ? page_fault_oops+0x6e/0xa0\n     ? exc_page_fault+0xc2/0xe0\n     ? asm_exc_page_fault+0x22/0x30\n     ? trace_event_raw_event_netfs_folio+0x61/0xc0\n     trace_netfs_folio+0x39/0x40\n     netfs_page_mkwrite+0x14c/0x1d0\n     do_page_mkwrite+0x50/0x90\n     do_pte_missing+0x184/0x200\n     __handle_mm_fault+0x42d/0x500\n     handle_mm_fault+0x121/0x1f0\n     do_user_addr_fault+0x23e/0x3c0\n     exc_page_fault+0xc2/0xe0\n     asm_exc_page_fault+0x22/0x30\n\nThis is due to the invalidate_inode_pages2_range() issued at the end of the\nDIO write interfering with the mmap'd writes."
    }
]